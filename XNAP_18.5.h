#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <semaphore.h>
#include <string.h>
#include <time.h>
#include <sys/time.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <stdarg.h>
#include <unistd.h>
#include <signal.h>
#include <limits.h>
#include <poll.h>
#include <sys/epoll.h>
#include <netdb.h>
#include <arpa/inet.h>
#include <error.h>
#include <errno.h>
#include <sys/ioctl.h>
#include <net/if.h> 

#include "sirik_core.h"
#include "libAsn.h"

#ifndef SIRIK_F1AP_18_5_ASN_H
#define SIRIK_F1AP_18_5_ASN_H

#pragma pack(push,4)


#define __si_xnap__id_handoverPreparation_ProcedureCode                                              0
#define __si_xnap__id_sNStatusTransfer_ProcedureCode                                                 1
#define __si_xnap__id_handoverCancel_ProcedureCode                                                   2
#define __si_xnap__id_retrieveUEContext_ProcedureCode                                                3
#define __si_xnap__id_rANPaging_ProcedureCode                                                        4
#define __si_xnap__id_xnUAddressIndication_ProcedureCode                                             5
#define __si_xnap__id_uEContextRelease_ProcedureCode                                                 6
#define __si_xnap__id_sNGRANnodeAdditionPreparation_ProcedureCode                                    7
#define __si_xnap__id_sNGRANnodeReconfigurationCompletion_ProcedureCode                              8
#define __si_xnap__id_mNGRANnodeinitiatedSNGRANnodeModificationPreparation_ProcedureCode             9
#define __si_xnap__id_sNGRANnodeinitiatedSNGRANnodeModificationPreparation_ProcedureCode             10
#define __si_xnap__id_mNGRANnodeinitiatedSNGRANnodeRelease_ProcedureCode                             11
#define __si_xnap__id_sNGRANnodeinitiatedSNGRANnodeRelease_ProcedureCode                             12
#define __si_xnap__id_sNGRANnodeCounterCheck_ProcedureCode                                           13
#define __si_xnap__id_sNGRANnodeChange_ProcedureCode                                                 14
#define __si_xnap__id_rRCTransfer_ProcedureCode                                                      15
#define __si_xnap__id_xnRemoval_ProcedureCode                                                        16
#define __si_xnap__id_xnSetup_ProcedureCode                                                          17
#define __si_xnap__id_nGRANnodeConfigurationUpdate_ProcedureCode                                     18
#define __si_xnap__id_cellActivation_ProcedureCode                                                   19
#define __si_xnap__id_reset_ProcedureCode                                                            20
#define __si_xnap__id_errorIndication_ProcedureCode                                                  21
#define __si_xnap__id_privateMessage_ProcedureCode                                                   22
#define __si_xnap__id_notificationControl_ProcedureCode                                              23
#define __si_xnap__id_activityNotification_ProcedureCode                                             24
#define __si_xnap__id_e_UTRA_NR_CellResourceCoordination_ProcedureCode                               25
#define __si_xnap__id_secondaryRATDataUsageReport_ProcedureCode                                      26
#define __si_xnap__id_deactivateTrace_ProcedureCode                                                  27
#define __si_xnap__id_traceStart_ProcedureCode                                                       28
#define __si_xnap__id_handoverSuccess_ProcedureCode                                                  29
#define __si_xnap__id_conditionalHandoverCancel_ProcedureCode                                        30
#define __si_xnap__id_earlyStatusTransfer_ProcedureCode                                              31
#define __si_xnap__id_failureIndication_ProcedureCode                                                32
#define __si_xnap__id_handoverReport_ProcedureCode                                                   33
#define __si_xnap__id_resourceStatusReportingInitiation_ProcedureCode                                34
#define __si_xnap__id_resourceStatusReporting_ProcedureCode                                          35
#define __si_xnap__id_mobilitySettingsChange_ProcedureCode                                           36
#define __si_xnap__id_accessAndMobilityIndication_ProcedureCode                                      37
#define __si_xnap__id_cellTrafficTrace_ProcedureCode                                                 38
#define __si_xnap__id_RANMulticastGroupPaging_ProcedureCode                                          39
#define __si_xnap__id_scgFailureInformationReport_ProcedureCode                                      40
#define __si_xnap__id_41_NotToBeUsed_ProcedureCode                                                   41
#define __si_xnap__id_scgFailureTransfer_ProcedureCode                                               42
#define __si_xnap__id_f1CTrafficTransfer_ProcedureCode                                               43
#define __si_xnap__id_iABTransportMigrationManagement_ProcedureCode                                  44
#define __si_xnap__id_iABTransportMigrationModification_ProcedureCode                                45
#define __si_xnap__id_iABResourceCoordination_ProcedureCode                                          46
#define __si_xnap__id_retrieveUEContextConfirm_ProcedureCode                                         47
#define __si_xnap__id_cPCCancel_ProcedureCode                                                        48
#define __si_xnap__id_partialUEContextTransfer_ProcedureCode                                         49
#define __si_xnap__id_rachIndication_ProcedureCode                                                   50
#define __si_xnap__id_dataCollectionReportingInitiation_ProcedureCode                                51
#define __si_xnap__id_dataCollectionReporting_ProcedureCode                                          52



#define id_handoverPreparation_ProcedureCode                                                         0
#define id_sNStatusTransfer_ProcedureCode                                                            1
#define id_handoverCancel_ProcedureCode                                                              2
#define id_retrieveUEContext_ProcedureCode                                                           3
#define id_rANPaging_ProcedureCode                                                                   4
#define id_xnUAddressIndication_ProcedureCode                                                        5
#define id_uEContextRelease_ProcedureCode                                                            6
#define id_sNGRANnodeAdditionPreparation_ProcedureCode                                               7
#define id_sNGRANnodeReconfigurationCompletion_ProcedureCode                                         8
#define id_mNGRANnodeinitiatedSNGRANnodeModificationPreparation_ProcedureCode                        9
#define id_sNGRANnodeinitiatedSNGRANnodeModificationPreparation_ProcedureCode                        10
#define id_mNGRANnodeinitiatedSNGRANnodeRelease_ProcedureCode                                        11
#define id_sNGRANnodeinitiatedSNGRANnodeRelease_ProcedureCode                                        12
#define id_sNGRANnodeCounterCheck_ProcedureCode                                                      13
#define id_sNGRANnodeChange_ProcedureCode                                                            14
#define id_rRCTransfer_ProcedureCode                                                                 15
#define id_xnRemoval_ProcedureCode                                                                   16
#define id_xnSetup_ProcedureCode                                                                     17
#define id_nGRANnodeConfigurationUpdate_ProcedureCode                                                18
#define id_cellActivation_ProcedureCode                                                              19
#define id_reset_ProcedureCode                                                                       20
#define id_errorIndication_ProcedureCode                                                             21
#define id_privateMessage_ProcedureCode                                                              22
#define id_notificationControl_ProcedureCode                                                         23
#define id_activityNotification_ProcedureCode                                                        24
#define id_e_UTRA_NR_CellResourceCoordination_ProcedureCode                                          25
#define id_secondaryRATDataUsageReport_ProcedureCode                                                 26
#define id_deactivateTrace_ProcedureCode                                                             27
#define id_traceStart_ProcedureCode                                                                  28
#define id_handoverSuccess_ProcedureCode                                                             29
#define id_conditionalHandoverCancel_ProcedureCode                                                   30
#define id_earlyStatusTransfer_ProcedureCode                                                         31
#define id_failureIndication_ProcedureCode                                                           32
#define id_handoverReport_ProcedureCode                                                              33
#define id_resourceStatusReportingInitiation_ProcedureCode                                           34
#define id_resourceStatusReporting_ProcedureCode                                                     35
#define id_mobilitySettingsChange_ProcedureCode                                                      36
#define id_accessAndMobilityIndication_ProcedureCode                                                 37
#define id_cellTrafficTrace_ProcedureCode                                                            38
#define id_RANMulticastGroupPaging_ProcedureCode                                                     39
#define id_scgFailureInformationReport_ProcedureCode                                                 40
#define id_41_NotToBeUsed_ProcedureCode                                                              41
#define id_scgFailureTransfer_ProcedureCode                                                          42
#define id_f1CTrafficTransfer_ProcedureCode                                                          43
#define id_iABTransportMigrationManagement_ProcedureCode                                             44
#define id_iABTransportMigrationModification_ProcedureCode                                           45
#define id_iABResourceCoordination_ProcedureCode                                                     46
#define id_retrieveUEContextConfirm_ProcedureCode                                                    47
#define id_cPCCancel_ProcedureCode                                                                   48
#define id_partialUEContextTransfer_ProcedureCode                                                    49
#define id_rachIndication_ProcedureCode                                                              50
#define id_dataCollectionReportingInitiation_ProcedureCode                                           51
#define id_dataCollectionReporting_ProcedureCode                                                     52



#define __si_xnap__id_ActivatedServedCells_ProtocolIEs                                               0
#define __si_xnap__id_ActivationIDforCellActivation_ProtocolIEs                                      1
#define __si_xnap__id_admittedSplitSRB_ProtocolIEs                                                   2
#define __si_xnap__id_admittedSplitSRBrelease_ProtocolIEs                                            3
#define __si_xnap__id_AMF_Region_Information_ProtocolIEs                                             4
#define __si_xnap__id_AssistanceDataForRANPaging_ProtocolIEs                                         5
#define __si_xnap__id_BearersSubjectToCounterCheck_ProtocolIEs                                       6
#define __si_xnap__id_Cause_ProtocolIEs                                                              7
#define __si_xnap__id_cellAssistanceInfo_NR_ProtocolIEs                                              8
#define __si_xnap__id_ConfigurationUpdateInitiatingNodeChoice_ProtocolIEs                            9
#define __si_xnap__id_CriticalityDiagnostics_ProtocolIEs                                             10
#define __si_xnap__id_XnUAddressInfoperPDUSession_List_ProtocolIEs                                   11
#define __si_xnap__id_DRBsSubjectToStatusTransfer_List_ProtocolIEs                                   12
#define __si_xnap__id_ExpectedUEBehaviour_ProtocolIEs                                                13
#define __si_xnap__id_GlobalNG_RAN_node_ID_ProtocolIEs                                               14
#define __si_xnap__id_GUAMI_ProtocolIEs                                                              15
#define __si_xnap__id_indexToRatFrequSelectionPriority_ProtocolIEs                                   16
#define __si_xnap__id_initiatingNodeType_ResourceCoordRequest_ProtocolIEs                            17
#define __si_xnap__id_List_of_served_cells_E_UTRA_ProtocolIEs                                        18
#define __si_xnap__id_List_of_served_cells_NR_ProtocolIEs                                            19
#define __si_xnap__id_LocationReportingInformation_ProtocolIEs                                       20
#define __si_xnap__id_MAC_I_ProtocolIEs                                                              21
#define __si_xnap__id_MaskedIMEISV_ProtocolIEs                                                       22
#define __si_xnap__id_M_NG_RANnodeUEXnAPID_ProtocolIEs                                               23
#define __si_xnap__id_MN_to_SN_Container_ProtocolIEs                                                 24
#define __si_xnap__id_MobilityRestrictionList_ProtocolIEs                                            25
#define __si_xnap__id_new_NG_RAN_Cell_Identity_ProtocolIEs                                           26
#define __si_xnap__id_newNG_RANnodeUEXnAPID_ProtocolIEs                                              27
#define __si_xnap__id_UEReportRRCTransfer_ProtocolIEs                                                28
#define __si_xnap__id_oldNG_RANnodeUEXnAPID_ProtocolIEs                                              29
#define __si_xnap__id_OldtoNewNG_RANnodeResumeContainer_ProtocolIEs                                  30
#define __si_xnap__id_PagingDRX_ProtocolIEs                                                          31
#define __si_xnap__id_PCellID_ProtocolIEs                                                            32
#define __si_xnap__id_PDCPChangeIndication_ProtocolIEs                                               33
#define __si_xnap__id_PDUSessionAdmittedAddedAddReqAck_ProtocolIEs                                   34
#define __si_xnap__id_PDUSessionAdmittedModSNModConfirm_ProtocolIEs                                  35
#define __si_xnap__id_PDUSessionAdmitted_SNModResponse_ProtocolIEs                                   36
#define __si_xnap__id_PDUSessionNotAdmittedAddReqAck_ProtocolIEs                                     37
#define __si_xnap__id_PDUSessionNotAdmitted_SNModResponse_ProtocolIEs                                38
#define __si_xnap__id_PDUSessionReleasedList_RelConf_ProtocolIEs                                     39
#define __si_xnap__id_PDUSessionReleasedSNModConfirm_ProtocolIEs                                     40
#define __si_xnap__id_PDUSessionResourcesActivityNotifyList_ProtocolIEs                              41
#define __si_xnap__id_PDUSessionResourcesAdmitted_List_ProtocolIEs                                   42
#define __si_xnap__id_PDUSessionResourcesNotAdmitted_List_ProtocolIEs                                43
#define __si_xnap__id_PDUSessionResourcesNotifyList_ProtocolIEs                                      44
#define __si_xnap__id_PDUSession_SNChangeConfirm_List_ProtocolIEs                                    45
#define __si_xnap__id_PDUSession_SNChangeRequired_List_ProtocolIEs                                   46
#define __si_xnap__id_PDUSessionToBeAddedAddReq_ProtocolIEs                                          47
#define __si_xnap__id_PDUSessionToBeModifiedSNModRequired_ProtocolIEs                                48
#define __si_xnap__id_PDUSessionToBeReleasedList_RelRqd_ProtocolIEs                                  49
#define __si_xnap__id_PDUSessionToBeReleased_RelReq_ProtocolIEs                                      50
#define __si_xnap__id_PDUSessionToBeReleasedSNModRequired_ProtocolIEs                                51
#define __si_xnap__id_RANPagingArea_ProtocolIEs                                                      52
#define __si_xnap__id_PagingPriority_ProtocolIEs                                                     53
#define __si_xnap__id_requestedSplitSRB_ProtocolIEs                                                  54
#define __si_xnap__id_requestedSplitSRBrelease_ProtocolIEs                                           55
#define __si_xnap__id_ResetRequestTypeInfo_ProtocolIEs                                               56
#define __si_xnap__id_ResetResponseTypeInfo_ProtocolIEs                                              57
#define __si_xnap__id_RespondingNodeTypeConfigUpdateAck_ProtocolIEs                                  58
#define __si_xnap__id_respondingNodeType_ResourceCoordResponse_ProtocolIEs                           59
#define __si_xnap__id_ResponseInfo_ReconfCompl_ProtocolIEs                                           60
#define __si_xnap__id_RRCConfigIndication_ProtocolIEs                                                61
#define __si_xnap__id_RRCResumeCause_ProtocolIEs                                                     62
#define __si_xnap__id_SCGConfigurationQuery_ProtocolIEs                                              63
#define __si_xnap__id_selectedPLMN_ProtocolIEs                                                       64
#define __si_xnap__id_ServedCellsToActivate_ProtocolIEs                                              65
#define __si_xnap__id_servedCellsToUpdate_E_UTRA_ProtocolIEs                                         66
#define __si_xnap__id_ServedCellsToUpdateInitiatingNodeChoice_ProtocolIEs                            67
#define __si_xnap__id_servedCellsToUpdate_NR_ProtocolIEs                                             68
#define __si_xnap__id_s_ng_RANnode_SecurityKey_ProtocolIEs                                           69
#define __si_xnap__id_S_NG_RANnodeUE_AMBR_ProtocolIEs                                                70
#define __si_xnap__id_S_NG_RANnodeUEXnAPID_ProtocolIEs                                               71
#define __si_xnap__id_SN_to_MN_Container_ProtocolIEs                                                 72
#define __si_xnap__id_sourceNG_RANnodeUEXnAPID_ProtocolIEs                                           73
#define __si_xnap__id_SplitSRB_RRCTransfer_ProtocolIEs                                               74
#define __si_xnap__id_TAISupport_list_ProtocolIEs                                                    75
#define __si_xnap__id_TimeToWait_ProtocolIEs                                                         76
#define __si_xnap__id_Target2SourceNG_RANnodeTranspContainer_ProtocolIEs                             77
#define __si_xnap__id_targetCellGlobalID_ProtocolIEs                                                 78
#define __si_xnap__id_targetNG_RANnodeUEXnAPID_ProtocolIEs                                           79
#define __si_xnap__id_target_S_NG_RANnodeID_ProtocolIEs                                              80
#define __si_xnap__id_TraceActivation_ProtocolIEs                                                    81
#define __si_xnap__id_UEContextID_ProtocolIEs                                                        82
#define __si_xnap__id_UEContextInfoHORequest_ProtocolIEs                                             83
#define __si_xnap__id_UEContextInfoRetrUECtxtResp_ProtocolIEs                                        84
#define __si_xnap__id_UEContextInfo_SNModRequest_ProtocolIEs                                         85
#define __si_xnap__id_UEContextKeptIndicator_ProtocolIEs                                             86
#define __si_xnap__id_UEContextRefAtSN_HORequest_ProtocolIEs                                         87
#define __si_xnap__id_UEHistoryInformation_ProtocolIEs                                               88
#define __si_xnap__id_UEIdentityIndexValue_ProtocolIEs                                               89
#define __si_xnap__id_UERANPagingIdentity_ProtocolIEs                                                90
#define __si_xnap__id_UESecurityCapabilities_ProtocolIEs                                             91
#define __si_xnap__id_UserPlaneTrafficActivityReport_ProtocolIEs                                     92
#define __si_xnap__id_XnRemovalThreshold_ProtocolIEs                                                 93
#define __si_xnap__id_DesiredActNotificationLevel_ProtocolIEs                                        94
#define __si_xnap__id_AvailableDRBIDs_ProtocolIEs                                                    95
#define __si_xnap__id_AdditionalDRBIDs_ProtocolIEs                                                   96
#define __si_xnap__id_SpareDRBIDs_ProtocolIEs                                                        97
#define __si_xnap__id_RequiredNumberOfDRBIDs_ProtocolIEs                                             98
#define __si_xnap__id_TNLA_To_Add_List_ProtocolIEs                                                   99
#define __si_xnap__id_TNLA_To_Update_List_ProtocolIEs                                                100
#define __si_xnap__id_TNLA_To_Remove_List_ProtocolIEs                                                101
#define __si_xnap__id_TNLA_Setup_List_ProtocolIEs                                                    102
#define __si_xnap__id_TNLA_Failed_To_Setup_List_ProtocolIEs                                          103
#define __si_xnap__id_PDUSessionToBeReleased_RelReqAck_ProtocolIEs                                   104
#define __si_xnap__id_S_NG_RANnodeMaxIPDataRate_UL_ProtocolIEs                                       105
#define __si_xnap__id_PDUSessionResourceSecondaryRATUsageList_ProtocolIEs                            107
#define __si_xnap__id_Additional_UL_NG_U_TNLatUPF_List_ProtocolIEs                                   108
#define __si_xnap__id_SecondarydataForwardingInfoFromTarget_List_ProtocolIEs                         109
#define __si_xnap__id_LocationInformationSNReporting_ProtocolIEs                                     110
#define __si_xnap__id_LocationInformationSN_ProtocolIEs                                              111
#define __si_xnap__id_LastE_UTRANPLMNIdentity_ProtocolIEs                                            112
#define __si_xnap__id_S_NG_RANnodeMaxIPDataRate_DL_ProtocolIEs                                       113
#define __si_xnap__id_MaxIPrate_DL_ProtocolIEs                                                       114
#define __si_xnap__id_SecurityResult_ProtocolIEs                                                     115
#define __si_xnap__id_S_NSSAI_ProtocolIEs                                                            116
#define __si_xnap__id_MR_DC_ResourceCoordinationInfo_ProtocolIEs                                     117
#define __si_xnap__id_AMF_Region_Information_To_Add_ProtocolIEs                                      118
#define __si_xnap__id_AMF_Region_Information_To_Delete_ProtocolIEs                                   119
#define __si_xnap__id_OldQoSFlowMap_ULendmarkerexpected_ProtocolIEs                                  120
#define __si_xnap__id_RANPagingFailure_ProtocolIEs                                                   121
#define __si_xnap__id_UERadioCapabilityForPaging_ProtocolIEs                                         122
#define __si_xnap__id_PDUSessionDataForwarding_SNModResponse_ProtocolIEs                             123
#define __si_xnap__id_DRBsNotAdmittedSetupModifyList_ProtocolIEs                                     124
#define __si_xnap__id_Secondary_MN_Xn_U_TNLInfoatM_ProtocolIEs                                       125
#define __si_xnap__id_NE_DC_TDM_Pattern_ProtocolIEs                                                  126
#define __si_xnap__id_PDUSessionCommonNetworkInstance_ProtocolIEs                                    127
#define __si_xnap__id_BPLMN_ID_Info_EUTRA_ProtocolIEs                                                128
#define __si_xnap__id_BPLMN_ID_Info_NR_ProtocolIEs                                                   129
#define __si_xnap__id_InterfaceInstanceIndication_ProtocolIEs                                        130
#define __si_xnap__id_S_NG_RANnode_Addition_Trigger_Ind_ProtocolIEs                                  131
#define __si_xnap__id_DefaultDRB_Allowed_ProtocolIEs                                                 132
#define __si_xnap__id_DRB_IDs_takenintouse_ProtocolIEs                                               133
#define __si_xnap__id_SplitSessionIndicator_ProtocolIEs                                              134
#define __si_xnap__id_CNTypeRestrictionsForEquivalent_ProtocolIEs                                    135
#define __si_xnap__id_CNTypeRestrictionsForServing_ProtocolIEs                                       136
#define __si_xnap__id_DRBs_transferred_to_MN_ProtocolIEs                                             137
#define __si_xnap__id_ULForwardingProposal_ProtocolIEs                                               138
#define __si_xnap__id_EndpointIPAddressAndPort_ProtocolIEs                                           139
#define __si_xnap__id_IntendedTDD_DL_ULConfiguration_NR_ProtocolIEs                                  140
#define __si_xnap__id_TNLConfigurationInfo_ProtocolIEs                                               141
#define __si_xnap__id_PartialListIndicator_NR_ProtocolIEs                                            142
#define __si_xnap__id_MessageOversizeNotification_ProtocolIEs                                        143
#define __si_xnap__id_CellAndCapacityAssistanceInfo_NR_ProtocolIEs                                   144
#define __si_xnap__id_NG_RANTraceID_ProtocolIEs                                                      145
#define __si_xnap__id_NonGBRResources_Offered_ProtocolIEs                                            146
#define __si_xnap__id_FastMCGRecoveryRRCTransfer_SN_to_MN_ProtocolIEs                                147
#define __si_xnap__id_RequestedFastMCGRecoveryViaSRB3_ProtocolIEs                                    148
#define __si_xnap__id_AvailableFastMCGRecoveryViaSRB3_ProtocolIEs                                    149
#define __si_xnap__id_RequestedFastMCGRecoveryViaSRB3Release_ProtocolIEs                             150
#define __si_xnap__id_ReleaseFastMCGRecoveryViaSRB3_ProtocolIEs                                      151
#define __si_xnap__id_FastMCGRecoveryRRCTransfer_MN_to_SN_ProtocolIEs                                152
#define __si_xnap__id_ExtendedRATRestrictionInformation_ProtocolIEs                                  153
#define __si_xnap__id_QoSMonitoringRequest_ProtocolIEs                                               154
#define __si_xnap__id_FiveGCMobilityRestrictionListContainer_ProtocolIEs                             155
#define __si_xnap__id_PartialListIndicator_EUTRA_ProtocolIEs                                         156
#define __si_xnap__id_CellAndCapacityAssistanceInfo_EUTRA_ProtocolIEs                                157
#define __si_xnap__id_CHOinformation_Req_ProtocolIEs                                                 158
#define __si_xnap__id_CHOinformation_Ack_ProtocolIEs                                                 159
#define __si_xnap__id_targetCellsToCancel_ProtocolIEs                                                160
#define __si_xnap__id_requestedTargetCellGlobalID_ProtocolIEs                                        161
#define __si_xnap__id_procedureStage_ProtocolIEs                                                     162
#define __si_xnap__id_DAPSRequestInfo_ProtocolIEs                                                    163
#define __si_xnap__id_DAPSResponseInfo_List_ProtocolIEs                                              164
#define __si_xnap__id_CHO_MRDC_Indicator_ProtocolIEs                                                 165
#define __si_xnap__id_OffsetOfNbiotChannelNumberToDL_EARFCN_ProtocolIEs                              166
#define __si_xnap__id_OffsetOfNbiotChannelNumberToUL_EARFCN_ProtocolIEs                              167
#define __si_xnap__id_NBIoT_UL_DL_AlignmentOffset_ProtocolIEs                                        168
#define __si_xnap__id_LTEV2XServicesAuthorized_ProtocolIEs                                           169
#define __si_xnap__id_NRV2XServicesAuthorized_ProtocolIEs                                            170
#define __si_xnap__id_LTEUESidelinkAggregateMaximumBitRate_ProtocolIEs                               171
#define __si_xnap__id_NRUESidelinkAggregateMaximumBitRate_ProtocolIEs                                172
#define __si_xnap__id_PC5QoSParameters_ProtocolIEs                                                   173
#define __si_xnap__id_AlternativeQoSParaSetList_ProtocolIEs                                          174
#define __si_xnap__id_CurrentQoSParaSetIndex_ProtocolIEs                                             175
#define __si_xnap__id_MobilityInformation_ProtocolIEs                                                176
#define __si_xnap__id_InitiatingCondition_FailureIndication_ProtocolIEs                              177
#define __si_xnap__id_UEHistoryInformationFromTheUE_ProtocolIEs                                      178
#define __si_xnap__id_HandoverReportType_ProtocolIEs                                                 179
#define __si_xnap__id_HandoverCause_ProtocolIEs                                                      180
#define __si_xnap__id_SourceCellCGI_ProtocolIEs                                                      181
#define __si_xnap__id_TargetCellCGI_ProtocolIEs                                                      182
#define __si_xnap__id_ReEstablishmentCellCGI_ProtocolIEs                                             183
#define __si_xnap__id_TargetCellinEUTRAN_ProtocolIEs                                                 184
#define __si_xnap__id_SourceCellCRNTI_ProtocolIEs                                                    185
#define __si_xnap__id_UERLFReportContainer_ProtocolIEs                                               186
#define __si_xnap__id_NGRAN_Node1_Measurement_ID_ProtocolIEs                                         187
#define __si_xnap__id_NGRAN_Node2_Measurement_ID_ProtocolIEs                                         188
#define __si_xnap__id_RegistrationRequest_ProtocolIEs                                                189
#define __si_xnap__id_ReportCharacteristics_ProtocolIEs                                              190
#define __si_xnap__id_CellToReport_ProtocolIEs                                                       191
#define __si_xnap__id_ReportingPeriodicity_ProtocolIEs                                               192
#define __si_xnap__id_CellMeasurementResult_ProtocolIEs                                              193
#define __si_xnap__id_NG_RANnode1CellID_ProtocolIEs                                                  194
#define __si_xnap__id_NG_RANnode2CellID_ProtocolIEs                                                  195
#define __si_xnap__id_NG_RANnode1MobilityParameters_ProtocolIEs                                      196
#define __si_xnap__id_NG_RANnode2ProposedMobilityParameters_ProtocolIEs                              197
#define __si_xnap__id_MobilityParametersModificationRange_ProtocolIEs                                198
#define __si_xnap__id_TDDULDLConfigurationCommonNR_ProtocolIEs                                       199
#define __si_xnap__id_CarrierList_ProtocolIEs                                                        200
#define __si_xnap__id_ULCarrierList_ProtocolIEs                                                      201
#define __si_xnap__id_FrequencyShift7p5khz_ProtocolIEs                                               202
#define __si_xnap__id_SSB_PositionsInBurst_ProtocolIEs                                               203
#define __si_xnap__id_NRCellPRACHConfig_ProtocolIEs                                                  204
#define __si_xnap__id_RAReport_ProtocolIEs                                                           205
#define __si_xnap__id_IABNodeIndication_ProtocolIEs                                                  206
#define __si_xnap__id_Redundant_UL_NG_U_TNLatUPF_ProtocolIEs                                         207
#define __si_xnap__id_CNPacketDelayBudgetDownlink_ProtocolIEs                                        208
#define __si_xnap__id_CNPacketDelayBudgetUplink_ProtocolIEs                                          209
#define __si_xnap__id_Additional_Redundant_UL_NG_U_TNLatUPF_List_ProtocolIEs                         210
#define __si_xnap__id_RedundantCommonNetworkInstance_ProtocolIEs                                     211
#define __si_xnap__id_TSCTrafficCharacteristics_ProtocolIEs                                          212
#define __si_xnap__id_RedundantQoSFlowIndicator_ProtocolIEs                                          213
#define __si_xnap__id_Redundant_DL_NG_U_TNLatNG_RAN_ProtocolIEs                                      214
#define __si_xnap__id_ExtendedPacketDelayBudget_ProtocolIEs                                          215
#define __si_xnap__id_Additional_PDCP_Duplication_TNL_List_ProtocolIEs                               216
#define __si_xnap__id_RedundantPDUSessionInformation_ProtocolIEs                                     217
#define __si_xnap__id_UsedRSNInformation_ProtocolIEs                                                 218
#define __si_xnap__id_RLCDuplicationInformation_ProtocolIEs                                          219
#define __si_xnap__id_NPN_Broadcast_Information_ProtocolIEs                                          220
#define __si_xnap__id_NPNPagingAssistanceInformation_ProtocolIEs                                     221
#define __si_xnap__id_NPNMobilityInformation_ProtocolIEs                                             222
#define __si_xnap__id_NPN_Support_ProtocolIEs                                                        223
#define __si_xnap__id_MDT_Configuration_ProtocolIEs                                                  224
#define __si_xnap__id_MDTPLMNList_ProtocolIEs                                                        225
#define __si_xnap__id_TraceCollectionEntityURI_ProtocolIEs                                           226
#define __si_xnap__id_UERadioCapabilityID_ProtocolIEs                                                227
#define __si_xnap__id_CSI_RSTransmissionIndication_ProtocolIEs                                       228
#define __si_xnap__id_SNTriggered_ProtocolIEs                                                        229
#define __si_xnap__id_DLCarrierList_ProtocolIEs                                                      230
#define __si_xnap__id_ExtendedTAISliceSupportList_ProtocolIEs                                        231
#define __si_xnap__id_cellAssistanceInfo_EUTRA_ProtocolIEs                                           232
#define __si_xnap__id_ConfiguredTACIndication_ProtocolIEs                                            233
#define __si_xnap__id_secondary_SN_UL_PDCP_UP_TNLInfo_ProtocolIEs                                    234
#define __si_xnap__id_pdcpDuplicationConfiguration_ProtocolIEs                                       235
#define __si_xnap__id_duplicationActivation_ProtocolIEs                                              236
#define __si_xnap__id_NPRACHConfiguration_ProtocolIEs                                                237
#define __si_xnap__id_QosMonitoringReportingFrequency_ProtocolIEs                                    238
#define __si_xnap__id_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_ProtocolIEs                     239
#define __si_xnap__id_DL_scheduling_PDCCH_CCE_usage_ProtocolIEs                                      240
#define __si_xnap__id_UL_scheduling_PDCCH_CCE_usage_ProtocolIEs                                      241
#define __si_xnap__id_SFN_Offset_ProtocolIEs                                                         242
#define __si_xnap__id_QoSMonitoringDisabled_ProtocolIEs                                              243
#define __si_xnap__id_ExtendedUEIdentityIndexValue_ProtocolIEs                                       244
#define __si_xnap__id_EUTRAPagingeDRXInformation_ProtocolIEs                                         245
#define __si_xnap__id_CHO_MRDC_EarlyDataForwarding_ProtocolIEs                                       246
#define __si_xnap__id_SCGIndicator_ProtocolIEs                                                       247
#define __si_xnap__id_UESpecificDRX_ProtocolIEs                                                      248
#define __si_xnap__id_PDUSessionExpectedUEActivityBehaviour_ProtocolIEs                              249
#define __si_xnap__id_QoS_Mapping_Information_ProtocolIEs                                            250
#define __si_xnap__id_AdditionLocationInformation_ProtocolIEs                                        251
#define __si_xnap__id_dataForwardingInfoFromTargetE_UTRANnode_ProtocolIEs                            252
#define __si_xnap__id_DirectForwardingPathAvailability_ProtocolIEs                                   253
#define __si_xnap__id_SourceNG_RAN_node_ID_ProtocolIEs                                               254
#define __si_xnap__id_SourceDLForwardingIPAddress_ProtocolIEs                                        255
#define __si_xnap__id_SourceNodeDLForwardingIPAddress_ProtocolIEs                                    256
#define __si_xnap__id_ExtendedReportIntervalMDT_ProtocolIEs                                          257
#define __si_xnap__id_SecurityIndication_ProtocolIEs                                                 258
#define __si_xnap__id_RRCConnReestab_Indicator_ProtocolIEs                                           259
#define __si_xnap__id_TargetNodeID_ProtocolIEs                                                       260
#define __si_xnap__id_ManagementBasedMDTPLMNList_ProtocolIEs                                         261
#define __si_xnap__id_PrivacyIndicator_ProtocolIEs                                                   262
#define __si_xnap__id_TraceCollectionEntityIPAddress_ProtocolIEs                                     263
#define __si_xnap__id_M4ReportAmount_ProtocolIEs                                                     264
#define __si_xnap__id_M5ReportAmount_ProtocolIEs                                                     265
#define __si_xnap__id_M6ReportAmount_ProtocolIEs                                                     266
#define __si_xnap__id_M7ReportAmount_ProtocolIEs                                                     267
#define __si_xnap__id_BeamMeasurementIndicationM1_ProtocolIEs                                        268
#define __si_xnap__id_MBS_Session_ID_ProtocolIEs                                                     269
#define __si_xnap__id_UEIdentityIndexList_MBSGroupPaging_ProtocolIEs                                 270
#define __si_xnap__id_MulticastRANPagingArea_ProtocolIEs                                             271
#define __si_xnap__id_Supported_MBS_FSA_ID_List_ProtocolIEs                                          272
#define __si_xnap__id_MBS_SessionInformation_List_ProtocolIEs                                        273
#define __si_xnap__id_MBS_SessionInformationResponse_List_ProtocolIEs                                274
#define __si_xnap__id_MBS_SessionAssociatedInformation_ProtocolIEs                                   275
#define __si_xnap__id_SuccessfulHOReportInformation_ProtocolIEs                                      276
#define __si_xnap__id_SliceRadioResourceStatus_List_ProtocolIEs                                      277
#define __si_xnap__id_CompositeAvailableCapacitySupplementaryUplink_ProtocolIEs                      278
#define __si_xnap__id_SCGUEHistoryInformation_ProtocolIEs                                            279
#define __si_xnap__id_SSBOffsets_List_ProtocolIEs                                                    280
#define __si_xnap__id_NG_RANnode2SSBOffsetModificationRange_ProtocolIEs                              281
#define __si_xnap__id_Coverage_Modification_List_ProtocolIEs                                         282
#define __si_xnap__id_NR_U_Channel_List_ProtocolIEs                                                  283
#define __si_xnap__id_SourcePSCellCGI_ProtocolIEs                                                    284
#define __si_xnap__id_FailedPSCellCGI_ProtocolIEs                                                    285
#define __si_xnap__id_SCGFailureReportContainer_ProtocolIEs                                          286
#define __si_xnap__id_SNMobilityInformation_ProtocolIEs                                              287
#define __si_xnap__id_SourcePSCellID_ProtocolIEs                                                     288
#define __si_xnap__id_SuitablePSCellCGI_ProtocolIEs                                                  289
#define __si_xnap__id_PSCellChangeHistory_ProtocolIEs                                                290
#define __si_xnap__id_CHOConfiguration_ProtocolIEs                                                   291
#define __si_xnap__id_NR_U_ChannelInfo_List_ProtocolIEs                                              292
#define __si_xnap__id_PSCellHistoryInformationRetrieve_ProtocolIEs                                   293
#define __si_xnap__id_NG_RANnode2SSBOffsetsModificationRange_ProtocolIEs                             294
#define __si_xnap__id_MIMOPRBusageInformation_ProtocolIEs                                            295
#define __si_xnap__id_F1CTrafficContainer_ProtocolIEs                                                296
#define __si_xnap__id_IAB_MT_Cell_List_ProtocolIEs                                                   297
#define __si_xnap__id_NoPDUSessionIndication_ProtocolIEs                                             298
#define __si_xnap__id_IAB_TNL_Address_Request_ProtocolIEs                                            299
#define __si_xnap__id_IAB_TNL_Address_Response_ProtocolIEs                                           300
#define __si_xnap__id_TrafficToBeAddedList_ProtocolIEs                                               301
#define __si_xnap__id_TrafficToBeModifiedList_ProtocolIEs                                            302
#define __si_xnap__id_TrafficToBeReleaseInformation_ProtocolIEs                                      303
#define __si_xnap__id_TrafficAddedList_ProtocolIEs                                                   304
#define __si_xnap__id_TrafficModifiedList_ProtocolIEs                                                305
#define __si_xnap__id_TrafficNotAddedList_ProtocolIEs                                                306
#define __si_xnap__id_TrafficNotModifiedList_ProtocolIEs                                             307
#define __si_xnap__id_TrafficRequiredToBeModifiedList_ProtocolIEs                                    308
#define __si_xnap__id_TrafficRequiredModifiedList_ProtocolIEs                                        309
#define __si_xnap__id_TrafficReleasedList_ProtocolIEs                                                310
#define __si_xnap__id_IABTNLAddressToBeAdded_ProtocolIEs                                             311
#define __si_xnap__id_IABTNLAddressToBeReleasedList_ProtocolIEs                                      312
#define __si_xnap__id_nonF1_Terminating_IAB_DonorUEXnAPID_ProtocolIEs                                313
#define __si_xnap__id_F1_Terminating_IAB_DonorUEXnAPID_ProtocolIEs                                   314
#define __si_xnap__id_BoundaryNodeCellsList_ProtocolIEs                                              315
#define __si_xnap__id_ParentNodeCellsList_ProtocolIEs                                                316
#define __si_xnap__id_tdd_GNB_DU_Cell_Resource_Configuration_ProtocolIEs                             317
#define __si_xnap__id_UL_GNB_DU_Cell_Resource_Configuration_ProtocolIEs                              318
#define __si_xnap__id_DL_GNB_DU_Cell_Resource_Configuration_ProtocolIEs                              319
#define __si_xnap__id_permutation_ProtocolIEs                                                        320
#define __si_xnap__id_IABTNLAddressException_ProtocolIEs                                             321
#define __si_xnap__id_CHOinformation_AddReq_ProtocolIEs                                              322
#define __si_xnap__id_CHOinformation_ModReq_ProtocolIEs                                              323
#define __si_xnap__id_SurvivalTime_ProtocolIEs                                                       324
#define __si_xnap__id_TimeSynchronizationAssistanceInformation_ProtocolIEs                           325
#define __si_xnap__id_SCGActivationRequest_ProtocolIEs                                               326
#define __si_xnap__id_SCGActivationStatus_ProtocolIEs                                                327
#define __si_xnap__id_CPAInformationRequest_ProtocolIEs                                              328
#define __si_xnap__id_CPAInformationAck_ProtocolIEs                                                  329
#define __si_xnap__id_CPCInformationRequired_ProtocolIEs                                             330
#define __si_xnap__id_CPCInformationConfirm_ProtocolIEs                                              331
#define __si_xnap__id_CPAInformationModReq_ProtocolIEs                                               332
#define __si_xnap__id_CPAInformationModReqAck_ProtocolIEs                                            333
#define __si_xnap__id_CPC_DataForwarding_Indicator_ProtocolIEs                                       334
#define __si_xnap__id_CPCInformationUpdate_ProtocolIEs                                               335
#define __si_xnap__id_CPACInformationModRequired_ProtocolIEs                                         336
#define __si_xnap__id_QMCConfigInfo_ProtocolIEs                                                      337
#define __si_xnap__id_338_NotToBeUsed_ProtocolIEs                                                    338
#define __si_xnap__id_Additional_Measurement_Timing_Configuration_List_ProtocolIEs                   339
#define __si_xnap__id_PDUSession_PairID_ProtocolIEs                                                  340
#define __si_xnap__id_Local_NG_RAN_Node_Identifier_ProtocolIEs                                       341
#define __si_xnap__id_Neighbour_NG_RAN_Node_List_ProtocolIEs                                         342
#define __si_xnap__id_Local_NG_RAN_Node_Identifier_Removal_ProtocolIEs                               343
#define __si_xnap__id_FiveGProSeAuthorized_ProtocolIEs                                               344
#define __si_xnap__id_FiveGProSePC5QoSParameters_ProtocolIEs                                         345
#define __si_xnap__id_FiveGProSeUEPC5AggregateMaximumBitRate_ProtocolIEs                             346
#define __si_xnap__id_ServedCellSpecificInfoReq_NR_ProtocolIEs                                       347
#define __si_xnap__id_NRPagingeDRXInformation_ProtocolIEs                                            348
#define __si_xnap__id_NRPagingeDRXInformationforRRCINACTIVE_ProtocolIEs                              349
#define __si_xnap__id_Redcap_Bcast_Information_ProtocolIEs                                           350
#define __si_xnap__id_SDTSupportRequest_ProtocolIEs                                                  351
#define __si_xnap__id_SDT_SRB_between_NewNode_OldNode_ProtocolIEs                                    352
#define __si_xnap__id_SDT_Termination_Request_ProtocolIEs                                            353
#define __si_xnap__id_SDTPartialUEContextInfo_ProtocolIEs                                            354
#define __si_xnap__id_SDTDataForwardingDRBList_ProtocolIEs                                           355
#define __si_xnap__id_PagingCause_ProtocolIEs                                                        356
#define __si_xnap__id_PEIPSassistanceInformation_ProtocolIEs                                         357
#define __si_xnap__id_UESliceMaximumBitRateList_ProtocolIEs                                          358
#define __si_xnap__id_S_NG_RANnodeUE_Slice_MBR_ProtocolIEs                                           359
#define __si_xnap__id_PositioningInformation_ProtocolIEs                                             360
#define __si_xnap__id_UEAssistantIdentifier_ProtocolIEs                                              361
#define __si_xnap__id_ManagementBasedMDTPLMNModificationList_ProtocolIEs                             362
#define __si_xnap__id_F1_terminatingIAB_donorIndicator_ProtocolIEs                                   363
#define __si_xnap__id_TAINSAGSupportList_ProtocolIEs                                                 364
#define __si_xnap__id_SCGreconfigNotification_ProtocolIEs                                            365
#define __si_xnap__id_earlyMeasurement_ProtocolIEs                                                   366
#define __si_xnap__id_BeamMeasurementsReportConfiguration_ProtocolIEs                                367
#define __si_xnap__id_CoverageModificationCause_ProtocolIEs                                          368
#define __si_xnap__id_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_ProtocolIEs   369
#define __si_xnap__id_UERLFReportContainerLTEExtension_ProtocolIEs                                   370
#define __si_xnap__id_ExcessPacketDelayThresholdConfiguration_ProtocolIEs                            371
#define __si_xnap__id_HashedUEIdentityIndexValue_ProtocolIEs                                         372
#define __si_xnap__id_QosFlowMappingIndication_ProtocolIEs                                           373
#define __si_xnap__id_Full_and_Short_I_RNTI_Profile_List_ProtocolIEs                                 374
#define __si_xnap__id_MBS_DataForwarding_Indicator_ProtocolIEs                                       375
#define __si_xnap__id_IABAuthorizationStatus_ProtocolIEs                                             376
#define __si_xnap__id_EquivalentSNPNs_ProtocolIEs                                                    377
#define __si_xnap__id_SelectedNID_ProtocolIEs                                                        378
#define __si_xnap__id_MT_SDT_Information_ProtocolIEs                                                 379
#define __si_xnap__id_PosPartialUEContextInfo_ProtocolIEs                                            380
#define __si_xnap__id_SRSConfiguration_ProtocolIEs                                                   381
#define __si_xnap__id_CHOTimeBasedInformation_ProtocolIEs                                            382
#define __si_xnap__id_ChannelOccupancyTimePercentageUL_ProtocolIEs                                   383
#define __si_xnap__id_EnergyDetectionThresholdUL_ProtocolIEs                                         384
#define __si_xnap__id_SuccessfulPSCellChangeReportInformation_ProtocolIEs                            385
#define __si_xnap__id_PSCellListContainer_ProtocolIEs                                                386
#define __si_xnap__id_RadioResourceStatusNR_U_ProtocolIEs                                            387
#define __si_xnap__id_CPACConfiguration_ProtocolIEs                                                  388
#define __si_xnap__id_RaReportIndicationList_ProtocolIEs                                             389
#define __si_xnap__id_SPRAvailability_ProtocolIEs                                                    390
#define __si_xnap__id_DLLBTFailureInformationRequest_ProtocolIEs                                     391
#define __si_xnap__id_DLLBTFailureInformationList_ProtocolIEs                                        392
#define __si_xnap__id_TargetCellCRNTI_ProtocolIEs                                                    393
#define __si_xnap__id_TimeSinceFailure_ProtocolIEs                                                   394
#define __si_xnap__id_AerialUESubscriptionInformation_ProtocolIEs                                    395
#define __si_xnap__id_LTEA2XServicesAuthorized_ProtocolIEs                                           396
#define __si_xnap__id_NRA2XServicesAuthorized_ProtocolIEs                                            397
#define __si_xnap__id_LTEA2XUEPC5AggregateMaximumBitRate_ProtocolIEs                                 398
#define __si_xnap__id_NRA2XUEPC5AggregateMaximumBitRate_ProtocolIEs                                  399
#define __si_xnap__id_A2XPC5QoSParameters_ProtocolIEs                                                400
#define __si_xnap__id_CellBasedUETrajectoryPrediction_ProtocolIEs                                    401
#define __si_xnap__id_DataCollectionID_ProtocolIEs                                                   402
#define __si_xnap__id_RequestedPredictionTime_ProtocolIEs                                            403
#define __si_xnap__id_NodeMeasurementInitiationResult_List_ProtocolIEs                               404
#define __si_xnap__id_CellMeasurementInitiationResult_List_ProtocolIEs                               405
#define __si_xnap__id_UEAssociatedInfoResult_List_ProtocolIEs                                        406
#define __si_xnap__id__407_not_to_be_used_ProtocolIEs                                                407
#define __si_xnap__id_UETrajectoryCollectionConfiguration_ProtocolIEs                                408
#define __si_xnap__id_UEPerformanceCollectionConfiguration_ProtocolIEs                               409
#define __si_xnap__id_CellMeasurementResultForDataCollection_List_ProtocolIEs                        410
#define __si_xnap__id_CellToReportForDataCollection_List_ProtocolIEs                                 411
#define __si_xnap__id_FiveGProSeLayer2Multipath_ProtocolIEs                                          412
#define __si_xnap__id_FiveGProSeLayer2UEtoUERelay_ProtocolIEs                                        413
#define __si_xnap__id_FiveGProSeLayer2UEtoUERemote_ProtocolIEs                                       414
#define __si_xnap__id_CandidateRelayUEInfoList_ProtocolIEs                                           415
#define __si_xnap__id_NRCellsAndSSBsList_ProtocolIEs                                                 416
#define __si_xnap__id_ActivatedNRCellsAndSSBsList_ProtocolIEs                                        417
#define __si_xnap__id_ClockQualityReportingControlInfo_ProtocolIEs                                   418
#define __si_xnap__id_CapabilityForBATAdaptation_ProtocolIEs                                         419
#define __si_xnap__id_PNI_NPN_AreaScopeofMDT_ProtocolIEs                                             420
#define __si_xnap__id_PNI_NPNBasedMDT_ProtocolIEs                                                    421
#define __si_xnap__id_SNPN_CellBasedMDT_ProtocolIEs                                                  422
#define __si_xnap__id_SNPN_TAIBasedMDT_ProtocolIEs                                                   423
#define __si_xnap__id_SNPN_BasedMDT_ProtocolIEs                                                      424
#define __si_xnap__id_S_CPAC_Request_ProtocolIEs                                                     425
#define __si_xnap__id_S_CPAC_Request_Info_ProtocolIEs                                                426
#define __si_xnap__id_S_CPAC_ReferenceConfigRequest_ProtocolIEs                                      427
#define __si_xnap__id_S_CPAC_InterSN_ExecutionNotify_ProtocolIEs                                     428
#define __si_xnap__id_S_CPAC_dataforwardinginfofromSource_ProtocolIEs                                429
#define __si_xnap__id_CPACcandidatePSCells_wotherInfo_list_ProtocolIEs                               430
#define __si_xnap__id_eRedcap_Bcast_Information_ProtocolIEs                                          431
#define __si_xnap__id_NRPagingLongeDRXInformationforRRCINACTIVE_ProtocolIEs                          432
#define __si_xnap__id_MBS_AssistanceInformation_ProtocolIEs                                          433
#define __si_xnap__id_QMCCoordinationRequest_ProtocolIEs                                             434
#define __si_xnap__id_QMCCoordinationResponse_ProtocolIEs                                            435
#define __si_xnap__id_QoE_Measurement_Results_ProtocolIEs                                            436
#define __si_xnap__id_MBSCommServiceType_ProtocolIEs                                                 437
#define __si_xnap__id_AssistanceInformationQoE_Meas_ProtocolIEs                                      438
#define __si_xnap__id__439_not_to_be_used_ProtocolIEs                                                439
#define __si_xnap__id_QoERVQoEReportingPaths_ProtocolIEs                                             440
#define __si_xnap__id_Src_SN_to_Tgt_SNQMCInfoInquiry_ProtocolIEs                                     441
#define __si_xnap__id_DirectForwardingPathAvailabilityWithSourceMN_ProtocolIEs                       442
#define __si_xnap__id_CHO_Maxnoof_CondReconfig_ProtocolIEs                                           443
#define __si_xnap__id_accessed_PSCellID_ProtocolIEs                                                  444
#define __si_xnap__id_conditional_Reconfig_ToCancel_List_ProtocolIEs                                 445
#define __si_xnap__id_CHOinformation_AddReqAck_ProtocolIEs                                           446
#define __si_xnap__id_CHO_CPAC_Info_ProtocolIEs                                                      447
#define __si_xnap__id_PDUSetQoSParameters_ProtocolIEs                                                448
#define __si_xnap__id_N6JitterInformation_ProtocolIEs                                                449
#define __si_xnap__id_ECNMarkingorCongestionInformationReportingRequest_ProtocolIEs                  450
#define __si_xnap__id_PDUSetbasedHandlingIndicator_ProtocolIEs                                       451
#define __si_xnap__id_TAISliceUnavailableCellList_ProtocolIEs                                        452
#define __si_xnap__id_MobileIAB_AuthorizationStatus_ProtocolIEs                                      453
#define __si_xnap__id_MIAB_MT_BAP_Address_ProtocolIEs                                                454
#define __si_xnap__id_MobileIABCell_ProtocolIEs                                                      455
#define __si_xnap__id_sk_Counter_ProtocolIEs                                                         456
#define __si_xnap__id_Source_M_NG_RANnodeID_ProtocolIEs                                              457
#define __si_xnap__id_458_NotToBeUsed_ProtocolIEs                                                    458
#define __si_xnap__id_SourceSN_to_TargetSN_QMCInfo_ProtocolIEs                                       459
#define __si_xnap__id_RegistrationRequestForDataCollection_ProtocolIEs                               460
#define __si_xnap__id_ReportCharacteristicsForDataCollection_ProtocolIEs                             461
#define __si_xnap__id_ReportingPeriodicityForDataCollection_ProtocolIEs                              462
#define __si_xnap__id_NodeAssociatedInfoResult_ProtocolIEs                                           463
#define __si_xnap__id_SLPositioning_Ranging_Services_Info_ProtocolIEs                                464
#define __si_xnap__id_XR_Bcast_Information_ProtocolIEs                                               465
#define __si_xnap__id_PDUSessionsListToBeReleased_UPError_ProtocolIEs                                466
#define __si_xnap__id_MaximumDataBurstVolume_ProtocolIEs                                             467
#define __si_xnap__id_CPAC_Preparation_Type_ProtocolIEs                                              468
#define __si_xnap__id_UserPlaneFailureIndication_ProtocolIEs                                         469
#define __si_xnap__id_MN_only_MDT_collection_ProtocolIEs                                             470
#define __si_xnap__id_BarringExemptionforEmerCallInfo_ProtocolIEs                                    471
#define __si_xnap__id_Transmission_Bandwidth_asymmetric_ProtocolIEs                                  472
#define __si_xnap__id_SRSPositioningConfigOrActivationRequest_ProtocolIEs                            473
#define __si_xnap__id_NRPPaPositioningInformation_ProtocolIEs                                        474



#define id_ActivatedServedCells_ProtocolIEs                                                          0
#define id_ActivationIDforCellActivation_ProtocolIEs                                                 1
#define id_admittedSplitSRB_ProtocolIEs                                                              2
#define id_admittedSplitSRBrelease_ProtocolIEs                                                       3
#define id_AMF_Region_Information_ProtocolIEs                                                        4
#define id_AssistanceDataForRANPaging_ProtocolIEs                                                    5
#define id_BearersSubjectToCounterCheck_ProtocolIEs                                                  6
#define id_Cause_ProtocolIEs                                                                         7
#define id_cellAssistanceInfo_NR_ProtocolIEs                                                         8
#define id_ConfigurationUpdateInitiatingNodeChoice_ProtocolIEs                                       9
#define id_CriticalityDiagnostics_ProtocolIEs                                                        10
#define id_XnUAddressInfoperPDUSession_List_ProtocolIEs                                              11
#define id_DRBsSubjectToStatusTransfer_List_ProtocolIEs                                              12
#define id_ExpectedUEBehaviour_ProtocolIEs                                                           13
#define id_GlobalNG_RAN_node_ID_ProtocolIEs                                                          14
#define id_GUAMI_ProtocolIEs                                                                         15
#define id_indexToRatFrequSelectionPriority_ProtocolIEs                                              16
#define id_initiatingNodeType_ResourceCoordRequest_ProtocolIEs                                       17
#define id_List_of_served_cells_E_UTRA_ProtocolIEs                                                   18
#define id_List_of_served_cells_NR_ProtocolIEs                                                       19
#define id_LocationReportingInformation_ProtocolIEs                                                  20
#define id_MAC_I_ProtocolIEs                                                                         21
#define id_MaskedIMEISV_ProtocolIEs                                                                  22
#define id_M_NG_RANnodeUEXnAPID_ProtocolIEs                                                          23
#define id_MN_to_SN_Container_ProtocolIEs                                                            24
#define id_MobilityRestrictionList_ProtocolIEs                                                       25
#define id_new_NG_RAN_Cell_Identity_ProtocolIEs                                                      26
#define id_newNG_RANnodeUEXnAPID_ProtocolIEs                                                         27
#define id_UEReportRRCTransfer_ProtocolIEs                                                           28
#define id_oldNG_RANnodeUEXnAPID_ProtocolIEs                                                         29
#define id_OldtoNewNG_RANnodeResumeContainer_ProtocolIEs                                             30
#define id_PagingDRX_ProtocolIEs                                                                     31
#define id_PCellID_ProtocolIEs                                                                       32
#define id_PDCPChangeIndication_ProtocolIEs                                                          33
#define id_PDUSessionAdmittedAddedAddReqAck_ProtocolIEs                                              34
#define id_PDUSessionAdmittedModSNModConfirm_ProtocolIEs                                             35
#define id_PDUSessionAdmitted_SNModResponse_ProtocolIEs                                              36
#define id_PDUSessionNotAdmittedAddReqAck_ProtocolIEs                                                37
#define id_PDUSessionNotAdmitted_SNModResponse_ProtocolIEs                                           38
#define id_PDUSessionReleasedList_RelConf_ProtocolIEs                                                39
#define id_PDUSessionReleasedSNModConfirm_ProtocolIEs                                                40
#define id_PDUSessionResourcesActivityNotifyList_ProtocolIEs                                         41
#define id_PDUSessionResourcesAdmitted_List_ProtocolIEs                                              42
#define id_PDUSessionResourcesNotAdmitted_List_ProtocolIEs                                           43
#define id_PDUSessionResourcesNotifyList_ProtocolIEs                                                 44
#define id_PDUSession_SNChangeConfirm_List_ProtocolIEs                                               45
#define id_PDUSession_SNChangeRequired_List_ProtocolIEs                                              46
#define id_PDUSessionToBeAddedAddReq_ProtocolIEs                                                     47
#define id_PDUSessionToBeModifiedSNModRequired_ProtocolIEs                                           48
#define id_PDUSessionToBeReleasedList_RelRqd_ProtocolIEs                                             49
#define id_PDUSessionToBeReleased_RelReq_ProtocolIEs                                                 50
#define id_PDUSessionToBeReleasedSNModRequired_ProtocolIEs                                           51
#define id_RANPagingArea_ProtocolIEs                                                                 52
#define id_PagingPriority_ProtocolIEs                                                                53
#define id_requestedSplitSRB_ProtocolIEs                                                             54
#define id_requestedSplitSRBrelease_ProtocolIEs                                                      55
#define id_ResetRequestTypeInfo_ProtocolIEs                                                          56
#define id_ResetResponseTypeInfo_ProtocolIEs                                                         57
#define id_RespondingNodeTypeConfigUpdateAck_ProtocolIEs                                             58
#define id_respondingNodeType_ResourceCoordResponse_ProtocolIEs                                      59
#define id_ResponseInfo_ReconfCompl_ProtocolIEs                                                      60
#define id_RRCConfigIndication_ProtocolIEs                                                           61
#define id_RRCResumeCause_ProtocolIEs                                                                62
#define id_SCGConfigurationQuery_ProtocolIEs                                                         63
#define id_selectedPLMN_ProtocolIEs                                                                  64
#define id_ServedCellsToActivate_ProtocolIEs                                                         65
#define id_servedCellsToUpdate_E_UTRA_ProtocolIEs                                                    66
#define id_ServedCellsToUpdateInitiatingNodeChoice_ProtocolIEs                                       67
#define id_servedCellsToUpdate_NR_ProtocolIEs                                                        68
#define id_s_ng_RANnode_SecurityKey_ProtocolIEs                                                      69
#define id_S_NG_RANnodeUE_AMBR_ProtocolIEs                                                           70
#define id_S_NG_RANnodeUEXnAPID_ProtocolIEs                                                          71
#define id_SN_to_MN_Container_ProtocolIEs                                                            72
#define id_sourceNG_RANnodeUEXnAPID_ProtocolIEs                                                      73
#define id_SplitSRB_RRCTransfer_ProtocolIEs                                                          74
#define id_TAISupport_list_ProtocolIEs                                                               75
#define id_TimeToWait_ProtocolIEs                                                                    76
#define id_Target2SourceNG_RANnodeTranspContainer_ProtocolIEs                                        77
#define id_targetCellGlobalID_ProtocolIEs                                                            78
#define id_targetNG_RANnodeUEXnAPID_ProtocolIEs                                                      79
#define id_target_S_NG_RANnodeID_ProtocolIEs                                                         80
#define id_TraceActivation_ProtocolIEs                                                               81
#define id_UEContextID_ProtocolIEs                                                                   82
#define id_UEContextInfoHORequest_ProtocolIEs                                                        83
#define id_UEContextInfoRetrUECtxtResp_ProtocolIEs                                                   84
#define id_UEContextInfo_SNModRequest_ProtocolIEs                                                    85
#define id_UEContextKeptIndicator_ProtocolIEs                                                        86
#define id_UEContextRefAtSN_HORequest_ProtocolIEs                                                    87
#define id_UEHistoryInformation_ProtocolIEs                                                          88
#define id_UEIdentityIndexValue_ProtocolIEs                                                          89
#define id_UERANPagingIdentity_ProtocolIEs                                                           90
#define id_UESecurityCapabilities_ProtocolIEs                                                        91
#define id_UserPlaneTrafficActivityReport_ProtocolIEs                                                92
#define id_XnRemovalThreshold_ProtocolIEs                                                            93
#define id_DesiredActNotificationLevel_ProtocolIEs                                                   94
#define id_AvailableDRBIDs_ProtocolIEs                                                               95
#define id_AdditionalDRBIDs_ProtocolIEs                                                              96
#define id_SpareDRBIDs_ProtocolIEs                                                                   97
#define id_RequiredNumberOfDRBIDs_ProtocolIEs                                                        98
#define id_TNLA_To_Add_List_ProtocolIEs                                                              99
#define id_TNLA_To_Update_List_ProtocolIEs                                                           100
#define id_TNLA_To_Remove_List_ProtocolIEs                                                           101
#define id_TNLA_Setup_List_ProtocolIEs                                                               102
#define id_TNLA_Failed_To_Setup_List_ProtocolIEs                                                     103
#define id_PDUSessionToBeReleased_RelReqAck_ProtocolIEs                                              104
#define id_S_NG_RANnodeMaxIPDataRate_UL_ProtocolIEs                                                  105
#define id_PDUSessionResourceSecondaryRATUsageList_ProtocolIEs                                       107
#define id_Additional_UL_NG_U_TNLatUPF_List_ProtocolIEs                                              108
#define id_SecondarydataForwardingInfoFromTarget_List_ProtocolIEs                                    109
#define id_LocationInformationSNReporting_ProtocolIEs                                                110
#define id_LocationInformationSN_ProtocolIEs                                                         111
#define id_LastE_UTRANPLMNIdentity_ProtocolIEs                                                       112
#define id_S_NG_RANnodeMaxIPDataRate_DL_ProtocolIEs                                                  113
#define id_MaxIPrate_DL_ProtocolIEs                                                                  114
#define id_SecurityResult_ProtocolIEs                                                                115
#define id_S_NSSAI_ProtocolIEs                                                                       116
#define id_MR_DC_ResourceCoordinationInfo_ProtocolIEs                                                117
#define id_AMF_Region_Information_To_Add_ProtocolIEs                                                 118
#define id_AMF_Region_Information_To_Delete_ProtocolIEs                                              119
#define id_OldQoSFlowMap_ULendmarkerexpected_ProtocolIEs                                             120
#define id_RANPagingFailure_ProtocolIEs                                                              121
#define id_UERadioCapabilityForPaging_ProtocolIEs                                                    122
#define id_PDUSessionDataForwarding_SNModResponse_ProtocolIEs                                        123
#define id_DRBsNotAdmittedSetupModifyList_ProtocolIEs                                                124
#define id_Secondary_MN_Xn_U_TNLInfoatM_ProtocolIEs                                                  125
#define id_NE_DC_TDM_Pattern_ProtocolIEs                                                             126
#define id_PDUSessionCommonNetworkInstance_ProtocolIEs                                               127
#define id_BPLMN_ID_Info_EUTRA_ProtocolIEs                                                           128
#define id_BPLMN_ID_Info_NR_ProtocolIEs                                                              129
#define id_InterfaceInstanceIndication_ProtocolIEs                                                   130
#define id_S_NG_RANnode_Addition_Trigger_Ind_ProtocolIEs                                             131
#define id_DefaultDRB_Allowed_ProtocolIEs                                                            132
#define id_DRB_IDs_takenintouse_ProtocolIEs                                                          133
#define id_SplitSessionIndicator_ProtocolIEs                                                         134
#define id_CNTypeRestrictionsForEquivalent_ProtocolIEs                                               135
#define id_CNTypeRestrictionsForServing_ProtocolIEs                                                  136
#define id_DRBs_transferred_to_MN_ProtocolIEs                                                        137
#define id_ULForwardingProposal_ProtocolIEs                                                          138
#define id_EndpointIPAddressAndPort_ProtocolIEs                                                      139
#define id_IntendedTDD_DL_ULConfiguration_NR_ProtocolIEs                                             140
#define id_TNLConfigurationInfo_ProtocolIEs                                                          141
#define id_PartialListIndicator_NR_ProtocolIEs                                                       142
#define id_MessageOversizeNotification_ProtocolIEs                                                   143
#define id_CellAndCapacityAssistanceInfo_NR_ProtocolIEs                                              144
#define id_NG_RANTraceID_ProtocolIEs                                                                 145
#define id_NonGBRResources_Offered_ProtocolIEs                                                       146
#define id_FastMCGRecoveryRRCTransfer_SN_to_MN_ProtocolIEs                                           147
#define id_RequestedFastMCGRecoveryViaSRB3_ProtocolIEs                                               148
#define id_AvailableFastMCGRecoveryViaSRB3_ProtocolIEs                                               149
#define id_RequestedFastMCGRecoveryViaSRB3Release_ProtocolIEs                                        150
#define id_ReleaseFastMCGRecoveryViaSRB3_ProtocolIEs                                                 151
#define id_FastMCGRecoveryRRCTransfer_MN_to_SN_ProtocolIEs                                           152
#define id_ExtendedRATRestrictionInformation_ProtocolIEs                                             153
#define id_QoSMonitoringRequest_ProtocolIEs                                                          154
#define id_FiveGCMobilityRestrictionListContainer_ProtocolIEs                                        155
#define id_PartialListIndicator_EUTRA_ProtocolIEs                                                    156
#define id_CellAndCapacityAssistanceInfo_EUTRA_ProtocolIEs                                           157
#define id_CHOinformation_Req_ProtocolIEs                                                            158
#define id_CHOinformation_Ack_ProtocolIEs                                                            159
#define id_targetCellsToCancel_ProtocolIEs                                                           160
#define id_requestedTargetCellGlobalID_ProtocolIEs                                                   161
#define id_procedureStage_ProtocolIEs                                                                162
#define id_DAPSRequestInfo_ProtocolIEs                                                               163
#define id_DAPSResponseInfo_List_ProtocolIEs                                                         164
#define id_CHO_MRDC_Indicator_ProtocolIEs                                                            165
#define id_OffsetOfNbiotChannelNumberToDL_EARFCN_ProtocolIEs                                         166
#define id_OffsetOfNbiotChannelNumberToUL_EARFCN_ProtocolIEs                                         167
#define id_NBIoT_UL_DL_AlignmentOffset_ProtocolIEs                                                   168
#define id_LTEV2XServicesAuthorized_ProtocolIEs                                                      169
#define id_NRV2XServicesAuthorized_ProtocolIEs                                                       170
#define id_LTEUESidelinkAggregateMaximumBitRate_ProtocolIEs                                          171
#define id_NRUESidelinkAggregateMaximumBitRate_ProtocolIEs                                           172
#define id_PC5QoSParameters_ProtocolIEs                                                              173
#define id_AlternativeQoSParaSetList_ProtocolIEs                                                     174
#define id_CurrentQoSParaSetIndex_ProtocolIEs                                                        175
#define id_MobilityInformation_ProtocolIEs                                                           176
#define id_InitiatingCondition_FailureIndication_ProtocolIEs                                         177
#define id_UEHistoryInformationFromTheUE_ProtocolIEs                                                 178
#define id_HandoverReportType_ProtocolIEs                                                            179
#define id_HandoverCause_ProtocolIEs                                                                 180
#define id_SourceCellCGI_ProtocolIEs                                                                 181
#define id_TargetCellCGI_ProtocolIEs                                                                 182
#define id_ReEstablishmentCellCGI_ProtocolIEs                                                        183
#define id_TargetCellinEUTRAN_ProtocolIEs                                                            184
#define id_SourceCellCRNTI_ProtocolIEs                                                               185
#define id_UERLFReportContainer_ProtocolIEs                                                          186
#define id_NGRAN_Node1_Measurement_ID_ProtocolIEs                                                    187
#define id_NGRAN_Node2_Measurement_ID_ProtocolIEs                                                    188
#define id_RegistrationRequest_ProtocolIEs                                                           189
#define id_ReportCharacteristics_ProtocolIEs                                                         190
#define id_CellToReport_ProtocolIEs                                                                  191
#define id_ReportingPeriodicity_ProtocolIEs                                                          192
#define id_CellMeasurementResult_ProtocolIEs                                                         193
#define id_NG_RANnode1CellID_ProtocolIEs                                                             194
#define id_NG_RANnode2CellID_ProtocolIEs                                                             195
#define id_NG_RANnode1MobilityParameters_ProtocolIEs                                                 196
#define id_NG_RANnode2ProposedMobilityParameters_ProtocolIEs                                         197
#define id_MobilityParametersModificationRange_ProtocolIEs                                           198
#define id_TDDULDLConfigurationCommonNR_ProtocolIEs                                                  199
#define id_CarrierList_ProtocolIEs                                                                   200
#define id_ULCarrierList_ProtocolIEs                                                                 201
#define id_FrequencyShift7p5khz_ProtocolIEs                                                          202
#define id_SSB_PositionsInBurst_ProtocolIEs                                                          203
#define id_NRCellPRACHConfig_ProtocolIEs                                                             204
#define id_RAReport_ProtocolIEs                                                                      205
#define id_IABNodeIndication_ProtocolIEs                                                             206
#define id_Redundant_UL_NG_U_TNLatUPF_ProtocolIEs                                                    207
#define id_CNPacketDelayBudgetDownlink_ProtocolIEs                                                   208
#define id_CNPacketDelayBudgetUplink_ProtocolIEs                                                     209
#define id_Additional_Redundant_UL_NG_U_TNLatUPF_List_ProtocolIEs                                    210
#define id_RedundantCommonNetworkInstance_ProtocolIEs                                                211
#define id_TSCTrafficCharacteristics_ProtocolIEs                                                     212
#define id_RedundantQoSFlowIndicator_ProtocolIEs                                                     213
#define id_Redundant_DL_NG_U_TNLatNG_RAN_ProtocolIEs                                                 214
#define id_ExtendedPacketDelayBudget_ProtocolIEs                                                     215
#define id_Additional_PDCP_Duplication_TNL_List_ProtocolIEs                                          216
#define id_RedundantPDUSessionInformation_ProtocolIEs                                                217
#define id_UsedRSNInformation_ProtocolIEs                                                            218
#define id_RLCDuplicationInformation_ProtocolIEs                                                     219
#define id_NPN_Broadcast_Information_ProtocolIEs                                                     220
#define id_NPNPagingAssistanceInformation_ProtocolIEs                                                221
#define id_NPNMobilityInformation_ProtocolIEs                                                        222
#define id_NPN_Support_ProtocolIEs                                                                   223
#define id_MDT_Configuration_ProtocolIEs                                                             224
#define id_MDTPLMNList_ProtocolIEs                                                                   225
#define id_TraceCollectionEntityURI_ProtocolIEs                                                      226
#define id_UERadioCapabilityID_ProtocolIEs                                                           227
#define id_CSI_RSTransmissionIndication_ProtocolIEs                                                  228
#define id_SNTriggered_ProtocolIEs                                                                   229
#define id_DLCarrierList_ProtocolIEs                                                                 230
#define id_ExtendedTAISliceSupportList_ProtocolIEs                                                   231
#define id_cellAssistanceInfo_EUTRA_ProtocolIEs                                                      232
#define id_ConfiguredTACIndication_ProtocolIEs                                                       233
#define id_secondary_SN_UL_PDCP_UP_TNLInfo_ProtocolIEs                                               234
#define id_pdcpDuplicationConfiguration_ProtocolIEs                                                  235
#define id_duplicationActivation_ProtocolIEs                                                         236
#define id_NPRACHConfiguration_ProtocolIEs                                                           237
#define id_QosMonitoringReportingFrequency_ProtocolIEs                                               238
#define id_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_ProtocolIEs                                239
#define id_DL_scheduling_PDCCH_CCE_usage_ProtocolIEs                                                 240
#define id_UL_scheduling_PDCCH_CCE_usage_ProtocolIEs                                                 241
#define id_SFN_Offset_ProtocolIEs                                                                    242
#define id_QoSMonitoringDisabled_ProtocolIEs                                                         243
#define id_ExtendedUEIdentityIndexValue_ProtocolIEs                                                  244
#define id_EUTRAPagingeDRXInformation_ProtocolIEs                                                    245
#define id_CHO_MRDC_EarlyDataForwarding_ProtocolIEs                                                  246
#define id_SCGIndicator_ProtocolIEs                                                                  247
#define id_UESpecificDRX_ProtocolIEs                                                                 248
#define id_PDUSessionExpectedUEActivityBehaviour_ProtocolIEs                                         249
#define id_QoS_Mapping_Information_ProtocolIEs                                                       250
#define id_AdditionLocationInformation_ProtocolIEs                                                   251
#define id_dataForwardingInfoFromTargetE_UTRANnode_ProtocolIEs                                       252
#define id_DirectForwardingPathAvailability_ProtocolIEs                                              253
#define id_SourceNG_RAN_node_ID_ProtocolIEs                                                          254
#define id_SourceDLForwardingIPAddress_ProtocolIEs                                                   255
#define id_SourceNodeDLForwardingIPAddress_ProtocolIEs                                               256
#define id_ExtendedReportIntervalMDT_ProtocolIEs                                                     257
#define id_SecurityIndication_ProtocolIEs                                                            258
#define id_RRCConnReestab_Indicator_ProtocolIEs                                                      259
#define id_TargetNodeID_ProtocolIEs                                                                  260
#define id_ManagementBasedMDTPLMNList_ProtocolIEs                                                    261
#define id_PrivacyIndicator_ProtocolIEs                                                              262
#define id_TraceCollectionEntityIPAddress_ProtocolIEs                                                263
#define id_M4ReportAmount_ProtocolIEs                                                                264
#define id_M5ReportAmount_ProtocolIEs                                                                265
#define id_M6ReportAmount_ProtocolIEs                                                                266
#define id_M7ReportAmount_ProtocolIEs                                                                267
#define id_BeamMeasurementIndicationM1_ProtocolIEs                                                   268
#define id_MBS_Session_ID_ProtocolIEs                                                                269
#define id_UEIdentityIndexList_MBSGroupPaging_ProtocolIEs                                            270
#define id_MulticastRANPagingArea_ProtocolIEs                                                        271
#define id_Supported_MBS_FSA_ID_List_ProtocolIEs                                                     272
#define id_MBS_SessionInformation_List_ProtocolIEs                                                   273
#define id_MBS_SessionInformationResponse_List_ProtocolIEs                                           274
#define id_MBS_SessionAssociatedInformation_ProtocolIEs                                              275
#define id_SuccessfulHOReportInformation_ProtocolIEs                                                 276
#define id_SliceRadioResourceStatus_List_ProtocolIEs                                                 277
#define id_CompositeAvailableCapacitySupplementaryUplink_ProtocolIEs                                 278
#define id_SCGUEHistoryInformation_ProtocolIEs                                                       279
#define id_SSBOffsets_List_ProtocolIEs                                                               280
#define id_NG_RANnode2SSBOffsetModificationRange_ProtocolIEs                                         281
#define id_Coverage_Modification_List_ProtocolIEs                                                    282
#define id_NR_U_Channel_List_ProtocolIEs                                                             283
#define id_SourcePSCellCGI_ProtocolIEs                                                               284
#define id_FailedPSCellCGI_ProtocolIEs                                                               285
#define id_SCGFailureReportContainer_ProtocolIEs                                                     286
#define id_SNMobilityInformation_ProtocolIEs                                                         287
#define id_SourcePSCellID_ProtocolIEs                                                                288
#define id_SuitablePSCellCGI_ProtocolIEs                                                             289
#define id_PSCellChangeHistory_ProtocolIEs                                                           290
#define id_CHOConfiguration_ProtocolIEs                                                              291
#define id_NR_U_ChannelInfo_List_ProtocolIEs                                                         292
#define id_PSCellHistoryInformationRetrieve_ProtocolIEs                                              293
#define id_NG_RANnode2SSBOffsetsModificationRange_ProtocolIEs                                        294
#define id_MIMOPRBusageInformation_ProtocolIEs                                                       295
#define id_F1CTrafficContainer_ProtocolIEs                                                           296
#define id_IAB_MT_Cell_List_ProtocolIEs                                                              297
#define id_NoPDUSessionIndication_ProtocolIEs                                                        298
#define id_IAB_TNL_Address_Request_ProtocolIEs                                                       299
#define id_IAB_TNL_Address_Response_ProtocolIEs                                                      300
#define id_TrafficToBeAddedList_ProtocolIEs                                                          301
#define id_TrafficToBeModifiedList_ProtocolIEs                                                       302
#define id_TrafficToBeReleaseInformation_ProtocolIEs                                                 303
#define id_TrafficAddedList_ProtocolIEs                                                              304
#define id_TrafficModifiedList_ProtocolIEs                                                           305
#define id_TrafficNotAddedList_ProtocolIEs                                                           306
#define id_TrafficNotModifiedList_ProtocolIEs                                                        307
#define id_TrafficRequiredToBeModifiedList_ProtocolIEs                                               308
#define id_TrafficRequiredModifiedList_ProtocolIEs                                                   309
#define id_TrafficReleasedList_ProtocolIEs                                                           310
#define id_IABTNLAddressToBeAdded_ProtocolIEs                                                        311
#define id_IABTNLAddressToBeReleasedList_ProtocolIEs                                                 312
#define id_nonF1_Terminating_IAB_DonorUEXnAPID_ProtocolIEs                                           313
#define id_F1_Terminating_IAB_DonorUEXnAPID_ProtocolIEs                                              314
#define id_BoundaryNodeCellsList_ProtocolIEs                                                         315
#define id_ParentNodeCellsList_ProtocolIEs                                                           316
#define id_tdd_GNB_DU_Cell_Resource_Configuration_ProtocolIEs                                        317
#define id_UL_GNB_DU_Cell_Resource_Configuration_ProtocolIEs                                         318
#define id_DL_GNB_DU_Cell_Resource_Configuration_ProtocolIEs                                         319
#define id_permutation_ProtocolIEs                                                                   320
#define id_IABTNLAddressException_ProtocolIEs                                                        321
#define id_CHOinformation_AddReq_ProtocolIEs                                                         322
#define id_CHOinformation_ModReq_ProtocolIEs                                                         323
#define id_SurvivalTime_ProtocolIEs                                                                  324
#define id_TimeSynchronizationAssistanceInformation_ProtocolIEs                                      325
#define id_SCGActivationRequest_ProtocolIEs                                                          326
#define id_SCGActivationStatus_ProtocolIEs                                                           327
#define id_CPAInformationRequest_ProtocolIEs                                                         328
#define id_CPAInformationAck_ProtocolIEs                                                             329
#define id_CPCInformationRequired_ProtocolIEs                                                        330
#define id_CPCInformationConfirm_ProtocolIEs                                                         331
#define id_CPAInformationModReq_ProtocolIEs                                                          332
#define id_CPAInformationModReqAck_ProtocolIEs                                                       333
#define id_CPC_DataForwarding_Indicator_ProtocolIEs                                                  334
#define id_CPCInformationUpdate_ProtocolIEs                                                          335
#define id_CPACInformationModRequired_ProtocolIEs                                                    336
#define id_QMCConfigInfo_ProtocolIEs                                                                 337
#define id_338_NotToBeUsed_ProtocolIEs                                                               338
#define id_Additional_Measurement_Timing_Configuration_List_ProtocolIEs                              339
#define id_PDUSession_PairID_ProtocolIEs                                                             340
#define id_Local_NG_RAN_Node_Identifier_ProtocolIEs                                                  341
#define id_Neighbour_NG_RAN_Node_List_ProtocolIEs                                                    342
#define id_Local_NG_RAN_Node_Identifier_Removal_ProtocolIEs                                          343
#define id_FiveGProSeAuthorized_ProtocolIEs                                                          344
#define id_FiveGProSePC5QoSParameters_ProtocolIEs                                                    345
#define id_FiveGProSeUEPC5AggregateMaximumBitRate_ProtocolIEs                                        346
#define id_ServedCellSpecificInfoReq_NR_ProtocolIEs                                                  347
#define id_NRPagingeDRXInformation_ProtocolIEs                                                       348
#define id_NRPagingeDRXInformationforRRCINACTIVE_ProtocolIEs                                         349
#define id_Redcap_Bcast_Information_ProtocolIEs                                                      350
#define id_SDTSupportRequest_ProtocolIEs                                                             351
#define id_SDT_SRB_between_NewNode_OldNode_ProtocolIEs                                               352
#define id_SDT_Termination_Request_ProtocolIEs                                                       353
#define id_SDTPartialUEContextInfo_ProtocolIEs                                                       354
#define id_SDTDataForwardingDRBList_ProtocolIEs                                                      355
#define id_PagingCause_ProtocolIEs                                                                   356
#define id_PEIPSassistanceInformation_ProtocolIEs                                                    357
#define id_UESliceMaximumBitRateList_ProtocolIEs                                                     358
#define id_S_NG_RANnodeUE_Slice_MBR_ProtocolIEs                                                      359
#define id_PositioningInformation_ProtocolIEs                                                        360
#define id_UEAssistantIdentifier_ProtocolIEs                                                         361
#define id_ManagementBasedMDTPLMNModificationList_ProtocolIEs                                        362
#define id_F1_terminatingIAB_donorIndicator_ProtocolIEs                                              363
#define id_TAINSAGSupportList_ProtocolIEs                                                            364
#define id_SCGreconfigNotification_ProtocolIEs                                                       365
#define id_earlyMeasurement_ProtocolIEs                                                              366
#define id_BeamMeasurementsReportConfiguration_ProtocolIEs                                           367
#define id_CoverageModificationCause_ProtocolIEs                                                     368
#define id_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_ProtocolIEs              369
#define id_UERLFReportContainerLTEExtension_ProtocolIEs                                              370
#define id_ExcessPacketDelayThresholdConfiguration_ProtocolIEs                                       371
#define id_HashedUEIdentityIndexValue_ProtocolIEs                                                    372
#define id_QosFlowMappingIndication_ProtocolIEs                                                      373
#define id_Full_and_Short_I_RNTI_Profile_List_ProtocolIEs                                            374
#define id_MBS_DataForwarding_Indicator_ProtocolIEs                                                  375
#define id_IABAuthorizationStatus_ProtocolIEs                                                        376
#define id_EquivalentSNPNs_ProtocolIEs                                                               377
#define id_SelectedNID_ProtocolIEs                                                                   378
#define id_MT_SDT_Information_ProtocolIEs                                                            379
#define id_PosPartialUEContextInfo_ProtocolIEs                                                       380
#define id_SRSConfiguration_ProtocolIEs                                                              381
#define id_CHOTimeBasedInformation_ProtocolIEs                                                       382
#define id_ChannelOccupancyTimePercentageUL_ProtocolIEs                                              383
#define id_EnergyDetectionThresholdUL_ProtocolIEs                                                    384
#define id_SuccessfulPSCellChangeReportInformation_ProtocolIEs                                       385
#define id_PSCellListContainer_ProtocolIEs                                                           386
#define id_RadioResourceStatusNR_U_ProtocolIEs                                                       387
#define id_CPACConfiguration_ProtocolIEs                                                             388
#define id_RaReportIndicationList_ProtocolIEs                                                        389
#define id_SPRAvailability_ProtocolIEs                                                               390
#define id_DLLBTFailureInformationRequest_ProtocolIEs                                                391
#define id_DLLBTFailureInformationList_ProtocolIEs                                                   392
#define id_TargetCellCRNTI_ProtocolIEs                                                               393
#define id_TimeSinceFailure_ProtocolIEs                                                              394
#define id_AerialUESubscriptionInformation_ProtocolIEs                                               395
#define id_LTEA2XServicesAuthorized_ProtocolIEs                                                      396
#define id_NRA2XServicesAuthorized_ProtocolIEs                                                       397
#define id_LTEA2XUEPC5AggregateMaximumBitRate_ProtocolIEs                                            398
#define id_NRA2XUEPC5AggregateMaximumBitRate_ProtocolIEs                                             399
#define id_A2XPC5QoSParameters_ProtocolIEs                                                           400
#define id_CellBasedUETrajectoryPrediction_ProtocolIEs                                               401
#define id_DataCollectionID_ProtocolIEs                                                              402
#define id_RequestedPredictionTime_ProtocolIEs                                                       403
#define id_NodeMeasurementInitiationResult_List_ProtocolIEs                                          404
#define id_CellMeasurementInitiationResult_List_ProtocolIEs                                          405
#define id_UEAssociatedInfoResult_List_ProtocolIEs                                                   406
#define id__407_not_to_be_used_ProtocolIEs                                                           407
#define id_UETrajectoryCollectionConfiguration_ProtocolIEs                                           408
#define id_UEPerformanceCollectionConfiguration_ProtocolIEs                                          409
#define id_CellMeasurementResultForDataCollection_List_ProtocolIEs                                   410
#define id_CellToReportForDataCollection_List_ProtocolIEs                                            411
#define id_FiveGProSeLayer2Multipath_ProtocolIEs                                                     412
#define id_FiveGProSeLayer2UEtoUERelay_ProtocolIEs                                                   413
#define id_FiveGProSeLayer2UEtoUERemote_ProtocolIEs                                                  414
#define id_CandidateRelayUEInfoList_ProtocolIEs                                                      415
#define id_NRCellsAndSSBsList_ProtocolIEs                                                            416
#define id_ActivatedNRCellsAndSSBsList_ProtocolIEs                                                   417
#define id_ClockQualityReportingControlInfo_ProtocolIEs                                              418
#define id_CapabilityForBATAdaptation_ProtocolIEs                                                    419
#define id_PNI_NPN_AreaScopeofMDT_ProtocolIEs                                                        420
#define id_PNI_NPNBasedMDT_ProtocolIEs                                                               421
#define id_SNPN_CellBasedMDT_ProtocolIEs                                                             422
#define id_SNPN_TAIBasedMDT_ProtocolIEs                                                              423
#define id_SNPN_BasedMDT_ProtocolIEs                                                                 424
#define id_S_CPAC_Request_ProtocolIEs                                                                425
#define id_S_CPAC_Request_Info_ProtocolIEs                                                           426
#define id_S_CPAC_ReferenceConfigRequest_ProtocolIEs                                                 427
#define id_S_CPAC_InterSN_ExecutionNotify_ProtocolIEs                                                428
#define id_S_CPAC_dataforwardinginfofromSource_ProtocolIEs                                           429
#define id_CPACcandidatePSCells_wotherInfo_list_ProtocolIEs                                          430
#define id_eRedcap_Bcast_Information_ProtocolIEs                                                     431
#define id_NRPagingLongeDRXInformationforRRCINACTIVE_ProtocolIEs                                     432
#define id_MBS_AssistanceInformation_ProtocolIEs                                                     433
#define id_QMCCoordinationRequest_ProtocolIEs                                                        434
#define id_QMCCoordinationResponse_ProtocolIEs                                                       435
#define id_QoE_Measurement_Results_ProtocolIEs                                                       436
#define id_MBSCommServiceType_ProtocolIEs                                                            437
#define id_AssistanceInformationQoE_Meas_ProtocolIEs                                                 438
#define id__439_not_to_be_used_ProtocolIEs                                                           439
#define id_QoERVQoEReportingPaths_ProtocolIEs                                                        440
#define id_Src_SN_to_Tgt_SNQMCInfoInquiry_ProtocolIEs                                                441
#define id_DirectForwardingPathAvailabilityWithSourceMN_ProtocolIEs                                  442
#define id_CHO_Maxnoof_CondReconfig_ProtocolIEs                                                      443
#define id_accessed_PSCellID_ProtocolIEs                                                             444
#define id_conditional_Reconfig_ToCancel_List_ProtocolIEs                                            445
#define id_CHOinformation_AddReqAck_ProtocolIEs                                                      446
#define id_CHO_CPAC_Info_ProtocolIEs                                                                 447
#define id_PDUSetQoSParameters_ProtocolIEs                                                           448
#define id_N6JitterInformation_ProtocolIEs                                                           449
#define id_ECNMarkingorCongestionInformationReportingRequest_ProtocolIEs                             450
#define id_PDUSetbasedHandlingIndicator_ProtocolIEs                                                  451
#define id_TAISliceUnavailableCellList_ProtocolIEs                                                   452
#define id_MobileIAB_AuthorizationStatus_ProtocolIEs                                                 453
#define id_MIAB_MT_BAP_Address_ProtocolIEs                                                           454
#define id_MobileIABCell_ProtocolIEs                                                                 455
#define id_sk_Counter_ProtocolIEs                                                                    456
#define id_Source_M_NG_RANnodeID_ProtocolIEs                                                         457
#define id_458_NotToBeUsed_ProtocolIEs                                                               458
#define id_SourceSN_to_TargetSN_QMCInfo_ProtocolIEs                                                  459
#define id_RegistrationRequestForDataCollection_ProtocolIEs                                          460
#define id_ReportCharacteristicsForDataCollection_ProtocolIEs                                        461
#define id_ReportingPeriodicityForDataCollection_ProtocolIEs                                         462
#define id_NodeAssociatedInfoResult_ProtocolIEs                                                      463
#define id_SLPositioning_Ranging_Services_Info_ProtocolIEs                                           464
#define id_XR_Bcast_Information_ProtocolIEs                                                          465
#define id_PDUSessionsListToBeReleased_UPError_ProtocolIEs                                           466
#define id_MaximumDataBurstVolume_ProtocolIEs                                                        467
#define id_CPAC_Preparation_Type_ProtocolIEs                                                         468
#define id_UserPlaneFailureIndication_ProtocolIEs                                                    469
#define id_MN_only_MDT_collection_ProtocolIEs                                                        470
#define id_BarringExemptionforEmerCallInfo_ProtocolIEs                                               471
#define id_Transmission_Bandwidth_asymmetric_ProtocolIEs                                             472
#define id_SRSPositioningConfigOrActivationRequest_ProtocolIEs                                       473
#define id_NRPPaPositioningInformation_ProtocolIEs                                                   474



#define __si_xnap__maxPrivateIEs_const                                                               65535
#define __si_xnap__maxProtocolExtensions_const                                                       65535
#define __si_xnap__maxProtocolIEs_const                                                              65535
#define __si_xnap__maxEARFCN_const                                                                   262143
#define __si_xnap__maxnoofAllowedAreas_const                                                         16
#define __si_xnap__maxnoofAMFRegions_const                                                           16
#define __si_xnap__maxnoofAoIs_const                                                                 64
#define __si_xnap__maxnoofBluetoothName_const                                                        4
#define __si_xnap__maxnoofBPLMNs_const                                                               12
#define __si_xnap__maxnoofCAGs_const                                                                 12
#define __si_xnap__maxnoofCAGsperPLMN_const                                                          256
#define __si_xnap__maxnoofCellIDforMDT_const                                                         32
#define __si_xnap__maxnoofCellsinAoI_const                                                           256
#define __si_xnap__maxnoofCellsinUEHistoryInfo_const                                                 16
#define __si_xnap__maxnoofCellsinNG_RANnode_const                                                    16384
#define __si_xnap__maxnoofCellsinRNA_const                                                           32
#define __si_xnap__maxnoofCellsUEMovingTrajectory_const                                              16
#define __si_xnap__maxnoofDRBs_const                                                                 32
#define __si_xnap__maxnoofEUTRABands_const                                                           16
#define __si_xnap__maxnoofEUTRABPLMNs_const                                                          6
#define __si_xnap__maxnoofEPLMNs_const                                                               15
#define __si_xnap__maxnoofExtSliceItems_const                                                        65535
#define __si_xnap__maxnoofEPLMNsplus1_const                                                          16
#define __si_xnap__maxnoofForbiddenTACs_const                                                        4096
#define __si_xnap__maxnoofFreqforMDT_const                                                           8
#define __si_xnap__maxnoofMBSFNEUTRA_const                                                           8
#define __si_xnap__maxnoofMDTPLMNs_const                                                             16
#define __si_xnap__maxnoofMultiConnectivityMinusOne_const                                            3
#define __si_xnap__maxnoofNeighbours_const                                                           1024
#define __si_xnap__maxnoofNeighPCIforMDT_const                                                       32
#define __si_xnap__maxnoofNIDs_const                                                                 12
#define __si_xnap__maxnoofNRCellBands_const                                                          32
#define __si_xnap__maxnoofPLMNs_const                                                                16
#define __si_xnap__maxnoofPDUSessions_const                                                          256
#define __si_xnap__maxnoofProtectedResourcePatterns_const                                            16
#define __si_xnap__maxnoofQoSFlows_const                                                             64
#define __si_xnap__maxnoofQoSParaSets_const                                                          8
#define __si_xnap__maxnoofRANAreaCodes_const                                                         32
#define __si_xnap__maxnoofRANAreasinRNA_const                                                        16
#define __si_xnap__maxnoofRANNodesinAoI_const                                                        64
#define __si_xnap__maxnoofSCellGroups_const                                                          3
#define __si_xnap__maxnoofSCellGroupsplus1_const                                                     4
#define __si_xnap__maxnoofSensorName_const                                                           3
#define __si_xnap__maxnoofSliceItems_const                                                           1024
#define __si_xnap__maxnoofSNPNIDs_const                                                              12
#define __si_xnap__maxnoofsupportedPLMNs_const                                                       12
#define __si_xnap__maxnoofsupportedTACs_const                                                        256
#define __si_xnap__maxnoofTAforMDT_const                                                             8
#define __si_xnap__maxnoofTAI_const                                                                  16
#define __si_xnap__maxnoofTAIsinAoI_const                                                            16
#define __si_xnap__maxnooftimeperiods_const                                                          2
#define __si_xnap__maxnoofTNLAssociations_const                                                      32
#define __si_xnap__maxnoofUEContexts_const                                                           8192
#define __si_xnap__maxNRARFCN_const                                                                  3279165
#define __si_xnap__maxNrOfErrors_const                                                               256
#define __si_xnap__maxnoofslots_const                                                                5120
#define __si_xnap__maxnoofExtTLAs_const                                                              16
#define __si_xnap__maxnoofGTPTLAs_const                                                              16
#define __si_xnap__maxnoofCHOcells_const                                                             8
#define __si_xnap__maxnoofPC5QoSFlows_const                                                          2064
#define __si_xnap__maxnoofSSBAreas_const                                                             64
#define __si_xnap__maxnoofRAReports_const                                                            64
#define __si_xnap__maxnoofNRSCSs_const                                                               5
#define __si_xnap__maxnoofPhysicalResourceBlocks_const                                               275
#define __si_xnap__maxnoofAdditionalPDCPDuplicationTNL_const                                         2
#define __si_xnap__maxnoofRLCDuplicationstate_const                                                  3
#define __si_xnap__maxnoofWLANName_const                                                             4
#define __si_xnap__maxnoofNonAnchorCarrierFreqConfig_const                                           15
#define __si_xnap__maxnoofDataForwardingTunneltoE_UTRAN_const                                        256
#define __si_xnap__maxnoofMBSFSAs_const                                                              256
#define __si_xnap__maxnoofUEIDIndicesforMBSPaging_const                                              4096
#define __si_xnap__maxnoofMBSQoSFlows_const                                                          64
#define __si_xnap__maxnoofMRBs_const                                                                 32
#define __si_xnap__maxnoofCellsforMBS_const                                                          8192
#define __si_xnap__maxnoofMBSServiceAreaInformation_const                                            256
#define __si_xnap__maxnoofTAIforMBS_const                                                            1024
#define __si_xnap__maxnoofAssociatedMBSSessions_const                                                32
#define __si_xnap__maxnoofMBSSessions_const                                                          256
#define __si_xnap__maxnoofSuccessfulHOReports_const                                                  64
#define __si_xnap__maxnoofPSCellsPerSN_const                                                         8
#define __si_xnap__maxnoofNR_UChannelIDs_const                                                       16
#define __si_xnap__maxnoofCellsinCHO_const                                                           8
#define __si_xnap__maxnoofCHOexecutioncond_const                                                     2
#define __si_xnap__maxnoofServedCellsIAB_const                                                       512
#define __si_xnap__maxnoofServingCells_const                                                         32
#define __si_xnap__maxnoofBHInfo_const                                                               1024
#define __si_xnap__maxnoofTrafficIndexEntries_const                                                  1024
#define __si_xnap__maxnoofTLAsIAB_const                                                              1024
#define __si_xnap__maxnoofBAPControlPDURLCCHs_const                                                  2
#define __si_xnap__maxnoofIABSTCInfo_const                                                           45
#define __si_xnap__maxnoofSymbols_const                                                              14
#define __si_xnap__maxnoofDUFSlots_const                                                             320
#define __si_xnap__maxnoofHSNASlots_const                                                            5120
#define __si_xnap__maxnoofRBsetsPerCell_const                                                        8
#define __si_xnap__maxnoofRBsetsPerCell1_const                                                       7
#define __si_xnap__maxnoofChildIABNodes_const                                                        1024
#define __si_xnap__maxnoofPSCellCandidates_const                                                     8
#define __si_xnap__maxnoofTargetSNs_const                                                            8
#define __si_xnap__maxnoofUEAppLayerMeas_const                                                       16
#define __si_xnap__maxnoofSNSSAIforQMC_const                                                         16
#define __si_xnap__maxnoofCellIDforQMC_const                                                         32
#define __si_xnap__maxnoofPLMNforQMC_const                                                           16
#define __si_xnap__maxnoofTAforQMC_const                                                             8
#define __si_xnap__maxnoofMTCItems_const                                                             16
#define __si_xnap__maxnoofCSIRSconfigurations_const                                                  96
#define __si_xnap__maxnoofCSIRSneighbourCells_const                                                  16
#define __si_xnap__maxnoofCSIRSneighbourCellsInMTC_const                                             16
#define __si_xnap__maxnoofNeighbour_NG_RAN_Nodes_const                                               256
#define __si_xnap__maxnoofSRBs_const                                                                 5
#define __si_xnap__maxnoofSMBR_const                                                                 8
#define __si_xnap__maxnoofNSAGs_const                                                                256
#define __si_xnap__maxnoofTargetSNsMinusOne_const                                                    7
#define __si_xnap__maxnoofThresholdsForExcessPacketDelay_const                                       255
#define __si_xnap__maxnoofESNPNs_const                                                               15
#define __si_xnap__maxnoofSuccessfulPSCellChangeReports_const                                        64
#define __si_xnap__maxnoofUEsforRAReportIndications_const                                            64
#define __si_xnap__maxnoofPSCellsinCPAC_const                                                        8
#define __si_xnap__maxnoofCPACexecutioncond_const                                                    2
#define __si_xnap__maxnoofLBTFailureInformation_const                                                64
#define __si_xnap__maxnoofCellsTrajectoryPredict_const                                               16
#define __si_xnap__maxnoofCellsTrajectory_const                                                      16
#define __si_xnap__maxFailedCellMeasObjects_const                                                    124
#define __si_xnap__maxFailedMeasPerNode_const                                                        124
#define __si_xnap__maxnoofUEReports_const                                                            16
#define __si_xnap__maxnoofCandidateRelayUEs_const                                                    32
#define __si_xnap__maxnoofCAGforMDT_const                                                            256
#define __si_xnap__maxnoofMDTSNPNs_const                                                             16
#define __si_xnap__maxnoofSecurityConfigurations_const                                               8
#define __si_xnap__maxnoofRSPPQoSFlows_const                                                         2048



#define maxPrivateIEs_const                                                                          65535
#define maxProtocolExtensions_const                                                                  65535
#define maxProtocolIEs_const                                                                         65535
#define maxEARFCN_const                                                                              262143
#define maxnoofAllowedAreas_const                                                                    16
#define maxnoofAMFRegions_const                                                                      16
#define maxnoofAoIs_const                                                                            64
#define maxnoofBluetoothName_const                                                                   4
#define maxnoofBPLMNs_const                                                                          12
#define maxnoofCAGs_const                                                                            12
#define maxnoofCAGsperPLMN_const                                                                     256
#define maxnoofCellIDforMDT_const                                                                    32
#define maxnoofCellsinAoI_const                                                                      256
#define maxnoofCellsinUEHistoryInfo_const                                                            16
#define maxnoofCellsinNG_RANnode_const                                                               16384
#define maxnoofCellsinRNA_const                                                                      32
#define maxnoofCellsUEMovingTrajectory_const                                                         16
#define maxnoofDRBs_const                                                                            32
#define maxnoofEUTRABands_const                                                                      16
#define maxnoofEUTRABPLMNs_const                                                                     6
#define maxnoofEPLMNs_const                                                                          15
#define maxnoofExtSliceItems_const                                                                   65535
#define maxnoofEPLMNsplus1_const                                                                     16
#define maxnoofForbiddenTACs_const                                                                   4096
#define maxnoofFreqforMDT_const                                                                      8
#define maxnoofMBSFNEUTRA_const                                                                      8
#define maxnoofMDTPLMNs_const                                                                        16
#define maxnoofMultiConnectivityMinusOne_const                                                       3
#define maxnoofNeighbours_const                                                                      1024
#define maxnoofNeighPCIforMDT_const                                                                  32
#define maxnoofNIDs_const                                                                            12
#define maxnoofNRCellBands_const                                                                     32
#define maxnoofPLMNs_const                                                                           16
#define maxnoofPDUSessions_const                                                                     256
#define maxnoofProtectedResourcePatterns_const                                                       16
#define maxnoofQoSFlows_const                                                                        64
#define maxnoofQoSParaSets_const                                                                     8
#define maxnoofRANAreaCodes_const                                                                    32
#define maxnoofRANAreasinRNA_const                                                                   16
#define maxnoofRANNodesinAoI_const                                                                   64
#define maxnoofSCellGroups_const                                                                     3
#define maxnoofSCellGroupsplus1_const                                                                4
#define maxnoofSensorName_const                                                                      3
#define maxnoofSliceItems_const                                                                      1024
#define maxnoofSNPNIDs_const                                                                         12
#define maxnoofsupportedPLMNs_const                                                                  12
#define maxnoofsupportedTACs_const                                                                   256
#define maxnoofTAforMDT_const                                                                        8
#define maxnoofTAI_const                                                                             16
#define maxnoofTAIsinAoI_const                                                                       16
#define maxnooftimeperiods_const                                                                     2
#define maxnoofTNLAssociations_const                                                                 32
#define maxnoofUEContexts_const                                                                      8192
#define maxNRARFCN_const                                                                             3279165
#define maxNrOfErrors_const                                                                          256
#define maxnoofslots_const                                                                           5120
#define maxnoofExtTLAs_const                                                                         16
#define maxnoofGTPTLAs_const                                                                         16
#define maxnoofCHOcells_const                                                                        8
#define maxnoofPC5QoSFlows_const                                                                     2064
#define maxnoofSSBAreas_const                                                                        64
#define maxnoofRAReports_const                                                                       64
#define maxnoofNRSCSs_const                                                                          5
#define maxnoofPhysicalResourceBlocks_const                                                          275
#define maxnoofAdditionalPDCPDuplicationTNL_const                                                    2
#define maxnoofRLCDuplicationstate_const                                                             3
#define maxnoofWLANName_const                                                                        4
#define maxnoofNonAnchorCarrierFreqConfig_const                                                      15
#define maxnoofDataForwardingTunneltoE_UTRAN_const                                                   256
#define maxnoofMBSFSAs_const                                                                         256
#define maxnoofUEIDIndicesforMBSPaging_const                                                         4096
#define maxnoofMBSQoSFlows_const                                                                     64
#define maxnoofMRBs_const                                                                            32
#define maxnoofCellsforMBS_const                                                                     8192
#define maxnoofMBSServiceAreaInformation_const                                                       256
#define maxnoofTAIforMBS_const                                                                       1024
#define maxnoofAssociatedMBSSessions_const                                                           32
#define maxnoofMBSSessions_const                                                                     256
#define maxnoofSuccessfulHOReports_const                                                             64
#define maxnoofPSCellsPerSN_const                                                                    8
#define maxnoofNR_UChannelIDs_const                                                                  16
#define maxnoofCellsinCHO_const                                                                      8
#define maxnoofCHOexecutioncond_const                                                                2
#define maxnoofServedCellsIAB_const                                                                  512
#define maxnoofServingCells_const                                                                    32
#define maxnoofBHInfo_const                                                                          1024
#define maxnoofTrafficIndexEntries_const                                                             1024
#define maxnoofTLAsIAB_const                                                                         1024
#define maxnoofBAPControlPDURLCCHs_const                                                             2
#define maxnoofIABSTCInfo_const                                                                      45
#define maxnoofSymbols_const                                                                         14
#define maxnoofDUFSlots_const                                                                        320
#define maxnoofHSNASlots_const                                                                       5120
#define maxnoofRBsetsPerCell_const                                                                   8
#define maxnoofRBsetsPerCell1_const                                                                  7
#define maxnoofChildIABNodes_const                                                                   1024
#define maxnoofPSCellCandidates_const                                                                8
#define maxnoofTargetSNs_const                                                                       8
#define maxnoofUEAppLayerMeas_const                                                                  16
#define maxnoofSNSSAIforQMC_const                                                                    16
#define maxnoofCellIDforQMC_const                                                                    32
#define maxnoofPLMNforQMC_const                                                                      16
#define maxnoofTAforQMC_const                                                                        8
#define maxnoofMTCItems_const                                                                        16
#define maxnoofCSIRSconfigurations_const                                                             96
#define maxnoofCSIRSneighbourCells_const                                                             16
#define maxnoofCSIRSneighbourCellsInMTC_const                                                        16
#define maxnoofNeighbour_NG_RAN_Nodes_const                                                          256
#define maxnoofSRBs_const                                                                            5
#define maxnoofSMBR_const                                                                            8
#define maxnoofNSAGs_const                                                                           256
#define maxnoofTargetSNsMinusOne_const                                                               7
#define maxnoofThresholdsForExcessPacketDelay_const                                                  255
#define maxnoofESNPNs_const                                                                          15
#define maxnoofSuccessfulPSCellChangeReports_const                                                   64
#define maxnoofUEsforRAReportIndications_const                                                       64
#define maxnoofPSCellsinCPAC_const                                                                   8
#define maxnoofCPACexecutioncond_const                                                               2
#define maxnoofLBTFailureInformation_const                                                           64
#define maxnoofCellsTrajectoryPredict_const                                                          16
#define maxnoofCellsTrajectory_const                                                                 16
#define maxFailedCellMeasObjects_const                                                               124
#define maxFailedMeasPerNode_const                                                                   124
#define maxnoofUEReports_const                                                                       16
#define maxnoofCandidateRelayUEs_const                                                               32
#define maxnoofCAGforMDT_const                                                                       256
#define maxnoofMDTSNPNs_const                                                                        16
#define maxnoofSecurityConfigurations_const                                                          8
#define maxnoofRSPPQoSFlows_const                                                                    2048



#define __si_xnap__NPNPagingAssistanceInformation_pni_npn_Information_val        0
#define __si_xnap__NPNPagingAssistanceInformation_choice_extension_val           1

#define NPNPagingAssistanceInformation_pni_npn_Information_val                   0
#define NPNPagingAssistanceInformation_choice_extension_val                      1

#define __si_xnap__NPN_Broadcast_Information_snpn_Information_val                0
#define __si_xnap__NPN_Broadcast_Information_pni_npn_Information_val             1
#define __si_xnap__NPN_Broadcast_Information_choice_extension_val                2

#define NPN_Broadcast_Information_snpn_Information_val                           0
#define NPN_Broadcast_Information_pni_npn_Information_val                        1
#define NPN_Broadcast_Information_choice_extension_val                           2

#define __si_xnap__NPN_Support_sNPN_val                                          0
#define __si_xnap__NPN_Support_choice_Extensions_val                             1

#define NPN_Support_sNPN_val                                                     0
#define NPN_Support_choice_Extensions_val                                        1

#define __si_xnap__Full_I_RNTI_Profile_List_full_I_RNTI_Profile_0_val            0
#define __si_xnap__Full_I_RNTI_Profile_List_full_I_RNTI_Profile_1_val            1
#define __si_xnap__Full_I_RNTI_Profile_List_full_I_RNTI_Profile_2_val            2
#define __si_xnap__Full_I_RNTI_Profile_List_full_I_RNTI_Profile_3_val            3
#define __si_xnap__Full_I_RNTI_Profile_List_choice_extension_val                 4

#define Full_I_RNTI_Profile_List_full_I_RNTI_Profile_0_val                       0
#define Full_I_RNTI_Profile_List_full_I_RNTI_Profile_1_val                       1
#define Full_I_RNTI_Profile_List_full_I_RNTI_Profile_2_val                       2
#define Full_I_RNTI_Profile_List_full_I_RNTI_Profile_3_val                       3
#define Full_I_RNTI_Profile_List_choice_extension_val                            4

#define __si_xnap__Short_I_RNTI_Profile_List_short_I_RNTI_Profile_0_val          0
#define __si_xnap__Short_I_RNTI_Profile_List_short_I_RNTI_Profile_1_val          1
#define __si_xnap__Short_I_RNTI_Profile_List_choice_extension_val                2

#define Short_I_RNTI_Profile_List_short_I_RNTI_Profile_0_val                     0
#define Short_I_RNTI_Profile_List_short_I_RNTI_Profile_1_val                     1
#define Short_I_RNTI_Profile_List_choice_extension_val                           2

#define __si_xnap__NPNMobilityInformation_snpn_mobility_information_val          0
#define __si_xnap__NPNMobilityInformation_pni_npn_mobility_information_val       1
#define __si_xnap__NPNMobilityInformation_choice_extension_val                   2

#define NPNMobilityInformation_snpn_mobility_information_val                     0
#define NPNMobilityInformation_pni_npn_mobility_information_val                  1
#define NPNMobilityInformation_choice_extension_val                              2

#define __si_xnap__Cause_radioNetwork_val                                        0
#define __si_xnap__Cause_transport_val                                           1
#define __si_xnap__Cause_protocol_val                                            2
#define __si_xnap__Cause_misc_val                                                3
#define __si_xnap__Cause_choice_extension_val                                    4

#define Cause_radioNetwork_val                                                   0
#define Cause_transport_val                                                      1
#define Cause_protocol_val                                                       2
#define Cause_misc_val                                                           3
#define Cause_choice_extension_val                                               4

#define __si_xnap__UPTransportLayerInformation_gtpTunnel_val                     0
#define __si_xnap__UPTransportLayerInformation_choice_extension_val              1

#define UPTransportLayerInformation_gtpTunnel_val                                0
#define UPTransportLayerInformation_choice_extension_val                         1

#define __si_xnap__ECNMarkingorCongestionInformationReportingRequest_eCNMarkingAtRANRequest_val 0
#define __si_xnap__ECNMarkingorCongestionInformationReportingRequest_eCNMarkingAtUPFRequest_val 1
#define __si_xnap__ECNMarkingorCongestionInformationReportingRequest_congestionInformationRequest_val 2
#define __si_xnap__ECNMarkingorCongestionInformationReportingRequest_choice_Extensions_val 3

#define ECNMarkingorCongestionInformationReportingRequest_eCNMarkingAtRANRequest_val 0
#define ECNMarkingorCongestionInformationReportingRequest_eCNMarkingAtUPFRequest_val 1
#define ECNMarkingorCongestionInformationReportingRequest_congestionInformationRequest_val 2
#define ECNMarkingorCongestionInformationReportingRequest_choice_Extensions_val  3

#define __si_xnap__NPRACHConfiguration_fdd_or_tdd_fdd_val                        0
#define __si_xnap__NPRACHConfiguration_fdd_or_tdd_tdd_val                        1
#define __si_xnap__NPRACHConfiguration_fdd_or_tdd_choice_extension_val           2

#define NPRACHConfiguration_fdd_or_tdd_fdd_val                                   0
#define NPRACHConfiguration_fdd_or_tdd_tdd_val                                   1
#define NPRACHConfiguration_fdd_or_tdd_choice_extension_val                      2

#define __si_xnap__SSB_PositionsInBurst_shortBitmap_val                          0
#define __si_xnap__SSB_PositionsInBurst_mediumBitmap_val                         1
#define __si_xnap__SSB_PositionsInBurst_longBitmap_val                           2
#define __si_xnap__SSB_PositionsInBurst_choice_extension_val                     3

#define SSB_PositionsInBurst_shortBitmap_val                                     0
#define SSB_PositionsInBurst_mediumBitmap_val                                    1
#define SSB_PositionsInBurst_longBitmap_val                                      2
#define SSB_PositionsInBurst_choice_extension_val                                3

#define __si_xnap__ClockQualityDetailLevel_clockQualityMetrics_val               0
#define __si_xnap__ClockQualityDetailLevel_acceptanceIndication_val              1
#define __si_xnap__ClockQualityDetailLevel_choice_extension_val                  2

#define ClockQualityDetailLevel_clockQualityMetrics_val                          0
#define ClockQualityDetailLevel_acceptanceIndication_val                         1
#define ClockQualityDetailLevel_choice_extension_val                             2

#define __si_xnap__AreaScopeOfMDT_NR_cellBased_val                               0
#define __si_xnap__AreaScopeOfMDT_NR_tABased_val                                 1
#define __si_xnap__AreaScopeOfMDT_NR_tAIBased_val                                2
#define __si_xnap__AreaScopeOfMDT_NR_choice_extension_val                        3

#define AreaScopeOfMDT_NR_cellBased_val                                          0
#define AreaScopeOfMDT_NR_tABased_val                                            1
#define AreaScopeOfMDT_NR_tAIBased_val                                           2
#define AreaScopeOfMDT_NR_choice_extension_val                                   3

#define __si_xnap__MeasurementThresholdA2_threshold_RSRP_val                     0
#define __si_xnap__MeasurementThresholdA2_threshold_RSRQ_val                     1
#define __si_xnap__MeasurementThresholdA2_threshold_SINR_val                     2
#define __si_xnap__MeasurementThresholdA2_choice_extension_val                   3

#define MeasurementThresholdA2_threshold_RSRP_val                                0
#define MeasurementThresholdA2_threshold_RSRQ_val                                1
#define MeasurementThresholdA2_threshold_SINR_val                                2
#define MeasurementThresholdA2_choice_extension_val                              3

#define __si_xnap__MeasurementThresholdL1LoggedMDT_threshold_RSRP_val            0
#define __si_xnap__MeasurementThresholdL1LoggedMDT_threshold_RSRQ_val            1
#define __si_xnap__MeasurementThresholdL1LoggedMDT_choice_extension_val          2

#define MeasurementThresholdL1LoggedMDT_threshold_RSRP_val                       0
#define MeasurementThresholdL1LoggedMDT_threshold_RSRQ_val                       1
#define MeasurementThresholdL1LoggedMDT_choice_extension_val                     2

#define __si_xnap__EventTypeTrigger_outOfCoverage_val                            0
#define __si_xnap__EventTypeTrigger_eventL1_val                                  1
#define __si_xnap__EventTypeTrigger_choice_Extensions_val                        2

#define EventTypeTrigger_outOfCoverage_val                                       0
#define EventTypeTrigger_eventL1_val                                             1
#define EventTypeTrigger_choice_Extensions_val                                   2

#define __si_xnap__ReportType_periodical_val                                     0
#define __si_xnap__ReportType_eventTriggered_val                                 1
#define __si_xnap__ReportType_choice_extension_val                               2

#define ReportType_periodical_val                                                0
#define ReportType_eventTriggered_val                                            1
#define ReportType_choice_extension_val                                          2

#define __si_xnap__MDTMode_NR_immediateMDT_val                                   0
#define __si_xnap__MDTMode_NR_loggedMDT_val                                      1
#define __si_xnap__MDTMode_NR_mDTMode_NR_Extension_val                           2

#define MDTMode_NR_immediateMDT_val                                              0
#define MDTMode_NR_loggedMDT_val                                                 1
#define MDTMode_NR_mDTMode_NR_Extension_val                                      2

#define __si_xnap__AreaScopeOfMDT_EUTRA_cellBased_val                            0
#define __si_xnap__AreaScopeOfMDT_EUTRA_tABased_val                              1
#define __si_xnap__AreaScopeOfMDT_EUTRA_tAIBased_val                             2
#define __si_xnap__AreaScopeOfMDT_EUTRA_choice_extension_val                     3

#define AreaScopeOfMDT_EUTRA_cellBased_val                                       0
#define AreaScopeOfMDT_EUTRA_tABased_val                                         1
#define AreaScopeOfMDT_EUTRA_tAIBased_val                                        2
#define AreaScopeOfMDT_EUTRA_choice_extension_val                                3

#define __si_xnap__Target_CGI_nr_val                                             0
#define __si_xnap__Target_CGI_e_utra_val                                         1
#define __si_xnap__Target_CGI_choice_extension_val                               2

#define Target_CGI_nr_val                                                        0
#define Target_CGI_e_utra_val                                                    1
#define Target_CGI_choice_extension_val                                          2

#define __si_xnap__CPTransportLayerInformation_endpointIPAddress_val             0
#define __si_xnap__CPTransportLayerInformation_choice_extension_val              1

#define CPTransportLayerInformation_endpointIPAddress_val                        0
#define CPTransportLayerInformation_choice_extension_val                         1

#define __si_xnap__GNB_ID_Choice_gnb_ID_val                                      0
#define __si_xnap__GNB_ID_Choice_choice_extension_val                            1

#define GNB_ID_Choice_gnb_ID_val                                                 0
#define GNB_ID_Choice_choice_extension_val                                       1

#define __si_xnap__ENB_ID_Choice_enb_ID_macro_val                                0
#define __si_xnap__ENB_ID_Choice_enb_ID_shortmacro_val                           1
#define __si_xnap__ENB_ID_Choice_enb_ID_longmacro_val                            2
#define __si_xnap__ENB_ID_Choice_choice_extension_val                            3

#define ENB_ID_Choice_enb_ID_macro_val                                           0
#define ENB_ID_Choice_enb_ID_shortmacro_val                                      1
#define ENB_ID_Choice_enb_ID_longmacro_val                                       2
#define ENB_ID_Choice_choice_extension_val                                       3

#define __si_xnap__GlobalNG_RANNode_ID_gNB_val                                   0
#define __si_xnap__GlobalNG_RANNode_ID_ng_eNB_val                                1
#define __si_xnap__GlobalNG_RANNode_ID_choice_extension_val                      2

#define GlobalNG_RANNode_ID_gNB_val                                              0
#define GlobalNG_RANNode_ID_ng_eNB_val                                           1
#define GlobalNG_RANNode_ID_choice_extension_val                                 2

#define __si_xnap__UEHistoryInformationFromTheUE_nR_val                          0
#define __si_xnap__UEHistoryInformationFromTheUE_choice_extension_val            1

#define UEHistoryInformationFromTheUE_nR_val                                     0
#define UEHistoryInformationFromTheUE_choice_extension_val                       1

#define __si_xnap__ProcedureStageChoice_first_dl_count_val                       0
#define __si_xnap__ProcedureStageChoice_dl_discarding_val                        1
#define __si_xnap__ProcedureStageChoice_choice_extension_val                     2

#define ProcedureStageChoice_first_dl_count_val                                  0
#define ProcedureStageChoice_dl_discarding_val                                   1
#define ProcedureStageChoice_choice_extension_val                                2

#define __si_xnap__UEIdentityIndexValue_indexLength10_val                        0
#define __si_xnap__UEIdentityIndexValue_choice_extension_val                     1

#define UEIdentityIndexValue_indexLength10_val                                   0
#define UEIdentityIndexValue_choice_extension_val                                1

#define __si_xnap__UERANPagingIdentity_i_RNTI_full_val                           0
#define __si_xnap__UERANPagingIdentity_choice_extension_val                      1

#define UERANPagingIdentity_i_RNTI_full_val                                      0
#define UERANPagingIdentity_choice_extension_val                                 1

#define __si_xnap__RANPagingAreaChoice_cell_List_val                             0
#define __si_xnap__RANPagingAreaChoice_rANAreaID_List_val                        1
#define __si_xnap__RANPagingAreaChoice_choice_extension_val                      2

#define RANPagingAreaChoice_cell_List_val                                        0
#define RANPagingAreaChoice_rANAreaID_List_val                                   1
#define RANPagingAreaChoice_choice_extension_val                                 2

#define __si_xnap__I_RNTI_i_RNTI_full_val                                        0
#define __si_xnap__I_RNTI_i_RNTI_short_val                                       1
#define __si_xnap__I_RNTI_choice_extension_val                                   2

#define I_RNTI_i_RNTI_full_val                                                   0
#define I_RNTI_i_RNTI_short_val                                                  1
#define I_RNTI_choice_extension_val                                              2

#define __si_xnap__NG_RAN_CellPCI_nr_val                                         0
#define __si_xnap__NG_RAN_CellPCI_e_utra_val                                     1
#define __si_xnap__NG_RAN_CellPCI_choice_extension_val                           2

#define NG_RAN_CellPCI_nr_val                                                    0
#define NG_RAN_CellPCI_e_utra_val                                                1
#define NG_RAN_CellPCI_choice_extension_val                                      2

#define __si_xnap__UEContextID_rRCResume_val                                     0
#define __si_xnap__UEContextID_rRRCReestablishment_val                           1
#define __si_xnap__UEContextID_choice_extension_val                              2

#define UEContextID_rRCResume_val                                                0
#define UEContextID_rRRCReestablishment_val                                      1
#define UEContextID_choice_extension_val                                         2

#define __si_xnap__NG_RAN_Cell_Identity_nr_val                                   0
#define __si_xnap__NG_RAN_Cell_Identity_e_utra_val                               1
#define __si_xnap__NG_RAN_Cell_Identity_choice_extension_val                     2

#define NG_RAN_Cell_Identity_nr_val                                              0
#define NG_RAN_Cell_Identity_e_utra_val                                          1
#define NG_RAN_Cell_Identity_choice_extension_val                                2

#define __si_xnap__NG_RAN_Node_ResourceCoordinationInfo_eutra_resource_coordination_info_val 0
#define __si_xnap__NG_RAN_Node_ResourceCoordinationInfo_nr_resource_coordination_info_val 1

#define NG_RAN_Node_ResourceCoordinationInfo_eutra_resource_coordination_info_val 0
#define NG_RAN_Node_ResourceCoordinationInfo_nr_resource_coordination_info_val   1

#define __si_xnap__ResponseType_ReconfComplete_configuration_successfully_applied_val 0
#define __si_xnap__ResponseType_ReconfComplete_configuration_rejected_by_M_NG_RANNode_val 1
#define __si_xnap__ResponseType_ReconfComplete_choice_extension_val              2

#define ResponseType_ReconfComplete_configuration_successfully_applied_val       0
#define ResponseType_ReconfComplete_configuration_rejected_by_M_NG_RANNode_val   1
#define ResponseType_ReconfComplete_choice_extension_val                         2

#define __si_xnap__PDCPChangeIndication_from_S_NG_RAN_node_val                   0
#define __si_xnap__PDCPChangeIndication_from_M_NG_RAN_node_val                   1
#define __si_xnap__PDCPChangeIndication_choice_extension_val                     2

#define PDCPChangeIndication_from_S_NG_RAN_node_val                              0
#define PDCPChangeIndication_from_M_NG_RAN_node_val                              1
#define PDCPChangeIndication_choice_extension_val                                2

#define __si_xnap__CellAssistanceInfo_NR_limitedNR_List_val                      0
#define __si_xnap__CellAssistanceInfo_NR_full_List_val                           1
#define __si_xnap__CellAssistanceInfo_NR_choice_extension_val                    2

#define CellAssistanceInfo_NR_limitedNR_List_val                                 0
#define CellAssistanceInfo_NR_full_List_val                                      1
#define CellAssistanceInfo_NR_choice_extension_val                               2

#define __si_xnap__CellAssistanceInfo_EUTRA_limitedEUTRA_List_val                0
#define __si_xnap__CellAssistanceInfo_EUTRA_full_List_val                        1
#define __si_xnap__CellAssistanceInfo_EUTRA_choice_extension_val                 2

#define CellAssistanceInfo_EUTRA_limitedEUTRA_List_val                           0
#define CellAssistanceInfo_EUTRA_full_List_val                                   1
#define CellAssistanceInfo_EUTRA_choice_extension_val                            2

#define __si_xnap__Local_NG_RAN_Node_Identifier_full_I_RNTI_Profile_List_val     0
#define __si_xnap__Local_NG_RAN_Node_Identifier_short_I_RNTI_Profile_List_val    1
#define __si_xnap__Local_NG_RAN_Node_Identifier_choice_extension_val             2

#define Local_NG_RAN_Node_Identifier_full_I_RNTI_Profile_List_val                0
#define Local_NG_RAN_Node_Identifier_short_I_RNTI_Profile_List_val               1
#define Local_NG_RAN_Node_Identifier_choice_extension_val                        2

#define __si_xnap__ConfigurationUpdateInitiatingNodeChoice_gNB_val               0
#define __si_xnap__ConfigurationUpdateInitiatingNodeChoice_ng_eNB_val            1
#define __si_xnap__ConfigurationUpdateInitiatingNodeChoice_choice_extension_val  2

#define ConfigurationUpdateInitiatingNodeChoice_gNB_val                          0
#define ConfigurationUpdateInitiatingNodeChoice_ng_eNB_val                       1
#define ConfigurationUpdateInitiatingNodeChoice_choice_extension_val             2

#define __si_xnap__RespondingNodeTypeConfigUpdateAck_ng_eNB_val                  0
#define __si_xnap__RespondingNodeTypeConfigUpdateAck_gNB_val                     1
#define __si_xnap__RespondingNodeTypeConfigUpdateAck_choice_extension_val        2

#define RespondingNodeTypeConfigUpdateAck_ng_eNB_val                             0
#define RespondingNodeTypeConfigUpdateAck_gNB_val                                1
#define RespondingNodeTypeConfigUpdateAck_choice_extension_val                   2

#define __si_xnap__SharedResourceType_ULDL_Sharing_UL_Resources_unchanged_val    0
#define __si_xnap__SharedResourceType_ULDL_Sharing_UL_Resources_changed_val      1
#define __si_xnap__SharedResourceType_ULDL_Sharing_UL_Resources_choice_extension_val 2

#define SharedResourceType_ULDL_Sharing_UL_Resources_unchanged_val               0
#define SharedResourceType_ULDL_Sharing_UL_Resources_changed_val                 1
#define SharedResourceType_ULDL_Sharing_UL_Resources_choice_extension_val        2

#define __si_xnap__SharedResourceType_ULDL_Sharing_DL_Resources_unchanged_val    0
#define __si_xnap__SharedResourceType_ULDL_Sharing_DL_Resources_changed_val      1
#define __si_xnap__SharedResourceType_ULDL_Sharing_DL_Resources_choice_extension_val 2

#define SharedResourceType_ULDL_Sharing_DL_Resources_unchanged_val               0
#define SharedResourceType_ULDL_Sharing_DL_Resources_changed_val                 1
#define SharedResourceType_ULDL_Sharing_DL_Resources_choice_extension_val        2

#define __si_xnap__SharedResourceType_ULDL_Sharing_ul_resources_val              0
#define __si_xnap__SharedResourceType_ULDL_Sharing_dl_resources_val              1
#define __si_xnap__SharedResourceType_ULDL_Sharing_choice_extension_val          2

#define SharedResourceType_ULDL_Sharing_ul_resources_val                         0
#define SharedResourceType_ULDL_Sharing_dl_resources_val                         1
#define SharedResourceType_ULDL_Sharing_choice_extension_val                     2

#define __si_xnap__SharedResourceType_ul_onlySharing_val                         0
#define __si_xnap__SharedResourceType_ul_and_dl_Sharing_val                      1
#define __si_xnap__SharedResourceType_choice_extension_val                       2

#define SharedResourceType_ul_onlySharing_val                                    0
#define SharedResourceType_ul_and_dl_Sharing_val                                 1
#define SharedResourceType_choice_extension_val                                  2

#define __si_xnap__InitiatingNodeType_ResourceCoordRequest_ng_eNB_val            0
#define __si_xnap__InitiatingNodeType_ResourceCoordRequest_gNB_val               1
#define __si_xnap__InitiatingNodeType_ResourceCoordRequest_choice_extension_val  2

#define InitiatingNodeType_ResourceCoordRequest_ng_eNB_val                       0
#define InitiatingNodeType_ResourceCoordRequest_gNB_val                          1
#define InitiatingNodeType_ResourceCoordRequest_choice_extension_val             2

#define __si_xnap__RespondingNodeType_ResourceCoordResponse_ng_eNB_val           0
#define __si_xnap__RespondingNodeType_ResourceCoordResponse_gNB_val              1
#define __si_xnap__RespondingNodeType_ResourceCoordResponse_choice_extension_val 2

#define RespondingNodeType_ResourceCoordResponse_ng_eNB_val                      0
#define RespondingNodeType_ResourceCoordResponse_gNB_val                         1
#define RespondingNodeType_ResourceCoordResponse_choice_extension_val            2

#define __si_xnap__ServedCellsToActivate_nr_cells_val                            0
#define __si_xnap__ServedCellsToActivate_e_utra_cells_val                        1
#define __si_xnap__ServedCellsToActivate_choice_extension_val                    2

#define ServedCellsToActivate_nr_cells_val                                       0
#define ServedCellsToActivate_e_utra_cells_val                                   1
#define ServedCellsToActivate_choice_extension_val                               2

#define __si_xnap__ActivatedServedCells_nr_cells_val                             0
#define __si_xnap__ActivatedServedCells_e_utra_cells_val                         1
#define __si_xnap__ActivatedServedCells_choice_extension_val                     2

#define ActivatedServedCells_nr_cells_val                                        0
#define ActivatedServedCells_e_utra_cells_val                                    1
#define ActivatedServedCells_choice_extension_val                                2

#define __si_xnap__ResetRequestTypeInfo_fullReset_val                            0
#define __si_xnap__ResetRequestTypeInfo_partialReset_val                         1
#define __si_xnap__ResetRequestTypeInfo_choice_extension_val                     2

#define ResetRequestTypeInfo_fullReset_val                                       0
#define ResetRequestTypeInfo_partialReset_val                                    1
#define ResetRequestTypeInfo_choice_extension_val                                2

#define __si_xnap__ResetResponseTypeInfo_fullReset_val                           0
#define __si_xnap__ResetResponseTypeInfo_partialReset_val                        1
#define __si_xnap__ResetResponseTypeInfo_choice_extension_val                    2

#define ResetResponseTypeInfo_fullReset_val                                      0
#define ResetResponseTypeInfo_partialReset_val                                   1
#define ResetResponseTypeInfo_choice_extension_val                               2

#define __si_xnap__UERLFReportContainer_nR_UERLFReportContainer_val              0
#define __si_xnap__UERLFReportContainer_lTE_UERLFReportContainer_val             1
#define __si_xnap__UERLFReportContainer_choice_Extension_val                     2

#define UERLFReportContainer_nR_UERLFReportContainer_val                         0
#define UERLFReportContainer_lTE_UERLFReportContainer_val                        1
#define UERLFReportContainer_choice_Extension_val                                2

#define __si_xnap__RRCReestab_Initiated_Reporting_rRCReestab_reporting_wo_UERLFReport_val 0
#define __si_xnap__RRCReestab_Initiated_Reporting_rRCReestab_reporting_with_UERLFReport_val 1
#define __si_xnap__RRCReestab_Initiated_Reporting_choice_extension_val           2

#define RRCReestab_Initiated_Reporting_rRCReestab_reporting_wo_UERLFReport_val   0
#define RRCReestab_Initiated_Reporting_rRCReestab_reporting_with_UERLFReport_val 1
#define RRCReestab_Initiated_Reporting_choice_extension_val                      2

#define __si_xnap__RRCSetup_Initiated_Reporting_rRCSetup_reporting_with_UERLFReport_val 0
#define __si_xnap__RRCSetup_Initiated_Reporting_choice_extension_val             1

#define RRCSetup_Initiated_Reporting_rRCSetup_reporting_with_UERLFReport_val     0
#define RRCSetup_Initiated_Reporting_choice_extension_val                        1

#define __si_xnap__InitiatingCondition_FailureIndication_rRCReestab_val          0
#define __si_xnap__InitiatingCondition_FailureIndication_rRCSetup_val            1
#define __si_xnap__InitiatingCondition_FailureIndication_choice_extension_val    2

#define InitiatingCondition_FailureIndication_rRCReestab_val                     0
#define InitiatingCondition_FailureIndication_rRCSetup_val                       1
#define InitiatingCondition_FailureIndication_choice_extension_val               2

#define __si_xnap__Cell_Type_Choice_ng_ran_e_utra_val                            0
#define __si_xnap__Cell_Type_Choice_ng_ran_nr_val                                1
#define __si_xnap__Cell_Type_Choice_e_utran_val                                  2
#define __si_xnap__Cell_Type_Choice_choice_extension_val                         3

#define Cell_Type_Choice_ng_ran_e_utra_val                                       0
#define Cell_Type_Choice_ng_ran_nr_val                                           1
#define Cell_Type_Choice_e_utran_val                                             2
#define Cell_Type_Choice_choice_extension_val                                    3

#define __si_xnap__TrafficReleaseType_fullRelease_val                            0
#define __si_xnap__TrafficReleaseType_partialRelease_val                         1
#define __si_xnap__TrafficReleaseType_choice_extension_val                       2

#define TrafficReleaseType_fullRelease_val                                       0
#define TrafficReleaseType_partialRelease_val                                    1
#define TrafficReleaseType_choice_extension_val                                  2

#define __si_xnap__IABIPv6RequestType_iPv6Address_val                            0
#define __si_xnap__IABIPv6RequestType_iPv6Prefix_val                             1
#define __si_xnap__IABIPv6RequestType_choice_extension_val                       2

#define IABIPv6RequestType_iPv6Address_val                                       0
#define IABIPv6RequestType_iPv6Prefix_val                                        1
#define IABIPv6RequestType_choice_extension_val                                  2



// L:5377
typedef struct __si_xnap_dt_PrivateIEID_local SI_XNAP_DT_PrivateIEID_local;

// L:5377
typedef struct __si_xnap_dt_NULL SI_XNAP_DT_NULL;
// L:5377
typedef struct __si_xnap_dt_ProcedureCode SI_XNAP_DT_ProcedureCode;
// L:5377
typedef struct __si_xnap_dt_ProtocolIE_ID SI_XNAP_DT_ProtocolIE_ID;

// L:387
typedef struct __si_xnap_dt_A2XPC5QoSParameters SI_XNAP_DT_A2XPC5QoSParameters;
// L:1224
typedef struct __si_xnap_dt_A2XPC5QoSFlowList SI_XNAP_DT_A2XPC5QoSFlowList;
// L:387
typedef struct __si_xnap_dt_A2XPC5QoSFlowItem SI_XNAP_DT_A2XPC5QoSFlowItem;
// L:387
typedef struct __si_xnap_dt_A2XPC5FlowBitRates SI_XNAP_DT_A2XPC5FlowBitRates;
// L:1224
typedef struct __si_xnap_dt_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated SI_XNAP_DT_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated;
// L:387
typedef struct __si_xnap_dt_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item SI_XNAP_DT_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item;
// L:387
typedef struct __si_xnap_dt_AveragePacketDelay SI_XNAP_DT_AveragePacketDelay;
// L:5377
typedef struct __si_xnap_dt_AveragePacketDelayValue SI_XNAP_DT_AveragePacketDelayValue;

// L:1224
typedef struct __si_xnap_dt_Additional_PDCP_Duplication_TNL_List SI_XNAP_DT_Additional_PDCP_Duplication_TNL_List;
// L:387
typedef struct __si_xnap_dt_Additional_PDCP_Duplication_TNL_Item SI_XNAP_DT_Additional_PDCP_Duplication_TNL_Item;
// L:387
typedef struct __si_xnap_dt_Additional_UL_NG_U_TNLatUPF_Item SI_XNAP_DT_Additional_UL_NG_U_TNLatUPF_Item;
// L:1224
typedef struct __si_xnap_dt_Additional_UL_NG_U_TNLatUPF_List SI_XNAP_DT_Additional_UL_NG_U_TNLatUPF_List;
// L:1224
typedef struct __si_xnap_dt_Additional_Measurement_Timing_Configuration_List SI_XNAP_DT_Additional_Measurement_Timing_Configuration_List;
// L:5377
typedef struct __si_xnap_dt_AdditionalMeasurementTimingConfigurationItem_additionalMeasurementTimingConfigurationIndex SI_XNAP_DT_AdditionalMeasurementTimingConfigurationItem_additionalMeasurementTimingConfigurationIndex;
// L:387
typedef struct __si_xnap_dt_Additional_Measurement_Timing_Configuration_Item SI_XNAP_DT_Additional_Measurement_Timing_Configuration_Item;
// L:5377
typedef struct __si_xnap_dt_ActivationIDforCellActivation SI_XNAP_DT_ActivationIDforCellActivation;
// L:387
typedef struct __si_xnap_dt_Active_MBS_SessionInformation SI_XNAP_DT_Active_MBS_SessionInformation;
// L:387
typedef struct __si_xnap_dt_DataCollectionID SI_XNAP_DT_DataCollectionID;



// L:5377
typedef struct __si_xnap_dt_AllocationandRetentionPriority_priorityLevel SI_XNAP_DT_AllocationandRetentionPriority_priorityLevel;


// L:387
typedef struct __si_xnap_dt_AllocationandRetentionPriority SI_XNAP_DT_AllocationandRetentionPriority;
// L:5377
typedef struct __si_xnap_dt_ActivationSFN SI_XNAP_DT_ActivationSFN;
// L:1224
typedef struct __si_xnap_dt_AllowedCAG_ID_List_perPLMN SI_XNAP_DT_AllowedCAG_ID_List_perPLMN;
// L:1224
typedef struct __si_xnap_dt_AllowedPNI_NPN_ID_List SI_XNAP_DT_AllowedPNI_NPN_ID_List;
// L:387
typedef struct __si_xnap_dt_AllowedPNI_NPN_ID_Item SI_XNAP_DT_AllowedPNI_NPN_ID_Item;

// L:1224
typedef struct __si_xnap_dt_AlternativeQoSParaSetList SI_XNAP_DT_AlternativeQoSParaSetList;
// L:387
typedef struct __si_xnap_dt_AlternativeQoSParaSetItem SI_XNAP_DT_AlternativeQoSParaSetItem;
// L:1224
typedef struct __si_xnap_dt_AMF_Region_Information SI_XNAP_DT_AMF_Region_Information;
// L:4921
typedef struct __si_xnap_dt_GlobalAMFRegionInformation_amf_region_id SI_XNAP_DT_GlobalAMFRegionInformation_amf_region_id;
// L:387
typedef struct __si_xnap_dt_GlobalAMF_Region_Information SI_XNAP_DT_GlobalAMF_Region_Information;
// L:5377
typedef struct __si_xnap_dt_AMF_UE_NGAP_ID SI_XNAP_DT_AMF_UE_NGAP_ID;
// L:1224
typedef struct __si_xnap_dt_AreaOfInterestInformation SI_XNAP_DT_AreaOfInterestInformation;
// L:387
typedef struct __si_xnap_dt_AreaOfInterest_Item SI_XNAP_DT_AreaOfInterest_Item;


// L:1224
typedef struct __si_xnap_dt_AreaScopeOfNeighCellsList SI_XNAP_DT_AreaScopeOfNeighCellsList;
// L:387
typedef struct __si_xnap_dt_AreaScopeOfNeighCellsItem SI_XNAP_DT_AreaScopeOfNeighCellsItem;

// L:4921
typedef struct __si_xnap_dt_ASSecurityInformation_key_NG_RAN_Star SI_XNAP_DT_ASSecurityInformation_key_NG_RAN_Star;
// L:5377
typedef struct __si_xnap_dt_ASSecurityInformation_ncc SI_XNAP_DT_ASSecurityInformation_ncc;
// L:387
typedef struct __si_xnap_dt_AS_SecurityInformation SI_XNAP_DT_AS_SecurityInformation;
// L:387
typedef struct __si_xnap_dt_AssistanceDataForRANPaging SI_XNAP_DT_AssistanceDataForRANPaging;
// L:5377
typedef struct __si_xnap_dt_AssistanceInformationQoE_Meas SI_XNAP_DT_AssistanceInformationQoE_Meas;
// L:1224
typedef struct __si_xnap_dt_Associated_QoSFlowInfo_List SI_XNAP_DT_Associated_QoSFlowInfo_List;
// L:387
typedef struct __si_xnap_dt_Associated_QoSFlowInfo_Item SI_XNAP_DT_Associated_QoSFlowInfo_Item;
// L:5377
typedef struct __si_xnap_dt_AvailableCapacity SI_XNAP_DT_AvailableCapacity;
// L:5377
typedef struct __si_xnap_dt_AvailableRRCConnectionCapacityValue SI_XNAP_DT_AvailableRRCConnectionCapacityValue;


// L:387
typedef struct __si_xnap_dt_AvailableRVQoEMetrics SI_XNAP_DT_AvailableRVQoEMetrics;
// L:5377
typedef struct __si_xnap_dt_AveragingWindow SI_XNAP_DT_AveragingWindow;
// L:4921
typedef struct __si_xnap_dt_BAPAddress SI_XNAP_DT_BAPAddress;
// L:4921
typedef struct __si_xnap_dt_BAPPathID SI_XNAP_DT_BAPPathID;
// L:387
typedef struct __si_xnap_dt_BAPRoutingID SI_XNAP_DT_BAPRoutingID;

// L:387
typedef struct __si_xnap_dt_BeamMeasurementsReportConfiguration SI_XNAP_DT_BeamMeasurementsReportConfiguration;



// L:387
typedef struct __si_xnap_dt_BeamMeasurementsReportQuantity SI_XNAP_DT_BeamMeasurementsReportQuantity;
// L:5377
typedef struct __si_xnap_dt_BHInfoIndex SI_XNAP_DT_BHInfoIndex;
// L:1224
typedef struct __si_xnap_dt_BHInfoList SI_XNAP_DT_BHInfoList;
// L:387
typedef struct __si_xnap_dt_BHInfo_Item SI_XNAP_DT_BHInfo_Item;
// L:4921
typedef struct __si_xnap_dt_BHRLCChannelID SI_XNAP_DT_BHRLCChannelID;
// L:1224
typedef struct __si_xnap_dt_BAPControlPDURLCCH_List SI_XNAP_DT_BAPControlPDURLCCH_List;
// L:387
typedef struct __si_xnap_dt_BAPControlPDURLCCH_Item SI_XNAP_DT_BAPControlPDURLCCH_Item;


// L:387
typedef struct __si_xnap_dt_BluetoothMeasurementConfiguration SI_XNAP_DT_BluetoothMeasurementConfiguration;
// L:1224
typedef struct __si_xnap_dt_BluetoothMeasConfigNameList SI_XNAP_DT_BluetoothMeasConfigNameList;

// L:4446
typedef struct __si_xnap_dt_BluetoothName SI_XNAP_DT_BluetoothName;
// L:1224
typedef struct __si_xnap_dt_BPLMN_ID_Info_EUTRA SI_XNAP_DT_BPLMN_ID_Info_EUTRA;
// L:387
typedef struct __si_xnap_dt_BPLMN_ID_Info_EUTRA_Item SI_XNAP_DT_BPLMN_ID_Info_EUTRA_Item;
// L:1224
typedef struct __si_xnap_dt_BPLMN_ID_Info_NR SI_XNAP_DT_BPLMN_ID_Info_NR;
// L:387
typedef struct __si_xnap_dt_BPLMN_ID_Info_NR_Item SI_XNAP_DT_BPLMN_ID_Info_NR_Item;
// L:5377
typedef struct __si_xnap_dt_BitRate SI_XNAP_DT_BitRate;
// L:1224
typedef struct __si_xnap_dt_BroadcastCAG_Identifier_List SI_XNAP_DT_BroadcastCAG_Identifier_List;
// L:387
typedef struct __si_xnap_dt_BroadcastCAG_Identifier_Item SI_XNAP_DT_BroadcastCAG_Identifier_Item;
// L:1224
typedef struct __si_xnap_dt_BroadcastNID_List SI_XNAP_DT_BroadcastNID_List;
// L:387
typedef struct __si_xnap_dt_BroadcastNID_Item SI_XNAP_DT_BroadcastNID_Item;
// L:1224
typedef struct __si_xnap_dt_BroadcastPLMNs SI_XNAP_DT_BroadcastPLMNs;
// L:1224
typedef struct __si_xnap_dt_BroadcastEUTRAPLMNs SI_XNAP_DT_BroadcastEUTRAPLMNs;
// L:387
typedef struct __si_xnap_dt_BroadcastPLMNinTAISupport_Item SI_XNAP_DT_BroadcastPLMNinTAISupport_Item;
// L:1224
typedef struct __si_xnap_dt_BroadcastPNI_NPN_ID_Information SI_XNAP_DT_BroadcastPNI_NPN_ID_Information;
// L:387
typedef struct __si_xnap_dt_BroadcastPNI_NPN_ID_Information_Item SI_XNAP_DT_BroadcastPNI_NPN_ID_Information_Item;
// L:1224
typedef struct __si_xnap_dt_BroadcastSNPNID_List SI_XNAP_DT_BroadcastSNPNID_List;
// L:387
typedef struct __si_xnap_dt_BroadcastSNPNID SI_XNAP_DT_BroadcastSNPNID;
// L:4921
typedef struct __si_xnap_dt_CAG_Identifier SI_XNAP_DT_CAG_Identifier;
// L:1224
typedef struct __si_xnap_dt_CandidateRelayUEInfoList SI_XNAP_DT_CandidateRelayUEInfoList;
// L:4921
typedef struct __si_xnap_dt_CandidateRelayUEInfoItem_candidateRelayUEID SI_XNAP_DT_CandidateRelayUEInfoItem_candidateRelayUEID;
// L:387
typedef struct __si_xnap_dt_CandidateRelayUEInfoItem SI_XNAP_DT_CandidateRelayUEInfoItem;
// L:5377
typedef struct __si_xnap_dt_CapacityValue SI_XNAP_DT_CapacityValue;
// L:387
typedef struct __si_xnap_dt_CapacityValueInfo SI_XNAP_DT_CapacityValueInfo;





// L:1224
typedef struct __si_xnap_dt_CellAssistanceInfoNR_limitedNR_List SI_XNAP_DT_CellAssistanceInfoNR_limitedNR_List;


// L:387
typedef struct __si_xnap_dt_CellAndCapacityAssistanceInfo_NR SI_XNAP_DT_CellAndCapacityAssistanceInfo_NR;
// L:387
typedef struct __si_xnap_dt_CellAndCapacityAssistanceInfo_EUTRA SI_XNAP_DT_CellAndCapacityAssistanceInfo_EUTRA;
// L:1224
typedef struct __si_xnap_dt_CellAssistanceInfoEUTRA_limitedEUTRA_List SI_XNAP_DT_CellAssistanceInfoEUTRA_limitedEUTRA_List;


// L:387
typedef struct __si_xnap_dt_CellBasedMDT_NR SI_XNAP_DT_CellBasedMDT_NR;
// L:1224
typedef struct __si_xnap_dt_CellIdListforMDT_NR SI_XNAP_DT_CellIdListforMDT_NR;
// L:387
typedef struct __si_xnap_dt_CellBasedQMC SI_XNAP_DT_CellBasedQMC;
// L:1224
typedef struct __si_xnap_dt_CellIdListforQMC SI_XNAP_DT_CellIdListforQMC;
// L:387
typedef struct __si_xnap_dt_CellBasedMDT_EUTRA SI_XNAP_DT_CellBasedMDT_EUTRA;
// L:1224
typedef struct __si_xnap_dt_CellIdListforMDT_EUTRA SI_XNAP_DT_CellIdListforMDT_EUTRA;
// L:5377
typedef struct __si_xnap_dt_CellCapacityClassValue SI_XNAP_DT_CellCapacityClassValue;

// L:5377
typedef struct __si_xnap_dt_CellGroupID SI_XNAP_DT_CellGroupID;
// L:1224
typedef struct __si_xnap_dt_CellMeasurementResult SI_XNAP_DT_CellMeasurementResult;
// L:387
typedef struct __si_xnap_dt_CellMeasurementResult_Item SI_XNAP_DT_CellMeasurementResult_Item;
// L:387
typedef struct __si_xnap_dt_CellReplacingInfo SI_XNAP_DT_CellReplacingInfo;
// L:1224
typedef struct __si_xnap_dt_CellToReport SI_XNAP_DT_CellToReport;
// L:387
typedef struct __si_xnap_dt_CellToReport_Item SI_XNAP_DT_CellToReport_Item;
// L:1224
typedef struct __si_xnap_dt_CellToReportForDataCollection_List SI_XNAP_DT_CellToReportForDataCollection_List;
// L:387
typedef struct __si_xnap_dt_CellToReportForDataCollection_Item SI_XNAP_DT_CellToReportForDataCollection_Item;
// L:1224
typedef struct __si_xnap_dt_CellBasedUETrajectoryPrediction SI_XNAP_DT_CellBasedUETrajectoryPrediction;
// L:1224
typedef struct __si_xnap_dt_CellMeasurementInitiationResult_List SI_XNAP_DT_CellMeasurementInitiationResult_List;
// L:387
typedef struct __si_xnap_dt_CellMeasurementInitiationResult_Item SI_XNAP_DT_CellMeasurementInitiationResult_Item;
// L:1224
typedef struct __si_xnap_dt_CellMeasurementResultForDataCollection_List SI_XNAP_DT_CellMeasurementResultForDataCollection_List;
// L:387
typedef struct __si_xnap_dt_CellInfoResultForDataCollection_Item SI_XNAP_DT_CellInfoResultForDataCollection_Item;

// L:1224
typedef struct __si_xnap_dt_CellMeasurementFailureCause_List SI_XNAP_DT_CellMeasurementFailureCause_List;
// L:4921
typedef struct __si_xnap_dt_CellMeasurementFailureCauseItem_cellmeasurementFailedReportCharacteristics SI_XNAP_DT_CellMeasurementFailureCauseItem_cellmeasurementFailedReportCharacteristics;
// L:387
typedef struct __si_xnap_dt_CellMeasurementFailureCause_Item SI_XNAP_DT_CellMeasurementFailureCause_Item;
// L:387
typedef struct __si_xnap_dt_CHOConfiguration SI_XNAP_DT_CHOConfiguration;
// L:1224
typedef struct __si_xnap_dt_CHOCandidateCell_List SI_XNAP_DT_CHOCandidateCell_List;
// L:387
typedef struct __si_xnap_dt_CHOCandidateCell_Item SI_XNAP_DT_CHOCandidateCell_Item;
// L:1224
typedef struct __si_xnap_dt_CHOExecutionCondition_List SI_XNAP_DT_CHOExecutionCondition_List;
// L:387
typedef struct __si_xnap_dt_CHOExecutionCondition_Item SI_XNAP_DT_CHOExecutionCondition_Item;
// L:4921
typedef struct __si_xnap_dt_ClockQualityAcceptanceCriteria_synchronisationState SI_XNAP_DT_ClockQualityAcceptanceCriteria_synchronisationState;


// L:4921
typedef struct __si_xnap_dt_ClockQualityAcceptanceCriteria_clockFrequencyStability SI_XNAP_DT_ClockQualityAcceptanceCriteria_clockFrequencyStability;
// L:5377
typedef struct __si_xnap_dt_ClockQualityAcceptanceCriteria_clockAccuracy SI_XNAP_DT_ClockQualityAcceptanceCriteria_clockAccuracy;
// L:4921
typedef struct __si_xnap_dt_ClockQualityAcceptanceCriteria_parentTimeSource SI_XNAP_DT_ClockQualityAcceptanceCriteria_parentTimeSource;
// L:387
typedef struct __si_xnap_dt_ClockQualityAcceptanceCriteria SI_XNAP_DT_ClockQualityAcceptanceCriteria;
// L:387
typedef struct __si_xnap_dt_ClockQualityReportingControlInfo SI_XNAP_DT_ClockQualityReportingControlInfo;


// L:387
typedef struct __si_xnap_dt_CompositeAvailableCapacityGroup SI_XNAP_DT_CompositeAvailableCapacityGroup;
// L:387
typedef struct __si_xnap_dt_CompositeAvailableCapacity SI_XNAP_DT_CompositeAvailableCapacity;
// L:5377
typedef struct __si_xnap_dt_ControlPlaneTrafficType SI_XNAP_DT_ControlPlaneTrafficType;



// L:387
typedef struct __si_xnap_dt_CHOinformation_Req SI_XNAP_DT_CHOinformation_Req;
// L:387
typedef struct __si_xnap_dt_CHOTimeBasedInformation SI_XNAP_DT_CHOTimeBasedInformation;
// L:387
typedef struct __si_xnap_dt_CHOinformation_Ack SI_XNAP_DT_CHOinformation_Ack;
// L:387
typedef struct __si_xnap_dt_CHOinformation_AddReq SI_XNAP_DT_CHOinformation_AddReq;
// L:387
typedef struct __si_xnap_dt_CHOinformation_AddReqAck SI_XNAP_DT_CHOinformation_AddReqAck;

// L:387
typedef struct __si_xnap_dt_CHOinformation_ModReq SI_XNAP_DT_CHOinformation_ModReq;
// L:5377
typedef struct __si_xnap_dt_CHO_Maxnoof_CondReconfig SI_XNAP_DT_CHO_Maxnoof_CondReconfig;
// L:387
typedef struct __si_xnap_dt_CHO_CPAC_Information SI_XNAP_DT_CHO_CPAC_Information;

// L:5377
typedef struct __si_xnap_dt_CHO_Probability SI_XNAP_DT_CHO_Probability;
// L:5377
typedef struct __si_xnap_dt_CHO_HandoverWindowStart SI_XNAP_DT_CHO_HandoverWindowStart;
// L:5377
typedef struct __si_xnap_dt_CHO_HandoverWindowDuration SI_XNAP_DT_CHO_HandoverWindowDuration;
// L:1224
typedef struct __si_xnap_dt_CHO_target_SN_node_list SI_XNAP_DT_CHO_target_SN_node_list;
// L:387
typedef struct __si_xnap_dt_CHO_target_SN_node_Item SI_XNAP_DT_CHO_target_SN_node_Item;
// L:1224
typedef struct __si_xnap_dt_CHO_Candidate_PSCells_list SI_XNAP_DT_CHO_Candidate_PSCells_list;
// L:4446
typedef struct __si_xnap_dt_CHOCandidatePSCellsItem_target2source_NG_RANNode_Container SI_XNAP_DT_CHOCandidatePSCellsItem_target2source_NG_RANNode_Container;
// L:387
typedef struct __si_xnap_dt_CHO_Candidate_PSCells_Item SI_XNAP_DT_CHO_Candidate_PSCells_Item;
// L:5377
typedef struct __si_xnap_dt_CNsubgroupID SI_XNAP_DT_CNsubgroupID;

// L:1224
typedef struct __si_xnap_dt_Conditional_Reconfig_List SI_XNAP_DT_Conditional_Reconfig_List;
// L:387
typedef struct __si_xnap_dt_Conditional_Reconfig_Item SI_XNAP_DT_Conditional_Reconfig_Item;


// L:387
typedef struct __si_xnap_dt_Connectivity_Support SI_XNAP_DT_Connectivity_Support;
// L:4446
typedef struct __si_xnap_dt_ContainerAppLayerMeasConfig SI_XNAP_DT_ContainerAppLayerMeasConfig;
// L:5377
typedef struct __si_xnap_dt_COUNTPDCPSN12_pdcp_SN12 SI_XNAP_DT_COUNTPDCPSN12_pdcp_SN12;
// L:5377
typedef struct __si_xnap_dt_COUNTPDCPSN12_hfn_PDCP_SN12 SI_XNAP_DT_COUNTPDCPSN12_hfn_PDCP_SN12;
// L:387
typedef struct __si_xnap_dt_COUNT_PDCP_SN12 SI_XNAP_DT_COUNT_PDCP_SN12;
// L:5377
typedef struct __si_xnap_dt_COUNTPDCPSN18_pdcp_SN18 SI_XNAP_DT_COUNTPDCPSN18_pdcp_SN18;
// L:5377
typedef struct __si_xnap_dt_COUNTPDCPSN18_hfn_PDCP_SN18 SI_XNAP_DT_COUNTPDCPSN18_hfn_PDCP_SN18;
// L:387
typedef struct __si_xnap_dt_COUNT_PDCP_SN18 SI_XNAP_DT_COUNT_PDCP_SN18;

// L:1224
typedef struct __si_xnap_dt_Coverage_Modification_List SI_XNAP_DT_Coverage_Modification_List;
// L:5377
typedef struct __si_xnap_dt_CoverageModificationListItem_cellCoverageState SI_XNAP_DT_CoverageModificationListItem_cellCoverageState;
// L:387
typedef struct __si_xnap_dt_Coverage_Modification_List_Item SI_XNAP_DT_Coverage_Modification_List_Item;

// L:1224
typedef struct __si_xnap_dt_CPACcandidatePSCells_list SI_XNAP_DT_CPACcandidatePSCells_list;
// L:387
typedef struct __si_xnap_dt_CPACcandidatePSCells_item SI_XNAP_DT_CPACcandidatePSCells_item;
// L:1224
typedef struct __si_xnap_dt_CPACcandidatePSCells_wotherInfo_list SI_XNAP_DT_CPACcandidatePSCells_wotherInfo_list;
// L:387
typedef struct __si_xnap_dt_CPACcandidatePSCells_wotherInfo_item SI_XNAP_DT_CPACcandidatePSCells_wotherInfo_item;
// L:387
typedef struct __si_xnap_dt_CPACConfiguration SI_XNAP_DT_CPACConfiguration;
// L:1224
typedef struct __si_xnap_dt_CPACCandidateCell_List SI_XNAP_DT_CPACCandidateCell_List;
// L:387
typedef struct __si_xnap_dt_CPACCandidateCell_Item SI_XNAP_DT_CPACCandidateCell_Item;
// L:1224
typedef struct __si_xnap_dt_CPACExecutionCondition_List SI_XNAP_DT_CPACExecutionCondition_List;
// L:387
typedef struct __si_xnap_dt_CPACExecutionCondition_Item SI_XNAP_DT_CPACExecutionCondition_Item;

// L:5377
typedef struct __si_xnap_dt_CPAInformationRequest_max_no_of_pscells SI_XNAP_DT_CPAInformationRequest_max_no_of_pscells;
// L:387
typedef struct __si_xnap_dt_CPAInformationRequest SI_XNAP_DT_CPAInformationRequest;
// L:387
typedef struct __si_xnap_dt_CPAInformationAck SI_XNAP_DT_CPAInformationAck;
// L:387
typedef struct __si_xnap_dt_CPCInformationRequired SI_XNAP_DT_CPCInformationRequired;
// L:1224
typedef struct __si_xnap_dt_CPC_target_SN_required_list SI_XNAP_DT_CPC_target_SN_required_list;
// L:5377
typedef struct __si_xnap_dt_CPCtargetSNrequiredlistItem_max_no_of_pscells SI_XNAP_DT_CPCtargetSNrequiredlistItem_max_no_of_pscells;
// L:4446
typedef struct __si_xnap_dt_CPCtargetSNrequiredlistItem_sN_to_MN_Container SI_XNAP_DT_CPCtargetSNrequiredlistItem_sN_to_MN_Container;
// L:387
typedef struct __si_xnap_dt_CPC_target_SN_required_list_Item SI_XNAP_DT_CPC_target_SN_required_list_Item;
// L:387
typedef struct __si_xnap_dt_CPCInformationConfirm SI_XNAP_DT_CPCInformationConfirm;
// L:1224
typedef struct __si_xnap_dt_CPC_target_SN_confirm_list SI_XNAP_DT_CPC_target_SN_confirm_list;
// L:387
typedef struct __si_xnap_dt_CPC_target_SN_confirm_list_Item SI_XNAP_DT_CPC_target_SN_confirm_list_Item;
// L:5377
typedef struct __si_xnap_dt_CPAInformationModReq_max_no_of_pscells SI_XNAP_DT_CPAInformationModReq_max_no_of_pscells;
// L:387
typedef struct __si_xnap_dt_CPAInformationModReq SI_XNAP_DT_CPAInformationModReq;
// L:387
typedef struct __si_xnap_dt_CPAInformationModReqAck SI_XNAP_DT_CPAInformationModReqAck;


// L:387
typedef struct __si_xnap_dt_CPACInformationModRequired SI_XNAP_DT_CPACInformationModRequired;
// L:387
typedef struct __si_xnap_dt_CPCInformationUpdate SI_XNAP_DT_CPCInformationUpdate;
// L:1224
typedef struct __si_xnap_dt_CPC_target_SN_mod_list SI_XNAP_DT_CPC_target_SN_mod_list;
// L:387
typedef struct __si_xnap_dt_CPC_target_SN_mod_item SI_XNAP_DT_CPC_target_SN_mod_item;
// L:1224
typedef struct __si_xnap_dt_CPCInformationUpdatePSCells_list SI_XNAP_DT_CPCInformationUpdatePSCells_list;
// L:387
typedef struct __si_xnap_dt_CPCInformationUpdatePSCells_item SI_XNAP_DT_CPCInformationUpdatePSCells_item;
// L:387
typedef struct __si_xnap_dt_CriticalityDiagnostics SI_XNAP_DT_CriticalityDiagnostics;
// L:387
typedef struct __si_xnap_dt_CriticalityDiagnostics_IE_List_def_2106595569 SI_XNAP_DT_CriticalityDiagnostics_IE_List_def_2106595569;
// L:1224
typedef struct __si_xnap_dt_CriticalityDiagnostics_IE_List SI_XNAP_DT_CriticalityDiagnostics_IE_List;
// L:4921
typedef struct __si_xnap_dt_C_RNTI SI_XNAP_DT_C_RNTI;
// L:1224
typedef struct __si_xnap_dt_CSI_RS_MTC_Configuration_List SI_XNAP_DT_CSI_RS_MTC_Configuration_List;
// L:5377
typedef struct __si_xnap_dt_CSIRSMTCConfigurationItem_csi_RS_Index SI_XNAP_DT_CSIRSMTCConfigurationItem_csi_RS_Index;

// L:387
typedef struct __si_xnap_dt_CSI_RS_MTC_Configuration_Item SI_XNAP_DT_CSI_RS_MTC_Configuration_Item;
// L:1224
typedef struct __si_xnap_dt_CSI_RS_Neighbour_List SI_XNAP_DT_CSI_RS_Neighbour_List;
// L:387
typedef struct __si_xnap_dt_CSI_RS_Neighbour_Item SI_XNAP_DT_CSI_RS_Neighbour_Item;
// L:1224
typedef struct __si_xnap_dt_CSI_RS_MTC_Neighbour_List SI_XNAP_DT_CSI_RS_MTC_Neighbour_List;
// L:5377
typedef struct __si_xnap_dt_CSIRSMTCNeighbourItem_csi_RS_Index SI_XNAP_DT_CSIRSMTCNeighbourItem_csi_RS_Index;
// L:387
typedef struct __si_xnap_dt_CSI_RS_MTC_Neighbour_Item SI_XNAP_DT_CSI_RS_MTC_Neighbour_Item;



// L:1224
typedef struct __si_xnap_dt_CAGListforMDT SI_XNAP_DT_CAGListforMDT;
// L:387
typedef struct __si_xnap_dt_CAGListforMDTItem SI_XNAP_DT_CAGListforMDTItem;
// L:1224
typedef struct __si_xnap_dt_XnUAddressInfoperPDUSession_List SI_XNAP_DT_XnUAddressInfoperPDUSession_List;
// L:387
typedef struct __si_xnap_dt_XnUAddressInfoperPDUSession_Item SI_XNAP_DT_XnUAddressInfoperPDUSession_Item;
// L:387
typedef struct __si_xnap_dt_DataForwardingInfoFromTargetE_UTRANnode SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode;
// L:1224
typedef struct __si_xnap_dt_DataForwardingInfoFromTargetE_UTRANnode_List SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode_List;
// L:387
typedef struct __si_xnap_dt_DataForwardingInfoFromTargetE_UTRANnode_Item SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode_Item;
// L:1224
typedef struct __si_xnap_dt_QoSFlowsToBeForwarded_List SI_XNAP_DT_QoSFlowsToBeForwarded_List;
// L:387
typedef struct __si_xnap_dt_QoSFlowsToBeForwarded_Item SI_XNAP_DT_QoSFlowsToBeForwarded_Item;
// L:387
typedef struct __si_xnap_dt_DataForwardingInfoFromTargetNGRANnode SI_XNAP_DT_DataForwardingInfoFromTargetNGRANnode;
// L:1224
typedef struct __si_xnap_dt_QoSFLowsAcceptedToBeForwarded_List SI_XNAP_DT_QoSFLowsAcceptedToBeForwarded_List;
// L:387
typedef struct __si_xnap_dt_QoSFLowsAcceptedToBeForwarded_Item SI_XNAP_DT_QoSFLowsAcceptedToBeForwarded_Item;
// L:387
typedef struct __si_xnap_dt_DataforwardingandOffloadingInfofromSource SI_XNAP_DT_DataforwardingandOffloadingInfofromSource;
// L:1224
typedef struct __si_xnap_dt_QoSFLowsToBeForwarded_List SI_XNAP_DT_QoSFLowsToBeForwarded_List;
// L:387
typedef struct __si_xnap_dt_QoSFLowsToBeForwarded_Item SI_XNAP_DT_QoSFLowsToBeForwarded_Item;
// L:1224
typedef struct __si_xnap_dt_DataForwardingResponseDRBItemList SI_XNAP_DT_DataForwardingResponseDRBItemList;
// L:387
typedef struct __si_xnap_dt_DataForwardingResponseDRBItem SI_XNAP_DT_DataForwardingResponseDRBItem;
// L:4921
typedef struct __si_xnap_dt_DataTrafficResources SI_XNAP_DT_DataTrafficResources;
// L:387
typedef struct __si_xnap_dt_DataTrafficResourceIndication SI_XNAP_DT_DataTrafficResourceIndication;

// L:387
typedef struct __si_xnap_dt_DAPSRequestInfo SI_XNAP_DT_DAPSRequestInfo;
// L:1224
typedef struct __si_xnap_dt_DAPSResponseInfo_List SI_XNAP_DT_DAPSResponseInfo_List;

// L:387
typedef struct __si_xnap_dt_DAPSResponseInfo_Item SI_XNAP_DT_DAPSResponseInfo_Item;
// L:5377
typedef struct __si_xnap_dt_DeliveryStatus SI_XNAP_DT_DeliveryStatus;






// L:5377
typedef struct __si_xnap_dt_DL_GBR_PRB_usage SI_XNAP_DT_DL_GBR_PRB_usage;
// L:5377
typedef struct __si_xnap_dt_DL_GBR_PRB_usage_for_MIMO SI_XNAP_DT_DL_GBR_PRB_usage_for_MIMO;
// L:5377
typedef struct __si_xnap_dt_DL_non_GBR_PRB_usage SI_XNAP_DT_DL_non_GBR_PRB_usage;
// L:5377
typedef struct __si_xnap_dt_DL_non_GBR_PRB_usage_for_MIMO SI_XNAP_DT_DL_non_GBR_PRB_usage_for_MIMO;
// L:387
typedef struct __si_xnap_dt_DLF1Terminating_BHInfo SI_XNAP_DT_DLF1Terminating_BHInfo;

// L:1224
typedef struct __si_xnap_dt_DLLBTFailureInformationList SI_XNAP_DT_DLLBTFailureInformationList;
// L:5377
typedef struct __si_xnap_dt_DLLBTFailureInformationListItem_numberOfDLLBTFailures SI_XNAP_DT_DLLBTFailureInformationListItem_numberOfDLLBTFailures;
// L:387
typedef struct __si_xnap_dt_DLLBTFailureInformationList_Item SI_XNAP_DT_DLLBTFailureInformationList_Item;
// L:387
typedef struct __si_xnap_dt_DLNonF1Terminating_BHInfo SI_XNAP_DT_DLNonF1Terminating_BHInfo;
// L:5377
typedef struct __si_xnap_dt_DL_Total_PRB_usage SI_XNAP_DT_DL_Total_PRB_usage;
// L:5377
typedef struct __si_xnap_dt_DL_Total_PRB_usage_for_MIMO SI_XNAP_DT_DL_Total_PRB_usage_for_MIMO;
// L:5377
typedef struct __si_xnap_dt_DRB_ID SI_XNAP_DT_DRB_ID;
// L:1224
typedef struct __si_xnap_dt_DRB_List SI_XNAP_DT_DRB_List;
// L:1224
typedef struct __si_xnap_dt_DRB_List_withCause SI_XNAP_DT_DRB_List_withCause;
// L:387
typedef struct __si_xnap_dt_DRB_List_withCause_Item SI_XNAP_DT_DRB_List_withCause_Item;
// L:5377
typedef struct __si_xnap_dt_DRB_Number SI_XNAP_DT_DRB_Number;
// L:1224
typedef struct __si_xnap_dt_DRBsSubjectToDLDiscarding_List SI_XNAP_DT_DRBsSubjectToDLDiscarding_List;
// L:387
typedef struct __si_xnap_dt_DRBsSubjectToDLDiscarding_Item SI_XNAP_DT_DRBsSubjectToDLDiscarding_Item;
// L:1224
typedef struct __si_xnap_dt_DRBsSubjectToEarlyStatusTransfer_List SI_XNAP_DT_DRBsSubjectToEarlyStatusTransfer_List;
// L:387
typedef struct __si_xnap_dt_DRBsSubjectToEarlyStatusTransfer_Item SI_XNAP_DT_DRBsSubjectToEarlyStatusTransfer_Item;
// L:1224
typedef struct __si_xnap_dt_DRBsSubjectToStatusTransfer_List SI_XNAP_DT_DRBsSubjectToStatusTransfer_List;
// L:387
typedef struct __si_xnap_dt_DRBsSubjectToStatusTransfer_Item SI_XNAP_DT_DRBsSubjectToStatusTransfer_Item;

// L:4921
typedef struct __si_xnap_dt_DRBBStatusTransfer12bitsSN_receiveStatusofPDCPSDU SI_XNAP_DT_DRBBStatusTransfer12bitsSN_receiveStatusofPDCPSDU;
// L:387
typedef struct __si_xnap_dt_DRBBStatusTransfer12bitsSN SI_XNAP_DT_DRBBStatusTransfer12bitsSN;
// L:4921
typedef struct __si_xnap_dt_DRBBStatusTransfer18bitsSN_receiveStatusofPDCPSDU SI_XNAP_DT_DRBBStatusTransfer18bitsSN_receiveStatusofPDCPSDU;
// L:387
typedef struct __si_xnap_dt_DRBBStatusTransfer18bitsSN SI_XNAP_DT_DRBBStatusTransfer18bitsSN;
// L:1224
typedef struct __si_xnap_dt_DRBToQoSFlowMapping_List SI_XNAP_DT_DRBToQoSFlowMapping_List;
// L:387
typedef struct __si_xnap_dt_DRBToQoSFlowMapping_Item SI_XNAP_DT_DRBToQoSFlowMapping_Item;
// L:1224
typedef struct __si_xnap_dt_DUF_Slot_Config_List SI_XNAP_DT_DUF_Slot_Config_List;

// L:5377
typedef struct __si_xnap_dt_DUFSlotformatIndex SI_XNAP_DT_DUFSlotformatIndex;







// L:387
typedef struct __si_xnap_dt_Dynamic5QIDescriptor SI_XNAP_DT_Dynamic5QIDescriptor;





// L:5377
typedef struct __si_xnap_dt_EnergyCost SI_XNAP_DT_EnergyCost;
// L:1224
typedef struct __si_xnap_dt_EquivalentSNPNs SI_XNAP_DT_EquivalentSNPNs;
// L:5377
typedef struct __si_xnap_dt_E_RAB_ID SI_XNAP_DT_E_RAB_ID;
// L:5377
typedef struct __si_xnap_dt_E_UTRAARFCN SI_XNAP_DT_E_UTRAARFCN;
// L:4921
typedef struct __si_xnap_dt_E_UTRA_Cell_Identity SI_XNAP_DT_E_UTRA_Cell_Identity;
// L:4921
typedef struct __si_xnap_dt_ERedcap_Bcast_Information SI_XNAP_DT_ERedcap_Bcast_Information;
// L:387
typedef struct __si_xnap_dt_E_UTRA_CGI SI_XNAP_DT_E_UTRA_CGI;
// L:5377
typedef struct __si_xnap_dt_E_UTRAFrequencyBandIndicator SI_XNAP_DT_E_UTRAFrequencyBandIndicator;
// L:1224
typedef struct __si_xnap_dt_E_UTRAMultibandInfoList SI_XNAP_DT_E_UTRAMultibandInfoList;
// L:387
typedef struct __si_xnap_dt_EUTRAPagingeDRXInformation SI_XNAP_DT_EUTRAPagingeDRXInformation;


// L:5377
typedef struct __si_xnap_dt_E_UTRAPCI SI_XNAP_DT_E_UTRAPCI;
// L:5377
typedef struct __si_xnap_dt_EUTRAPRACHConfiguration_rootSequenceIndex SI_XNAP_DT_EUTRAPRACHConfiguration_rootSequenceIndex;
// L:5377
typedef struct __si_xnap_dt_EUTRAPRACHConfiguration_zeroCorrelationIndex SI_XNAP_DT_EUTRAPRACHConfiguration_zeroCorrelationIndex;

// L:5377
typedef struct __si_xnap_dt_EUTRAPRACHConfiguration_prach_FreqOffset SI_XNAP_DT_EUTRAPRACHConfiguration_prach_FreqOffset;
// L:5377
typedef struct __si_xnap_dt_EUTRAPRACHConfiguration_prach_ConfigIndex SI_XNAP_DT_EUTRAPRACHConfiguration_prach_ConfigIndex;
// L:387
typedef struct __si_xnap_dt_E_UTRAPRACHConfiguration SI_XNAP_DT_E_UTRAPRACHConfiguration;

// L:387
typedef struct __si_xnap_dt_EndpointIPAddressAndPort SI_XNAP_DT_EndpointIPAddressAndPort;
// L:387
typedef struct __si_xnap_dt_EventTriggered SI_XNAP_DT_EventTriggered;



// L:387
typedef struct __si_xnap_dt_EventL1 SI_XNAP_DT_EventL1;

// L:1224
typedef struct __si_xnap_dt_ExcessPacketDelayThresholdConfiguration SI_XNAP_DT_ExcessPacketDelayThresholdConfiguration;
// L:387
typedef struct __si_xnap_dt_ExcessPacketDelayThresholdItem SI_XNAP_DT_ExcessPacketDelayThresholdItem;

// L:5377
typedef struct __si_xnap_dt_ExpectedActivityPeriod SI_XNAP_DT_ExpectedActivityPeriod;

// L:5377
typedef struct __si_xnap_dt_ExpectedIdlePeriod SI_XNAP_DT_ExpectedIdlePeriod;
// L:387
typedef struct __si_xnap_dt_ExpectedUEActivityBehaviour SI_XNAP_DT_ExpectedUEActivityBehaviour;
// L:387
typedef struct __si_xnap_dt_ExpectedUEBehaviour SI_XNAP_DT_ExpectedUEBehaviour;

// L:1224
typedef struct __si_xnap_dt_ExpectedUEMovingTrajectory SI_XNAP_DT_ExpectedUEMovingTrajectory;
// L:5377
typedef struct __si_xnap_dt_ExpectedUEMovingTrajectoryItem_timeStayedInCell SI_XNAP_DT_ExpectedUEMovingTrajectoryItem_timeStayedInCell;
// L:387
typedef struct __si_xnap_dt_ExpectedUEMovingTrajectoryItem SI_XNAP_DT_ExpectedUEMovingTrajectoryItem;

// L:5377
typedef struct __si_xnap_dt_ExplicitFormat_noofDownlinkSymbols SI_XNAP_DT_ExplicitFormat_noofDownlinkSymbols;
// L:5377
typedef struct __si_xnap_dt_ExplicitFormat_noofUplinkSymbols SI_XNAP_DT_ExplicitFormat_noofUplinkSymbols;
// L:387
typedef struct __si_xnap_dt_ExplicitFormat SI_XNAP_DT_ExplicitFormat;
// L:4921
typedef struct __si_xnap_dt_ExtendedRATRestrictionInformation_primaryRATRestriction SI_XNAP_DT_ExtendedRATRestrictionInformation_primaryRATRestriction;
// L:4921
typedef struct __si_xnap_dt_ExtendedRATRestrictionInformation_secondaryRATRestriction SI_XNAP_DT_ExtendedRATRestrictionInformation_secondaryRATRestriction;
// L:387
typedef struct __si_xnap_dt_ExtendedRATRestrictionInformation SI_XNAP_DT_ExtendedRATRestrictionInformation;
// L:5377
typedef struct __si_xnap_dt_ExtendedPacketDelayBudget SI_XNAP_DT_ExtendedPacketDelayBudget;
// L:1224
typedef struct __si_xnap_dt_ExtendedSliceSupportList SI_XNAP_DT_ExtendedSliceSupportList;
// L:4921
typedef struct __si_xnap_dt_ExtendedUEIdentityIndexValue SI_XNAP_DT_ExtendedUEIdentityIndexValue;
// L:1224
typedef struct __si_xnap_dt_ExtTLAs SI_XNAP_DT_ExtTLAs;
// L:387
typedef struct __si_xnap_dt_ExtTLA_Item SI_XNAP_DT_ExtTLA_Item;
// L:1224
typedef struct __si_xnap_dt_GTPTLAs SI_XNAP_DT_GTPTLAs;
// L:387
typedef struct __si_xnap_dt_GTPTLA_Item SI_XNAP_DT_GTPTLA_Item;
// L:4446
typedef struct __si_xnap_dt_F1CTrafficContainer SI_XNAP_DT_F1CTrafficContainer;

// L:387
typedef struct __si_xnap_dt_F1_TerminatingTopologyBHInformation SI_XNAP_DT_F1_TerminatingTopologyBHInformation;
// L:1224
typedef struct __si_xnap_dt_F1TerminatingBHInformation_List SI_XNAP_DT_F1TerminatingBHInformation_List;
// L:387
typedef struct __si_xnap_dt_F1TerminatingBHInformation_Item SI_XNAP_DT_F1TerminatingBHInformation_Item;
// L:4446
typedef struct __si_xnap_dt_FiveGCMobilityRestrictionListContainer SI_XNAP_DT_FiveGCMobilityRestrictionListContainer;
// L:387
typedef struct __si_xnap_dt_FiveGProSeAuthorized SI_XNAP_DT_FiveGProSeAuthorized;








// L:387
typedef struct __si_xnap_dt_FiveGProSePC5QoSParameters SI_XNAP_DT_FiveGProSePC5QoSParameters;
// L:1224
typedef struct __si_xnap_dt_FiveGProSePC5QoSFlowList SI_XNAP_DT_FiveGProSePC5QoSFlowList;
// L:387
typedef struct __si_xnap_dt_FiveGProSePC5QoSFlowItem SI_XNAP_DT_FiveGProSePC5QoSFlowItem;
// L:387
typedef struct __si_xnap_dt_FiveGProSePC5FlowBitRates SI_XNAP_DT_FiveGProSePC5FlowBitRates;
// L:5377
typedef struct __si_xnap_dt_FiveQI SI_XNAP_DT_FiveQI;
// L:1224
typedef struct __si_xnap_dt_Flows_Mapped_To_DRB_List SI_XNAP_DT_Flows_Mapped_To_DRB_List;
// L:387
typedef struct __si_xnap_dt_Flows_Mapped_To_DRB_Item SI_XNAP_DT_Flows_Mapped_To_DRB_Item;
// L:1224
typedef struct __si_xnap_dt_FreqDomainHSNAconfiguration_List SI_XNAP_DT_FreqDomainHSNAconfiguration_List;
// L:5377
typedef struct __si_xnap_dt_FreqDomainHSNAconfigurationListItem_rBsetIndex SI_XNAP_DT_FreqDomainHSNAconfigurationListItem_rBsetIndex;
// L:387
typedef struct __si_xnap_dt_FreqDomainHSNAconfiguration_List_Item SI_XNAP_DT_FreqDomainHSNAconfiguration_List_Item;
// L:1224
typedef struct __si_xnap_dt_FreqDomainSlotHSNAconfiguration_List SI_XNAP_DT_FreqDomainSlotHSNAconfiguration_List;
// L:5377
typedef struct __si_xnap_dt_FreqDomainSlotHSNAconfigurationListItem_slotIndex SI_XNAP_DT_FreqDomainSlotHSNAconfigurationListItem_slotIndex;
// L:387
typedef struct __si_xnap_dt_FreqDomainSlotHSNAconfiguration_List_Item SI_XNAP_DT_FreqDomainSlotHSNAconfiguration_List_Item;


// L:387
typedef struct __si_xnap_dt_GBRQoSFlowInfo SI_XNAP_DT_GBRQoSFlowInfo;
// L:387
typedef struct __si_xnap_dt_GlobalgNB_ID SI_XNAP_DT_GlobalgNB_ID;
// L:387
typedef struct __si_xnap_dt_GNB_DU_Cell_Resource_Configuration SI_XNAP_DT_GNB_DU_Cell_Resource_Configuration;
// L:4921
typedef struct __si_xnap_dt_GNBIDChoice_gnb_ID SI_XNAP_DT_GNBIDChoice_gnb_ID;

// L:387
typedef struct __si_xnap_dt_GNB_RadioResourceStatus SI_XNAP_DT_GNB_RadioResourceStatus;
// L:387
typedef struct __si_xnap_dt_GlobalCell_ID SI_XNAP_DT_GlobalCell_ID;
// L:387
typedef struct __si_xnap_dt_GlobalngeNB_ID SI_XNAP_DT_GlobalngeNB_ID;
// L:4921
typedef struct __si_xnap_dt_ENBIDChoice_enb_ID_macro SI_XNAP_DT_ENBIDChoice_enb_ID_macro;
// L:4921
typedef struct __si_xnap_dt_ENBIDChoice_enb_ID_shortmacro SI_XNAP_DT_ENBIDChoice_enb_ID_shortmacro;
// L:4921
typedef struct __si_xnap_dt_ENBIDChoice_enb_ID_longmacro SI_XNAP_DT_ENBIDChoice_enb_ID_longmacro;

// L:387
typedef struct __si_xnap_dt_GlobalNG_RANCell_ID SI_XNAP_DT_GlobalNG_RANCell_ID;

// L:4446
typedef struct __si_xnap_dt_GTP_TEID SI_XNAP_DT_GTP_TEID;
// L:387
typedef struct __si_xnap_dt_GTPtunnelTransportLayerInformation SI_XNAP_DT_GTPtunnelTransportLayerInformation;
// L:4921
typedef struct __si_xnap_dt_GUAMI_amf_region_id SI_XNAP_DT_GUAMI_amf_region_id;
// L:4921
typedef struct __si_xnap_dt_GUAMI_amf_set_id SI_XNAP_DT_GUAMI_amf_set_id;
// L:4921
typedef struct __si_xnap_dt_GUAMI_amf_pointer SI_XNAP_DT_GUAMI_amf_pointer;
// L:387
typedef struct __si_xnap_dt_GUAMI SI_XNAP_DT_GUAMI;

// L:4921
typedef struct __si_xnap_dt_HashedUEIdentityIndexValue SI_XNAP_DT_HashedUEIdentityIndexValue;
// L:1224
typedef struct __si_xnap_dt_HSNASlotConfigList SI_XNAP_DT_HSNASlotConfigList;
// L:387
typedef struct __si_xnap_dt_HSNASlotConfigItem SI_XNAP_DT_HSNASlotConfigItem;




// L:5377
typedef struct __si_xnap_dt_Hysteresis SI_XNAP_DT_Hysteresis;
// L:4446
typedef struct __si_xnap_dt_IABCellInformation_cSI_RS_Configuration SI_XNAP_DT_IABCellInformation_cSI_RS_Configuration;
// L:4446
typedef struct __si_xnap_dt_IABCellInformation_sR_Configuration SI_XNAP_DT_IABCellInformation_sR_Configuration;
// L:4446
typedef struct __si_xnap_dt_IABCellInformation_pDCCH_ConfigSIB1 SI_XNAP_DT_IABCellInformation_pDCCH_ConfigSIB1;
// L:4446
typedef struct __si_xnap_dt_IABCellInformation_sCS_Common SI_XNAP_DT_IABCellInformation_sCS_Common;
// L:387
typedef struct __si_xnap_dt_IABCellInformation SI_XNAP_DT_IABCellInformation;

// L:387
typedef struct __si_xnap_dt_IAB_DU_Cell_Resource_Configuration_FDD_Info SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_FDD_Info;
// L:387
typedef struct __si_xnap_dt_IAB_DU_Cell_Resource_Configuration_TDD_Info SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_TDD_Info;
// L:1224
typedef struct __si_xnap_dt_IAB_MT_Cell_List SI_XNAP_DT_IAB_MT_Cell_List;
// L:387
typedef struct __si_xnap_dt_IAB_MT_Cell_List_Item SI_XNAP_DT_IAB_MT_Cell_List_Item;

// L:4921
typedef struct __si_xnap_dt_IABQoSMappingInformation_dscp SI_XNAP_DT_IABQoSMappingInformation_dscp;
// L:4921
typedef struct __si_xnap_dt_IABQoSMappingInformation_flow_label SI_XNAP_DT_IABQoSMappingInformation_flow_label;
// L:387
typedef struct __si_xnap_dt_IAB_QoS_Mapping_Information SI_XNAP_DT_IAB_QoS_Mapping_Information;
// L:387
typedef struct __si_xnap_dt_IAB_STC_Info SI_XNAP_DT_IAB_STC_Info;
// L:1224
typedef struct __si_xnap_dt_IAB_STC_Info_List SI_XNAP_DT_IAB_STC_Info_List;
// L:387
typedef struct __si_xnap_dt_IAB_STC_Info_Item SI_XNAP_DT_IAB_STC_Info_Item;
// L:387
typedef struct __si_xnap_dt_IAB_TNL_Address_Request SI_XNAP_DT_IAB_TNL_Address_Request;

// L:387
typedef struct __si_xnap_dt_IAB_TNL_Address_Response SI_XNAP_DT_IAB_TNL_Address_Response;
// L:1224
typedef struct __si_xnap_dt_IABAllocatedTNLAddress_List SI_XNAP_DT_IABAllocatedTNLAddress_List;
// L:387
typedef struct __si_xnap_dt_IABAllocatedTNLAddress_Item SI_XNAP_DT_IABAllocatedTNLAddress_Item;
// L:4921
typedef struct __si_xnap_dt_IABTNLAddress_iPv4Address SI_XNAP_DT_IABTNLAddress_iPv4Address;
// L:4921
typedef struct __si_xnap_dt_IABTNLAddress_iPv6Address SI_XNAP_DT_IABTNLAddress_iPv6Address;
// L:4921
typedef struct __si_xnap_dt_IABTNLAddress_iPv6Prefix SI_XNAP_DT_IABTNLAddress_iPv6Prefix;

// L:5377
typedef struct __si_xnap_dt_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedAllTraffic SI_XNAP_DT_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedAllTraffic;
// L:5377
typedef struct __si_xnap_dt_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1_C SI_XNAP_DT_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1_C;
// L:5377
typedef struct __si_xnap_dt_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1_U SI_XNAP_DT_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1_U;
// L:5377
typedef struct __si_xnap_dt_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedNoNF1 SI_XNAP_DT_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedNoNF1;
// L:387
typedef struct __si_xnap_dt_IABTNLAddressesRequested SI_XNAP_DT_IABTNLAddressesRequested;
// L:1224
typedef struct __si_xnap_dt_IABTNLAddressToRemove_List SI_XNAP_DT_IABTNLAddressToRemove_List;
// L:387
typedef struct __si_xnap_dt_IABTNLAddressToRemove_Item SI_XNAP_DT_IABTNLAddressToRemove_Item;

// L:1224
typedef struct __si_xnap_dt_IABTNLAddressException SI_XNAP_DT_IABTNLAddressException;
// L:387
typedef struct __si_xnap_dt_IABTNLAddress_Item SI_XNAP_DT_IABTNLAddress_Item;
// L:387
typedef struct __si_xnap_dt_ImmediateMDT_NR SI_XNAP_DT_ImmediateMDT_NR;
// L:387
typedef struct __si_xnap_dt_ImplicitFormat SI_XNAP_DT_ImplicitFormat;

// L:387
typedef struct __si_xnap_dt_IntendedTDD_DL_ULConfiguration_NR SI_XNAP_DT_IntendedTDD_DL_ULConfiguration_NR;
// L:5377
typedef struct __si_xnap_dt_InterfaceInstanceIndication SI_XNAP_DT_InterfaceInstanceIndication;
// L:4921
typedef struct __si_xnap_dt_IRNTI_i_RNTI_full SI_XNAP_DT_IRNTI_i_RNTI_full;
// L:4921
typedef struct __si_xnap_dt_IRNTI_i_RNTI_short SI_XNAP_DT_IRNTI_i_RNTI_short;



// L:387
typedef struct __si_xnap_dt_Full_and_Short_I_RNTI_Profile_List SI_XNAP_DT_Full_and_Short_I_RNTI_Profile_List;
// L:4921
typedef struct __si_xnap_dt_FullIRNTIProfileList_full_I_RNTI_Profile_0 SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_0;
// L:4921
typedef struct __si_xnap_dt_FullIRNTIProfileList_full_I_RNTI_Profile_1 SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_1;
// L:4921
typedef struct __si_xnap_dt_FullIRNTIProfileList_full_I_RNTI_Profile_2 SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_2;
// L:4921
typedef struct __si_xnap_dt_FullIRNTIProfileList_full_I_RNTI_Profile_3 SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_3;

// L:4921
typedef struct __si_xnap_dt_ShortIRNTIProfileList_short_I_RNTI_Profile_0 SI_XNAP_DT_ShortIRNTIProfileList_short_I_RNTI_Profile_0;
// L:4921
typedef struct __si_xnap_dt_ShortIRNTIProfileList_short_I_RNTI_Profile_1 SI_XNAP_DT_ShortIRNTIProfileList_short_I_RNTI_Profile_1;


// L:4446
typedef struct __si_xnap_dt_LastVisitedEUTRANCellInformation SI_XNAP_DT_LastVisitedEUTRANCellInformation;
// L:4446
typedef struct __si_xnap_dt_LastVisitedGERANCellInformation SI_XNAP_DT_LastVisitedGERANCellInformation;
// L:4446
typedef struct __si_xnap_dt_LastVisitedNGRANCellInformation SI_XNAP_DT_LastVisitedNGRANCellInformation;
// L:4446
typedef struct __si_xnap_dt_LastVisitedUTRANCellInformation SI_XNAP_DT_LastVisitedUTRANCellInformation;
// L:4446
typedef struct __si_xnap_dt_LastVisitedPSCellInformation SI_XNAP_DT_LastVisitedPSCellInformation;
// L:1224
typedef struct __si_xnap_dt_LastVisitedPSCellList SI_XNAP_DT_LastVisitedPSCellList;
// L:387
typedef struct __si_xnap_dt_LastVisitedPSCellList_Item SI_XNAP_DT_LastVisitedPSCellList_Item;
// L:387
typedef struct __si_xnap_dt_SCGUEHistoryInformation SI_XNAP_DT_SCGUEHistoryInformation;
// L:5377
typedef struct __si_xnap_dt_LCID SI_XNAP_DT_LCID;

// L:1224
typedef struct __si_xnap_dt_ListOfCells SI_XNAP_DT_ListOfCells;
// L:387
typedef struct __si_xnap_dt_CellsinAoI_Item SI_XNAP_DT_CellsinAoI_Item;
// L:1224
typedef struct __si_xnap_dt_ListOfRANNodesinAoI SI_XNAP_DT_ListOfRANNodesinAoI;
// L:387
typedef struct __si_xnap_dt_GlobalNG_RANNodesinAoI_Item SI_XNAP_DT_GlobalNG_RANNodesinAoI_Item;
// L:1224
typedef struct __si_xnap_dt_ListOfTAIsinAoI SI_XNAP_DT_ListOfTAIsinAoI;
// L:387
typedef struct __si_xnap_dt_TAIsinAoI_Item SI_XNAP_DT_TAIsinAoI_Item;

// L:387
typedef struct __si_xnap_dt_LocationReportingInformation SI_XNAP_DT_LocationReportingInformation;
// L:387
typedef struct __si_xnap_dt_LoggedEventTriggeredConfig SI_XNAP_DT_LoggedEventTriggeredConfig;
// L:387
typedef struct __si_xnap_dt_LoggedMDT_NR SI_XNAP_DT_LoggedMDT_NR;



// L:387
typedef struct __si_xnap_dt_LTEA2XServicesAuthorized SI_XNAP_DT_LTEA2XServicesAuthorized;
// L:387
typedef struct __si_xnap_dt_LTEV2XServicesAuthorized SI_XNAP_DT_LTEV2XServicesAuthorized;
// L:387
typedef struct __si_xnap_dt_LTEUESidelinkAggregateMaximumBitRate SI_XNAP_DT_LTEUESidelinkAggregateMaximumBitRate;
// L:5377
typedef struct __si_xnap_dt_MaxNrofRS_IndexesToReport SI_XNAP_DT_MaxNrofRS_IndexesToReport;


// L:6239
typedef struct __si_xnap_dt_MeasCollectionEntityIPAddress SI_XNAP_DT_MeasCollectionEntityIPAddress;
// L:387
typedef struct __si_xnap_dt_M1Configuration SI_XNAP_DT_M1Configuration;
// L:387
typedef struct __si_xnap_dt_M1PeriodicReporting SI_XNAP_DT_M1PeriodicReporting;

// L:387
typedef struct __si_xnap_dt_M1ThresholdEventA2 SI_XNAP_DT_M1ThresholdEventA2;
// L:387
typedef struct __si_xnap_dt_M4Configuration SI_XNAP_DT_M4Configuration;


// L:387
typedef struct __si_xnap_dt_M5Configuration SI_XNAP_DT_M5Configuration;


// L:387
typedef struct __si_xnap_dt_M6Configuration SI_XNAP_DT_M6Configuration;


// L:387
typedef struct __si_xnap_dt_M7Configuration SI_XNAP_DT_M7Configuration;

// L:5377
typedef struct __si_xnap_dt_M7period SI_XNAP_DT_M7period;
// L:4921
typedef struct __si_xnap_dt_MAC_I SI_XNAP_DT_MAC_I;
// L:4921
typedef struct __si_xnap_dt_MaskedIMEISV SI_XNAP_DT_MaskedIMEISV;
// L:5377
typedef struct __si_xnap_dt_MaxCHOpreparations SI_XNAP_DT_MaxCHOpreparations;
// L:5377
typedef struct __si_xnap_dt_MaximumDataBurstVolume SI_XNAP_DT_MaximumDataBurstVolume;
// L:387
typedef struct __si_xnap_dt_MaximumIPdatarate SI_XNAP_DT_MaximumIPdatarate;

// L:5377
typedef struct __si_xnap_dt_MBSFNControlRegionLength SI_XNAP_DT_MBSFNControlRegionLength;
// L:4921
typedef struct __si_xnap_dt_MBSFNSubframeAllocationEUTRA_oneframe SI_XNAP_DT_MBSFNSubframeAllocationEUTRA_oneframe;
// L:4921
typedef struct __si_xnap_dt_MBSFNSubframeAllocationEUTRA_fourframes SI_XNAP_DT_MBSFNSubframeAllocationEUTRA_fourframes;

// L:1224
typedef struct __si_xnap_dt_MBSFNSubframeInfo_E_UTRA SI_XNAP_DT_MBSFNSubframeInfo_E_UTRA;

// L:5377
typedef struct __si_xnap_dt_MBSFNSubframeInfoEUTRAItem_radioframeAllocationOffset SI_XNAP_DT_MBSFNSubframeInfoEUTRAItem_radioframeAllocationOffset;
// L:387
typedef struct __si_xnap_dt_MBSFNSubframeInfo_E_UTRA_Item SI_XNAP_DT_MBSFNSubframeInfo_E_UTRA_Item;
// L:4446
typedef struct __si_xnap_dt_MBS_FrequencySelectionArea_Identity SI_XNAP_DT_MBS_FrequencySelectionArea_Identity;
// L:5377
typedef struct __si_xnap_dt_MBS_Area_Session_ID SI_XNAP_DT_MBS_Area_Session_ID;
// L:1224
typedef struct __si_xnap_dt_MBS_MappingandDataForwardingRequestInfofromSource SI_XNAP_DT_MBS_MappingandDataForwardingRequestInfofromSource;
// L:387
typedef struct __si_xnap_dt_MBS_MappingandDataForwardingRequestInfofromSource_Item SI_XNAP_DT_MBS_MappingandDataForwardingRequestInfofromSource_Item;

// L:1224
typedef struct __si_xnap_dt_MBS_DataForwardingResponseInfofromTarget SI_XNAP_DT_MBS_DataForwardingResponseInfofromTarget;
// L:387
typedef struct __si_xnap_dt_MBS_DataForwardingResponseInfofromTarget_Item SI_XNAP_DT_MBS_DataForwardingResponseInfofromTarget_Item;
// L:1224
typedef struct __si_xnap_dt_MBS_QoSFlow_List SI_XNAP_DT_MBS_QoSFlow_List;
// L:1224
typedef struct __si_xnap_dt_MBS_QoSFlowsToAdd_List SI_XNAP_DT_MBS_QoSFlowsToAdd_List;
// L:387
typedef struct __si_xnap_dt_MBS_QoSFlowsToAdd_Item SI_XNAP_DT_MBS_QoSFlowsToAdd_Item;

// L:1224
typedef struct __si_xnap_dt_MBS_ServiceAreaCell_List SI_XNAP_DT_MBS_ServiceAreaCell_List;
// L:387
typedef struct __si_xnap_dt_MBS_ServiceAreaInformation SI_XNAP_DT_MBS_ServiceAreaInformation;
// L:1224
typedef struct __si_xnap_dt_MBS_ServiceAreaInformationList SI_XNAP_DT_MBS_ServiceAreaInformationList;
// L:387
typedef struct __si_xnap_dt_MBS_ServiceAreaInformation_Item SI_XNAP_DT_MBS_ServiceAreaInformation_Item;
// L:1224
typedef struct __si_xnap_dt_MBS_ServiceAreaTAI_List SI_XNAP_DT_MBS_ServiceAreaTAI_List;
// L:387
typedef struct __si_xnap_dt_MBS_ServiceAreaTAI_Item SI_XNAP_DT_MBS_ServiceAreaTAI_Item;
// L:387
typedef struct __si_xnap_dt_MBS_Session_ID SI_XNAP_DT_MBS_Session_ID;

// L:1224
typedef struct __si_xnap_dt_MBS_SessionAssociatedInformation SI_XNAP_DT_MBS_SessionAssociatedInformation;
// L:387
typedef struct __si_xnap_dt_MBS_SessionAssociatedInformation_Item SI_XNAP_DT_MBS_SessionAssociatedInformation_Item;
// L:1224
typedef struct __si_xnap_dt_MBS_SessionInformation_List SI_XNAP_DT_MBS_SessionInformation_List;
// L:387
typedef struct __si_xnap_dt_MBS_SessionInformation_Item SI_XNAP_DT_MBS_SessionInformation_Item;
// L:1224
typedef struct __si_xnap_dt_MBS_SessionInformationResponse_List SI_XNAP_DT_MBS_SessionInformationResponse_List;
// L:387
typedef struct __si_xnap_dt_MBS_SessionInformationResponse_Item SI_XNAP_DT_MBS_SessionInformationResponse_Item;
// L:5377
typedef struct __si_xnap_dt_MRB_ID SI_XNAP_DT_MRB_ID;
// L:5377
typedef struct __si_xnap_dt_MRBProgressInformation_pdcp_SN12 SI_XNAP_DT_MRBProgressInformation_pdcp_SN12;
// L:5377
typedef struct __si_xnap_dt_MRBProgressInformation_pdcp_SN18 SI_XNAP_DT_MRBProgressInformation_pdcp_SN18;


// L:387
typedef struct __si_xnap_dt_MDT_Configuration SI_XNAP_DT_MDT_Configuration;

// L:387
typedef struct __si_xnap_dt_MDT_Configuration_NR SI_XNAP_DT_MDT_Configuration_NR;
// L:387
typedef struct __si_xnap_dt_MDT_Configuration_EUTRA SI_XNAP_DT_MDT_Configuration_EUTRA;
// L:4921
typedef struct __si_xnap_dt_MDT_Location_Info SI_XNAP_DT_MDT_Location_Info;
// L:1224
typedef struct __si_xnap_dt_MDTPLMNList SI_XNAP_DT_MDTPLMNList;
// L:1224
typedef struct __si_xnap_dt_MDTPLMNModificationList SI_XNAP_DT_MDTPLMNModificationList;

// L:6239
typedef struct __si_xnap_dt_MDTMode_NR_Extension SI_XNAP_DT_MDTMode_NR_Extension;
// L:4446
typedef struct __si_xnap_dt_MDTMode_EUTRA SI_XNAP_DT_MDTMode_EUTRA;
// L:4446
typedef struct __si_xnap_dt_MeasObjectContainer SI_XNAP_DT_MeasObjectContainer;
// L:4921
typedef struct __si_xnap_dt_MeasurementsToActivate SI_XNAP_DT_MeasurementsToActivate;

// L:5377
typedef struct __si_xnap_dt_Measurement_ID SI_XNAP_DT_Measurement_ID;
// L:387
typedef struct __si_xnap_dt_MIMOPRBusageInformation SI_XNAP_DT_MIMOPRBusageInformation;


// L:4921
typedef struct __si_xnap_dt_MobilityInformation SI_XNAP_DT_MobilityInformation;
// L:5377
typedef struct __si_xnap_dt_MobilityParametersModificationRange_handoverTriggerChangeLowerLimit SI_XNAP_DT_MobilityParametersModificationRange_handoverTriggerChangeLowerLimit;
// L:5377
typedef struct __si_xnap_dt_MobilityParametersModificationRange_handoverTriggerChangeUpperLimit SI_XNAP_DT_MobilityParametersModificationRange_handoverTriggerChangeUpperLimit;
// L:387
typedef struct __si_xnap_dt_MobilityParametersModificationRange SI_XNAP_DT_MobilityParametersModificationRange;
// L:5377
typedef struct __si_xnap_dt_MobilityParametersInformation_handoverTriggerChange SI_XNAP_DT_MobilityParametersInformation_handoverTriggerChange;
// L:387
typedef struct __si_xnap_dt_MobilityParametersInformation SI_XNAP_DT_MobilityParametersInformation;
// L:1224
typedef struct __si_xnap_dt_MobilityRestrictionList_equivalent_PLMNs SI_XNAP_DT_MobilityRestrictionList_equivalent_PLMNs;
// L:387
typedef struct __si_xnap_dt_MobilityRestrictionList SI_XNAP_DT_MobilityRestrictionList;
// L:1224
typedef struct __si_xnap_dt_CNTypeRestrictionsForEquivalent SI_XNAP_DT_CNTypeRestrictionsForEquivalent;

// L:387
typedef struct __si_xnap_dt_CNTypeRestrictionsForEquivalentItem SI_XNAP_DT_CNTypeRestrictionsForEquivalentItem;

// L:1224
typedef struct __si_xnap_dt_RAT_RestrictionsList SI_XNAP_DT_RAT_RestrictionsList;
// L:387
typedef struct __si_xnap_dt_RAT_RestrictionsItem SI_XNAP_DT_RAT_RestrictionsItem;
// L:4921
typedef struct __si_xnap_dt_RAT_RestrictionInformation SI_XNAP_DT_RAT_RestrictionInformation;
// L:1224
typedef struct __si_xnap_dt_ForbiddenAreaList SI_XNAP_DT_ForbiddenAreaList;
// L:1224
typedef struct __si_xnap_dt_ForbiddenAreaItem_forbidden_TACs SI_XNAP_DT_ForbiddenAreaItem_forbidden_TACs;
// L:387
typedef struct __si_xnap_dt_ForbiddenAreaItem SI_XNAP_DT_ForbiddenAreaItem;
// L:1224
typedef struct __si_xnap_dt_ServiceAreaList SI_XNAP_DT_ServiceAreaList;
// L:1224
typedef struct __si_xnap_dt_ServiceAreaItem_allowed_TACs_ServiceArea SI_XNAP_DT_ServiceAreaItem_allowed_TACs_ServiceArea;
// L:1224
typedef struct __si_xnap_dt_ServiceAreaItem_not_allowed_TACs_ServiceArea SI_XNAP_DT_ServiceAreaItem_not_allowed_TACs_ServiceArea;
// L:387
typedef struct __si_xnap_dt_ServiceAreaItem SI_XNAP_DT_ServiceAreaItem;
// L:387
typedef struct __si_xnap_dt_MR_DC_ResourceCoordinationInfo SI_XNAP_DT_MR_DC_ResourceCoordinationInfo;

// L:4921
typedef struct __si_xnap_dt_EUTRAResourceCoordinationInfo_ul_coordination_info SI_XNAP_DT_EUTRAResourceCoordinationInfo_ul_coordination_info;
// L:4921
typedef struct __si_xnap_dt_EUTRAResourceCoordinationInfo_dl_coordination_info SI_XNAP_DT_EUTRAResourceCoordinationInfo_dl_coordination_info;
// L:387
typedef struct __si_xnap_dt_E_UTRA_ResourceCoordinationInfo SI_XNAP_DT_E_UTRA_ResourceCoordinationInfo;

// L:4921
typedef struct __si_xnap_dt_NRResourceCoordinationInfo_ul_coordination_info SI_XNAP_DT_NRResourceCoordinationInfo_ul_coordination_info;
// L:4921
typedef struct __si_xnap_dt_NRResourceCoordinationInfo_dl_coordination_info SI_XNAP_DT_NRResourceCoordinationInfo_dl_coordination_info;
// L:387
typedef struct __si_xnap_dt_NR_ResourceCoordinationInfo SI_XNAP_DT_NR_ResourceCoordinationInfo;

// L:387
typedef struct __si_xnap_dt_MessageOversizeNotification SI_XNAP_DT_MessageOversizeNotification;
// L:5377
typedef struct __si_xnap_dt_MaximumCellListSize SI_XNAP_DT_MaximumCellListSize;
// L:387
typedef struct __si_xnap_dt_MT_SDT_Information SI_XNAP_DT_MT_SDT_Information;
// L:5377
typedef struct __si_xnap_dt_MT_SDT_DataSize SI_XNAP_DT_MT_SDT_DataSize;

// L:387
typedef struct __si_xnap_dt_MultiplexingInfo SI_XNAP_DT_MultiplexingInfo;
// L:1224
typedef struct __si_xnap_dt_MeasuredUETrajectory SI_XNAP_DT_MeasuredUETrajectory;
// L:387
typedef struct __si_xnap_dt_MeasuredUETrajectory_Item SI_XNAP_DT_MeasuredUETrajectory_Item;

// L:5377
typedef struct __si_xnap_dt_MeasuredTrajectoryNGRANCellInfo_timeUEStaysInCell SI_XNAP_DT_MeasuredTrajectoryNGRANCellInfo_timeUEStaysInCell;
// L:387
typedef struct __si_xnap_dt_MeasuredTrajectoryNGRANCellInfo SI_XNAP_DT_MeasuredTrajectoryNGRANCellInfo;
// L:5377
typedef struct __si_xnap_dt_N6JitterInformation_n6JitterLowerBound SI_XNAP_DT_N6JitterInformation_n6JitterLowerBound;
// L:5377
typedef struct __si_xnap_dt_N6JitterInformation_n6JitterUpperBound SI_XNAP_DT_N6JitterInformation_n6JitterUpperBound;
// L:387
typedef struct __si_xnap_dt_N6JitterInformation SI_XNAP_DT_N6JitterInformation;
// L:1224
typedef struct __si_xnap_dt_NACellResourceConfigurationList SI_XNAP_DT_NACellResourceConfigurationList;



// L:387
typedef struct __si_xnap_dt_NACellResourceConfiguration_Item SI_XNAP_DT_NACellResourceConfiguration_Item;


// L:5377
typedef struct __si_xnap_dt_NEDCTDMPattern_harqOffset SI_XNAP_DT_NEDCTDMPattern_harqOffset;
// L:387
typedef struct __si_xnap_dt_NE_DC_TDM_Pattern SI_XNAP_DT_NE_DC_TDM_Pattern;
// L:1224
typedef struct __si_xnap_dt_NeighbourInformation_E_UTRA SI_XNAP_DT_NeighbourInformation_E_UTRA;
// L:387
typedef struct __si_xnap_dt_NeighbourInformation_E_UTRA_Item SI_XNAP_DT_NeighbourInformation_E_UTRA_Item;
// L:1224
typedef struct __si_xnap_dt_NeighbourInformation_NR SI_XNAP_DT_NeighbourInformation_NR;
// L:4446
typedef struct __si_xnap_dt_NeighbourInformationNRItem_measurementTimingConfiguration SI_XNAP_DT_NeighbourInformationNRItem_measurementTimingConfiguration;
// L:387
typedef struct __si_xnap_dt_NeighbourInformation_NR_Item SI_XNAP_DT_NeighbourInformation_NR_Item;

// L:387
typedef struct __si_xnap_dt_NeighbourInformation_NR_ModeFDDInfo SI_XNAP_DT_NeighbourInformation_NR_ModeFDDInfo;
// L:387
typedef struct __si_xnap_dt_NeighbourInformation_NR_ModeTDDInfo SI_XNAP_DT_NeighbourInformation_NR_ModeTDDInfo;
// L:1224
typedef struct __si_xnap_dt_Neighbour_NG_RAN_Node_List SI_XNAP_DT_Neighbour_NG_RAN_Node_List;
// L:387
typedef struct __si_xnap_dt_Neighbour_NG_RAN_Node_Item SI_XNAP_DT_Neighbour_NG_RAN_Node_Item;
// L:4921
typedef struct __si_xnap_dt_NID SI_XNAP_DT_NID;
// L:1224
typedef struct __si_xnap_dt_NRCarrierList SI_XNAP_DT_NRCarrierList;
// L:5377
typedef struct __si_xnap_dt_NRCarrierItem_offsetToCarrier SI_XNAP_DT_NRCarrierItem_offsetToCarrier;
// L:5377
typedef struct __si_xnap_dt_NRCarrierItem_carrierBandwidth SI_XNAP_DT_NRCarrierItem_carrierBandwidth;
// L:387
typedef struct __si_xnap_dt_NRCarrierItem SI_XNAP_DT_NRCarrierItem;
// L:4446
typedef struct __si_xnap_dt_NRCellPRACHConfig SI_XNAP_DT_NRCellPRACHConfig;


// L:1224
typedef struct __si_xnap_dt_NG_RANnode2SSBOffsetsModificationRange SI_XNAP_DT_NG_RANnode2SSBOffsetsModificationRange;
// L:5377
typedef struct __si_xnap_dt_NG_RANnodeUEXnAPID SI_XNAP_DT_NG_RANnodeUEXnAPID;
// L:5377
typedef struct __si_xnap_dt_NumberofActiveUEs SI_XNAP_DT_NumberofActiveUEs;
// L:387
typedef struct __si_xnap_dt_NodeAssociatedInfoResult SI_XNAP_DT_NodeAssociatedInfoResult;
// L:1224
typedef struct __si_xnap_dt_NodeMeasurementInitiationResult_List SI_XNAP_DT_NodeMeasurementInitiationResult_List;
// L:4921
typedef struct __si_xnap_dt_NodeMeasurementInitiationResultItem_nodemeasurementFailedReportCharacteristics SI_XNAP_DT_NodeMeasurementInitiationResultItem_nodemeasurementFailedReportCharacteristics;
// L:387
typedef struct __si_xnap_dt_NodeMeasurementInitiationResult_Item SI_XNAP_DT_NodeMeasurementInitiationResult_Item;
// L:5377
typedef struct __si_xnap_dt_NoofRRCConnections SI_XNAP_DT_NoofRRCConnections;
// L:387
typedef struct __si_xnap_dt_NonDynamic5QIDescriptor SI_XNAP_DT_NonDynamic5QIDescriptor;
// L:5377
typedef struct __si_xnap_dt_NRARFCN SI_XNAP_DT_NRARFCN;
// L:387
typedef struct __si_xnap_dt_NG_eNB_RadioResourceStatus SI_XNAP_DT_NG_eNB_RadioResourceStatus;
// L:5377
typedef struct __si_xnap_dt_DL_scheduling_PDCCH_CCE_usage SI_XNAP_DT_DL_scheduling_PDCCH_CCE_usage;
// L:5377
typedef struct __si_xnap_dt_UL_scheduling_PDCCH_CCE_usage SI_XNAP_DT_UL_scheduling_PDCCH_CCE_usage;
// L:387
typedef struct __si_xnap_dt_TNLCapacityIndicator SI_XNAP_DT_TNLCapacityIndicator;
// L:387
typedef struct __si_xnap_dt_Non_F1_TerminatingTopologyBHInformation SI_XNAP_DT_Non_F1_TerminatingTopologyBHInformation;
// L:1224
typedef struct __si_xnap_dt_NonF1TerminatingBHInformation_List SI_XNAP_DT_NonF1TerminatingBHInformation_List;
// L:387
typedef struct __si_xnap_dt_NonF1TerminatingBHInformation_Item SI_XNAP_DT_NonF1TerminatingBHInformation_Item;




// L:387
typedef struct __si_xnap_dt_NPN_Broadcast_Information_SNPN SI_XNAP_DT_NPN_Broadcast_Information_SNPN;
// L:387
typedef struct __si_xnap_dt_NPN_Broadcast_Information_PNI_NPN SI_XNAP_DT_NPN_Broadcast_Information_PNI_NPN;

// L:387
typedef struct __si_xnap_dt_NPNMobilityInformation_SNPN SI_XNAP_DT_NPNMobilityInformation_SNPN;
// L:387
typedef struct __si_xnap_dt_NPNMobilityInformation_PNI_NPN SI_XNAP_DT_NPNMobilityInformation_PNI_NPN;

// L:387
typedef struct __si_xnap_dt_NPNPagingAssistanceInformation_PNI_NPN SI_XNAP_DT_NPNPagingAssistanceInformation_PNI_NPN;

// L:387
typedef struct __si_xnap_dt_NPN_Support_SNPN SI_XNAP_DT_NPN_Support_SNPN;

// L:387
typedef struct __si_xnap_dt_NPRACHConfiguration SI_XNAP_DT_NPRACHConfiguration;
// L:4446
typedef struct __si_xnap_dt_NPRACHConfigurationFDD_anchorCarrier_NPRACHConfig SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_NPRACHConfig;
// L:4446
typedef struct __si_xnap_dt_NPRACHConfigurationFDD_anchorCarrier_EDT_NPRACHConfig SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_EDT_NPRACHConfig;
// L:4446
typedef struct __si_xnap_dt_NPRACHConfigurationFDD_anchorCarrier_Format2_NPRACHConfig SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_Format2_NPRACHConfig;
// L:4446
typedef struct __si_xnap_dt_NPRACHConfigurationFDD_anchorCarrier_Format2_EDT_NPRACHConfig SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_Format2_EDT_NPRACHConfig;
// L:4446
typedef struct __si_xnap_dt_NPRACHConfigurationFDD_non_anchorCarrier_NPRACHConfig SI_XNAP_DT_NPRACHConfigurationFDD_non_anchorCarrier_NPRACHConfig;
// L:4446
typedef struct __si_xnap_dt_NPRACHConfigurationFDD_non_anchorCarrier_Format2_NPRACHConfig SI_XNAP_DT_NPRACHConfigurationFDD_non_anchorCarrier_Format2_NPRACHConfig;
// L:387
typedef struct __si_xnap_dt_NPRACHConfiguration_FDD SI_XNAP_DT_NPRACHConfiguration_FDD;
// L:4446
typedef struct __si_xnap_dt_NPRACHConfigurationTDD_anchorCarrier_NPRACHConfigTDD SI_XNAP_DT_NPRACHConfigurationTDD_anchorCarrier_NPRACHConfigTDD;
// L:4446
typedef struct __si_xnap_dt_NPRACHConfigurationTDD_non_anchorCarrier_NPRACHConfigTDD SI_XNAP_DT_NPRACHConfigurationTDD_non_anchorCarrier_NPRACHConfigTDD;
// L:387
typedef struct __si_xnap_dt_NPRACHConfiguration_TDD SI_XNAP_DT_NPRACHConfiguration_TDD;


// L:4446
typedef struct __si_xnap_dt_NonAnchorCarrierFrequencylist_non_anchorCarrierFrquency SI_XNAP_DT_NonAnchorCarrierFrequencylist_non_anchorCarrierFrquency;
// L:387
typedef struct __si_xnap_dt_Non_AnchorCarrierFrequencylist_def_213223650 SI_XNAP_DT_Non_AnchorCarrierFrequencylist_def_213223650;
// L:1224
typedef struct __si_xnap_dt_Non_AnchorCarrierFrequencylist SI_XNAP_DT_Non_AnchorCarrierFrequencylist;
// L:4921
typedef struct __si_xnap_dt_NR_Cell_Identity SI_XNAP_DT_NR_Cell_Identity;
// L:1224
typedef struct __si_xnap_dt_NG_RAN_Cell_Identity_ListinRANPagingArea SI_XNAP_DT_NG_RAN_Cell_Identity_ListinRANPagingArea;
// L:387
typedef struct __si_xnap_dt_NR_CGI SI_XNAP_DT_NR_CGI;
// L:1224
typedef struct __si_xnap_dt_NR_U_Channel_List SI_XNAP_DT_NR_U_Channel_List;
// L:387
typedef struct __si_xnap_dt_NR_U_Channel_Item SI_XNAP_DT_NR_U_Channel_Item;
// L:5377
typedef struct __si_xnap_dt_NR_U_ChannelID SI_XNAP_DT_NR_U_ChannelID;
// L:5377
typedef struct __si_xnap_dt_ChannelOccupancyTimePercentage SI_XNAP_DT_ChannelOccupancyTimePercentage;
// L:5377
typedef struct __si_xnap_dt_EnergyDetectionThreshold SI_XNAP_DT_EnergyDetectionThreshold;
// L:1224
typedef struct __si_xnap_dt_NR_U_ChannelInfo_List SI_XNAP_DT_NR_U_ChannelInfo_List;
// L:387
typedef struct __si_xnap_dt_NR_U_ChannelInfo_Item SI_XNAP_DT_NR_U_ChannelInfo_Item;

// L:387
typedef struct __si_xnap_dt_NRA2XServicesAuthorized SI_XNAP_DT_NRA2XServicesAuthorized;


// L:5377
typedef struct __si_xnap_dt_NRFrequencyBand SI_XNAP_DT_NRFrequencyBand;
// L:1224
typedef struct __si_xnap_dt_NRFrequencyBand_List SI_XNAP_DT_NRFrequencyBand_List;
// L:387
typedef struct __si_xnap_dt_NRFrequencyBandItem SI_XNAP_DT_NRFrequencyBandItem;
// L:387
typedef struct __si_xnap_dt_NRFrequencyInfo SI_XNAP_DT_NRFrequencyInfo;
// L:4446
typedef struct __si_xnap_dt_NRMobilityHistoryReport SI_XNAP_DT_NRMobilityHistoryReport;

// L:387
typedef struct __si_xnap_dt_NRModeInfoFDD SI_XNAP_DT_NRModeInfoFDD;
// L:387
typedef struct __si_xnap_dt_NRModeInfoTDD SI_XNAP_DT_NRModeInfoTDD;

// L:387
typedef struct __si_xnap_dt_NRPagingeDRXInformation SI_XNAP_DT_NRPagingeDRXInformation;


// L:387
typedef struct __si_xnap_dt_NRPagingeDRXInformationforRRCINACTIVE SI_XNAP_DT_NRPagingeDRXInformationforRRCINACTIVE;

// L:387
typedef struct __si_xnap_dt_NRPagingLongeDRXInformationforRRCINACTIVE SI_XNAP_DT_NRPagingLongeDRXInformationforRRCINACTIVE;


// L:5377
typedef struct __si_xnap_dt_NRPCI SI_XNAP_DT_NRPCI;

// L:387
typedef struct __si_xnap_dt_NRTransmissionBandwidth SI_XNAP_DT_NRTransmissionBandwidth;
// L:5377
typedef struct __si_xnap_dt_NRPPaPositioningInformation_nRPPaTransactionID SI_XNAP_DT_NRPPaPositioningInformation_nRPPaTransactionID;
// L:387
typedef struct __si_xnap_dt_NRPPaPositioningInformation SI_XNAP_DT_NRPPaPositioningInformation;
// L:387
typedef struct __si_xnap_dt_Transmission_Bandwidth_asymmetric SI_XNAP_DT_Transmission_Bandwidth_asymmetric;

// L:4446
typedef struct __si_xnap_dt_NG_RANTraceID SI_XNAP_DT_NG_RANTraceID;

// L:387
typedef struct __si_xnap_dt_NRV2XServicesAuthorized SI_XNAP_DT_NRV2XServicesAuthorized;
// L:387
typedef struct __si_xnap_dt_NRUESidelinkAggregateMaximumBitRate SI_XNAP_DT_NRUESidelinkAggregateMaximumBitRate;
// L:5377
typedef struct __si_xnap_dt_NSAG_ID SI_XNAP_DT_NSAG_ID;
// L:5377
typedef struct __si_xnap_dt_OfferedCapacity SI_XNAP_DT_OfferedCapacity;

// L:5377
typedef struct __si_xnap_dt_PositioningInformation_nRPPaTransactionID SI_XNAP_DT_PositioningInformation_nRPPaTransactionID;
// L:387
typedef struct __si_xnap_dt_PositioningInformation SI_XNAP_DT_PositioningInformation;
// L:5377
typedef struct __si_xnap_dt_PacketDelayBudget SI_XNAP_DT_PacketDelayBudget;
// L:387
typedef struct __si_xnap_dt_PacketErrorRate SI_XNAP_DT_PacketErrorRate;


// L:5377
typedef struct __si_xnap_dt_PER_Scalar SI_XNAP_DT_PER_Scalar;
// L:5377
typedef struct __si_xnap_dt_PER_Exponent SI_XNAP_DT_PER_Exponent;
// L:387
typedef struct __si_xnap_dt_PEIPSassistanceInformation SI_XNAP_DT_PEIPSassistanceInformation;
// L:5377
typedef struct __si_xnap_dt_PacketLossRate SI_XNAP_DT_PacketLossRate;



// L:387
typedef struct __si_xnap_dt_PC5QoSParameters SI_XNAP_DT_PC5QoSParameters;
// L:1224
typedef struct __si_xnap_dt_PC5QoSFlowList SI_XNAP_DT_PC5QoSFlowList;
// L:387
typedef struct __si_xnap_dt_PC5QoSFlowItem SI_XNAP_DT_PC5QoSFlowItem;
// L:387
typedef struct __si_xnap_dt_PC5FlowBitRates SI_XNAP_DT_PC5FlowBitRates;






// L:387
typedef struct __si_xnap_dt_PDCPSNLength SI_XNAP_DT_PDCPSNLength;
// L:387
typedef struct __si_xnap_dt_PDUSetQoSParameters SI_XNAP_DT_PDUSetQoSParameters;

// L:387
typedef struct __si_xnap_dt_PDUSetQoSInformation SI_XNAP_DT_PDUSetQoSInformation;

// L:387
typedef struct __si_xnap_dt_PDUSessionAggregateMaximumBitRate SI_XNAP_DT_PDUSessionAggregateMaximumBitRate;
// L:1224
typedef struct __si_xnap_dt_PDUSession_List SI_XNAP_DT_PDUSession_List;
// L:1224
typedef struct __si_xnap_dt_PDUSession_List_withCause SI_XNAP_DT_PDUSession_List_withCause;
// L:387
typedef struct __si_xnap_dt_PDUSession_List_withCause_Item SI_XNAP_DT_PDUSession_List_withCause_Item;
// L:1224
typedef struct __si_xnap_dt_PDUSession_List_withDataForwardingFromTarget SI_XNAP_DT_PDUSession_List_withDataForwardingFromTarget;
// L:387
typedef struct __si_xnap_dt_PDUSession_List_withDataForwardingFromTarget_Item SI_XNAP_DT_PDUSession_List_withDataForwardingFromTarget_Item;
// L:1224
typedef struct __si_xnap_dt_PDUSession_List_withDataForwardingRequest SI_XNAP_DT_PDUSession_List_withDataForwardingRequest;
// L:387
typedef struct __si_xnap_dt_PDUSession_List_withDataForwardingRequest_Item SI_XNAP_DT_PDUSession_List_withDataForwardingRequest_Item;
// L:1224
typedef struct __si_xnap_dt_PDUSessionsListToBeReleased_UPError SI_XNAP_DT_PDUSessionsListToBeReleased_UPError;
// L:387
typedef struct __si_xnap_dt_PDUSessionsListToBeReleased_UPError_Item SI_XNAP_DT_PDUSessionsListToBeReleased_UPError_Item;
// L:1224
typedef struct __si_xnap_dt_PDUSessionResourcesAdmitted_List SI_XNAP_DT_PDUSessionResourcesAdmitted_List;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourcesAdmitted_Item SI_XNAP_DT_PDUSessionResourcesAdmitted_Item;

// L:387
typedef struct __si_xnap_dt_PDUSessionResourceAdmittedInfo SI_XNAP_DT_PDUSessionResourceAdmittedInfo;
// L:1224
typedef struct __si_xnap_dt_PDUSessionResourcesNotAdmitted_List SI_XNAP_DT_PDUSessionResourcesNotAdmitted_List;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourcesNotAdmitted_Item SI_XNAP_DT_PDUSessionResourcesNotAdmitted_Item;
// L:1224
typedef struct __si_xnap_dt_PDUSessionResourcesToBeSetup_List SI_XNAP_DT_PDUSessionResourcesToBeSetup_List;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourcesToBeSetup_Item SI_XNAP_DT_PDUSessionResourcesToBeSetup_Item;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourceSetupInfo_SNterminated SI_XNAP_DT_PDUSessionResourceSetupInfo_SNterminated;
// L:1224
typedef struct __si_xnap_dt_QoSFlowsToBeSetup_List_Setup_SNterminated SI_XNAP_DT_QoSFlowsToBeSetup_List_Setup_SNterminated;
// L:387
typedef struct __si_xnap_dt_QoSFlowsToBeSetup_List_Setup_SNterminated_Item SI_XNAP_DT_QoSFlowsToBeSetup_List_Setup_SNterminated_Item;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourceSetupResponseInfo_SNterminated SI_XNAP_DT_PDUSessionResourceSetupResponseInfo_SNterminated;
// L:1224
typedef struct __si_xnap_dt_DRBsToBeSetupList_SetupResponse_SNterminated SI_XNAP_DT_DRBsToBeSetupList_SetupResponse_SNterminated;
// L:387
typedef struct __si_xnap_dt_DRBsToBeSetupList_SetupResponse_SNterminated_Item SI_XNAP_DT_DRBsToBeSetupList_SetupResponse_SNterminated_Item;
// L:1224
typedef struct __si_xnap_dt_QoSFlowsMappedtoDRB_SetupResponse_SNterminated SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_SNterminated;
// L:387
typedef struct __si_xnap_dt_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourceSetupInfo_MNterminated SI_XNAP_DT_PDUSessionResourceSetupInfo_MNterminated;
// L:1224
typedef struct __si_xnap_dt_DRBsToBeSetupList_Setup_MNterminated SI_XNAP_DT_DRBsToBeSetupList_Setup_MNterminated;
// L:387
typedef struct __si_xnap_dt_DRBsToBeSetupList_Setup_MNterminated_Item SI_XNAP_DT_DRBsToBeSetupList_Setup_MNterminated_Item;
// L:1224
typedef struct __si_xnap_dt_QoSFlowsMappedtoDRB_Setup_MNterminated SI_XNAP_DT_QoSFlowsMappedtoDRB_Setup_MNterminated;
// L:387
typedef struct __si_xnap_dt_QoSFlowsMappedtoDRB_Setup_MNterminated_Item SI_XNAP_DT_QoSFlowsMappedtoDRB_Setup_MNterminated_Item;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourceSetupResponseInfo_MNterminated SI_XNAP_DT_PDUSessionResourceSetupResponseInfo_MNterminated;
// L:1224
typedef struct __si_xnap_dt_DRBsAdmittedList_SetupResponse_MNterminated SI_XNAP_DT_DRBsAdmittedList_SetupResponse_MNterminated;
// L:387
typedef struct __si_xnap_dt_DRBsAdmittedList_SetupResponse_MNterminated_Item SI_XNAP_DT_DRBsAdmittedList_SetupResponse_MNterminated_Item;
// L:1224
typedef struct __si_xnap_dt_QoSFlowsMappedtoDRB_SetupResponse_MNterminated SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_MNterminated;
// L:387
typedef struct __si_xnap_dt_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourceModificationInfo_SNterminated SI_XNAP_DT_PDUSessionResourceModificationInfo_SNterminated;
// L:1224
typedef struct __si_xnap_dt_QoSFlowsToBeSetup_List_Modified_SNterminated SI_XNAP_DT_QoSFlowsToBeSetup_List_Modified_SNterminated;
// L:387
typedef struct __si_xnap_dt_QoSFlowsToBeSetup_List_Modified_SNterminated_Item SI_XNAP_DT_QoSFlowsToBeSetup_List_Modified_SNterminated_Item;
// L:1224
typedef struct __si_xnap_dt_DRBsToBeModified_List_Modified_SNterminated SI_XNAP_DT_DRBsToBeModified_List_Modified_SNterminated;
// L:387
typedef struct __si_xnap_dt_DRBsToBeModified_List_Modified_SNterminated_Item SI_XNAP_DT_DRBsToBeModified_List_Modified_SNterminated_Item;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourceModificationResponseInfo_SNterminated SI_XNAP_DT_PDUSessionResourceModificationResponseInfo_SNterminated;
// L:1224
typedef struct __si_xnap_dt_DRBsToBeModifiedList_ModificationResponse_SNterminated SI_XNAP_DT_DRBsToBeModifiedList_ModificationResponse_SNterminated;
// L:387
typedef struct __si_xnap_dt_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item SI_XNAP_DT_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourceModificationInfo_MNterminated SI_XNAP_DT_PDUSessionResourceModificationInfo_MNterminated;
// L:1224
typedef struct __si_xnap_dt_DRBsToBeModifiedList_Modification_MNterminated SI_XNAP_DT_DRBsToBeModifiedList_Modification_MNterminated;
// L:387
typedef struct __si_xnap_dt_DRBsToBeModifiedList_Modification_MNterminated_Item SI_XNAP_DT_DRBsToBeModifiedList_Modification_MNterminated_Item;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourceModificationResponseInfo_MNterminated SI_XNAP_DT_PDUSessionResourceModificationResponseInfo_MNterminated;
// L:1224
typedef struct __si_xnap_dt_DRBsAdmittedList_ModificationResponse_MNterminated SI_XNAP_DT_DRBsAdmittedList_ModificationResponse_MNterminated;
// L:387
typedef struct __si_xnap_dt_DRBsAdmittedList_ModificationResponse_MNterminated_Item SI_XNAP_DT_DRBsAdmittedList_ModificationResponse_MNterminated_Item;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourceChangeRequiredInfo_SNterminated SI_XNAP_DT_PDUSessionResourceChangeRequiredInfo_SNterminated;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourceChangeConfirmInfo_SNterminated SI_XNAP_DT_PDUSessionResourceChangeConfirmInfo_SNterminated;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourceChangeRequiredInfo_MNterminated SI_XNAP_DT_PDUSessionResourceChangeRequiredInfo_MNterminated;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourceChangeConfirmInfo_MNterminated SI_XNAP_DT_PDUSessionResourceChangeConfirmInfo_MNterminated;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourceModRqdInfo_SNterminated SI_XNAP_DT_PDUSessionResourceModRqdInfo_SNterminated;
// L:1224
typedef struct __si_xnap_dt_DRBsToBeSetup_List_ModRqd_SNterminated SI_XNAP_DT_DRBsToBeSetup_List_ModRqd_SNterminated;
// L:387
typedef struct __si_xnap_dt_DRBsToBeSetup_List_ModRqd_SNterminated_Item SI_XNAP_DT_DRBsToBeSetup_List_ModRqd_SNterminated_Item;
// L:1224
typedef struct __si_xnap_dt_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated SI_XNAP_DT_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated;
// L:387
typedef struct __si_xnap_dt_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item SI_XNAP_DT_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item;
// L:1224
typedef struct __si_xnap_dt_DRBsToBeModified_List_ModRqd_SNterminated SI_XNAP_DT_DRBsToBeModified_List_ModRqd_SNterminated;
// L:387
typedef struct __si_xnap_dt_DRBsToBeModified_List_ModRqd_SNterminated_Item SI_XNAP_DT_DRBsToBeModified_List_ModRqd_SNterminated_Item;
// L:1224
typedef struct __si_xnap_dt_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated SI_XNAP_DT_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated;
// L:387
typedef struct __si_xnap_dt_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item SI_XNAP_DT_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourceModConfirmInfo_SNterminated SI_XNAP_DT_PDUSessionResourceModConfirmInfo_SNterminated;
// L:1224
typedef struct __si_xnap_dt_DRBsAdmittedList_ModConfirm_SNterminated SI_XNAP_DT_DRBsAdmittedList_ModConfirm_SNterminated;
// L:387
typedef struct __si_xnap_dt_DRBsAdmittedList_ModConfirm_SNterminated_Item SI_XNAP_DT_DRBsAdmittedList_ModConfirm_SNterminated_Item;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourceModRqdInfo_MNterminated SI_XNAP_DT_PDUSessionResourceModRqdInfo_MNterminated;
// L:1224
typedef struct __si_xnap_dt_DRBsToBeModified_List_ModRqd_MNterminated SI_XNAP_DT_DRBsToBeModified_List_ModRqd_MNterminated;
// L:387
typedef struct __si_xnap_dt_DRBsToBeModified_List_ModRqd_MNterminated_Item SI_XNAP_DT_DRBsToBeModified_List_ModRqd_MNterminated_Item;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourceModConfirmInfo_MNterminated SI_XNAP_DT_PDUSessionResourceModConfirmInfo_MNterminated;
// L:1224
typedef struct __si_xnap_dt_PDUSessionResourceBearerSetupCompleteInfoSNterminated_dRBsToBeSetupList SI_XNAP_DT_PDUSessionResourceBearerSetupCompleteInfoSNterminated_dRBsToBeSetupList;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourceBearerSetupCompleteInfo_SNterminated SI_XNAP_DT_PDUSessionResourceBearerSetupCompleteInfo_SNterminated;
// L:387
typedef struct __si_xnap_dt_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item SI_XNAP_DT_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item;
// L:1224
typedef struct __si_xnap_dt_PDUSessionResourceSecondaryRATUsageList SI_XNAP_DT_PDUSessionResourceSecondaryRATUsageList;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourceSecondaryRATUsageItem SI_XNAP_DT_PDUSessionResourceSecondaryRATUsageItem;

// L:387
typedef struct __si_xnap_dt_PDUSessionUsageReport SI_XNAP_DT_PDUSessionUsageReport;

// L:5377
typedef struct __si_xnap_dt_PDUSession_ID SI_XNAP_DT_PDUSession_ID;
// L:5377
typedef struct __si_xnap_dt_PDUSessionNetworkInstance SI_XNAP_DT_PDUSessionNetworkInstance;
// L:4446
typedef struct __si_xnap_dt_PDUSessionCommonNetworkInstance SI_XNAP_DT_PDUSessionCommonNetworkInstance;
// L:5377
typedef struct __si_xnap_dt_PDUSession_PairID SI_XNAP_DT_PDUSession_PairID;
// L:387
typedef struct __si_xnap_dt_Periodical SI_XNAP_DT_Periodical;

// L:4446
typedef struct __si_xnap_dt_PLMN_Identity SI_XNAP_DT_PLMN_Identity;
// L:387
typedef struct __si_xnap_dt_PLMNAreaBasedQMC SI_XNAP_DT_PLMNAreaBasedQMC;
// L:1224
typedef struct __si_xnap_dt_PLMNListforQMC SI_XNAP_DT_PLMNListforQMC;
// L:1224
typedef struct __si_xnap_dt_PCIListForMDT SI_XNAP_DT_PCIListForMDT;

// L:4921
typedef struct __si_xnap_dt_PortNumber SI_XNAP_DT_PortNumber;
// L:387
typedef struct __si_xnap_dt_PosPartialUEContextInfo SI_XNAP_DT_PosPartialUEContextInfo;
// L:387
typedef struct __si_xnap_dt_PredictedUETrajectory_Item SI_XNAP_DT_PredictedUETrajectory_Item;

// L:5377
typedef struct __si_xnap_dt_PredictedTrajectoryNGRANCellInfo_predictedTimeUEStaysInCell SI_XNAP_DT_PredictedTrajectoryNGRANCellInfo_predictedTimeUEStaysInCell;
// L:387
typedef struct __si_xnap_dt_PredictedTrajectoryNGRANCellInfo SI_XNAP_DT_PredictedTrajectoryNGRANCellInfo;
// L:5377
typedef struct __si_xnap_dt_PriorityLevelQoS SI_XNAP_DT_PriorityLevelQoS;
// L:5377
typedef struct __si_xnap_dt_ProtectedEUTRAResourceIndication_pDCCHRegionLength SI_XNAP_DT_ProtectedEUTRAResourceIndication_pDCCHRegionLength;
// L:387
typedef struct __si_xnap_dt_ProtectedE_UTRAResourceIndication SI_XNAP_DT_ProtectedE_UTRAResourceIndication;
// L:1224
typedef struct __si_xnap_dt_ProtectedE_UTRAResourceList SI_XNAP_DT_ProtectedE_UTRAResourceList;

// L:4921
typedef struct __si_xnap_dt_ProtectedEUTRAResourceItem_intra_PRBProtectedResourceFootprint SI_XNAP_DT_ProtectedEUTRAResourceItem_intra_PRBProtectedResourceFootprint;
// L:4921
typedef struct __si_xnap_dt_ProtectedEUTRAResourceItem_protectedFootprintFrequencyPattern SI_XNAP_DT_ProtectedEUTRAResourceItem_protectedFootprintFrequencyPattern;
// L:387
typedef struct __si_xnap_dt_ProtectedE_UTRAResource_Item SI_XNAP_DT_ProtectedE_UTRAResource_Item;
// L:5377
typedef struct __si_xnap_dt_ProtectedEUTRAFootprintTimePattern_protectedFootprintTimeperiodicity SI_XNAP_DT_ProtectedEUTRAFootprintTimePattern_protectedFootprintTimeperiodicity;
// L:5377
typedef struct __si_xnap_dt_ProtectedEUTRAFootprintTimePattern_protectedFootrpintStartTime SI_XNAP_DT_ProtectedEUTRAFootprintTimePattern_protectedFootrpintStartTime;
// L:387
typedef struct __si_xnap_dt_ProtectedE_UTRAFootprintTimePattern SI_XNAP_DT_ProtectedE_UTRAFootprintTimePattern;



// L:4446
typedef struct __si_xnap_dt_PSCellListContainer SI_XNAP_DT_PSCellListContainer;
// L:387
typedef struct __si_xnap_dt_PNI_NPN_AreaScopeofMDT SI_XNAP_DT_PNI_NPN_AreaScopeofMDT;
// L:387
typedef struct __si_xnap_dt_PNI_NPNBasedMDT SI_XNAP_DT_PNI_NPNBasedMDT;
// L:387
typedef struct __si_xnap_dt_QMCConfigInfo SI_XNAP_DT_QMCConfigInfo;
// L:1224
typedef struct __si_xnap_dt_UEAppLayerMeasInfoList SI_XNAP_DT_UEAppLayerMeasInfoList;
// L:387
typedef struct __si_xnap_dt_UEAppLayerMeasInfo_Item SI_XNAP_DT_UEAppLayerMeasInfo_Item;
// L:387
typedef struct __si_xnap_dt_QMCCoordinationRequest SI_XNAP_DT_QMCCoordinationRequest;
// L:1224
typedef struct __si_xnap_dt_MN_to_SN_QMCCoordRequestList SI_XNAP_DT_MN_to_SN_QMCCoordRequestList;





// L:387
typedef struct __si_xnap_dt_MN_to_SN_QMCCoordRequestList_Item SI_XNAP_DT_MN_to_SN_QMCCoordRequestList_Item;
// L:1224
typedef struct __si_xnap_dt_SN_to_MN_QMCCoordRequestList SI_XNAP_DT_SN_to_MN_QMCCoordRequestList;





// L:387
typedef struct __si_xnap_dt_SN_to_MN_QMCCoordRequestList_Item SI_XNAP_DT_SN_to_MN_QMCCoordRequestList_Item;
// L:387
typedef struct __si_xnap_dt_QMCCoordinationResponse SI_XNAP_DT_QMCCoordinationResponse;
// L:1224
typedef struct __si_xnap_dt_MN_to_SN_QMCCoordResponseList SI_XNAP_DT_MN_to_SN_QMCCoordResponseList;





// L:387
typedef struct __si_xnap_dt_MN_to_SN_QMCCoordResponseList_Item SI_XNAP_DT_MN_to_SN_QMCCoordResponseList_Item;
// L:1224
typedef struct __si_xnap_dt_SN_to_MN_QMCCoordResponseList SI_XNAP_DT_SN_to_MN_QMCCoordResponseList;




// L:387
typedef struct __si_xnap_dt_SN_to_MN_QMCCoordResponseList_Item SI_XNAP_DT_SN_to_MN_QMCCoordResponseList_Item;


// L:387
typedef struct __si_xnap_dt_QoERVQoEReportingPaths SI_XNAP_DT_QoERVQoEReportingPaths;
// L:387
typedef struct __si_xnap_dt_RVQoEConfig SI_XNAP_DT_RVQoEConfig;

// L:5377
typedef struct __si_xnap_dt_QOEMeasConfAppLayerID SI_XNAP_DT_QOEMeasConfAppLayerID;

// L:4446
typedef struct __si_xnap_dt_QOEReference SI_XNAP_DT_QOEReference;

// L:5377
typedef struct __si_xnap_dt_QoSFlowIdentifier SI_XNAP_DT_QoSFlowIdentifier;

// L:387
typedef struct __si_xnap_dt_QoSFlowLevelQoSParameters SI_XNAP_DT_QoSFlowLevelQoSParameters;

// L:1224
typedef struct __si_xnap_dt_QoSFlowNotificationControlIndicationInfo SI_XNAP_DT_QoSFlowNotificationControlIndicationInfo;

// L:387
typedef struct __si_xnap_dt_QoSFlowNotify_Item SI_XNAP_DT_QoSFlowNotify_Item;
// L:1224
typedef struct __si_xnap_dt_QoSFlows_List SI_XNAP_DT_QoSFlows_List;
// L:387
typedef struct __si_xnap_dt_QoSFlow_Item SI_XNAP_DT_QoSFlow_Item;
// L:1224
typedef struct __si_xnap_dt_QoSFlows_List_withCause SI_XNAP_DT_QoSFlows_List_withCause;
// L:387
typedef struct __si_xnap_dt_QoSFlowwithCause_Item SI_XNAP_DT_QoSFlowwithCause_Item;
// L:4921
typedef struct __si_xnap_dt_QoSMappingInformation_dscp SI_XNAP_DT_QoSMappingInformation_dscp;
// L:4921
typedef struct __si_xnap_dt_QoSMappingInformation_flow_label SI_XNAP_DT_QoSMappingInformation_flow_label;
// L:387
typedef struct __si_xnap_dt_QoS_Mapping_Information SI_XNAP_DT_QoS_Mapping_Information;
// L:5377
typedef struct __si_xnap_dt_QoSParaSetIndex SI_XNAP_DT_QoSParaSetIndex;
// L:5377
typedef struct __si_xnap_dt_QoSParaSetNotifyIndex SI_XNAP_DT_QoSParaSetNotifyIndex;
// L:1224
typedef struct __si_xnap_dt_QoSFlowsAdmitted_List SI_XNAP_DT_QoSFlowsAdmitted_List;
// L:387
typedef struct __si_xnap_dt_QoSFlowsAdmitted_Item SI_XNAP_DT_QoSFlowsAdmitted_Item;
// L:1224
typedef struct __si_xnap_dt_QoSFlowsToBeSetup_List SI_XNAP_DT_QoSFlowsToBeSetup_List;
// L:387
typedef struct __si_xnap_dt_QoSFlowsToBeSetup_Item SI_XNAP_DT_QoSFlowsToBeSetup_Item;
// L:1224
typedef struct __si_xnap_dt_QoSFlowsUsageReportList SI_XNAP_DT_QoSFlowsUsageReportList;

// L:387
typedef struct __si_xnap_dt_QoSFlowsUsageReport_Item SI_XNAP_DT_QoSFlowsUsageReport_Item;


// L:5377
typedef struct __si_xnap_dt_QosMonitoringReportingFrequency SI_XNAP_DT_QosMonitoringReportingFrequency;
// L:4446
typedef struct __si_xnap_dt_RACH_Config_Common SI_XNAP_DT_RACH_Config_Common;
// L:4446
typedef struct __si_xnap_dt_RACH_Config_Common_IAB SI_XNAP_DT_RACH_Config_Common_IAB;
// L:1224
typedef struct __si_xnap_dt_RAReport SI_XNAP_DT_RAReport;
// L:387
typedef struct __si_xnap_dt_RAReportList_Item SI_XNAP_DT_RAReportList_Item;
// L:4446
typedef struct __si_xnap_dt_RAReportContainer SI_XNAP_DT_RAReportContainer;

// L:5377
typedef struct __si_xnap_dt_RANAC SI_XNAP_DT_RANAC;
// L:387
typedef struct __si_xnap_dt_RANAreaID SI_XNAP_DT_RANAreaID;
// L:1224
typedef struct __si_xnap_dt_RANAreaID_List SI_XNAP_DT_RANAreaID_List;

// L:387
typedef struct __si_xnap_dt_RANPagingArea SI_XNAP_DT_RANPagingArea;

// L:5377
typedef struct __si_xnap_dt_RANPagingAttemptInfo_pagingAttemptCount SI_XNAP_DT_RANPagingAttemptInfo_pagingAttemptCount;
// L:5377
typedef struct __si_xnap_dt_RANPagingAttemptInfo_intendedNumberOfPagingAttempts SI_XNAP_DT_RANPagingAttemptInfo_intendedNumberOfPagingAttempts;

// L:387
typedef struct __si_xnap_dt_RANPagingAttemptInfo SI_XNAP_DT_RANPagingAttemptInfo;


// L:5377
typedef struct __si_xnap_dt_RBsetConfiguration_numberofRBSets SI_XNAP_DT_RBsetConfiguration_numberofRBSets;
// L:387
typedef struct __si_xnap_dt_RBsetConfiguration SI_XNAP_DT_RBsetConfiguration;
// L:4921
typedef struct __si_xnap_dt_Redcap_Bcast_Information SI_XNAP_DT_Redcap_Bcast_Information;

// L:387
typedef struct __si_xnap_dt_RedundantPDUSessionInformation SI_XNAP_DT_RedundantPDUSessionInformation;


// L:4446
typedef struct __si_xnap_dt_RequestedSRSTransmissionCharacteristics SI_XNAP_DT_RequestedSRSTransmissionCharacteristics;
// L:4446
typedef struct __si_xnap_dt_RoutingID SI_XNAP_DT_RoutingID;
// L:1224
typedef struct __si_xnap_dt_ReplacingCells SI_XNAP_DT_ReplacingCells;
// L:387
typedef struct __si_xnap_dt_ReplacingCells_Item SI_XNAP_DT_ReplacingCells_Item;


// L:4446
typedef struct __si_xnap_dt_ReportConfigContainer SI_XNAP_DT_ReportConfigContainer;



// L:4921
typedef struct __si_xnap_dt_ReportCharacteristics SI_XNAP_DT_ReportCharacteristics;
// L:4921
typedef struct __si_xnap_dt_ReportCharacteristicsForDataCollection SI_XNAP_DT_ReportCharacteristicsForDataCollection;


// L:5377
typedef struct __si_xnap_dt_RequestedPredictionTime SI_XNAP_DT_RequestedPredictionTime;


// L:5377
typedef struct __si_xnap_dt_RequestReferenceID SI_XNAP_DT_RequestReferenceID;

// L:4921
typedef struct __si_xnap_dt_ReservedSubframePattern_reservedSubframePattern SI_XNAP_DT_ReservedSubframePattern_reservedSubframePattern;
// L:387
typedef struct __si_xnap_dt_ReservedSubframePattern SI_XNAP_DT_ReservedSubframePattern;

// L:387
typedef struct __si_xnap_dt_ResetRequestTypeInfo_Full SI_XNAP_DT_ResetRequestTypeInfo_Full;
// L:387
typedef struct __si_xnap_dt_ResetRequestTypeInfo_Partial SI_XNAP_DT_ResetRequestTypeInfo_Partial;
// L:1224
typedef struct __si_xnap_dt_ResetRequestPartialReleaseList SI_XNAP_DT_ResetRequestPartialReleaseList;
// L:387
typedef struct __si_xnap_dt_ResetRequestPartialReleaseItem SI_XNAP_DT_ResetRequestPartialReleaseItem;

// L:387
typedef struct __si_xnap_dt_ResetResponseTypeInfo_Full SI_XNAP_DT_ResetResponseTypeInfo_Full;
// L:387
typedef struct __si_xnap_dt_ResetResponseTypeInfo_Partial SI_XNAP_DT_ResetResponseTypeInfo_Partial;
// L:1224
typedef struct __si_xnap_dt_ResetResponsePartialReleaseList SI_XNAP_DT_ResetResponsePartialReleaseList;
// L:387
typedef struct __si_xnap_dt_ResetResponsePartialReleaseItem SI_XNAP_DT_ResetResponsePartialReleaseItem;

// L:387
typedef struct __si_xnap_dt_RLC_Status SI_XNAP_DT_RLC_Status;

// L:387
typedef struct __si_xnap_dt_RLCDuplicationInformation SI_XNAP_DT_RLCDuplicationInformation;
// L:1224
typedef struct __si_xnap_dt_RLCDuplicationStateList SI_XNAP_DT_RLCDuplicationStateList;

// L:387
typedef struct __si_xnap_dt_RLCDuplicationState_Item SI_XNAP_DT_RLCDuplicationState_Item;

// L:5377
typedef struct __si_xnap_dt_RFSP_Index SI_XNAP_DT_RFSP_Index;

// L:387
typedef struct __si_xnap_dt_RRCConnections SI_XNAP_DT_RRCConnections;

// L:387
typedef struct __si_xnap_dt_RRCReestab_initiated SI_XNAP_DT_RRCReestab_initiated;

// L:387
typedef struct __si_xnap_dt_RRCReestab_Initiated_Reporting_wo_UERLFReport SI_XNAP_DT_RRCReestab_Initiated_Reporting_wo_UERLFReport;
// L:387
typedef struct __si_xnap_dt_RRCReestab_Initiated_Reporting_with_UERLFReport SI_XNAP_DT_RRCReestab_Initiated_Reporting_with_UERLFReport;
// L:387
typedef struct __si_xnap_dt_RRCSetup_initiated SI_XNAP_DT_RRCSetup_initiated;

// L:387
typedef struct __si_xnap_dt_RRCSetup_Initiated_Reporting_with_UERLFReport SI_XNAP_DT_RRCSetup_Initiated_Reporting_with_UERLFReport;

// L:1224
typedef struct __si_xnap_dt_RaReportIndicationList SI_XNAP_DT_RaReportIndicationList;
// L:387
typedef struct __si_xnap_dt_RaReportIndicationList_Item SI_XNAP_DT_RaReportIndicationList_Item;
// L:5377
typedef struct __si_xnap_dt_RadioResourceStatusNRU_dL_Total_PRB_usage SI_XNAP_DT_RadioResourceStatusNRU_dL_Total_PRB_usage;
// L:5377
typedef struct __si_xnap_dt_RadioResourceStatusNRU_uL_Total_PRB_usage SI_XNAP_DT_RadioResourceStatusNRU_uL_Total_PRB_usage;
// L:387
typedef struct __si_xnap_dt_RadioResourceStatusNR_U SI_XNAP_DT_RadioResourceStatusNR_U;

// L:1224
typedef struct __si_xnap_dt_S_NSSAIListQoE SI_XNAP_DT_S_NSSAIListQoE;
// L:387
typedef struct __si_xnap_dt_S_BasedMDT SI_XNAP_DT_S_BasedMDT;

// L:387
typedef struct __si_xnap_dt_S_CPAC_Request_Info SI_XNAP_DT_S_CPAC_Request_Info;

// L:1224
typedef struct __si_xnap_dt_S_CPAC_SecurityConfig_List SI_XNAP_DT_S_CPAC_SecurityConfig_List;
// L:387
typedef struct __si_xnap_dt_S_CPAC_SecurityConfig_Item SI_XNAP_DT_S_CPAC_SecurityConfig_Item;
// L:1224
typedef struct __si_xnap_dt_S_CPAC_MultiTargetSN_List SI_XNAP_DT_S_CPAC_MultiTargetSN_List;
// L:4446
typedef struct __si_xnap_dt_SCPACMultiTargetSNItem_recommendedCandidatePSCells SI_XNAP_DT_SCPACMultiTargetSNItem_recommendedCandidatePSCells;
// L:387
typedef struct __si_xnap_dt_S_CPAC_MultiTargetSN_Item SI_XNAP_DT_S_CPAC_MultiTargetSN_Item;


// L:387
typedef struct __si_xnap_dt_SecondarydataForwardingInfoFromTarget_Item SI_XNAP_DT_SecondarydataForwardingInfoFromTarget_Item;
// L:1224
typedef struct __si_xnap_dt_SecondarydataForwardingInfoFromTarget_List SI_XNAP_DT_SecondarydataForwardingInfoFromTarget_List;




// L:4446
typedef struct __si_xnap_dt_SCGFailureReportContainer SI_XNAP_DT_SCGFailureReportContainer;
// L:387
typedef struct __si_xnap_dt_SDTSupportRequest SI_XNAP_DT_SDTSupportRequest;



// L:387
typedef struct __si_xnap_dt_SDTPartialUEContextInfo SI_XNAP_DT_SDTPartialUEContextInfo;
// L:1224
typedef struct __si_xnap_dt_SDT_DRBsToBeSetupList SI_XNAP_DT_SDT_DRBsToBeSetupList;
// L:4446
typedef struct __si_xnap_dt_SDTDRBsToBeSetupListItem_dRB_RLC_Bearer_Configuration SI_XNAP_DT_SDTDRBsToBeSetupListItem_dRB_RLC_Bearer_Configuration;
// L:387
typedef struct __si_xnap_dt_SDT_DRBsToBeSetupList_Item SI_XNAP_DT_SDT_DRBsToBeSetupList_Item;
// L:1224
typedef struct __si_xnap_dt_SDT_SRBsToBeSetupList SI_XNAP_DT_SDT_SRBsToBeSetupList;
// L:4446
typedef struct __si_xnap_dt_SDTSRBsToBeSetupListItem_sRB_RLC_Bearer_Configuration SI_XNAP_DT_SDTSRBsToBeSetupListItem_sRB_RLC_Bearer_Configuration;
// L:387
typedef struct __si_xnap_dt_SDT_SRBsToBeSetupList_Item SI_XNAP_DT_SDT_SRBsToBeSetupList_Item;
// L:5377
typedef struct __si_xnap_dt_SRB_ID SI_XNAP_DT_SRB_ID;
// L:1224
typedef struct __si_xnap_dt_SDTDataForwardingDRBList SI_XNAP_DT_SDTDataForwardingDRBList;
// L:387
typedef struct __si_xnap_dt_SDTDataForwardingDRBList_Item SI_XNAP_DT_SDTDataForwardingDRBList_Item;
// L:387
typedef struct __si_xnap_dt_SecondaryRATUsageInformation SI_XNAP_DT_SecondaryRATUsageInformation;


// L:387
typedef struct __si_xnap_dt_SecurityIndication SI_XNAP_DT_SecurityIndication;


// L:387
typedef struct __si_xnap_dt_SecurityResult SI_XNAP_DT_SecurityResult;
// L:387
typedef struct __si_xnap_dt_SensorMeasurementConfiguration SI_XNAP_DT_SensorMeasurementConfiguration;
// L:1224
typedef struct __si_xnap_dt_SensorMeasConfigNameList SI_XNAP_DT_SensorMeasConfigNameList;




// L:387
typedef struct __si_xnap_dt_SensorName SI_XNAP_DT_SensorName;
// L:1224
typedef struct __si_xnap_dt_ServedCellInformationEUTRA_broadcastPLMNs SI_XNAP_DT_ServedCellInformationEUTRA_broadcastPLMNs;


// L:387
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA SI_XNAP_DT_ServedCellInformation_E_UTRA;
// L:387
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA_perBPLMN SI_XNAP_DT_ServedCellInformation_E_UTRA_perBPLMN;

// L:387
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA_FDDInfo SI_XNAP_DT_ServedCellInformation_E_UTRA_FDDInfo;

// L:387
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA_TDDInfo SI_XNAP_DT_ServedCellInformation_E_UTRA_TDDInfo;
// L:1224
typedef struct __si_xnap_dt_ServedCells_E_UTRA SI_XNAP_DT_ServedCells_E_UTRA;
// L:387
typedef struct __si_xnap_dt_ServedCells_E_UTRA_Item SI_XNAP_DT_ServedCells_E_UTRA_Item;
// L:1224
typedef struct __si_xnap_dt_ServedCellsToUpdateEUTRA_served_Cells_ToDelete_E_UTRA SI_XNAP_DT_ServedCellsToUpdateEUTRA_served_Cells_ToDelete_E_UTRA;
// L:387
typedef struct __si_xnap_dt_ServedCellsToUpdate_E_UTRA SI_XNAP_DT_ServedCellsToUpdate_E_UTRA;
// L:1224
typedef struct __si_xnap_dt_ServedCells_ToModify_E_UTRA SI_XNAP_DT_ServedCells_ToModify_E_UTRA;

// L:387
typedef struct __si_xnap_dt_ServedCells_ToModify_E_UTRA_Item SI_XNAP_DT_ServedCells_ToModify_E_UTRA_Item;
// L:4446
typedef struct __si_xnap_dt_ServedCellInformationNR_measurementTimingConfiguration SI_XNAP_DT_ServedCellInformationNR_measurementTimingConfiguration;
// L:387
typedef struct __si_xnap_dt_ServedCellInformation_NR SI_XNAP_DT_ServedCellInformation_NR;
// L:4921
typedef struct __si_xnap_dt_SFNOffset_sFN_Time_Offset SI_XNAP_DT_SFNOffset_sFN_Time_Offset;
// L:387
typedef struct __si_xnap_dt_SFN_Offset SI_XNAP_DT_SFN_Offset;
// L:1224
typedef struct __si_xnap_dt_ServedCells_NR SI_XNAP_DT_ServedCells_NR;
// L:387
typedef struct __si_xnap_dt_ServedCells_NR_Item SI_XNAP_DT_ServedCells_NR_Item;
// L:1224
typedef struct __si_xnap_dt_ServedCells_ToModify_NR SI_XNAP_DT_ServedCells_ToModify_NR;

// L:387
typedef struct __si_xnap_dt_ServedCells_ToModify_NR_Item SI_XNAP_DT_ServedCells_ToModify_NR_Item;
// L:1224
typedef struct __si_xnap_dt_ServedCellSpecificInfoReq_NR SI_XNAP_DT_ServedCellSpecificInfoReq_NR;

// L:387
typedef struct __si_xnap_dt_ServedCellSpecificInfoReq_NR_Item SI_XNAP_DT_ServedCellSpecificInfoReq_NR_Item;
// L:1224
typedef struct __si_xnap_dt_ServedCellsToUpdateNR_served_Cells_ToDelete_NR SI_XNAP_DT_ServedCellsToUpdateNR_served_Cells_ToDelete_NR;
// L:387
typedef struct __si_xnap_dt_ServedCellsToUpdate_NR SI_XNAP_DT_ServedCellsToUpdate_NR;

// L:387
typedef struct __si_xnap_dt_SharedResourceType_UL_OnlySharing SI_XNAP_DT_SharedResourceType_UL_OnlySharing;


// L:387
typedef struct __si_xnap_dt_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged SI_XNAP_DT_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged;

// L:387
typedef struct __si_xnap_dt_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged SI_XNAP_DT_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged;
// L:5377
typedef struct __si_xnap_dt_SK_COUNTER SI_XNAP_DT_SK_COUNTER;
// L:1224
typedef struct __si_xnap_dt_SliceAvailableCapacity SI_XNAP_DT_SliceAvailableCapacity;
// L:387
typedef struct __si_xnap_dt_SliceAvailableCapacity_Item SI_XNAP_DT_SliceAvailableCapacity_Item;
// L:1224
typedef struct __si_xnap_dt_SNSSAIAvailableCapacity_List SI_XNAP_DT_SNSSAIAvailableCapacity_List;
// L:5377
typedef struct __si_xnap_dt_SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueDownlink SI_XNAP_DT_SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueDownlink;
// L:5377
typedef struct __si_xnap_dt_SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueUplink SI_XNAP_DT_SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueUplink;
// L:387
typedef struct __si_xnap_dt_SNSSAIAvailableCapacity_Item SI_XNAP_DT_SNSSAIAvailableCapacity_Item;
// L:1224
typedef struct __si_xnap_dt_SliceRadioResourceStatus_List SI_XNAP_DT_SliceRadioResourceStatus_List;
// L:387
typedef struct __si_xnap_dt_SliceRadioResourceStatus_Item SI_XNAP_DT_SliceRadioResourceStatus_Item;
// L:387
typedef struct __si_xnap_dt_SLPositioning_Ranging_Services_Info SI_XNAP_DT_SLPositioning_Ranging_Services_Info;

// L:387
typedef struct __si_xnap_dt_RSPP_transport_QoS_parameters SI_XNAP_DT_RSPP_transport_QoS_parameters;
// L:1224
typedef struct __si_xnap_dt_RSPPQoSFlowList SI_XNAP_DT_RSPPQoSFlowList;
// L:387
typedef struct __si_xnap_dt_RSPPQoSFlowItem SI_XNAP_DT_RSPPQoSFlowItem;
// L:387
typedef struct __si_xnap_dt_RSPPFlowBitRates SI_XNAP_DT_RSPPFlowBitRates;
// L:1224
typedef struct __si_xnap_dt_SNSSAIRadioResourceStatus_List SI_XNAP_DT_SNSSAIRadioResourceStatus_List;
// L:387
typedef struct __si_xnap_dt_SNSSAIRadioResourceStatus_Item SI_XNAP_DT_SNSSAIRadioResourceStatus_Item;
// L:5377
typedef struct __si_xnap_dt_Slice_DL_GBR_PRB_Usage SI_XNAP_DT_Slice_DL_GBR_PRB_Usage;
// L:5377
typedef struct __si_xnap_dt_Slice_UL_GBR_PRB_Usage SI_XNAP_DT_Slice_UL_GBR_PRB_Usage;
// L:5377
typedef struct __si_xnap_dt_Slice_DL_non_GBR_PRB_Usage SI_XNAP_DT_Slice_DL_non_GBR_PRB_Usage;
// L:5377
typedef struct __si_xnap_dt_Slice_UL_non_GBR_PRB_Usage SI_XNAP_DT_Slice_UL_non_GBR_PRB_Usage;
// L:5377
typedef struct __si_xnap_dt_Slice_DL_Total_PRB_Allocation SI_XNAP_DT_Slice_DL_Total_PRB_Allocation;
// L:5377
typedef struct __si_xnap_dt_Slice_UL_Total_PRB_Allocation SI_XNAP_DT_Slice_UL_Total_PRB_Allocation;
// L:1224
typedef struct __si_xnap_dt_SliceSupport_List SI_XNAP_DT_SliceSupport_List;
// L:1224
typedef struct __si_xnap_dt_SliceToReport_List SI_XNAP_DT_SliceToReport_List;
// L:387
typedef struct __si_xnap_dt_SliceToReport_List_Item SI_XNAP_DT_SliceToReport_List_Item;
// L:1224
typedef struct __si_xnap_dt_SNSSAI_list SI_XNAP_DT_SNSSAI_list;
// L:387
typedef struct __si_xnap_dt_SNSSAI_Item SI_XNAP_DT_SNSSAI_Item;
// L:1224
typedef struct __si_xnap_dt_SlotConfiguration_List SI_XNAP_DT_SlotConfiguration_List;
// L:5377
typedef struct __si_xnap_dt_SlotConfigurationListItem_slotIndex SI_XNAP_DT_SlotConfigurationListItem_slotIndex;
// L:387
typedef struct __si_xnap_dt_SlotConfiguration_List_Item SI_XNAP_DT_SlotConfiguration_List_Item;
// L:4921
typedef struct __si_xnap_dt_S_NG_RANnode_SecurityKey SI_XNAP_DT_S_NG_RANnode_SecurityKey;

// L:4446
typedef struct __si_xnap_dt_SNSSAI_sst SI_XNAP_DT_SNSSAI_sst;
// L:4446
typedef struct __si_xnap_dt_SNSSAI_sd SI_XNAP_DT_SNSSAI_sd;
// L:387
typedef struct __si_xnap_dt_S_NSSAI SI_XNAP_DT_S_NSSAI;
// L:4921
typedef struct __si_xnap_dt_SNMobilityInformation SI_XNAP_DT_SNMobilityInformation;
// L:387
typedef struct __si_xnap_dt_SNPNIdentity SI_XNAP_DT_SNPNIdentity;

// L:387
typedef struct __si_xnap_dt_SpecialSubframeInfo_E_UTRA SI_XNAP_DT_SpecialSubframeInfo_E_UTRA;

// L:5377
typedef struct __si_xnap_dt_SpectrumSharingGroupID SI_XNAP_DT_SpectrumSharingGroupID;




// L:4446
typedef struct __si_xnap_dt_SRSConfiguration SI_XNAP_DT_SRSConfiguration;
// L:1224
typedef struct __si_xnap_dt_SSBAreaCapacityValue_List SI_XNAP_DT_SSBAreaCapacityValue_List;
// L:5377
typedef struct __si_xnap_dt_SSBAreaCapacityValueListItem_sSBIndex SI_XNAP_DT_SSBAreaCapacityValueListItem_sSBIndex;
// L:5377
typedef struct __si_xnap_dt_SSBAreaCapacityValueListItem_ssbAreaCapacityValue SI_XNAP_DT_SSBAreaCapacityValueListItem_ssbAreaCapacityValue;
// L:387
typedef struct __si_xnap_dt_SSBAreaCapacityValue_List_Item SI_XNAP_DT_SSBAreaCapacityValue_List_Item;
// L:1224
typedef struct __si_xnap_dt_SSBAreaRadioResourceStatus_List SI_XNAP_DT_SSBAreaRadioResourceStatus_List;
// L:5377
typedef struct __si_xnap_dt_SSBAreaRadioResourceStatusListItem_sSBIndex SI_XNAP_DT_SSBAreaRadioResourceStatusListItem_sSBIndex;
// L:387
typedef struct __si_xnap_dt_SSBAreaRadioResourceStatus_List_Item SI_XNAP_DT_SSBAreaRadioResourceStatus_List_Item;
// L:1224
typedef struct __si_xnap_dt_SSB_Coverage_Modification_List SI_XNAP_DT_SSB_Coverage_Modification_List;
// L:5377
typedef struct __si_xnap_dt_SSBCoverageModificationListItem_sSBIndex SI_XNAP_DT_SSBCoverageModificationListItem_sSBIndex;
// L:5377
typedef struct __si_xnap_dt_SSBCoverageModificationListItem_sSBCoverageState SI_XNAP_DT_SSBCoverageModificationListItem_sSBCoverageState;
// L:387
typedef struct __si_xnap_dt_SSB_Coverage_Modification_List_Item SI_XNAP_DT_SSB_Coverage_Modification_List_Item;
// L:4921
typedef struct __si_xnap_dt_SSBPositionsInBurst_shortBitmap SI_XNAP_DT_SSBPositionsInBurst_shortBitmap;
// L:4921
typedef struct __si_xnap_dt_SSBPositionsInBurst_mediumBitmap SI_XNAP_DT_SSBPositionsInBurst_mediumBitmap;
// L:4921
typedef struct __si_xnap_dt_SSBPositionsInBurst_longBitmap SI_XNAP_DT_SSBPositionsInBurst_longBitmap;

// L:5377
typedef struct __si_xnap_dt_SSB_freqInfo SI_XNAP_DT_SSB_freqInfo;

// L:1224
typedef struct __si_xnap_dt_SSBOffsets_List SI_XNAP_DT_SSBOffsets_List;
// L:387
typedef struct __si_xnap_dt_SSBOffsets_Item SI_XNAP_DT_SSBOffsets_Item;
// L:5377
typedef struct __si_xnap_dt_SSBOffsetInformation_sSBIndex SI_XNAP_DT_SSBOffsetInformation_sSBIndex;
// L:387
typedef struct __si_xnap_dt_SSBOffsetInformation SI_XNAP_DT_SSBOffsetInformation;
// L:5377
typedef struct __si_xnap_dt_SSBOffsetModificationRange_sSBIndex SI_XNAP_DT_SSBOffsetModificationRange_sSBIndex;
// L:387
typedef struct __si_xnap_dt_SSBOffsetModificationRange SI_XNAP_DT_SSBOffsetModificationRange;
// L:1224
typedef struct __si_xnap_dt_SSBToReport_List SI_XNAP_DT_SSBToReport_List;
// L:5377
typedef struct __si_xnap_dt_SSBToReportListItem_sSBIndex SI_XNAP_DT_SSBToReportListItem_sSBIndex;
// L:387
typedef struct __si_xnap_dt_SSBToReport_List_Item SI_XNAP_DT_SSBToReport_List_Item;

// L:5377
typedef struct __si_xnap_dt_SSB_transmissionTimingOffset SI_XNAP_DT_SSB_transmissionTimingOffset;
// L:4921
typedef struct __si_xnap_dt_SSBtransmissionBitmap_shortBitmap SI_XNAP_DT_SSBtransmissionBitmap_shortBitmap;
// L:4921
typedef struct __si_xnap_dt_SSBtransmissionBitmap_mediumBitmap SI_XNAP_DT_SSBtransmissionBitmap_mediumBitmap;
// L:4921
typedef struct __si_xnap_dt_SSBtransmissionBitmap_longBitmap SI_XNAP_DT_SSBtransmissionBitmap_longBitmap;

// L:1224
typedef struct __si_xnap_dt_SuccessfulHOReportInformation SI_XNAP_DT_SuccessfulHOReportInformation;
// L:387
typedef struct __si_xnap_dt_SuccessfulHOReportList_Item SI_XNAP_DT_SuccessfulHOReportList_Item;
// L:4446
typedef struct __si_xnap_dt_SuccessfulHOReportContainer SI_XNAP_DT_SuccessfulHOReportContainer;
// L:1224
typedef struct __si_xnap_dt_SuccessfulPSCellChangeReportInformation SI_XNAP_DT_SuccessfulPSCellChangeReportInformation;
// L:387
typedef struct __si_xnap_dt_SuccessfulPSCellChangeReportList_Item SI_XNAP_DT_SuccessfulPSCellChangeReportList_Item;
// L:4446
typedef struct __si_xnap_dt_SuccessfulPSCellChangeReportContainer SI_XNAP_DT_SuccessfulPSCellChangeReportContainer;
// L:5377
typedef struct __si_xnap_dt_SUL_FrequencyBand SI_XNAP_DT_SUL_FrequencyBand;
// L:387
typedef struct __si_xnap_dt_SUL_Information SI_XNAP_DT_SUL_Information;
// L:1224
typedef struct __si_xnap_dt_Supported_MBS_FSA_ID_List SI_XNAP_DT_Supported_MBS_FSA_ID_List;
// L:1224
typedef struct __si_xnap_dt_SupportedSULBandList SI_XNAP_DT_SupportedSULBandList;
// L:387
typedef struct __si_xnap_dt_SupportedSULBandItem SI_XNAP_DT_SupportedSULBandItem;
// L:5377
typedef struct __si_xnap_dt_SurvivalTime SI_XNAP_DT_SurvivalTime;

// L:387
typedef struct __si_xnap_dt_SymbolAllocation_in_Slot_AllDL SI_XNAP_DT_SymbolAllocation_in_Slot_AllDL;
// L:387
typedef struct __si_xnap_dt_SymbolAllocation_in_Slot_AllUL SI_XNAP_DT_SymbolAllocation_in_Slot_AllUL;
// L:5377
typedef struct __si_xnap_dt_SymbolAllocationinSlotBothDLandUL_numberofDLSymbols SI_XNAP_DT_SymbolAllocationinSlotBothDLandUL_numberofDLSymbols;
// L:5377
typedef struct __si_xnap_dt_SymbolAllocationinSlotBothDLandUL_numberofULSymbols SI_XNAP_DT_SymbolAllocationinSlotBothDLandUL_numberofULSymbols;
// L:387
typedef struct __si_xnap_dt_SymbolAllocation_in_Slot_BothDLandUL SI_XNAP_DT_SymbolAllocation_in_Slot_BothDLandUL;
// L:387
typedef struct __si_xnap_dt_SNPN_CellBasedMDT SI_XNAP_DT_SNPN_CellBasedMDT;
// L:1224
typedef struct __si_xnap_dt_SNPN_CellIdListforMDT SI_XNAP_DT_SNPN_CellIdListforMDT;
// L:387
typedef struct __si_xnap_dt_SNPN_CellIdforMDT_Item SI_XNAP_DT_SNPN_CellIdforMDT_Item;
// L:387
typedef struct __si_xnap_dt_SNPN_TAIBasedMDT SI_XNAP_DT_SNPN_TAIBasedMDT;
// L:1224
typedef struct __si_xnap_dt_SNPN_TAIListforMDT SI_XNAP_DT_SNPN_TAIListforMDT;
// L:387
typedef struct __si_xnap_dt_SNPN_TAIforMDT_Item SI_XNAP_DT_SNPN_TAIforMDT_Item;
// L:387
typedef struct __si_xnap_dt_SNPN_BasedMDT SI_XNAP_DT_SNPN_BasedMDT;
// L:1224
typedef struct __si_xnap_dt_SNPNListforMDT SI_XNAP_DT_SNPNListforMDT;
// L:387
typedef struct __si_xnap_dt_SNPNforMDT_Item SI_XNAP_DT_SNPNforMDT_Item;
// L:387
typedef struct __si_xnap_dt_TABasedMDT SI_XNAP_DT_TABasedMDT;
// L:387
typedef struct __si_xnap_dt_TAIBasedMDT SI_XNAP_DT_TAIBasedMDT;
// L:1224
typedef struct __si_xnap_dt_TAIListforMDT SI_XNAP_DT_TAIListforMDT;
// L:387
typedef struct __si_xnap_dt_TAIforMDT_Item SI_XNAP_DT_TAIforMDT_Item;
// L:4446
typedef struct __si_xnap_dt_TAC SI_XNAP_DT_TAC;
// L:1224
typedef struct __si_xnap_dt_TAINSAGSupportList SI_XNAP_DT_TAINSAGSupportList;
// L:387
typedef struct __si_xnap_dt_TAINSAGSupportItem SI_XNAP_DT_TAINSAGSupportItem;
// L:1224
typedef struct __si_xnap_dt_TAISliceUnavailableCellList SI_XNAP_DT_TAISliceUnavailableCellList;
// L:387
typedef struct __si_xnap_dt_TAISliceUnavailableCellItem SI_XNAP_DT_TAISliceUnavailableCellItem;

// L:387
typedef struct __si_xnap_dt_AvailableCellList SI_XNAP_DT_AvailableCellList;
// L:1224
typedef struct __si_xnap_dt_AvailableNRCellList SI_XNAP_DT_AvailableNRCellList;
// L:387
typedef struct __si_xnap_dt_UnavailableCellList SI_XNAP_DT_UnavailableCellList;
// L:1224
typedef struct __si_xnap_dt_UnavailableNRCellList SI_XNAP_DT_UnavailableNRCellList;
// L:1224
typedef struct __si_xnap_dt_TAISupport_List SI_XNAP_DT_TAISupport_List;
// L:1224
typedef struct __si_xnap_dt_TAISupportItem_broadcastPLMNs SI_XNAP_DT_TAISupportItem_broadcastPLMNs;
// L:387
typedef struct __si_xnap_dt_TAISupport_Item SI_XNAP_DT_TAISupport_Item;
// L:1224
typedef struct __si_xnap_dt_TAListforMDT SI_XNAP_DT_TAListforMDT;
// L:387
typedef struct __si_xnap_dt_TABasedQMC SI_XNAP_DT_TABasedQMC;
// L:1224
typedef struct __si_xnap_dt_TAListforQMC SI_XNAP_DT_TAListforQMC;
// L:387
typedef struct __si_xnap_dt_TAIBasedQMC SI_XNAP_DT_TAIBasedQMC;
// L:1224
typedef struct __si_xnap_dt_TAIListforQMC SI_XNAP_DT_TAIListforQMC;
// L:387
typedef struct __si_xnap_dt_TAI_Item SI_XNAP_DT_TAI_Item;
// L:4446
typedef struct __si_xnap_dt_TargetCellinEUTRAN SI_XNAP_DT_TargetCellinEUTRAN;

// L:4446
typedef struct __si_xnap_dt_TDDULDLConfigurationCommonNR SI_XNAP_DT_TDDULDLConfigurationCommonNR;
// L:1224
typedef struct __si_xnap_dt_TargetCellList SI_XNAP_DT_TargetCellList;
// L:387
typedef struct __si_xnap_dt_TargetCellList_Item SI_XNAP_DT_TargetCellList_Item;
// L:5377
typedef struct __si_xnap_dt_Threshold_RSRQ SI_XNAP_DT_Threshold_RSRQ;
// L:5377
typedef struct __si_xnap_dt_Threshold_RSRP SI_XNAP_DT_Threshold_RSRP;
// L:5377
typedef struct __si_xnap_dt_Threshold_SINR SI_XNAP_DT_Threshold_SINR;
// L:5377
typedef struct __si_xnap_dt_TimeSinceFailure SI_XNAP_DT_TimeSinceFailure;

// L:5377
typedef struct __si_xnap_dt_TimeSynchronizationAssistanceInformation_uuTimeSynchronizationErrorBudget SI_XNAP_DT_TimeSynchronizationAssistanceInformation_uuTimeSynchronizationErrorBudget;
// L:387
typedef struct __si_xnap_dt_TimeSynchronizationAssistanceInformation SI_XNAP_DT_TimeSynchronizationAssistanceInformation;


// L:4446
typedef struct __si_xnap_dt_TMGI SI_XNAP_DT_TMGI;
// L:387
typedef struct __si_xnap_dt_TNLConfigurationInfo SI_XNAP_DT_TNLConfigurationInfo;
// L:1224
typedef struct __si_xnap_dt_TNLA_To_Add_List SI_XNAP_DT_TNLA_To_Add_List;
// L:387
typedef struct __si_xnap_dt_TNLA_To_Add_Item SI_XNAP_DT_TNLA_To_Add_Item;
// L:1224
typedef struct __si_xnap_dt_TNLA_To_Update_List SI_XNAP_DT_TNLA_To_Update_List;
// L:387
typedef struct __si_xnap_dt_TNLA_To_Update_Item SI_XNAP_DT_TNLA_To_Update_Item;
// L:1224
typedef struct __si_xnap_dt_TNLA_To_Remove_List SI_XNAP_DT_TNLA_To_Remove_List;
// L:387
typedef struct __si_xnap_dt_TNLA_To_Remove_Item SI_XNAP_DT_TNLA_To_Remove_Item;
// L:1224
typedef struct __si_xnap_dt_TNLA_Setup_List SI_XNAP_DT_TNLA_Setup_List;
// L:387
typedef struct __si_xnap_dt_TNLA_Setup_Item SI_XNAP_DT_TNLA_Setup_Item;
// L:1224
typedef struct __si_xnap_dt_TNLA_Failed_To_Setup_List SI_XNAP_DT_TNLA_Failed_To_Setup_List;
// L:387
typedef struct __si_xnap_dt_TNLA_Failed_To_Setup_Item SI_XNAP_DT_TNLA_Failed_To_Setup_Item;

// L:4921
typedef struct __si_xnap_dt_TransportLayerAddress SI_XNAP_DT_TransportLayerAddress;
// L:4921
typedef struct __si_xnap_dt_TraceActivation_interfaces_to_trace SI_XNAP_DT_TraceActivation_interfaces_to_trace;
// L:387
typedef struct __si_xnap_dt_TraceActivation SI_XNAP_DT_TraceActivation;

// L:5377
typedef struct __si_xnap_dt_TrafficIndex SI_XNAP_DT_TrafficIndex;


// L:387
typedef struct __si_xnap_dt_TrafficToBeReleaseInformation SI_XNAP_DT_TrafficToBeReleaseInformation;
// L:1224
typedef struct __si_xnap_dt_TrafficToBeRelease_List SI_XNAP_DT_TrafficToBeRelease_List;
// L:387
typedef struct __si_xnap_dt_TrafficToBeRelease_Item SI_XNAP_DT_TrafficToBeRelease_Item;
// L:387
typedef struct __si_xnap_dt_TSCTrafficCharacteristics SI_XNAP_DT_TSCTrafficCharacteristics;
// L:5377
typedef struct __si_xnap_dt_TSCAssistanceInformation_periodicity SI_XNAP_DT_TSCAssistanceInformation_periodicity;
// L:4446
typedef struct __si_xnap_dt_TSCAssistanceInformation_burstArrivalTime SI_XNAP_DT_TSCAssistanceInformation_burstArrivalTime;
// L:387
typedef struct __si_xnap_dt_TSCAssistanceInformation SI_XNAP_DT_TSCAssistanceInformation;

// L:387
typedef struct __si_xnap_dt_UEAggregateMaximumBitRate SI_XNAP_DT_UEAggregateMaximumBitRate;
// L:387
typedef struct __si_xnap_dt_UEAppLayerMeasConfigInfo SI_XNAP_DT_UEAppLayerMeasConfigInfo;


// L:387
typedef struct __si_xnap_dt_UEContextIDforRRCResume SI_XNAP_DT_UEContextIDforRRCResume;
// L:387
typedef struct __si_xnap_dt_UEContextIDforRRCReestablishment SI_XNAP_DT_UEContextIDforRRCReestablishment;
// L:4446
typedef struct __si_xnap_dt_UEContextInfoRetrUECtxtResp_rrc_Context SI_XNAP_DT_UEContextInfoRetrUECtxtResp_rrc_Context;
// L:387
typedef struct __si_xnap_dt_UEContextInfoRetrUECtxtResp SI_XNAP_DT_UEContextInfoRetrUECtxtResp;
// L:1224
typedef struct __si_xnap_dt_UEHistoryInformation SI_XNAP_DT_UEHistoryInformation;

// L:4921
typedef struct __si_xnap_dt_UEIdentityIndexValue_indexLength10 SI_XNAP_DT_UEIdentityIndexValue_indexLength10;

// L:1224
typedef struct __si_xnap_dt_UEIdentityIndexList_MBSGroupPaging SI_XNAP_DT_UEIdentityIndexList_MBSGroupPaging;
// L:387
typedef struct __si_xnap_dt_UEIdentityIndexList_MBSGroupPaging_Item SI_XNAP_DT_UEIdentityIndexList_MBSGroupPaging_Item;
// L:4921
typedef struct __si_xnap_dt_UEIdentityIndexListMBSGroupPagingValue_uEIdentityIndexValueMBSGroupPaging SI_XNAP_DT_UEIdentityIndexListMBSGroupPagingValue_uEIdentityIndexValueMBSGroupPaging;

// L:387
typedef struct __si_xnap_dt_UERadioCapabilityForPaging SI_XNAP_DT_UERadioCapabilityForPaging;
// L:4446
typedef struct __si_xnap_dt_UERadioCapabilityForPagingOfNR SI_XNAP_DT_UERadioCapabilityForPagingOfNR;
// L:4446
typedef struct __si_xnap_dt_UERadioCapabilityForPagingOfEUTRA SI_XNAP_DT_UERadioCapabilityForPagingOfEUTRA;
// L:4446
typedef struct __si_xnap_dt_UERadioCapabilityID SI_XNAP_DT_UERadioCapabilityID;
// L:4921
typedef struct __si_xnap_dt_UERANPagingIdentity_i_RNTI_full SI_XNAP_DT_UERANPagingIdentity_i_RNTI_full;


// L:4446
typedef struct __si_xnap_dt_UERLFReportContainerLTE SI_XNAP_DT_UERLFReportContainerLTE;
// L:387
typedef struct __si_xnap_dt_UERLFReportContainerLTEExtension SI_XNAP_DT_UERLFReportContainerLTEExtension;
// L:4446
typedef struct __si_xnap_dt_UERLFReportContainerLTEExtendBand SI_XNAP_DT_UERLFReportContainerLTEExtendBand;
// L:4446
typedef struct __si_xnap_dt_UERLFReportContainerNR SI_XNAP_DT_UERLFReportContainerNR;
// L:1224
typedef struct __si_xnap_dt_UESliceMaximumBitRateList SI_XNAP_DT_UESliceMaximumBitRateList;
// L:387
typedef struct __si_xnap_dt_UESliceMaximumBitRate_Item SI_XNAP_DT_UESliceMaximumBitRate_Item;
// L:4921
typedef struct __si_xnap_dt_UESecurityCapabilities_nr_EncyptionAlgorithms SI_XNAP_DT_UESecurityCapabilities_nr_EncyptionAlgorithms;
// L:4921
typedef struct __si_xnap_dt_UESecurityCapabilities_nr_IntegrityProtectionAlgorithms SI_XNAP_DT_UESecurityCapabilities_nr_IntegrityProtectionAlgorithms;
// L:4921
typedef struct __si_xnap_dt_UESecurityCapabilities_e_utra_EncyptionAlgorithms SI_XNAP_DT_UESecurityCapabilities_e_utra_EncyptionAlgorithms;
// L:4921
typedef struct __si_xnap_dt_UESecurityCapabilities_e_utra_IntegrityProtectionAlgorithms SI_XNAP_DT_UESecurityCapabilities_e_utra_IntegrityProtectionAlgorithms;
// L:387
typedef struct __si_xnap_dt_UESecurityCapabilities SI_XNAP_DT_UESecurityCapabilities;

// L:387
typedef struct __si_xnap_dt_ULConfiguration SI_XNAP_DT_ULConfiguration;

// L:387
typedef struct __si_xnap_dt_ULF1Terminating_BHInfo SI_XNAP_DT_ULF1Terminating_BHInfo;
// L:387
typedef struct __si_xnap_dt_ULNonF1Terminating_BHInfo SI_XNAP_DT_ULNonF1Terminating_BHInfo;


// L:5377
typedef struct __si_xnap_dt_UL_GBR_PRB_usage SI_XNAP_DT_UL_GBR_PRB_usage;
// L:5377
typedef struct __si_xnap_dt_UL_GBR_PRB_usage_for_MIMO SI_XNAP_DT_UL_GBR_PRB_usage_for_MIMO;
// L:5377
typedef struct __si_xnap_dt_UL_non_GBR_PRB_usage SI_XNAP_DT_UL_non_GBR_PRB_usage;
// L:5377
typedef struct __si_xnap_dt_UL_non_GBR_PRB_usage_for_MIMO SI_XNAP_DT_UL_non_GBR_PRB_usage_for_MIMO;
// L:5377
typedef struct __si_xnap_dt_UL_Total_PRB_usage SI_XNAP_DT_UL_Total_PRB_usage;
// L:5377
typedef struct __si_xnap_dt_UL_Total_PRB_usage_for_MIMO SI_XNAP_DT_UL_Total_PRB_usage_for_MIMO;

// L:1224
typedef struct __si_xnap_dt_UPTransportParameters SI_XNAP_DT_UPTransportParameters;
// L:387
typedef struct __si_xnap_dt_UPTransportParametersItem SI_XNAP_DT_UPTransportParametersItem;


// L:387
typedef struct __si_xnap_dt_UserPlaneFailureIndication SI_XNAP_DT_UserPlaneFailureIndication;

// L:5809
typedef struct __si_xnap_dt_URIaddress SI_XNAP_DT_URIaddress;
// L:1224
typedef struct __si_xnap_dt_UEAssociatedInfoResult_List SI_XNAP_DT_UEAssociatedInfoResult_List;
// L:387
typedef struct __si_xnap_dt_UEAssociatedInfoResult_Item SI_XNAP_DT_UEAssociatedInfoResult_Item;
// L:387
typedef struct __si_xnap_dt_UEPerformance SI_XNAP_DT_UEPerformance;
// L:5377
typedef struct __si_xnap_dt_UEPerformanceCollectionConfiguration_collectionTimeDurationForUEPerformance SI_XNAP_DT_UEPerformanceCollectionConfiguration_collectionTimeDurationForUEPerformance;
// L:387
typedef struct __si_xnap_dt_UEPerformanceCollectionConfiguration SI_XNAP_DT_UEPerformanceCollectionConfiguration;
// L:5377
typedef struct __si_xnap_dt_UETrajectoryCollectionConfiguration_collectionTimeDurationForUETrajectory SI_XNAP_DT_UETrajectoryCollectionConfiguration_collectionTimeDurationForUETrajectory;
// L:5377
typedef struct __si_xnap_dt_UETrajectoryCollectionConfiguration_numberOfVisitedCells SI_XNAP_DT_UETrajectoryCollectionConfiguration_numberOfVisitedCells;
// L:387
typedef struct __si_xnap_dt_UETrajectoryCollectionConfiguration SI_XNAP_DT_UETrajectoryCollectionConfiguration;

// L:1224
typedef struct __si_xnap_dt_VolumeTimedReportList SI_XNAP_DT_VolumeTimedReportList;
// L:4446
typedef struct __si_xnap_dt_VolumeTimedReportItem_startTimeStamp SI_XNAP_DT_VolumeTimedReportItem_startTimeStamp;
// L:4446
typedef struct __si_xnap_dt_VolumeTimedReportItem_endTimeStamp SI_XNAP_DT_VolumeTimedReportItem_endTimeStamp;
// L:5377
typedef struct __si_xnap_dt_VolumeTimedReportItem_usageCountUL SI_XNAP_DT_VolumeTimedReportItem_usageCountUL;
// L:5377
typedef struct __si_xnap_dt_VolumeTimedReportItem_usageCountDL SI_XNAP_DT_VolumeTimedReportItem_usageCountDL;
// L:387
typedef struct __si_xnap_dt_VolumeTimedReport_Item SI_XNAP_DT_VolumeTimedReport_Item;


// L:387
typedef struct __si_xnap_dt_WLANMeasurementConfiguration SI_XNAP_DT_WLANMeasurementConfiguration;
// L:1224
typedef struct __si_xnap_dt_WLANMeasConfigNameList SI_XNAP_DT_WLANMeasConfigNameList;

// L:4446
typedef struct __si_xnap_dt_WLANName SI_XNAP_DT_WLANName;
// L:5377
typedef struct __si_xnap_dt_XnBenefitValue SI_XNAP_DT_XnBenefitValue;














// L:4446
typedef struct __si_xnap_dt_UEContextInfoHORequest_rrc_Context SI_XNAP_DT_UEContextInfoHORequest_rrc_Context;
// L:387
typedef struct __si_xnap_dt_UEContextInfoHORequest SI_XNAP_DT_UEContextInfoHORequest;
// L:387
typedef struct __si_xnap_dt_UEContextRefAtSN_HORequest SI_XNAP_DT_UEContextRefAtSN_HORequest;
// L:387
typedef struct __si_xnap_dt_FirstDLCount SI_XNAP_DT_FirstDLCount;
// L:387
typedef struct __si_xnap_dt_DLDiscarding SI_XNAP_DT_DLDiscarding;
// L:1224
typedef struct __si_xnap_dt_PDUSessionToBeAddedAddReq SI_XNAP_DT_PDUSessionToBeAddedAddReq;
// L:387
typedef struct __si_xnap_dt_PDUSessionToBeAddedAddReq_Item SI_XNAP_DT_PDUSessionToBeAddedAddReq_Item;
// L:1224
typedef struct __si_xnap_dt_PDUSessionAdmittedAddedAddReqAck SI_XNAP_DT_PDUSessionAdmittedAddedAddReqAck;
// L:387
typedef struct __si_xnap_dt_PDUSessionAdmittedAddedAddReqAck_Item SI_XNAP_DT_PDUSessionAdmittedAddedAddReqAck_Item;
// L:387
typedef struct __si_xnap_dt_PDUSessionNotAdmittedAddReqAck SI_XNAP_DT_PDUSessionNotAdmittedAddReqAck;
// L:387
typedef struct __si_xnap_dt_ResponseInfo_ReconfCompl SI_XNAP_DT_ResponseInfo_ReconfCompl;
// L:4446
typedef struct __si_xnap_dt_Configuration_successfully_applied_m_NG_RANNode_to_S_NG_RANNode_Container SI_XNAP_DT_Configuration_successfully_applied_m_NG_RANNode_to_S_NG_RANNode_Container;
// L:387
typedef struct __si_xnap_dt_Configuration_successfully_applied SI_XNAP_DT_Configuration_successfully_applied;
// L:4446
typedef struct __si_xnap_dt_Configuration_rejected_by_M_NG_RANNode_m_NG_RANNode_to_S_NG_RANNode_Container SI_XNAP_DT_Configuration_rejected_by_M_NG_RANNode_m_NG_RANNode_to_S_NG_RANNode_Container;
// L:387
typedef struct __si_xnap_dt_Configuration_rejected_by_M_NG_RANNode SI_XNAP_DT_Configuration_rejected_by_M_NG_RANNode;
// L:387
typedef struct __si_xnap_dt_UEContextInfo_SNModRequest SI_XNAP_DT_UEContextInfo_SNModRequest;
// L:1224
typedef struct __si_xnap_dt_PDUSessionsToBeAdded_SNModRequest_List SI_XNAP_DT_PDUSessionsToBeAdded_SNModRequest_List;
// L:387
typedef struct __si_xnap_dt_PDUSessionsToBeAdded_SNModRequest_Item SI_XNAP_DT_PDUSessionsToBeAdded_SNModRequest_Item;
// L:1224
typedef struct __si_xnap_dt_PDUSessionsToBeModified_SNModRequest_List SI_XNAP_DT_PDUSessionsToBeModified_SNModRequest_List;
// L:387
typedef struct __si_xnap_dt_PDUSessionsToBeModified_SNModRequest_Item SI_XNAP_DT_PDUSessionsToBeModified_SNModRequest_Item;
// L:387
typedef struct __si_xnap_dt_PDUSessionsToBeReleased_SNModRequest_List SI_XNAP_DT_PDUSessionsToBeReleased_SNModRequest_List;
// L:387
typedef struct __si_xnap_dt_PDUSessionAdmitted_SNModResponse SI_XNAP_DT_PDUSessionAdmitted_SNModResponse;
// L:1224
typedef struct __si_xnap_dt_PDUSessionAdmittedToBeAddedSNModResponse SI_XNAP_DT_PDUSessionAdmittedToBeAddedSNModResponse;
// L:387
typedef struct __si_xnap_dt_PDUSessionAdmittedToBeAddedSNModResponse_Item SI_XNAP_DT_PDUSessionAdmittedToBeAddedSNModResponse_Item;
// L:1224
typedef struct __si_xnap_dt_PDUSessionAdmittedToBeModifiedSNModResponse SI_XNAP_DT_PDUSessionAdmittedToBeModifiedSNModResponse;
// L:387
typedef struct __si_xnap_dt_PDUSessionAdmittedToBeModifiedSNModResponse_Item SI_XNAP_DT_PDUSessionAdmittedToBeModifiedSNModResponse_Item;
// L:387
typedef struct __si_xnap_dt_PDUSessionAdmittedToBeReleasedSNModResponse SI_XNAP_DT_PDUSessionAdmittedToBeReleasedSNModResponse;
// L:387
typedef struct __si_xnap_dt_PDUSessionNotAdmitted_SNModResponse SI_XNAP_DT_PDUSessionNotAdmitted_SNModResponse;
// L:387
typedef struct __si_xnap_dt_PDUSessionDataForwarding_SNModResponse SI_XNAP_DT_PDUSessionDataForwarding_SNModResponse;
// L:1224
typedef struct __si_xnap_dt_PDUSessionToBeModifiedSNModRequired SI_XNAP_DT_PDUSessionToBeModifiedSNModRequired;
// L:387
typedef struct __si_xnap_dt_PDUSessionToBeModifiedSNModRequired_Item SI_XNAP_DT_PDUSessionToBeModifiedSNModRequired_Item;
// L:387
typedef struct __si_xnap_dt_PDUSessionToBeReleasedSNModRequired SI_XNAP_DT_PDUSessionToBeReleasedSNModRequired;
// L:1224
typedef struct __si_xnap_dt_PDUSessionAdmittedModSNModConfirm SI_XNAP_DT_PDUSessionAdmittedModSNModConfirm;
// L:387
typedef struct __si_xnap_dt_PDUSessionAdmittedModSNModConfirm_Item SI_XNAP_DT_PDUSessionAdmittedModSNModConfirm_Item;
// L:387
typedef struct __si_xnap_dt_PDUSessionReleasedSNModConfirm SI_XNAP_DT_PDUSessionReleasedSNModConfirm;
// L:387
typedef struct __si_xnap_dt_PDUSessionToBeReleasedList_RelReqAck SI_XNAP_DT_PDUSessionToBeReleasedList_RelReqAck;
// L:387
typedef struct __si_xnap_dt_PDUSessionToBeReleasedList_RelRqd SI_XNAP_DT_PDUSessionToBeReleasedList_RelRqd;
// L:387
typedef struct __si_xnap_dt_PDUSessionReleasedList_RelConf SI_XNAP_DT_PDUSessionReleasedList_RelConf;
// L:1224
typedef struct __si_xnap_dt_BearersSubjectToCounterCheck_List SI_XNAP_DT_BearersSubjectToCounterCheck_List;
// L:5377
typedef struct __si_xnap_dt_BearersSubjectToCounterCheck_Item_ul_count SI_XNAP_DT_BearersSubjectToCounterCheck_Item_ul_count;
// L:5377
typedef struct __si_xnap_dt_BearersSubjectToCounterCheck_Item_dl_count SI_XNAP_DT_BearersSubjectToCounterCheck_Item_dl_count;
// L:387
typedef struct __si_xnap_dt_BearersSubjectToCounterCheck_Item SI_XNAP_DT_BearersSubjectToCounterCheck_Item;
// L:1224
typedef struct __si_xnap_dt_PDUSession_SNChangeRequired_List SI_XNAP_DT_PDUSession_SNChangeRequired_List;
// L:387
typedef struct __si_xnap_dt_PDUSession_SNChangeRequired_Item SI_XNAP_DT_PDUSession_SNChangeRequired_Item;
// L:1224
typedef struct __si_xnap_dt_PDUSession_SNChangeConfirm_List SI_XNAP_DT_PDUSession_SNChangeConfirm_List;
// L:387
typedef struct __si_xnap_dt_PDUSession_SNChangeConfirm_Item SI_XNAP_DT_PDUSession_SNChangeConfirm_Item;
// L:4446
typedef struct __si_xnap_dt_SplitSRB_RRCTransfer_rrcContainer SI_XNAP_DT_SplitSRB_RRCTransfer_rrcContainer;

// L:387
typedef struct __si_xnap_dt_SplitSRB_RRCTransfer SI_XNAP_DT_SplitSRB_RRCTransfer;
// L:4446
typedef struct __si_xnap_dt_UEReportRRCTransfer_rrcContainer SI_XNAP_DT_UEReportRRCTransfer_rrcContainer;
// L:387
typedef struct __si_xnap_dt_UEReportRRCTransfer SI_XNAP_DT_UEReportRRCTransfer;
// L:4446
typedef struct __si_xnap_dt_FastMCGRecoveryRRCTransfer_rrcContainer SI_XNAP_DT_FastMCGRecoveryRRCTransfer_rrcContainer;
// L:387
typedef struct __si_xnap_dt_FastMCGRecoveryRRCTransfer SI_XNAP_DT_FastMCGRecoveryRRCTransfer;
// L:4446
typedef struct __si_xnap_dt_SDT_SRB_between_NewNode_OldNode_rrcContainer SI_XNAP_DT_SDT_SRB_between_NewNode_OldNode_rrcContainer;
// L:387
typedef struct __si_xnap_dt_SDT_SRB_between_NewNode_OldNode SI_XNAP_DT_SDT_SRB_between_NewNode_OldNode;
// L:4446
typedef struct __si_xnap_dt_QoE_Measurement_Results_qOEReference SI_XNAP_DT_QoE_Measurement_Results_qOEReference;
// L:4446
typedef struct __si_xnap_dt_QoE_Measurement_Results_rrcContainerForRVQoEReport SI_XNAP_DT_QoE_Measurement_Results_rrcContainerForRVQoEReport;
// L:4446
typedef struct __si_xnap_dt_QoE_Measurement_Results_rrcContainerForQoEReport SI_XNAP_DT_QoE_Measurement_Results_rrcContainerForQoEReport;

// L:387
typedef struct __si_xnap_dt_QoE_Measurement_Results SI_XNAP_DT_QoE_Measurement_Results;
// L:1224
typedef struct __si_xnap_dt_PDUSessionResourcesNotifyList SI_XNAP_DT_PDUSessionResourcesNotifyList;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourcesNotify_Item SI_XNAP_DT_PDUSessionResourcesNotify_Item;
// L:1224
typedef struct __si_xnap_dt_PDUSessionResourcesActivityNotifyList SI_XNAP_DT_PDUSessionResourcesActivityNotifyList;
// L:387
typedef struct __si_xnap_dt_PDUSessionResourcesActivityNotify_Item SI_XNAP_DT_PDUSessionResourcesActivityNotify_Item;
// L:1224
typedef struct __si_xnap_dt_QoSFlowsActivityNotifyList SI_XNAP_DT_QoSFlowsActivityNotifyList;
// L:387
typedef struct __si_xnap_dt_QoSFlowsActivityNotifyItem SI_XNAP_DT_QoSFlowsActivityNotifyItem;
// L:387
typedef struct __si_xnap_dt_RespondingNodeTypeConfigUpdateAck_ng_eNB SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck_ng_eNB;
// L:387
typedef struct __si_xnap_dt_RespondingNodeTypeConfigUpdateAck_gNB SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck_gNB;
// L:1224
typedef struct __si_xnap_dt_ResourceCoordRequest_ng_eNB_initiated_listofE_UTRACells SI_XNAP_DT_ResourceCoordRequest_ng_eNB_initiated_listofE_UTRACells;
// L:387
typedef struct __si_xnap_dt_ResourceCoordRequest_ng_eNB_initiated SI_XNAP_DT_ResourceCoordRequest_ng_eNB_initiated;
// L:1224
typedef struct __si_xnap_dt_ResourceCoordRequest_gNB_initiated_listofE_UTRACells SI_XNAP_DT_ResourceCoordRequest_gNB_initiated_listofE_UTRACells;
// L:1224
typedef struct __si_xnap_dt_ResourceCoordRequest_gNB_initiated_listofNRCells SI_XNAP_DT_ResourceCoordRequest_gNB_initiated_listofNRCells;
// L:387
typedef struct __si_xnap_dt_ResourceCoordRequest_gNB_initiated SI_XNAP_DT_ResourceCoordRequest_gNB_initiated;
// L:1224
typedef struct __si_xnap_dt_ResourceCoordResponse_ng_eNB_initiated_listofE_UTRACells SI_XNAP_DT_ResourceCoordResponse_ng_eNB_initiated_listofE_UTRACells;
// L:387
typedef struct __si_xnap_dt_ResourceCoordResponse_ng_eNB_initiated SI_XNAP_DT_ResourceCoordResponse_ng_eNB_initiated;
// L:1224
typedef struct __si_xnap_dt_ResourceCoordResponse_gNB_initiated_listofNRCells SI_XNAP_DT_ResourceCoordResponse_gNB_initiated_listofNRCells;
// L:387
typedef struct __si_xnap_dt_ResourceCoordResponse_gNB_initiated SI_XNAP_DT_ResourceCoordResponse_gNB_initiated;
// L:1224
typedef struct __si_xnap_dt_ToBeActivatedNRCellsAndSSBsList SI_XNAP_DT_ToBeActivatedNRCellsAndSSBsList;
// L:1224
typedef struct __si_xnap_dt_ToBeActivatedNRCellsAndSSBs_Item_sSBstobeActivatedList SI_XNAP_DT_ToBeActivatedNRCellsAndSSBs_Item_sSBstobeActivatedList;
// L:387
typedef struct __si_xnap_dt_ToBeActivatedNRCellsAndSSBs_Item SI_XNAP_DT_ToBeActivatedNRCellsAndSSBs_Item;
// L:5377
typedef struct __si_xnap_dt_SSBsToBeActivated_Item_ssbIndex SI_XNAP_DT_SSBsToBeActivated_Item_ssbIndex;
// L:387
typedef struct __si_xnap_dt_SSBsToBeActivated_Item SI_XNAP_DT_SSBsToBeActivated_Item;
// L:1224
typedef struct __si_xnap_dt_ActivatedNRCellsAndSSBsList SI_XNAP_DT_ActivatedNRCellsAndSSBsList;
// L:1224
typedef struct __si_xnap_dt_ActivatedNRCellsAndSSBs_Item_sSBsActivatedList SI_XNAP_DT_ActivatedNRCellsAndSSBs_Item_sSBsActivatedList;
// L:387
typedef struct __si_xnap_dt_ActivatedNRCellsAndSSBs_Item SI_XNAP_DT_ActivatedNRCellsAndSSBs_Item;
// L:5377
typedef struct __si_xnap_dt_SSBsActivated_Item_ssbIndex SI_XNAP_DT_SSBsActivated_Item_ssbIndex;
// L:387
typedef struct __si_xnap_dt_SSBsActivated_Item SI_XNAP_DT_SSBsActivated_Item;
// L:1224
typedef struct __si_xnap_dt_TrafficToBeAddedList SI_XNAP_DT_TrafficToBeAddedList;
// L:387
typedef struct __si_xnap_dt_TrafficToBeAdded_Item SI_XNAP_DT_TrafficToBeAdded_Item;
// L:1224
typedef struct __si_xnap_dt_TrafficToBeModifiedList SI_XNAP_DT_TrafficToBeModifiedList;
// L:387
typedef struct __si_xnap_dt_TrafficToBeModified_Item SI_XNAP_DT_TrafficToBeModified_Item;
// L:1224
typedef struct __si_xnap_dt_TrafficAddedList SI_XNAP_DT_TrafficAddedList;
// L:387
typedef struct __si_xnap_dt_TrafficAdded_Item SI_XNAP_DT_TrafficAdded_Item;
// L:1224
typedef struct __si_xnap_dt_TrafficModifiedList SI_XNAP_DT_TrafficModifiedList;
// L:387
typedef struct __si_xnap_dt_TrafficModified_Item SI_XNAP_DT_TrafficModified_Item;
// L:1224
typedef struct __si_xnap_dt_TrafficNotAddedList SI_XNAP_DT_TrafficNotAddedList;
// L:387
typedef struct __si_xnap_dt_TrafficNotAdded_Item SI_XNAP_DT_TrafficNotAdded_Item;
// L:1224
typedef struct __si_xnap_dt_TrafficNotModifiedList SI_XNAP_DT_TrafficNotModifiedList;
// L:387
typedef struct __si_xnap_dt_TrafficNotModified_Item SI_XNAP_DT_TrafficNotModified_Item;
// L:1224
typedef struct __si_xnap_dt_TrafficReleasedList SI_XNAP_DT_TrafficReleasedList;
// L:387
typedef struct __si_xnap_dt_TrafficReleased_Item SI_XNAP_DT_TrafficReleased_Item;
// L:1224
typedef struct __si_xnap_dt_TrafficRequiredToBeModifiedList SI_XNAP_DT_TrafficRequiredToBeModifiedList;
// L:387
typedef struct __si_xnap_dt_TrafficRequiredToBeModified_Item SI_XNAP_DT_TrafficRequiredToBeModified_Item;
// L:1224
typedef struct __si_xnap_dt_IABTNLAddressToBeReleasedList SI_XNAP_DT_IABTNLAddressToBeReleasedList;
// L:387
typedef struct __si_xnap_dt_IABTNLAddressToBeReleased_Item SI_XNAP_DT_IABTNLAddressToBeReleased_Item;
// L:1224
typedef struct __si_xnap_dt_TrafficRequiredModifiedList SI_XNAP_DT_TrafficRequiredModifiedList;
// L:387
typedef struct __si_xnap_dt_TrafficRequiredModified_Item SI_XNAP_DT_TrafficRequiredModified_Item;
// L:1224
typedef struct __si_xnap_dt_BoundaryNodeCellsList SI_XNAP_DT_BoundaryNodeCellsList;
// L:387
typedef struct __si_xnap_dt_BoundaryNodeCellsList_Item SI_XNAP_DT_BoundaryNodeCellsList_Item;
// L:1224
typedef struct __si_xnap_dt_ParentNodeCellsList SI_XNAP_DT_ParentNodeCellsList;
// L:387
typedef struct __si_xnap_dt_ParentNodeCellsList_Item SI_XNAP_DT_ParentNodeCellsList_Item;
// L:1224
typedef struct __si_xnap_dt_ServedCellsToActivate_nr_cells SI_XNAP_DT_ServedCellsToActivate_nr_cells;
// L:1224
typedef struct __si_xnap_dt_ServedCellsToActivate_e_utra_cells SI_XNAP_DT_ServedCellsToActivate_e_utra_cells;
// L:1224
typedef struct __si_xnap_dt_ActivatedServedCells_nr_cells SI_XNAP_DT_ActivatedServedCells_nr_cells;
// L:1224
typedef struct __si_xnap_dt_ActivatedServedCells_e_utra_cells SI_XNAP_DT_ActivatedServedCells_e_utra_cells;
// L:4446
typedef struct __si_xnap_dt_DefaultOctetString SI_XNAP_DT_DefaultOctetString;

//PDU
// L:7945
typedef struct __si_xnap_dt_A2XPC5QoSParameters_ExtIEs SI_XNAP_DT_PDU_A2XPC5QoSParameters_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_A2XPC5QoSFlowItem_ExtIEs SI_XNAP_DT_PDU_A2XPC5QoSFlowItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_A2XPC5FlowBitRates_ExtIEs SI_XNAP_DT_PDU_A2XPC5FlowBitRates_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item_ExtIEs SI_XNAP_DT_PDU_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_AveragePacketDelay_ExtIEs SI_XNAP_DT_PDU_AveragePacketDelay_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Additional_PDCP_Duplication_TNL_ExtIEs SI_XNAP_DT_PDU_Additional_PDCP_Duplication_TNL_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Additional_UL_NG_U_TNLatUPF_Item_ExtIEs SI_XNAP_DT_PDU_Additional_UL_NG_U_TNLatUPF_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Additional_Measurement_Timing_Configuration_Item_ExtIEs SI_XNAP_DT_PDU_Additional_Measurement_Timing_Configuration_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Active_MBS_SessionInformation_ExtIEs SI_XNAP_DT_PDU_Active_MBS_SessionInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DataCollectionID_ExtIEs SI_XNAP_DT_PDU_DataCollectionID_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_AllocationandRetentionPriority_ExtIEs SI_XNAP_DT_PDU_AllocationandRetentionPriority_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_AllowedPNI_NPN_ID_Item_ExtIEs SI_XNAP_DT_PDU_AllowedPNI_NPN_ID_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_AlternativeQoSParaSetItem_ExtIEs SI_XNAP_DT_PDU_AlternativeQoSParaSetItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_GlobalAMF_Region_Information_ExtIEs SI_XNAP_DT_PDU_GlobalAMF_Region_Information_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_AreaOfInterest_Item_ExtIEs SI_XNAP_DT_PDU_AreaOfInterest_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_AreaScopeOfMDT_NR_ExtIEs SI_XNAP_DT_PDU_AreaScopeOfMDT_NR_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_AreaScopeOfMDT_EUTRA_ExtIEs SI_XNAP_DT_PDU_AreaScopeOfMDT_EUTRA_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_AreaScopeOfNeighCellsItem_ExtIEs SI_XNAP_DT_PDU_AreaScopeOfNeighCellsItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_AreaScopeOfQMC_ExtIEs SI_XNAP_DT_PDU_AreaScopeOfQMC_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_AS_SecurityInformation_ExtIEs SI_XNAP_DT_PDU_AS_SecurityInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_AssistanceDataForRANPaging_ExtIEs SI_XNAP_DT_PDU_AssistanceDataForRANPaging_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Associated_QoSFlowInfo_Item_ExtIEs SI_XNAP_DT_PDU_Associated_QoSFlowInfo_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_AvailableRVQoEMetrics_ExtIEs SI_XNAP_DT_PDU_AvailableRVQoEMetrics_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_BAPRoutingID_ExtIEs SI_XNAP_DT_PDU_BAPRoutingID_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_BeamMeasurementsReportConfiguration_ExtIEs SI_XNAP_DT_PDU_BeamMeasurementsReportConfiguration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_BeamMeasurementsReportQuantity_ExtIEs SI_XNAP_DT_PDU_BeamMeasurementsReportQuantity_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_BHInfo_Item_ExtIEs SI_XNAP_DT_PDU_BHInfo_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_BAPControlPDURLCCH_Item_ExtIEs SI_XNAP_DT_PDU_BAPControlPDURLCCH_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_BluetoothMeasurementConfiguration_ExtIEs SI_XNAP_DT_PDU_BluetoothMeasurementConfiguration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_BPLMN_ID_Info_EUTRA_Item_ExtIEs SI_XNAP_DT_PDU_BPLMN_ID_Info_EUTRA_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_BPLMN_ID_Info_NR_Item_ExtIEs SI_XNAP_DT_PDU_BPLMN_ID_Info_NR_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_BroadcastCAG_Identifier_Item_ExtIEs SI_XNAP_DT_PDU_BroadcastCAG_Identifier_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_BroadcastNID_Item_ExtIEs SI_XNAP_DT_PDU_BroadcastNID_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_BroadcastPLMNinTAISupport_Item_ExtIEs SI_XNAP_DT_PDU_BroadcastPLMNinTAISupport_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_BroadcastPNI_NPN_ID_Information_Item_ExtIEs SI_XNAP_DT_PDU_BroadcastPNI_NPN_ID_Information_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_BroadcastSNPNID_ExtIEs SI_XNAP_DT_PDU_BroadcastSNPNID_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CandidateRelayUEInfoItem_ExtIEs SI_XNAP_DT_PDU_CandidateRelayUEInfoItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CapacityValueInfo_ExtIEs SI_XNAP_DT_PDU_CapacityValueInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Cause_ExtIEs SI_XNAP_DT_PDU_Cause_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CellAssistanceInfo_NR_ExtIEs SI_XNAP_DT_PDU_CellAssistanceInfo_NR_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CellAndCapacityAssistanceInfo_NR_ExtIEs SI_XNAP_DT_PDU_CellAndCapacityAssistanceInfo_NR_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CellAndCapacityAssistanceInfo_EUTRA_ExtIEs SI_XNAP_DT_PDU_CellAndCapacityAssistanceInfo_EUTRA_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CellAssistanceInfo_EUTRA_ExtIEs SI_XNAP_DT_PDU_CellAssistanceInfo_EUTRA_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CellBasedMDT_NR_ExtIEs SI_XNAP_DT_PDU_CellBasedMDT_NR_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CellBasedQMC_ExtIEs SI_XNAP_DT_PDU_CellBasedQMC_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CellBasedMDT_EUTRA_ExtIEs SI_XNAP_DT_PDU_CellBasedMDT_EUTRA_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CellMeasurementResult_Item_ExtIEs SI_XNAP_DT_PDU_CellMeasurementResult_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CellReplacingInfo_ExtIEs SI_XNAP_DT_PDU_CellReplacingInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CellToReport_Item_ExtIEs SI_XNAP_DT_PDU_CellToReport_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CellToReportForDataCollection_Item_ExtIEs SI_XNAP_DT_PDU_CellToReportForDataCollection_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CellMeasurementInitiationResult_Item_ExtIEs SI_XNAP_DT_PDU_CellMeasurementInitiationResult_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CellInfoResultForDataCollection_Item_ExtIEs SI_XNAP_DT_PDU_CellInfoResultForDataCollection_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Cell_Type_Choice_ExtIEs SI_XNAP_DT_PDU_Cell_Type_Choice_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CellMeasurementFailureCause_Item_ExtIEs SI_XNAP_DT_PDU_CellMeasurementFailureCause_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CHOConfiguration_ExtIEs SI_XNAP_DT_PDU_CHOConfiguration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CHOCandidateCell_Item_ExtIEs SI_XNAP_DT_PDU_CHOCandidateCell_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CHOExecutionCondition_Item_ExtIEs SI_XNAP_DT_PDU_CHOExecutionCondition_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ClockQualityAcceptanceCriteria_ExtIEs SI_XNAP_DT_PDU_ClockQualityAcceptanceCriteria_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ClockQualityReportingControlInfo_ExtIEs SI_XNAP_DT_PDU_ClockQualityReportingControlInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ClockQualityDetailLevel_ExtIEs SI_XNAP_DT_PDU_ClockQualityDetailLevel_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CompositeAvailableCapacityGroup_ExtIEs SI_XNAP_DT_PDU_CompositeAvailableCapacityGroup_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CompositeAvailableCapacity_ExtIEs SI_XNAP_DT_PDU_CompositeAvailableCapacity_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CHOinformation_Req_ExtIEs SI_XNAP_DT_PDU_CHOinformation_Req_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CHOTimeBasedInformation_ExtIEs SI_XNAP_DT_PDU_CHOTimeBasedInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CHOinformation_Ack_ExtIEs SI_XNAP_DT_PDU_CHOinformation_Ack_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CHOinformation_AddReq_ExtIEs SI_XNAP_DT_PDU_CHOinformation_AddReq_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CHOinformation_AddReqAck_ExtIEs SI_XNAP_DT_PDU_CHOinformation_AddReqAck_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CHOinformation_ModReq_ExtIEs SI_XNAP_DT_PDU_CHOinformation_ModReq_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CHO_CPAC_Information_ExtIEs SI_XNAP_DT_PDU_CHO_CPAC_Information_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CHO_target_SN_node_Item_ExtIEs SI_XNAP_DT_PDU_CHO_target_SN_node_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CHO_Candidate_PSCells_Item_ExtIEs SI_XNAP_DT_PDU_CHO_Candidate_PSCells_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Conditional_Reconfig_Item_ExtIEs SI_XNAP_DT_PDU_Conditional_Reconfig_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Connectivity_Support_ExtIEs SI_XNAP_DT_PDU_Connectivity_Support_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_COUNT_PDCP_SN12_ExtIEs SI_XNAP_DT_PDU_COUNT_PDCP_SN12_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_COUNT_PDCP_SN18_ExtIEs SI_XNAP_DT_PDU_COUNT_PDCP_SN18_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Coverage_Modification_List_Item_ExtIEs SI_XNAP_DT_PDU_Coverage_Modification_List_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CPTransportLayerInformation_ExtIEs SI_XNAP_DT_PDU_CPTransportLayerInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CPACcandidatePSCells_item_ExtIEs SI_XNAP_DT_PDU_CPACcandidatePSCells_item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CPACcandidatePSCells_wotherInfo_item_ExtIEs SI_XNAP_DT_PDU_CPACcandidatePSCells_wotherInfo_item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CPACConfiguration_ExtIEs SI_XNAP_DT_PDU_CPACConfiguration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CPACCandidateCell_Item_ExtIEs SI_XNAP_DT_PDU_CPACCandidateCell_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CPACExecutionCondition_Item_ExtIEs SI_XNAP_DT_PDU_CPACExecutionCondition_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CPAInformationRequest_ExtIEs SI_XNAP_DT_PDU_CPAInformationRequest_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CPAInformationAck_ExtIEs SI_XNAP_DT_PDU_CPAInformationAck_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CPCInformationRequired_ExtIEs SI_XNAP_DT_PDU_CPCInformationRequired_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CPC_target_SN_required_list_Item_ExtIEs SI_XNAP_DT_PDU_CPC_target_SN_required_list_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CPCInformationConfirm_ExtIEs SI_XNAP_DT_PDU_CPCInformationConfirm_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CPC_target_SN_confirm_list_Item_ExtIEs SI_XNAP_DT_PDU_CPC_target_SN_confirm_list_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CPAInformationModReq_ExtIEs SI_XNAP_DT_PDU_CPAInformationModReq_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CPAInformationModReqAck_ExtIEs SI_XNAP_DT_PDU_CPAInformationModReqAck_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CPACInformationModRequired_ExtIEs SI_XNAP_DT_PDU_CPACInformationModRequired_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CPCInformationUpdate_ExtIEs SI_XNAP_DT_PDU_CPCInformationUpdate_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CPC_target_SN_mod_item_ExtIEs SI_XNAP_DT_PDU_CPC_target_SN_mod_item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CPCInformationUpdatePSCells_item_ExtIEs SI_XNAP_DT_PDU_CPCInformationUpdatePSCells_item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CriticalityDiagnostics_ExtIEs SI_XNAP_DT_PDU_CriticalityDiagnostics_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CriticalityDiagnostics_IE_List_ExtIEs SI_XNAP_DT_PDU_CriticalityDiagnostics_IE_List_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CSI_RS_MTC_Configuration_Item_ExtIEs SI_XNAP_DT_PDU_CSI_RS_MTC_Configuration_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CSI_RS_Neighbour_Item_ExtIEs SI_XNAP_DT_PDU_CSI_RS_Neighbour_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CSI_RS_MTC_Neighbour_Item_ExtIEs SI_XNAP_DT_PDU_CSI_RS_MTC_Neighbour_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CAGListforMDTItem_ExtIEs SI_XNAP_DT_PDU_CAGListforMDTItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_XnUAddressInfoperPDUSession_Item_ExtIEs SI_XNAP_DT_PDU_XnUAddressInfoperPDUSession_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DataForwardingInfoFromTargetE_UTRANnode_ExtIEs SI_XNAP_DT_PDU_DataForwardingInfoFromTargetE_UTRANnode_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DataForwardingInfoFromTargetE_UTRANnode_Item_ExtIEs SI_XNAP_DT_PDU_DataForwardingInfoFromTargetE_UTRANnode_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSFlowsToBeForwarded_Item_ExtIEs SI_XNAP_DT_PDU_QoSFlowsToBeForwarded_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DataForwardingInfoFromTargetNGRANnode_ExtIEs SI_XNAP_DT_PDU_DataForwardingInfoFromTargetNGRANnode_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSFLowsAcceptedToBeForwarded_Item_ExtIEs SI_XNAP_DT_PDU_QoSFLowsAcceptedToBeForwarded_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DataforwardingandOffloadingInfofromSource_ExtIEs SI_XNAP_DT_PDU_DataforwardingandOffloadingInfofromSource_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSFLowsToBeForwarded_Item_ExtIEs SI_XNAP_DT_PDU_QoSFLowsToBeForwarded_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DataForwardingResponseDRBItem_ExtIEs SI_XNAP_DT_PDU_DataForwardingResponseDRBItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DataTrafficResourceIndication_ExtIEs SI_XNAP_DT_PDU_DataTrafficResourceIndication_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DAPSRequestInfo_ExtIEs SI_XNAP_DT_PDU_DAPSRequestInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DAPSResponseInfo_Item_ExtIEs SI_XNAP_DT_PDU_DAPSResponseInfo_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DLCountChoice_ExtIEs SI_XNAP_DT_PDU_DLCountChoice_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DLF1Terminating_BHInfo_ExtIEs SI_XNAP_DT_PDU_DLF1Terminating_BHInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DLLBTFailureInformationList_Item_ExtIEs SI_XNAP_DT_PDU_DLLBTFailureInformationList_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DLNonF1Terminating_BHInfo_ExtIEs SI_XNAP_DT_PDU_DLNonF1Terminating_BHInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRB_List_withCause_Item_ExtIEs SI_XNAP_DT_PDU_DRB_List_withCause_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBsSubjectToDLDiscarding_Item_ExtIEs SI_XNAP_DT_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs SI_XNAP_DT_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBsSubjectToStatusTransfer_Item_ExtIEs SI_XNAP_DT_PDU_DRBsSubjectToStatusTransfer_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBBStatusTransferChoice_ExtIEs SI_XNAP_DT_PDU_DRBBStatusTransferChoice_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBBStatusTransfer12bitsSN_ExtIEs SI_XNAP_DT_PDU_DRBBStatusTransfer12bitsSN_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBBStatusTransfer18bitsSN_ExtIEs SI_XNAP_DT_PDU_DRBBStatusTransfer18bitsSN_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBToQoSFlowMapping_Item_ExtIEs SI_XNAP_DT_PDU_DRBToQoSFlowMapping_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DUF_Slot_Config_Item_ExtIEs SI_XNAP_DT_PDU_DUF_Slot_Config_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Dynamic5QIDescriptor_ExtIEs SI_XNAP_DT_PDU_Dynamic5QIDescriptor_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ECNMarkingorCongestionInformationReportingRequest_ExtIEs SI_XNAP_DT_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_E_UTRA_CGI_ExtIEs SI_XNAP_DT_PDU_E_UTRA_CGI_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_EUTRAPagingeDRXInformation_ExtIEs SI_XNAP_DT_PDU_EUTRAPagingeDRXInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_E_UTRAPRACHConfiguration_ExtIEs SI_XNAP_DT_PDU_E_UTRAPRACHConfiguration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_EndpointIPAddressAndPort_ExtIEs SI_XNAP_DT_PDU_EndpointIPAddressAndPort_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_EventTriggered_ExtIEs SI_XNAP_DT_PDU_EventTriggered_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_EventTypeTrigger_ExtIEs SI_XNAP_DT_PDU_EventTypeTrigger_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_EventL1_ExtIEs SI_XNAP_DT_PDU_EventL1_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MeasurementThresholdL1LoggedMDT_ExtIEs SI_XNAP_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ExcessPacketDelayThresholdItem_ExtIEs SI_XNAP_DT_PDU_ExcessPacketDelayThresholdItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ExpectedUEActivityBehaviour_ExtIEs SI_XNAP_DT_PDU_ExpectedUEActivityBehaviour_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ExpectedUEBehaviour_ExtIEs SI_XNAP_DT_PDU_ExpectedUEBehaviour_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ExpectedUEMovingTrajectoryItem_ExtIEs SI_XNAP_DT_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ExplicitFormat_ExtIEs SI_XNAP_DT_PDU_ExplicitFormat_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ExtendedRATRestrictionInformation_ExtIEs SI_XNAP_DT_PDU_ExtendedRATRestrictionInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ExtTLA_Item_ExtIEs SI_XNAP_DT_PDU_ExtTLA_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_GTPTLA_Item_ExtIEs SI_XNAP_DT_PDU_GTPTLA_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_F1_TerminatingTopologyBHInformation_ExtIEs SI_XNAP_DT_PDU_F1_TerminatingTopologyBHInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_F1TerminatingBHInformation_Item_ExtIEs SI_XNAP_DT_PDU_F1TerminatingBHInformation_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_FiveGProSeAuthorized_ExtIEs SI_XNAP_DT_PDU_FiveGProSeAuthorized_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_FiveGProSePC5QoSParameters_ExtIEs SI_XNAP_DT_PDU_FiveGProSePC5QoSParameters_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_FiveGProSePC5QoSFlowItem_ExtIEs SI_XNAP_DT_PDU_FiveGProSePC5QoSFlowItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_FiveGProSePC5FlowBitRates_ExtIEs SI_XNAP_DT_PDU_FiveGProSePC5FlowBitRates_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Flows_Mapped_To_DRB_Item_ExtIEs SI_XNAP_DT_PDU_Flows_Mapped_To_DRB_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_FreqDomainHSNAconfiguration_List_Item_ExtIEs SI_XNAP_DT_PDU_FreqDomainHSNAconfiguration_List_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_FreqDomainSlotHSNAconfiguration_List_Item_ExtIEs SI_XNAP_DT_PDU_FreqDomainSlotHSNAconfiguration_List_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_GBRQoSFlowInfo_ExtIEs SI_XNAP_DT_PDU_GBRQoSFlowInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_GlobalgNB_ID_ExtIEs SI_XNAP_DT_PDU_GlobalgNB_ID_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_GNB_DU_Cell_Resource_Configuration_ExtIEs SI_XNAP_DT_PDU_GNB_DU_Cell_Resource_Configuration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_GNB_ID_Choice_ExtIEs SI_XNAP_DT_PDU_GNB_ID_Choice_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_GNB_RadioResourceStatus_ExtIEs SI_XNAP_DT_PDU_GNB_RadioResourceStatus_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_GlobalCell_ID_ExtIEs SI_XNAP_DT_PDU_GlobalCell_ID_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_GlobaleNB_ID_ExtIEs SI_XNAP_DT_PDU_GlobaleNB_ID_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ENB_ID_Choice_ExtIEs SI_XNAP_DT_PDU_ENB_ID_Choice_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_GlobalNG_RANCell_ID_ExtIEs SI_XNAP_DT_PDU_GlobalNG_RANCell_ID_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_GlobalNG_RANNode_ID_ExtIEs SI_XNAP_DT_PDU_GlobalNG_RANNode_ID_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_GTPtunnelTransportLayerInformation_ExtIEs SI_XNAP_DT_PDU_GTPtunnelTransportLayerInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_GUAMI_ExtIEs SI_XNAP_DT_PDU_GUAMI_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_HSNASlotConfigItem_ExtIEs SI_XNAP_DT_PDU_HSNASlotConfigItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_IABCellInformation_ExtIEs SI_XNAP_DT_PDU_IABCellInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_IAB_DU_Cell_Resource_Configuration_Mode_Info_ExtIEs SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_Mode_Info_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_IAB_DU_Cell_Resource_Configuration_FDD_Info_ExtIEs SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_FDD_Info_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_IAB_DU_Cell_Resource_Configuration_TDD_Info_ExtIEs SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_TDD_Info_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_IAB_MT_Cell_List_Item_ExtIEs SI_XNAP_DT_PDU_IAB_MT_Cell_List_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_IAB_QoS_Mapping_Information_ExtIEs SI_XNAP_DT_PDU_IAB_QoS_Mapping_Information_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_IAB_STC_Info_ExtIEs SI_XNAP_DT_PDU_IAB_STC_Info_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_IAB_STC_Info_Item_ExtIEs SI_XNAP_DT_PDU_IAB_STC_Info_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_IAB_TNL_Address_Request_ExtIEs SI_XNAP_DT_PDU_IAB_TNL_Address_Request_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_IABIPv6RequestType_ExtIEs SI_XNAP_DT_PDU_IABIPv6RequestType_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_IAB_TNL_Address_Response_ExtIEs SI_XNAP_DT_PDU_IAB_TNL_Address_Response_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_IABAllocatedTNLAddress_Item_ExtIEs SI_XNAP_DT_PDU_IABAllocatedTNLAddress_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_IABTNLAddress_ExtIEs SI_XNAP_DT_PDU_IABTNLAddress_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_IABTNLAddressesRequested_ExtIEs SI_XNAP_DT_PDU_IABTNLAddressesRequested_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_IABTNLAddressToRemove_Item_ExtIEs SI_XNAP_DT_PDU_IABTNLAddressToRemove_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_IABTNLAddress_ItemExtIEs SI_XNAP_DT_PDU_IABTNLAddress_ItemExtIEs;
// L:7945
typedef struct __si_xnap_dt_ImmediateMDT_NR_ExtIEs SI_XNAP_DT_PDU_ImmediateMDT_NR_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ImplicitFormat_ExtIEs SI_XNAP_DT_PDU_ImplicitFormat_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_InitiatingCondition_FailureIndication_ExtIEs SI_XNAP_DT_PDU_InitiatingCondition_FailureIndication_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_IntendedTDD_DL_ULConfiguration_NR_ExtIEs SI_XNAP_DT_PDU_IntendedTDD_DL_ULConfiguration_NR_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_I_RNTI_ExtIEs SI_XNAP_DT_PDU_I_RNTI_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Local_NG_RAN_Node_Identifier_ExtIEs SI_XNAP_DT_PDU_Local_NG_RAN_Node_Identifier_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Full_and_Short_I_RNTI_Profile_List_ExtIEs SI_XNAP_DT_PDU_Full_and_Short_I_RNTI_Profile_List_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Full_I_RNTI_Profile_List_ExtIEs SI_XNAP_DT_PDU_Full_I_RNTI_Profile_List_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Short_I_RNTI_Profile_List_ExtIEs SI_XNAP_DT_PDU_Short_I_RNTI_Profile_List_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_LastVisitedCell_Item_ExtIEs SI_XNAP_DT_PDU_LastVisitedCell_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_LastVisitedPSCellList_Item_ExtIEs SI_XNAP_DT_PDU_LastVisitedPSCellList_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SCGUEHistoryInformation_ExtIEs SI_XNAP_DT_PDU_SCGUEHistoryInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CellsinAoI_Item_ExtIEs SI_XNAP_DT_PDU_CellsinAoI_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_GlobalNG_RANNodesinAoI_Item_ExtIEs SI_XNAP_DT_PDU_GlobalNG_RANNodesinAoI_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TAIsinAoI_Item_ExtIEs SI_XNAP_DT_PDU_TAIsinAoI_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_LocationReportingInformation_ExtIEs SI_XNAP_DT_PDU_LocationReportingInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_LoggedEventTriggeredConfig_ExtIEs SI_XNAP_DT_PDU_LoggedEventTriggeredConfig_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_LoggedMDT_NR_ExtIEs SI_XNAP_DT_PDU_LoggedMDT_NR_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_LTEA2XServicesAuthorized_ExtIEs SI_XNAP_DT_PDU_LTEA2XServicesAuthorized_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_LTEV2XServicesAuthorized_ExtIEs SI_XNAP_DT_PDU_LTEV2XServicesAuthorized_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_LTEUESidelinkAggregateMaximumBitRate_ExtIEs SI_XNAP_DT_PDU_LTEUESidelinkAggregateMaximumBitRate_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MDTAlignmentInfo_ExtIEs SI_XNAP_DT_PDU_MDTAlignmentInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_M1Configuration_ExtIEs SI_XNAP_DT_PDU_M1Configuration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_M1PeriodicReporting_ExtIEs SI_XNAP_DT_PDU_M1PeriodicReporting_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_M1ThresholdEventA2_ExtIEs SI_XNAP_DT_PDU_M1ThresholdEventA2_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_M4Configuration_ExtIEs SI_XNAP_DT_PDU_M4Configuration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_M5Configuration_ExtIEs SI_XNAP_DT_PDU_M5Configuration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_M6Configuration_ExtIEs SI_XNAP_DT_PDU_M6Configuration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_M7Configuration_ExtIEs SI_XNAP_DT_PDU_M7Configuration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MaximumIPdatarate_ExtIEs SI_XNAP_DT_PDU_MaximumIPdatarate_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MBSFNSubframeAllocation_E_UTRA_ExtIEs SI_XNAP_DT_PDU_MBSFNSubframeAllocation_E_UTRA_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MBSFNSubframeInfo_E_UTRA_Item_ExtIEs SI_XNAP_DT_PDU_MBSFNSubframeInfo_E_UTRA_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MBS_MappingandDataForwardingRequestInfofromSource_Item_ExtIEs SI_XNAP_DT_PDU_MBS_MappingandDataForwardingRequestInfofromSource_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MBS_DataForwardingResponseInfofromTarget_Item_ExtIEs SI_XNAP_DT_PDU_MBS_DataForwardingResponseInfofromTarget_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MBS_QoSFlowsToAdd_Item_ExtIEs SI_XNAP_DT_PDU_MBS_QoSFlowsToAdd_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MBS_ServiceArea_ExtIEs SI_XNAP_DT_PDU_MBS_ServiceArea_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MBS_ServiceAreaInformation_ExtIEs SI_XNAP_DT_PDU_MBS_ServiceAreaInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MBS_ServiceAreaInformation_Item_ExtIEs SI_XNAP_DT_PDU_MBS_ServiceAreaInformation_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MBS_ServiceAreaTAI_Item_ExtIEs SI_XNAP_DT_PDU_MBS_ServiceAreaTAI_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MBS_Session_ID_ExtIEs SI_XNAP_DT_PDU_MBS_Session_ID_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MBS_SessionAssociatedInformation_Item_ExtIEs SI_XNAP_DT_PDU_MBS_SessionAssociatedInformation_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MBS_SessionInformation_Item_ExtIEs SI_XNAP_DT_PDU_MBS_SessionInformation_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MBS_SessionInformationResponse_Item_ExtIEs SI_XNAP_DT_PDU_MBS_SessionInformationResponse_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MRB_ProgressInformation_ExtIEs SI_XNAP_DT_PDU_MRB_ProgressInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MDT_Configuration_ExtIEs SI_XNAP_DT_PDU_MDT_Configuration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MDT_Configuration_NR_ExtIEs SI_XNAP_DT_PDU_MDT_Configuration_NR_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MDT_Configuration_EUTRA_ExtIEs SI_XNAP_DT_PDU_MDT_Configuration_EUTRA_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MDTMode_NR_ExtensionIE SI_XNAP_DT_PDU_MDTMode_NR_ExtensionIE;
// L:7945
typedef struct __si_xnap_dt_MeasurementThresholdA2_ExtIEs SI_XNAP_DT_PDU_MeasurementThresholdA2_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MIMOPRBusageInformation_ExtIEs SI_XNAP_DT_PDU_MIMOPRBusageInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MobilityRestrictionList_ExtIEs SI_XNAP_DT_PDU_MobilityRestrictionList_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_CNTypeRestrictionsForEquivalentItem_ExtIEs SI_XNAP_DT_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RAT_RestrictionsItem_ExtIEs SI_XNAP_DT_PDU_RAT_RestrictionsItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ForbiddenAreaItem_ExtIEs SI_XNAP_DT_PDU_ForbiddenAreaItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ServiceAreaItem_ExtIEs SI_XNAP_DT_PDU_ServiceAreaItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MR_DC_ResourceCoordinationInfo_ExtIEs SI_XNAP_DT_PDU_MR_DC_ResourceCoordinationInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_E_UTRA_ResourceCoordinationInfo_ExtIEs SI_XNAP_DT_PDU_E_UTRA_ResourceCoordinationInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NR_ResourceCoordinationInfo_ExtIEs SI_XNAP_DT_PDU_NR_ResourceCoordinationInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MessageOversizeNotification_ExtIEs SI_XNAP_DT_PDU_MessageOversizeNotification_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MT_SDT_Information_ExtIEs SI_XNAP_DT_PDU_MT_SDT_Information_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MultiplexingInfo_ExtIEs SI_XNAP_DT_PDU_MultiplexingInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MeasuredUETrajectory_Item_ExtIEs SI_XNAP_DT_PDU_MeasuredUETrajectory_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MeasuredTrajectoryCellInfo_ExtIEs SI_XNAP_DT_PDU_MeasuredTrajectoryCellInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MeasuredTrajectoryNGRANCellInfo_ExtIEs SI_XNAP_DT_PDU_MeasuredTrajectoryNGRANCellInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_N6JitterInformationExtIEs SI_XNAP_DT_PDU_N6JitterInformationExtIEs;
// L:7945
typedef struct __si_xnap_dt_NACellResourceConfiguration_Item_ExtIEs SI_XNAP_DT_PDU_NACellResourceConfiguration_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NE_DC_TDM_Pattern_ExtIEs SI_XNAP_DT_PDU_NE_DC_TDM_Pattern_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NeighbourInformation_E_UTRA_Item_ExtIEs SI_XNAP_DT_PDU_NeighbourInformation_E_UTRA_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NeighbourInformation_NR_Item_ExtIEs SI_XNAP_DT_PDU_NeighbourInformation_NR_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NeighbourInformation_NR_ModeInfo_ExtIEs SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NeighbourInformation_NR_ModeFDDInfo_ExtIEs SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeFDDInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NeighbourInformation_NR_ModeTDDInfo_ExtIEs SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeTDDInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Neighbour_NG_RAN_Node_Item_ExtIEs SI_XNAP_DT_PDU_Neighbour_NG_RAN_Node_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NRCarrierItem_ExtIEs SI_XNAP_DT_PDU_NRCarrierItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NG_RAN_Cell_Identity_ExtIEs SI_XNAP_DT_PDU_NG_RAN_Cell_Identity_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NG_RAN_CellPCI_ExtIEs SI_XNAP_DT_PDU_NG_RAN_CellPCI_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NodeAssociatedInfoResult_ExtIEs SI_XNAP_DT_PDU_NodeAssociatedInfoResult_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NodeMeasurementInitiationResult_Item_ExtIEs SI_XNAP_DT_PDU_NodeMeasurementInitiationResult_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NonDynamic5QIDescriptor_ExtIEs SI_XNAP_DT_PDU_NonDynamic5QIDescriptor_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NG_eNB_RadioResourceStatus_ExtIEs SI_XNAP_DT_PDU_NG_eNB_RadioResourceStatus_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TNLCapacityIndicator_ExtIEs SI_XNAP_DT_PDU_TNLCapacityIndicator_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Non_F1_TerminatingTopologyBHInformation_ExtIEs SI_XNAP_DT_PDU_Non_F1_TerminatingTopologyBHInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NonF1TerminatingBHInformation_Item_ExtIEs SI_XNAP_DT_PDU_NonF1TerminatingBHInformation_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NonUPTraffic_ExtIEs SI_XNAP_DT_PDU_NonUPTraffic_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NPN_Broadcast_Information_ExtIEs SI_XNAP_DT_PDU_NPN_Broadcast_Information_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NPN_Broadcast_Information_SNPN_ExtIEs SI_XNAP_DT_PDU_NPN_Broadcast_Information_SNPN_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NPN_Broadcast_Information_PNI_NPN_ExtIEs SI_XNAP_DT_PDU_NPN_Broadcast_Information_PNI_NPN_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NPNMobilityInformation_ExtIEs SI_XNAP_DT_PDU_NPNMobilityInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NPNMobilityInformation_SNPN_ExtIEs SI_XNAP_DT_PDU_NPNMobilityInformation_SNPN_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NPNMobilityInformation_PNI_NPN_ExtIEs SI_XNAP_DT_PDU_NPNMobilityInformation_PNI_NPN_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NPNPagingAssistanceInformation_ExtIEs SI_XNAP_DT_PDU_NPNPagingAssistanceInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NPNPagingAssistanceInformation_PNI_NPN_ExtIEs SI_XNAP_DT_PDU_NPNPagingAssistanceInformation_PNI_NPN_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NPN_Support_ExtIEs SI_XNAP_DT_PDU_NPN_Support_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NPN_Support_SNPN_ExtIEs SI_XNAP_DT_PDU_NPN_Support_SNPN_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NPRACHConfiguration_ExtIEs SI_XNAP_DT_PDU_NPRACHConfiguration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_FDD_or_TDD_in_NPRACHConfiguration_Choice_ExtIEs SI_XNAP_DT_PDU_FDD_or_TDD_in_NPRACHConfiguration_Choice_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NPRACHConfiguration_FDD_ExtIEs SI_XNAP_DT_PDU_NPRACHConfiguration_FDD_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NPRACHConfiguration_TDD_ExtIEs SI_XNAP_DT_PDU_NPRACHConfiguration_TDD_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Non_AnchorCarrierFrequencylist_ExtIEs SI_XNAP_DT_PDU_Non_AnchorCarrierFrequencylist_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NR_CGI_ExtIEs SI_XNAP_DT_PDU_NR_CGI_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NR_U_Channel_Item_ExtIEs SI_XNAP_DT_PDU_NR_U_Channel_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NR_U_ChannelInfo_Item_ExtIEs SI_XNAP_DT_PDU_NR_U_ChannelInfo_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NRA2XServicesAuthorized_ExtIEs SI_XNAP_DT_PDU_NRA2XServicesAuthorized_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NRFrequencyBandItem_ExtIEs SI_XNAP_DT_PDU_NRFrequencyBandItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NRFrequencyInfo_ExtIEs SI_XNAP_DT_PDU_NRFrequencyInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NRModeInfo_ExtIEs SI_XNAP_DT_PDU_NRModeInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NRModeInfoFDD_ExtIEs SI_XNAP_DT_PDU_NRModeInfoFDD_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NRModeInfoTDD_ExtIEs SI_XNAP_DT_PDU_NRModeInfoTDD_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NRPagingeDRXInformation_ExtIEs SI_XNAP_DT_PDU_NRPagingeDRXInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NRPagingeDRXInformationforRRCINACTIVE_ExtIEs SI_XNAP_DT_PDU_NRPagingeDRXInformationforRRCINACTIVE_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NRPagingLongeDRXInformationforRRCINACTIVE_ExtIEs SI_XNAP_DT_PDU_NRPagingLongeDRXInformationforRRCINACTIVE_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NRPPaPositioningInformation_ExtIEs SI_XNAP_DT_PDU_NRPPaPositioningInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NRTransmissionBandwidth_ExtIEs SI_XNAP_DT_PDU_NRTransmissionBandwidth_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Transmission_Bandwidth_asymmetric_ExtIEs SI_XNAP_DT_PDU_Transmission_Bandwidth_asymmetric_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NRV2XServicesAuthorized_ExtIEs SI_XNAP_DT_PDU_NRV2XServicesAuthorized_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_NRUESidelinkAggregateMaximumBitRate_ExtIEs SI_XNAP_DT_PDU_NRUESidelinkAggregateMaximumBitRate_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PositioningInformation_ExtIEs SI_XNAP_DT_PDU_PositioningInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PacketErrorRate_ExtIEs SI_XNAP_DT_PDU_PacketErrorRate_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PEIPSassistanceInformation_ExtIEs SI_XNAP_DT_PDU_PEIPSassistanceInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PC5QoSParameters_ExtIEs SI_XNAP_DT_PDU_PC5QoSParameters_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PC5QoSFlowItem_ExtIEs SI_XNAP_DT_PDU_PC5QoSFlowItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PC5FlowBitRates_ExtIEs SI_XNAP_DT_PDU_PC5FlowBitRates_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDCPChangeIndication_ExtIEs SI_XNAP_DT_PDU_PDCPChangeIndication_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDCPSNLength_ExtIEs SI_XNAP_DT_PDU_PDCPSNLength_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSetQoSParameters_ExtIEs SI_XNAP_DT_PDU_PDUSetQoSParameters_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSetQoSInformation_ExtIEs SI_XNAP_DT_PDU_PDUSetQoSInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionAggregateMaximumBitRate_ExtIEs SI_XNAP_DT_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSession_List_withCause_Item_ExtIEs SI_XNAP_DT_PDU_PDUSession_List_withCause_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSession_List_withDataForwardingFromTarget_Item_ExtIEs SI_XNAP_DT_PDU_PDUSession_List_withDataForwardingFromTarget_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSession_List_withDataForwardingRequest_Item_ExtIEs SI_XNAP_DT_PDU_PDUSession_List_withDataForwardingRequest_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionsListToBeReleased_UPError_Item_ExtIEs SI_XNAP_DT_PDU_PDUSessionsListToBeReleased_UPError_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourcesAdmitted_Item_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourcesAdmitted_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceAdmittedInfo_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceAdmittedInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourcesNotAdmitted_Item_Item_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourcesNotAdmitted_Item_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourcesToBeSetup_Item_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourcesToBeSetup_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceSetupInfo_SNterminated_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceSetupInfo_SNterminated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSFlowsToBeSetup_List_Setup_SNterminated_Item_ExtIEs SI_XNAP_DT_PDU_QoSFlowsToBeSetup_List_Setup_SNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceSetupResponseInfo_SNterminated_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceSetupResponseInfo_SNterminated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBsToBeSetupList_SetupResponse_SNterminated_Item_ExtIEs SI_XNAP_DT_PDU_DRBsToBeSetupList_SetupResponse_SNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item_ExtIEs SI_XNAP_DT_PDU_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceSetupInfo_MNterminated_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceSetupInfo_MNterminated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBsToBeSetupList_Setup_MNterminated_Item_ExtIEs SI_XNAP_DT_PDU_DRBsToBeSetupList_Setup_MNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSFlowsMappedtoDRB_Setup_MNterminated_Item_ExtIEs SI_XNAP_DT_PDU_QoSFlowsMappedtoDRB_Setup_MNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceSetupResponseInfo_MNterminated_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceSetupResponseInfo_MNterminated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBsAdmittedList_SetupResponse_MNterminated_Item_ExtIEs SI_XNAP_DT_PDU_DRBsAdmittedList_SetupResponse_MNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item_ExtIEs SI_XNAP_DT_PDU_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceModificationInfo_SNterminated_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceModificationInfo_SNterminated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSFlowsToBeSetup_List_Modified_SNterminated_Item_ExtIEs SI_XNAP_DT_PDU_QoSFlowsToBeSetup_List_Modified_SNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBsToBeModified_List_Modified_SNterminated_Item_ExtIEs SI_XNAP_DT_PDU_DRBsToBeModified_List_Modified_SNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceModificationResponseInfo_SNterminated_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceModificationResponseInfo_SNterminated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item_ExtIEs SI_XNAP_DT_PDU_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceModificationInfo_MNterminated_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceModificationInfo_MNterminated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBsToBeModifiedList_Modification_MNterminated_Item_ExtIEs SI_XNAP_DT_PDU_DRBsToBeModifiedList_Modification_MNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceModificationResponseInfo_MNterminated_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceModificationResponseInfo_MNterminated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBsAdmittedList_ModificationResponse_MNterminated_Item_ExtIEs SI_XNAP_DT_PDU_DRBsAdmittedList_ModificationResponse_MNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceChangeRequiredInfo_SNterminated_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceChangeRequiredInfo_SNterminated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceChangeConfirmInfo_SNterminated_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceChangeConfirmInfo_SNterminated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceChangeRequiredInfo_MNterminated_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceChangeRequiredInfo_MNterminated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceChangeConfirmInfo_MNterminated_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceChangeConfirmInfo_MNterminated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceModRqdInfo_SNterminated_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceModRqdInfo_SNterminated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBsToBeSetup_List_ModRqd_SNterminated_Item_ExtIEs SI_XNAP_DT_PDU_DRBsToBeSetup_List_ModRqd_SNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs SI_XNAP_DT_PDU_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBsToBeModified_List_ModRqd_SNterminated_Item_ExtIEs SI_XNAP_DT_PDU_DRBsToBeModified_List_ModRqd_SNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs SI_XNAP_DT_PDU_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceModConfirmInfo_SNterminated_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceModConfirmInfo_SNterminated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBsAdmittedList_ModConfirm_SNterminated_Item_ExtIEs SI_XNAP_DT_PDU_DRBsAdmittedList_ModConfirm_SNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceModRqdInfo_MNterminated_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceModRqdInfo_MNterminated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBsToBeModified_List_ModRqd_MNterminated_Item_ExtIEs SI_XNAP_DT_PDU_DRBsToBeModified_List_ModRqd_MNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceModConfirmInfo_MNterminated_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceModConfirmInfo_MNterminated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceBearerSetupCompleteInfo_SNterminated_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceBearerSetupCompleteInfo_SNterminated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item_ExtIEs SI_XNAP_DT_PDU_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourceSecondaryRATUsageItem_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionUsageReport_ExtIEs SI_XNAP_DT_PDU_PDUSessionUsageReport_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Periodical_ExtIEs SI_XNAP_DT_PDU_Periodical_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PLMNAreaBasedQMC_ExtIEs SI_XNAP_DT_PDU_PLMNAreaBasedQMC_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PosPartialUEContextInfo_ExtIEs SI_XNAP_DT_PDU_PosPartialUEContextInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PredictedUETrajectory_Item_ExtIEs SI_XNAP_DT_PDU_PredictedUETrajectory_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PredictedTrajectoryCellInfo_ExtIEs SI_XNAP_DT_PDU_PredictedTrajectoryCellInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PredictedTrajectoryNGRANCellInfo_ExtIEs SI_XNAP_DT_PDU_PredictedTrajectoryNGRANCellInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ProtectedE_UTRAResourceIndication_ExtIEs SI_XNAP_DT_PDU_ProtectedE_UTRAResourceIndication_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ProtectedE_UTRAResource_Item_ExtIEs SI_XNAP_DT_PDU_ProtectedE_UTRAResource_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ProtectedE_UTRAFootprintTimePattern_ExtIEs SI_XNAP_DT_PDU_ProtectedE_UTRAFootprintTimePattern_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PNI_NPN_AreaScopeofMDT_ExtIEs SI_XNAP_DT_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PNI_NPNBasedMDT_ExtIEs SI_XNAP_DT_PDU_PNI_NPNBasedMDT_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QMCConfigInfo_ExtIEs SI_XNAP_DT_PDU_QMCConfigInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UEAppLayerMeasInfo_Item_ExtIEs SI_XNAP_DT_PDU_UEAppLayerMeasInfo_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QMCCoordinationRequest_ExtIEs SI_XNAP_DT_PDU_QMCCoordinationRequest_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MN_to_SN_QMCCoordRequestList_Item_ExtIEs SI_XNAP_DT_PDU_MN_to_SN_QMCCoordRequestList_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SN_to_MN_QMCCoordRequestList_Item_ExtIEs SI_XNAP_DT_PDU_SN_to_MN_QMCCoordRequestList_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QMCCoordinationResponse_ExtIEs SI_XNAP_DT_PDU_QMCCoordinationResponse_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_MN_to_SN_QMCCoordResponseList_Item_ExtIEs SI_XNAP_DT_PDU_MN_to_SN_QMCCoordResponseList_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SN_to_MN_QMCCoordResponseList_Item_ExtIEs SI_XNAP_DT_PDU_SN_to_MN_QMCCoordResponseList_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoERVQoEReportingPaths_ExtIEs SI_XNAP_DT_PDU_QoERVQoEReportingPaths_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RVQoEConfig_ExtIEs SI_XNAP_DT_PDU_RVQoEConfig_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSCharacteristics_ExtIEs SI_XNAP_DT_PDU_QoSCharacteristics_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSFlowLevelQoSParameters_ExtIEs SI_XNAP_DT_PDU_QoSFlowLevelQoSParameters_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSFlowNotificationControlIndicationInfo_ExtIEs SI_XNAP_DT_PDU_QoSFlowNotificationControlIndicationInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSFlow_Item_ExtIEs SI_XNAP_DT_PDU_QoSFlow_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSFlowwithCause_Item_ExtIEs SI_XNAP_DT_PDU_QoSFlowwithCause_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoS_Mapping_Information_ExtIEs SI_XNAP_DT_PDU_QoS_Mapping_Information_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSFlowsAdmitted_Item_ExtIEs SI_XNAP_DT_PDU_QoSFlowsAdmitted_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSFlowsToBeSetup_Item_ExtIEs SI_XNAP_DT_PDU_QoSFlowsToBeSetup_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSFlowsUsageReport_Item_ExtIEs SI_XNAP_DT_PDU_QoSFlowsUsageReport_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RAReportList_Item_ExtIEs SI_XNAP_DT_PDU_RAReportList_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RadioResourceStatus_ExtIEs SI_XNAP_DT_PDU_RadioResourceStatus_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RANAreaID_ExtIEs SI_XNAP_DT_PDU_RANAreaID_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RANPagingArea_ExtIEs SI_XNAP_DT_PDU_RANPagingArea_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RANPagingAreaChoice_ExtIEs SI_XNAP_DT_PDU_RANPagingAreaChoice_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RANPagingAttemptInfo_ExtIEs SI_XNAP_DT_PDU_RANPagingAttemptInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RBsetConfiguration_ExtIEs SI_XNAP_DT_PDU_RBsetConfiguration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RedundantPDUSessionInformation_ExtIEs SI_XNAP_DT_PDU_RedundantPDUSessionInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ReplacingCells_Item_ExtIEs SI_XNAP_DT_PDU_ReplacingCells_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ReportType_ExtIEs SI_XNAP_DT_PDU_ReportType_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ReservedSubframePattern_ExtIEs SI_XNAP_DT_PDU_ReservedSubframePattern_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ResetRequestTypeInfo_ExtIEs SI_XNAP_DT_PDU_ResetRequestTypeInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ResetRequestTypeInfo_Full_ExtIEs SI_XNAP_DT_PDU_ResetRequestTypeInfo_Full_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ResetRequestTypeInfo_Partial_ExtIEs SI_XNAP_DT_PDU_ResetRequestTypeInfo_Partial_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ResetRequestPartialReleaseItem_ExtIEs SI_XNAP_DT_PDU_ResetRequestPartialReleaseItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ResetResponseTypeInfo_ExtIEs SI_XNAP_DT_PDU_ResetResponseTypeInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ResetResponseTypeInfo_Full_ExtIEs SI_XNAP_DT_PDU_ResetResponseTypeInfo_Full_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ResetResponseTypeInfo_Partial_ExtIEs SI_XNAP_DT_PDU_ResetResponseTypeInfo_Partial_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ResetResponsePartialReleaseItem_ExtIEs SI_XNAP_DT_PDU_ResetResponsePartialReleaseItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RLC_Status_ExtIEs SI_XNAP_DT_PDU_RLC_Status_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RLCDuplicationInformation_ItemExtIEs SI_XNAP_DT_PDU_RLCDuplicationInformation_ItemExtIEs;
// L:7945
typedef struct __si_xnap_dt_RLCDuplicationState_ItemExtIEs SI_XNAP_DT_PDU_RLCDuplicationState_ItemExtIEs;
// L:7945
typedef struct __si_xnap_dt_RRCConnections_ExtIEs SI_XNAP_DT_PDU_RRCConnections_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RRCReestab_initiated_ExtIEs SI_XNAP_DT_PDU_RRCReestab_initiated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RRCReestab_Initiated_Reporting_ExtIEs SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RRCReestab_Initiated_Reporting_wo_UERLFReport_ExtIEs SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_wo_UERLFReport_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RRCReestab_Initiated_Reporting_with_UERLFReport_ExtIEs SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_with_UERLFReport_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RRCSetup_initiated_ExtIEs SI_XNAP_DT_PDU_RRCSetup_initiated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RRCSetup_Initiated_Reporting_ExtIEs SI_XNAP_DT_PDU_RRCSetup_Initiated_Reporting_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RRCSetup_Initiated_Reporting_with_UERLFReport_ExtIEs SI_XNAP_DT_PDU_RRCSetup_Initiated_Reporting_with_UERLFReport_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RaReportIndicationList_Item_ExtIEs SI_XNAP_DT_PDU_RaReportIndicationList_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RadioResourceStatusNR_U_ExtIEs SI_XNAP_DT_PDU_RadioResourceStatusNR_U_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_S_BasedMDT_ExtIEs SI_XNAP_DT_PDU_S_BasedMDT_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_S_CPAC_Request_Info_ExtIEs SI_XNAP_DT_PDU_S_CPAC_Request_Info_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_S_CPAC_SecurityConfig_Item_ExtIEs SI_XNAP_DT_PDU_S_CPAC_SecurityConfig_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_S_CPAC_MultiTargetSN_Item_ExtIEs SI_XNAP_DT_PDU_S_CPAC_MultiTargetSN_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SecondarydataForwardingInfoFromTarget_Item_ExtIEs SI_XNAP_DT_PDU_SecondarydataForwardingInfoFromTarget_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SDTSupportRequest_ExtIEs SI_XNAP_DT_PDU_SDTSupportRequest_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SDTPartialUEContextInfo_ExtIEs SI_XNAP_DT_PDU_SDTPartialUEContextInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SDT_DRBsToBeSetupList_Item_ExtIEs SI_XNAP_DT_PDU_SDT_DRBsToBeSetupList_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SDT_SRBsToBeSetupList_Item_ExtIEs SI_XNAP_DT_PDU_SDT_SRBsToBeSetupList_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SDTDataForwardingDRBList_Item_ExtIEs SI_XNAP_DT_PDU_SDTDataForwardingDRBList_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SecondaryRATUsageInformation_ExtIEs SI_XNAP_DT_PDU_SecondaryRATUsageInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SecurityIndication_ExtIEs SI_XNAP_DT_PDU_SecurityIndication_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SecurityResult_ExtIEs SI_XNAP_DT_PDU_SecurityResult_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SensorMeasurementConfiguration_ExtIEs SI_XNAP_DT_PDU_SensorMeasurementConfiguration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SensorNameConfig_ExtIEs SI_XNAP_DT_PDU_SensorNameConfig_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA_ExtIEs SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA_perBPLMN_ExtIEs SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_perBPLMN_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA_ModeInfo_ExtIEs SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_ModeInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA_FDDInfo_ExtIEs SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_FDDInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA_TDDInfo_ExtIEs SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_TDDInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ServedCells_E_UTRA_Item_ExtIEs SI_XNAP_DT_PDU_ServedCells_E_UTRA_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ServedCellsToUpdate_E_UTRA_ExtIEs SI_XNAP_DT_PDU_ServedCellsToUpdate_E_UTRA_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Served_cells_ToModify_E_UTRA_Item_ExtIEs SI_XNAP_DT_PDU_Served_cells_ToModify_E_UTRA_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ServedCellInformation_NR_ExtIEs SI_XNAP_DT_PDU_ServedCellInformation_NR_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SFN_Offset_ExtIEs SI_XNAP_DT_PDU_SFN_Offset_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ServedCells_NR_Item_ExtIEs SI_XNAP_DT_PDU_ServedCells_NR_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Served_cells_ToModify_NR_Item_ExtIEs SI_XNAP_DT_PDU_Served_cells_ToModify_NR_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ServedCellSpecificInfoReq_NR_Item_ExtIEs SI_XNAP_DT_PDU_ServedCellSpecificInfoReq_NR_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ServedCellsToUpdate_NR_ExtIEs SI_XNAP_DT_PDU_ServedCellsToUpdate_NR_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SharedResourceType_ExtIEs SI_XNAP_DT_PDU_SharedResourceType_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SharedResourceType_UL_OnlySharing_ExtIEs SI_XNAP_DT_PDU_SharedResourceType_UL_OnlySharing_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SharedResourceType_ULDL_Sharing_ExtIEs SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SharedResourceType_ULDL_Sharing_UL_Resources_ExtIEs SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_UL_Resources_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged_ExtIEs SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SharedResourceType_ULDL_Sharing_DL_Resources_ExtIEs SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_DL_Resources_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged_ExtIEs SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SliceAvailableCapacity_Item_ExtIEs SI_XNAP_DT_PDU_SliceAvailableCapacity_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SNSSAIAvailableCapacity_Item_ExtIEs SI_XNAP_DT_PDU_SNSSAIAvailableCapacity_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SliceRadioResourceStatus_Item_ExtIEs SI_XNAP_DT_PDU_SliceRadioResourceStatus_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SLPositioning_Ranging_Services_Info_ExtIEs SI_XNAP_DT_PDU_SLPositioning_Ranging_Services_Info_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RSPP_transport_QoS_parameters_ExtIEs SI_XNAP_DT_PDU_RSPP_transport_QoS_parameters_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RSPPQoSFlowItem_ExtIEs SI_XNAP_DT_PDU_RSPPQoSFlowItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RSPPFlowBitRates_ExtIEs SI_XNAP_DT_PDU_RSPPFlowBitRates_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SNSSAIRadioResourceStatus_Item_ExtIEs SI_XNAP_DT_PDU_SNSSAIRadioResourceStatus_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SliceToReport_List_Item_ExtIEs SI_XNAP_DT_PDU_SliceToReport_List_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SNSSAI_Item_ExtIEs SI_XNAP_DT_PDU_SNSSAI_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SlotConfiguration_List_Item_ExtIEs SI_XNAP_DT_PDU_SlotConfiguration_List_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_S_NSSAI_ExtIEs SI_XNAP_DT_PDU_S_NSSAI_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SNPNIdentity_ExtIEs SI_XNAP_DT_PDU_SNPNIdentity_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SpecialSubframeInfo_E_UTRA_ExtIEs SI_XNAP_DT_PDU_SpecialSubframeInfo_E_UTRA_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SSBAreaCapacityValue_List_Item_ExtIEs SI_XNAP_DT_PDU_SSBAreaCapacityValue_List_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SSBAreaRadioResourceStatus_List_Item_ExtIEs SI_XNAP_DT_PDU_SSBAreaRadioResourceStatus_List_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SSB_Coverage_Modification_List_Item_ExtIEs SI_XNAP_DT_PDU_SSB_Coverage_Modification_List_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SSB_PositionsInBurst_ExtIEs SI_XNAP_DT_PDU_SSB_PositionsInBurst_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SSBOffsets_Item_ExtIEs SI_XNAP_DT_PDU_SSBOffsets_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SSBOffsetInformation_ExtIEs SI_XNAP_DT_PDU_SSBOffsetInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SSBOffsetModificationRange_ExtIEs SI_XNAP_DT_PDU_SSBOffsetModificationRange_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SSBToReport_List_Item_ExtIEs SI_XNAP_DT_PDU_SSBToReport_List_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SSB_transmisisonBitmap_ExtIEs SI_XNAP_DT_PDU_SSB_transmisisonBitmap_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SuccessfulHOReportList_Item_ExtIEs SI_XNAP_DT_PDU_SuccessfulHOReportList_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SuccessfulPSCellChangeReportList_Item_ExtIEs SI_XNAP_DT_PDU_SuccessfulPSCellChangeReportList_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SUL_Information_ExtIEs SI_XNAP_DT_PDU_SUL_Information_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SupportedSULBandItem_ExtIEs SI_XNAP_DT_PDU_SupportedSULBandItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SymbolAllocation_in_Slot_ExtIEs SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SymbolAllocation_in_Slot_AllDL_ExtIEs SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_AllDL_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SymbolAllocation_in_Slot_AllUL_ExtIEs SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_AllUL_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SymbolAllocation_in_Slot_BothDLandUL_ExtIEs SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_BothDLandUL_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SNPN_CellBasedMDT_ExtIEs SI_XNAP_DT_PDU_SNPN_CellBasedMDT_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SNPN_CellIdforMDT_Item_ExtIEs SI_XNAP_DT_PDU_SNPN_CellIdforMDT_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SNPN_TAIBasedMDT_ExtIEs SI_XNAP_DT_PDU_SNPN_TAIBasedMDT_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SNPN_TAIforMDT_Item_ExtIEs SI_XNAP_DT_PDU_SNPN_TAIforMDT_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SNPN_BasedMDT_ExtIEs SI_XNAP_DT_PDU_SNPN_BasedMDT_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SNPNforMDT_Item_ExtIEs SI_XNAP_DT_PDU_SNPNforMDT_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TABasedMDT_ExtIEs SI_XNAP_DT_PDU_TABasedMDT_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TAIBasedMDT_ExtIEs SI_XNAP_DT_PDU_TAIBasedMDT_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TAIforMDT_Item_ExtIEs SI_XNAP_DT_PDU_TAIforMDT_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TAINSAGSupportItem_ExtIEs SI_XNAP_DT_PDU_TAINSAGSupportItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TAISliceUnavailableCellItem_ExtIEs SI_XNAP_DT_PDU_TAISliceUnavailableCellItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SliceAvailabilityList_ExtIEs SI_XNAP_DT_PDU_SliceAvailabilityList_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_AvailableCellList_ExtIEs SI_XNAP_DT_PDU_AvailableCellList_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UnavailableCellList_ExtIEs SI_XNAP_DT_PDU_UnavailableCellList_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TAISupport_Item_ExtIEs SI_XNAP_DT_PDU_TAISupport_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TABasedQMC_ExtIEs SI_XNAP_DT_PDU_TABasedQMC_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TAIBasedQMC_ExtIEs SI_XNAP_DT_PDU_TAIBasedQMC_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TAI_Item_ExtIEs SI_XNAP_DT_PDU_TAI_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TargetCGI_ExtIEs SI_XNAP_DT_PDU_TargetCGI_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TargetCellList_Item_ExtIEs SI_XNAP_DT_PDU_TargetCellList_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TimeSynchronizationAssistanceInformation_ExtIEs SI_XNAP_DT_PDU_TimeSynchronizationAssistanceInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TNLConfigurationInfo_ExtIEs SI_XNAP_DT_PDU_TNLConfigurationInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TNLA_To_Add_Item_ExtIEs SI_XNAP_DT_PDU_TNLA_To_Add_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TNLA_To_Update_Item_ExtIEs SI_XNAP_DT_PDU_TNLA_To_Update_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TNLA_To_Remove_Item_ExtIEs SI_XNAP_DT_PDU_TNLA_To_Remove_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TNLA_Setup_Item_ExtIEs SI_XNAP_DT_PDU_TNLA_Setup_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TNLA_Failed_To_Setup_Item_ExtIEs SI_XNAP_DT_PDU_TNLA_Failed_To_Setup_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TraceActivation_ExtIEs SI_XNAP_DT_PDU_TraceActivation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TrafficProfile_ExtIEs SI_XNAP_DT_PDU_TrafficProfile_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TrafficReleaseType_ExtIEs SI_XNAP_DT_PDU_TrafficReleaseType_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TrafficToBeReleaseInformation_ExtIEs SI_XNAP_DT_PDU_TrafficToBeReleaseInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TrafficToBeRelease_Item_ExtIEs SI_XNAP_DT_PDU_TrafficToBeRelease_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TSCTrafficCharacteristics_ExtIEs SI_XNAP_DT_PDU_TSCTrafficCharacteristics_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TSCAssistanceInformation_ExtIEs SI_XNAP_DT_PDU_TSCAssistanceInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UEAggregateMaximumBitRate_ExtIEs SI_XNAP_DT_PDU_UEAggregateMaximumBitRate_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UEAppLayerMeasConfigInfo_ExtIEs SI_XNAP_DT_PDU_UEAppLayerMeasConfigInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UEContextID_ExtIEs SI_XNAP_DT_PDU_UEContextID_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UEContextIDforRRCResume_ExtIEs SI_XNAP_DT_PDU_UEContextIDforRRCResume_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UEContextIDforRRCReestablishment_ExtIEs SI_XNAP_DT_PDU_UEContextIDforRRCReestablishment_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UEContextInfoRetrUECtxtResp_ExtIEs SI_XNAP_DT_PDU_UEContextInfoRetrUECtxtResp_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UEHistoryInformationFromTheUE_ExtIEs SI_XNAP_DT_PDU_UEHistoryInformationFromTheUE_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UEIdentityIndexValue_ExtIEs SI_XNAP_DT_PDU_UEIdentityIndexValue_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UEIdentityIndexList_MBSGroupPaging_Item_ExtIEs SI_XNAP_DT_PDU_UEIdentityIndexList_MBSGroupPaging_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UEIdentityIndexValueMBSGroupPaging_ExtIEs SI_XNAP_DT_PDU_UEIdentityIndexValueMBSGroupPaging_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UERadioCapabilityForPaging_ExtIEs SI_XNAP_DT_PDU_UERadioCapabilityForPaging_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UERANPagingIdentity_ExtIEs SI_XNAP_DT_PDU_UERANPagingIdentity_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UERLFReportContainer_ExtIEs SI_XNAP_DT_PDU_UERLFReportContainer_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UERLFReportContainerLTEExtension_ExtIEs SI_XNAP_DT_PDU_UERLFReportContainerLTEExtension_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UESliceMaximumBitRate_Item_ExtIEs SI_XNAP_DT_PDU_UESliceMaximumBitRate_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UESecurityCapabilities_ExtIEs SI_XNAP_DT_PDU_UESecurityCapabilities_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ULConfiguration_ExtIEs SI_XNAP_DT_PDU_ULConfiguration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ULF1Terminating_BHInfo_ExtIEs SI_XNAP_DT_PDU_ULF1Terminating_BHInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ULNonF1Terminating_BHInfo_ExtIEs SI_XNAP_DT_PDU_ULNonF1Terminating_BHInfo_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UPTransportLayerInformation_ExtIEs SI_XNAP_DT_PDU_UPTransportLayerInformation_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UPTransportParametersItem_ExtIEs SI_XNAP_DT_PDU_UPTransportParametersItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UserPlaneFailureIndication_ExtIEs SI_XNAP_DT_PDU_UserPlaneFailureIndication_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UEAssociatedInfoResult_Item_ExtIEs SI_XNAP_DT_PDU_UEAssociatedInfoResult_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UEPerformance_ExtIEs SI_XNAP_DT_PDU_UEPerformance_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UEPerformanceCollectionConfiguration_ExtIEs SI_XNAP_DT_PDU_UEPerformanceCollectionConfiguration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UETrajectoryCollectionConfiguration_ExtIEs SI_XNAP_DT_PDU_UETrajectoryCollectionConfiguration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_VolumeTimedReport_Item_ExtIEs SI_XNAP_DT_PDU_VolumeTimedReport_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_WLANMeasurementConfiguration_ExtIEs SI_XNAP_DT_PDU_WLANMeasurementConfiguration_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_HandoverRequest SI_XNAP_DT_PDU_HandoverRequest;
// L:7945
typedef struct __si_xnap_dt_HandoverRequestAcknowledge SI_XNAP_DT_PDU_HandoverRequestAcknowledge;
// L:7945
typedef struct __si_xnap_dt_HandoverPreparationFailure SI_XNAP_DT_PDU_HandoverPreparationFailure;
// L:7945
typedef struct __si_xnap_dt_SNStatusTransfer SI_XNAP_DT_PDU_SNStatusTransfer;
// L:7945
typedef struct __si_xnap_dt_UEContextRelease SI_XNAP_DT_PDU_UEContextRelease;
// L:7945
typedef struct __si_xnap_dt_HandoverCancel SI_XNAP_DT_PDU_HandoverCancel;
// L:7945
typedef struct __si_xnap_dt_HandoverSuccess SI_XNAP_DT_PDU_HandoverSuccess;
// L:7945
typedef struct __si_xnap_dt_ConditionalHandoverCancel SI_XNAP_DT_PDU_ConditionalHandoverCancel;
// L:7945
typedef struct __si_xnap_dt_EarlyStatusTransfer SI_XNAP_DT_PDU_EarlyStatusTransfer;
// L:7945
typedef struct __si_xnap_dt_RANPaging SI_XNAP_DT_PDU_RANPaging;
// L:7945
typedef struct __si_xnap_dt_RetrieveUEContextRequest SI_XNAP_DT_PDU_RetrieveUEContextRequest;
// L:7945
typedef struct __si_xnap_dt_RetrieveUEContextResponse SI_XNAP_DT_PDU_RetrieveUEContextResponse;
// L:7945
typedef struct __si_xnap_dt_RetrieveUEContextConfirm SI_XNAP_DT_PDU_RetrieveUEContextConfirm;
// L:7945
typedef struct __si_xnap_dt_RetrieveUEContextFailure SI_XNAP_DT_PDU_RetrieveUEContextFailure;
// L:7945
typedef struct __si_xnap_dt_XnUAddressIndication SI_XNAP_DT_PDU_XnUAddressIndication;
// L:7945
typedef struct __si_xnap_dt_SNodeAdditionRequest SI_XNAP_DT_PDU_SNodeAdditionRequest;
// L:7945
typedef struct __si_xnap_dt_SNodeAdditionRequestAcknowledge SI_XNAP_DT_PDU_SNodeAdditionRequestAcknowledge;
// L:7945
typedef struct __si_xnap_dt_SNodeAdditionRequestReject SI_XNAP_DT_PDU_SNodeAdditionRequestReject;
// L:7945
typedef struct __si_xnap_dt_SNodeReconfigurationComplete SI_XNAP_DT_PDU_SNodeReconfigurationComplete;
// L:7945
typedef struct __si_xnap_dt_SNodeModificationRequest SI_XNAP_DT_PDU_SNodeModificationRequest;
// L:7945
typedef struct __si_xnap_dt_SNodeModificationRequestAcknowledge SI_XNAP_DT_PDU_SNodeModificationRequestAcknowledge;
// L:7945
typedef struct __si_xnap_dt_SNodeModificationRequestReject SI_XNAP_DT_PDU_SNodeModificationRequestReject;
// L:7945
typedef struct __si_xnap_dt_SNodeModificationRequired SI_XNAP_DT_PDU_SNodeModificationRequired;
// L:7945
typedef struct __si_xnap_dt_SNodeModificationConfirm SI_XNAP_DT_PDU_SNodeModificationConfirm;
// L:7945
typedef struct __si_xnap_dt_SNodeModificationRefuse SI_XNAP_DT_PDU_SNodeModificationRefuse;
// L:7945
typedef struct __si_xnap_dt_SNodeReleaseRequest SI_XNAP_DT_PDU_SNodeReleaseRequest;
// L:7945
typedef struct __si_xnap_dt_SNodeReleaseRequestAcknowledge SI_XNAP_DT_PDU_SNodeReleaseRequestAcknowledge;
// L:7945
typedef struct __si_xnap_dt_SNodeReleaseReject SI_XNAP_DT_PDU_SNodeReleaseReject;
// L:7945
typedef struct __si_xnap_dt_SNodeReleaseRequired SI_XNAP_DT_PDU_SNodeReleaseRequired;
// L:7945
typedef struct __si_xnap_dt_SNodeReleaseConfirm SI_XNAP_DT_PDU_SNodeReleaseConfirm;
// L:7945
typedef struct __si_xnap_dt_SNodeCounterCheckRequest SI_XNAP_DT_PDU_SNodeCounterCheckRequest;
// L:7945
typedef struct __si_xnap_dt_SNodeChangeRequired SI_XNAP_DT_PDU_SNodeChangeRequired;
// L:7945
typedef struct __si_xnap_dt_SNodeChangeConfirm SI_XNAP_DT_PDU_SNodeChangeConfirm;
// L:7945
typedef struct __si_xnap_dt_SNodeChangeRefuse SI_XNAP_DT_PDU_SNodeChangeRefuse;
// L:7945
typedef struct __si_xnap_dt_RRCTransfer SI_XNAP_DT_PDU_RRCTransfer;
// L:7945
typedef struct __si_xnap_dt_NotificationControlIndication SI_XNAP_DT_PDU_NotificationControlIndication;
// L:7945
typedef struct __si_xnap_dt_ActivityNotification SI_XNAP_DT_PDU_ActivityNotification;
// L:7945
typedef struct __si_xnap_dt_XnSetupRequest SI_XNAP_DT_PDU_XnSetupRequest;
// L:7945
typedef struct __si_xnap_dt_XnSetupResponse SI_XNAP_DT_PDU_XnSetupResponse;
// L:7945
typedef struct __si_xnap_dt_XnSetupFailure SI_XNAP_DT_PDU_XnSetupFailure;
// L:7945
typedef struct __si_xnap_dt_NGRANNodeConfigurationUpdate SI_XNAP_DT_PDU_NGRANNodeConfigurationUpdate;
// L:7945
typedef struct __si_xnap_dt_NGRANNodeConfigurationUpdateAcknowledge SI_XNAP_DT_PDU_NGRANNodeConfigurationUpdateAcknowledge;
// L:7945
typedef struct __si_xnap_dt_NGRANNodeConfigurationUpdateFailure SI_XNAP_DT_PDU_NGRANNodeConfigurationUpdateFailure;
// L:7945
typedef struct __si_xnap_dt_E_UTRA_NR_CellResourceCoordinationRequest SI_XNAP_DT_PDU_E_UTRA_NR_CellResourceCoordinationRequest;
// L:7945
typedef struct __si_xnap_dt_E_UTRA_NR_CellResourceCoordinationResponse SI_XNAP_DT_PDU_E_UTRA_NR_CellResourceCoordinationResponse;
// L:7945
typedef struct __si_xnap_dt_SecondaryRATDataUsageReport SI_XNAP_DT_PDU_SecondaryRATDataUsageReport;
// L:7945
typedef struct __si_xnap_dt_XnRemovalRequest SI_XNAP_DT_PDU_XnRemovalRequest;
// L:7945
typedef struct __si_xnap_dt_XnRemovalResponse SI_XNAP_DT_PDU_XnRemovalResponse;
// L:7945
typedef struct __si_xnap_dt_XnRemovalFailure SI_XNAP_DT_PDU_XnRemovalFailure;
// L:7945
typedef struct __si_xnap_dt_CellActivationRequest SI_XNAP_DT_PDU_CellActivationRequest;
// L:7945
typedef struct __si_xnap_dt_CellActivationResponse SI_XNAP_DT_PDU_CellActivationResponse;
// L:7945
typedef struct __si_xnap_dt_CellActivationFailure SI_XNAP_DT_PDU_CellActivationFailure;
// L:7945
typedef struct __si_xnap_dt_ResetRequest SI_XNAP_DT_PDU_ResetRequest;
// L:7945
typedef struct __si_xnap_dt_ResetResponse SI_XNAP_DT_PDU_ResetResponse;
// L:7945
typedef struct __si_xnap_dt_ErrorIndication SI_XNAP_DT_PDU_ErrorIndication;
// L:7945
typedef struct __si_xnap_dt_PrivateMessage SI_XNAP_DT_PDU_PrivateMessage;
// L:7945
typedef struct __si_xnap_dt_TraceStart SI_XNAP_DT_PDU_TraceStart;
// L:7945
typedef struct __si_xnap_dt_DeactivateTrace SI_XNAP_DT_PDU_DeactivateTrace;
// L:7945
typedef struct __si_xnap_dt_FailureIndication SI_XNAP_DT_PDU_FailureIndication;
// L:7945
typedef struct __si_xnap_dt_HandoverReport SI_XNAP_DT_PDU_HandoverReport;
// L:7945
typedef struct __si_xnap_dt_ResourceStatusRequest SI_XNAP_DT_PDU_ResourceStatusRequest;
// L:7945
typedef struct __si_xnap_dt_ResourceStatusResponse SI_XNAP_DT_PDU_ResourceStatusResponse;
// L:7945
typedef struct __si_xnap_dt_ResourceStatusFailure SI_XNAP_DT_PDU_ResourceStatusFailure;
// L:7945
typedef struct __si_xnap_dt_ResourceStatusUpdate SI_XNAP_DT_PDU_ResourceStatusUpdate;
// L:7945
typedef struct __si_xnap_dt_MobilityChangeRequest SI_XNAP_DT_PDU_MobilityChangeRequest;
// L:7945
typedef struct __si_xnap_dt_MobilityChangeAcknowledge SI_XNAP_DT_PDU_MobilityChangeAcknowledge;
// L:7945
typedef struct __si_xnap_dt_MobilityChangeFailure SI_XNAP_DT_PDU_MobilityChangeFailure;
// L:7945
typedef struct __si_xnap_dt_AccessAndMobilityIndication SI_XNAP_DT_PDU_AccessAndMobilityIndication;
// L:7945
typedef struct __si_xnap_dt_CellTrafficTrace SI_XNAP_DT_PDU_CellTrafficTrace;
// L:7945
typedef struct __si_xnap_dt_RANMulticastGroupPaging SI_XNAP_DT_PDU_RANMulticastGroupPaging;
// L:7945
typedef struct __si_xnap_dt_ScgFailureInformationReport SI_XNAP_DT_PDU_ScgFailureInformationReport;
// L:7945
typedef struct __si_xnap_dt_ScgFailureTransfer SI_XNAP_DT_PDU_ScgFailureTransfer;
// L:7945
typedef struct __si_xnap_dt_F1CTrafficTransfer SI_XNAP_DT_PDU_F1CTrafficTransfer;
// L:7945
typedef struct __si_xnap_dt_IABTransportMigrationManagementRequest SI_XNAP_DT_PDU_IABTransportMigrationManagementRequest;
// L:7945
typedef struct __si_xnap_dt_IABTransportMigrationManagementResponse SI_XNAP_DT_PDU_IABTransportMigrationManagementResponse;
// L:7945
typedef struct __si_xnap_dt_IABTransportMigrationManagementReject SI_XNAP_DT_PDU_IABTransportMigrationManagementReject;
// L:7945
typedef struct __si_xnap_dt_IABTransportMigrationModificationRequest SI_XNAP_DT_PDU_IABTransportMigrationModificationRequest;
// L:7945
typedef struct __si_xnap_dt_IABTransportMigrationModificationResponse SI_XNAP_DT_PDU_IABTransportMigrationModificationResponse;
// L:7945
typedef struct __si_xnap_dt_IABResourceCoordinationRequest SI_XNAP_DT_PDU_IABResourceCoordinationRequest;
// L:7945
typedef struct __si_xnap_dt_IABResourceCoordinationResponse SI_XNAP_DT_PDU_IABResourceCoordinationResponse;
// L:7945
typedef struct __si_xnap_dt_CPCCancel SI_XNAP_DT_PDU_CPCCancel;
// L:7945
typedef struct __si_xnap_dt_PartialUEContextTransfer SI_XNAP_DT_PDU_PartialUEContextTransfer;
// L:7945
typedef struct __si_xnap_dt_PartialUEContextTransferAcknowledge SI_XNAP_DT_PDU_PartialUEContextTransferAcknowledge;
// L:7945
typedef struct __si_xnap_dt_PartialUEContextTransferFailure SI_XNAP_DT_PDU_PartialUEContextTransferFailure;
// L:7945
typedef struct __si_xnap_dt_RachIndication SI_XNAP_DT_PDU_RachIndication;
// L:7945
typedef struct __si_xnap_dt_DataCollectionRequest SI_XNAP_DT_PDU_DataCollectionRequest;
// L:7945
typedef struct __si_xnap_dt_DataCollectionResponse SI_XNAP_DT_PDU_DataCollectionResponse;
// L:7945
typedef struct __si_xnap_dt_DataCollectionFailure SI_XNAP_DT_PDU_DataCollectionFailure;
// L:7945
typedef struct __si_xnap_dt_DataCollectionUpdate SI_XNAP_DT_PDU_DataCollectionUpdate;
// L:7945
typedef struct __si_xnap_dt_ProcedureStageChoice_ExtIEs SI_XNAP_DT_PDU_ProcedureStageChoice_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ResponseType_ReconfComplete_ExtIEs SI_XNAP_DT_PDU_ResponseType_ReconfComplete_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ServedCellsToUpdateInitiatingNodeChoice_ExtIEs SI_XNAP_DT_PDU_ServedCellsToUpdateInitiatingNodeChoice_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ConfigurationUpdate_gNB SI_XNAP_DT_PDU_ConfigurationUpdate_gNB;
// L:7945
typedef struct __si_xnap_dt_ConfigurationUpdate_ng_eNB SI_XNAP_DT_PDU_ConfigurationUpdate_ng_eNB;
// L:7945
typedef struct __si_xnap_dt_RespondingNodeTypeConfigUpdateAck_ExtIEs SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_InitiatingNodeType_ResourceCoordRequest_ExtIEs SI_XNAP_DT_PDU_InitiatingNodeType_ResourceCoordRequest_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RespondingNodeType_ResourceCoordResponse_ExtIEs SI_XNAP_DT_PDU_RespondingNodeType_ResourceCoordResponse_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ServedCellsToActivate_ExtIEs SI_XNAP_DT_PDU_ServedCellsToActivate_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ActivatedServedCells_ExtIEs SI_XNAP_DT_PDU_ActivatedServedCells_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UEContextInfoHORequest_ExtIEs SI_XNAP_DT_PDU_UEContextInfoHORequest_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UEContextRefAtSN_HORequest_ExtIEs SI_XNAP_DT_PDU_UEContextRefAtSN_HORequest_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_FirstDLCount_ExtIEs SI_XNAP_DT_PDU_FirstDLCount_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_DLDiscarding_ExtIEs SI_XNAP_DT_PDU_DLDiscarding_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionToBeAddedAddReq_Item_ExtIEs SI_XNAP_DT_PDU_PDUSessionToBeAddedAddReq_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionAdmittedAddedAddReqAck_Item_ExtIEs SI_XNAP_DT_PDU_PDUSessionAdmittedAddedAddReqAck_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionNotAdmittedAddReqAck_ExtIEs SI_XNAP_DT_PDU_PDUSessionNotAdmittedAddReqAck_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ResponseInfo_ReconfCompl_ExtIEs SI_XNAP_DT_PDU_ResponseInfo_ReconfCompl_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Configuration_successfully_applied_ExtIEs SI_XNAP_DT_PDU_Configuration_successfully_applied_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_Configuration_rejected_by_M_NG_RANNode_ExtIEs SI_XNAP_DT_PDU_Configuration_rejected_by_M_NG_RANNode_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UEContextInfo_SNModRequest_ExtIEs SI_XNAP_DT_PDU_UEContextInfo_SNModRequest_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionsToBeAdded_SNModRequest_Item_ExtIEs SI_XNAP_DT_PDU_PDUSessionsToBeAdded_SNModRequest_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionsToBeModified_SNModRequest_Item_ExtIEs SI_XNAP_DT_PDU_PDUSessionsToBeModified_SNModRequest_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionsToBeReleased_SNModRequest_List_ExtIEs SI_XNAP_DT_PDU_PDUSessionsToBeReleased_SNModRequest_List_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionAdmitted_SNModResponse_ExtIEs SI_XNAP_DT_PDU_PDUSessionAdmitted_SNModResponse_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionAdmittedToBeAddedSNModResponse_Item_ExtIEs SI_XNAP_DT_PDU_PDUSessionAdmittedToBeAddedSNModResponse_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionAdmittedToBeModifiedSNModResponse_Item_ExtIEs SI_XNAP_DT_PDU_PDUSessionAdmittedToBeModifiedSNModResponse_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionAdmittedToBeReleasedSNModResponse_ExtIEs SI_XNAP_DT_PDU_PDUSessionAdmittedToBeReleasedSNModResponse_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionNotAdmitted_SNModResponse_ExtIEs SI_XNAP_DT_PDU_PDUSessionNotAdmitted_SNModResponse_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionDataForwarding_SNModResponse_ExtIEs SI_XNAP_DT_PDU_PDUSessionDataForwarding_SNModResponse_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionToBeModifiedSNModRequired_Item_ExtIEs SI_XNAP_DT_PDU_PDUSessionToBeModifiedSNModRequired_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionToBeReleasedSNModRequired_ExtIEs SI_XNAP_DT_PDU_PDUSessionToBeReleasedSNModRequired_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionAdmittedModSNModConfirm_Item_ExtIEs SI_XNAP_DT_PDU_PDUSessionAdmittedModSNModConfirm_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionAdmittedToBeReleasedSNModConfirm_ExtIEs SI_XNAP_DT_PDU_PDUSessionAdmittedToBeReleasedSNModConfirm_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionToBeReleasedList_RelReqAck_ExtIEs SI_XNAP_DT_PDU_PDUSessionToBeReleasedList_RelReqAck_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionToBeReleasedList_RelRqd_ExtIEs SI_XNAP_DT_PDU_PDUSessionToBeReleasedList_RelRqd_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionReleasedList_RelConf_ExtIEs SI_XNAP_DT_PDU_PDUSessionReleasedList_RelConf_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_BearersSubjectToCounterCheck_Item_ExtIEs SI_XNAP_DT_PDU_BearersSubjectToCounterCheck_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSession_SNChangeRequired_Item_ExtIEs SI_XNAP_DT_PDU_PDUSession_SNChangeRequired_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSession_SNChangeConfirm_Item_ExtIEs SI_XNAP_DT_PDU_PDUSession_SNChangeConfirm_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SplitSRB_RRCTransfer_ExtIEs SI_XNAP_DT_PDU_SplitSRB_RRCTransfer_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_UEReportRRCTransfer_ExtIEs SI_XNAP_DT_PDU_UEReportRRCTransfer_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_FastMCGRecoveryRRCTransfer_ExtIEs SI_XNAP_DT_PDU_FastMCGRecoveryRRCTransfer_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SDT_SRB_between_NewNode_OldNode_ExtIEs SI_XNAP_DT_PDU_SDT_SRB_between_NewNode_OldNode_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoE_Measurement_Results_ExtIEs SI_XNAP_DT_PDU_QoE_Measurement_Results_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourcesNotify_Item_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourcesNotify_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_PDUSessionResourcesActivityNotify_Item_ExtIEs SI_XNAP_DT_PDU_PDUSessionResourcesActivityNotify_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_QoSFlowsActivityNotifyItem_ExtIEs SI_XNAP_DT_PDU_QoSFlowsActivityNotifyItem_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RespondingNodeTypeConfigUpdateAck_ng_eNB_ExtIEs SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_ng_eNB_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_RespondingNodeTypeConfigUpdateAck_gNB_ExtIEs SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_gNB_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ResourceCoordRequest_ng_eNB_initiated_ExtIEs SI_XNAP_DT_PDU_ResourceCoordRequest_ng_eNB_initiated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ResourceCoordRequest_gNB_initiated_ExtIEs SI_XNAP_DT_PDU_ResourceCoordRequest_gNB_initiated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ResourceCoordResponse_ng_eNB_initiated_ExtIEs SI_XNAP_DT_PDU_ResourceCoordResponse_ng_eNB_initiated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ResourceCoordResponse_gNB_initiated_ExtIEs SI_XNAP_DT_PDU_ResourceCoordResponse_gNB_initiated_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ToBeActivatedNRCellsAndSSBs_Item_ExtIEs SI_XNAP_DT_PDU_ToBeActivatedNRCellsAndSSBs_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SSBsToBeActivated_Item_ExtIEs SI_XNAP_DT_PDU_SSBsToBeActivated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ActivatedNRCellsAndSSBs_Item_ExtIEs SI_XNAP_DT_PDU_ActivatedNRCellsAndSSBs_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_SSBsActivated_Item_ExtIEs SI_XNAP_DT_PDU_SSBsActivated_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TrafficToBeAdded_Item_ExtIEs SI_XNAP_DT_PDU_TrafficToBeAdded_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TrafficToBeModified_Item_ExtIEs SI_XNAP_DT_PDU_TrafficToBeModified_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TrafficAdded_Item_ExtIEs SI_XNAP_DT_PDU_TrafficAdded_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TrafficModified_Item_ExtIEs SI_XNAP_DT_PDU_TrafficModified_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TrafficNotAdded_Item_ExtIEs SI_XNAP_DT_PDU_TrafficNotAdded_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TrafficNotModified_Item_ExtIEs SI_XNAP_DT_PDU_TrafficNotModified_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TrafficReleased_Item_ExtIEs SI_XNAP_DT_PDU_TrafficReleased_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TrafficRequiredToBeModified_Item_ExtIEs SI_XNAP_DT_PDU_TrafficRequiredToBeModified_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_IABTNLAddressToBeReleased_Item_ExtIEs SI_XNAP_DT_PDU_IABTNLAddressToBeReleased_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_TrafficRequiredModified_Item_ExtIEs SI_XNAP_DT_PDU_TrafficRequiredModified_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_BoundaryNodeCellsList_Item_ExtIEs SI_XNAP_DT_PDU_BoundaryNodeCellsList_Item_ExtIEs;
// L:7945
typedef struct __si_xnap_dt_ParentNodeCellsList_Item_ExtIEs SI_XNAP_DT_PDU_ParentNodeCellsList_Item_ExtIEs;

//TODO: DataType -><- Got NULL  L:7884

// Criticality
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_Criticality
{
	__si_xnap__Criticality_reject_val,
	__si_xnap__Criticality_ignore_val,
	__si_xnap__Criticality_notify_val
} SI_XNAP_DT_Criticality;


// L:2561
typedef enum __si_xnap_dt_Criticality2
{
	Criticality_reject_val,
	Criticality_ignore_val,
	Criticality_notify_val
} SI_XNAP_DT_Criticality2;


// L:2588
typedef struct __si_xnap_dt_Criticality_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_Criticality_EnumProxy;


// Presence
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_Presence
{
	__si_xnap__Presence_optional_val,
	__si_xnap__Presence_conditional_val,
	__si_xnap__Presence_mandatory_val
} SI_XNAP_DT_Presence;


// L:2561
typedef enum __si_xnap_dt_Presence2
{
	Presence_optional_val,
	Presence_conditional_val,
	Presence_mandatory_val
} SI_XNAP_DT_Presence2;


// L:2588
typedef struct __si_xnap_dt_Presence_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_Presence_EnumProxy;


// PrivateIEID_local
// INTEGER,INTEGER(0.. maxPrivateIEs),MIN=0,MAX=NaN  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_PrivateIEID_local
{
	unsigned long long int data;
} SI_XNAP_DT_PrivateIEID_local;

// PrivateIE-ID
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_PrivateIE_ID
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int local;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int global;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_PrivateIE_ID;


// NULL
// INTEGER,INTEGER(0..255),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_NULL
{
	unsigned long long int data;
} SI_XNAP_DT_NULL;

// ProcedureCode
// INTEGER,INTEGER(0..255),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_ProcedureCode
{
	unsigned long long int data;
} SI_XNAP_DT_ProcedureCode;

// ProtocolIE-ID
// INTEGER,INTEGER(0..maxProtocolIEs),MIN=0,MAX=NaN  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_ProtocolIE_ID
{
	unsigned long long int data;
} SI_XNAP_DT_ProtocolIE_ID;

// TriggeringMessage
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_TriggeringMessage
{
	__si_xnap__TriggeringMessage_initiating_message_val,
	__si_xnap__TriggeringMessage_successful_outcome_val,
	__si_xnap__TriggeringMessage_unsuccessful_outcome_val
} SI_XNAP_DT_TriggeringMessage;


// L:2561
typedef enum __si_xnap_dt_TriggeringMessage2
{
	TriggeringMessage_initiating_message_val,
	TriggeringMessage_successful_outcome_val,
	TriggeringMessage_unsuccessful_outcome_val
} SI_XNAP_DT_TriggeringMessage2;


// L:2588
typedef struct __si_xnap_dt_TriggeringMessage_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_TriggeringMessage_EnumProxy;


// A2XPC5QoSFlowList
//SEQUENCE OF A2XPC5QoSFlowItem, MIN=1, MAX=maxnoofPC5QoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_A2XPC5QoSFlowList
{
	SI_LinkedList * A2XPC5QoSFlowItem;
} SI_XNAP_DT_A2XPC5QoSFlowList;


// BitRate
// INTEGER,INTEGER(0..4000000000000,...),MIN=0,MAX=4000000000000  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_BitRate
{
	unsigned long long int data;
} SI_XNAP_DT_BitRate;

// A2XPC5QoSParameters
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_A2XPC5QoSParameters
{
	SI_XNAP_DT_A2XPC5QoSFlowList * a2XPC5QoSFlowList;

	unsigned long long int aA2XPC5LinkAggregateBitRates;
	int isPresent_aA2XPC5LinkAggregateBitRates;

} SI_XNAP_DT_A2XPC5QoSParameters;


// FiveQI
// INTEGER,INTEGER(0..255,...),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_FiveQI
{
	unsigned long long int data;
} SI_XNAP_DT_FiveQI;

// A2XPC5FlowBitRates
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_A2XPC5FlowBitRates
{
	unsigned long long int a2XguaranteedFlowBitRate;

	unsigned long long int a2XmaximumFlowBitRate;

} SI_XNAP_DT_A2XPC5FlowBitRates;


// Range
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_Range
{
	__si_xnap__Range_m50_val,
	__si_xnap__Range_m80_val,
	__si_xnap__Range_m180_val,
	__si_xnap__Range_m200_val,
	__si_xnap__Range_m350_val,
	__si_xnap__Range_m400_val,
	__si_xnap__Range_m500_val,
	__si_xnap__Range_m700_val,
	__si_xnap__Range_m1000_val
} SI_XNAP_DT_Range;


// L:2561
typedef enum __si_xnap_dt_Range2
{
	Range_m50_val,
	Range_m80_val,
	Range_m180_val,
	Range_m200_val,
	Range_m350_val,
	Range_m400_val,
	Range_m500_val,
	Range_m700_val,
	Range_m1000_val
} SI_XNAP_DT_Range2;


// L:2588
typedef struct __si_xnap_dt_Range_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_Range_EnumProxy;


// A2XPC5QoSFlowItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_A2XPC5QoSFlowItem
{
	unsigned long long int a2XpQI;

	SI_XNAP_DT_A2XPC5FlowBitRates * a2Xpc5FlowBitRates;
	int isPresent_a2Xpc5FlowBitRates;

	uint8_t selected_ea2Xrange;
	int extSelected_ea2Xrange;
	int isPresent_a2Xrange;

} SI_XNAP_DT_A2XPC5QoSFlowItem;


// AdditionalListofPDUSessionResourceChangeConfirmInfo-SNterminated
//SEQUENCE OF AdditionalListofPDUSessionResourceChangeConfirmInfo-SNterminated-Item, MIN=1, MAX=maxnoofTargetSNsMinusOne  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated
{
	SI_LinkedList * AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item;
} SI_XNAP_DT_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated;


// QoSFLowsAcceptedToBeForwarded-List
//SEQUENCE OF QoSFLowsAcceptedToBeForwarded-Item, MIN=1, MAX= maxnoofQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_QoSFLowsAcceptedToBeForwarded_List
{
	SI_LinkedList * QoSFLowsAcceptedToBeForwarded_Item;
} SI_XNAP_DT_QoSFLowsAcceptedToBeForwarded_List;


// TransportLayerAddress
// BITSTRING,BIT STRING(SIZE(1..160,...))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_TransportLayerAddress
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_TransportLayerAddress;

// GTP-TEID
// OCTETSTRING,OCTET STRING(SIZE(4))
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_GTP_TEID
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_GTP_TEID;

// GTPtunnelTransportLayerInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_GTPtunnelTransportLayerInformation
{
	SI_XNAP_DT_TransportLayerAddress * tnl_address;

	SI_XNAP_DT_GTP_TEID * gtp_teid;

} SI_XNAP_DT_GTPtunnelTransportLayerInformation;


// UPTransportLayerInformation
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_UPTransportLayerInformation
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_GTPtunnelTransportLayerInformation * gtpTunnel;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_UPTransportLayerInformation_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_UPTransportLayerInformation;


// DataForwardingResponseDRBItemList
//SEQUENCE OF DataForwardingResponseDRBItem, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DataForwardingResponseDRBItemList
{
	SI_LinkedList * DataForwardingResponseDRBItem;
} SI_XNAP_DT_DataForwardingResponseDRBItemList;


// DataForwardingInfoFromTargetNGRANnode
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DataForwardingInfoFromTargetNGRANnode
{
	SI_XNAP_DT_QoSFLowsAcceptedToBeForwarded_List * qosFlowsAcceptedForDataForwarding_List;

	SI_XNAP_DT_UPTransportLayerInformation * pduSessionLevelDLDataForwardingInfo;
	int isPresent_pduSessionLevelDLDataForwardingInfo;

	SI_XNAP_DT_UPTransportLayerInformation * pduSessionLevelULDataForwardingInfo;
	int isPresent_pduSessionLevelULDataForwardingInfo;

	SI_XNAP_DT_DataForwardingResponseDRBItemList * dataForwardingResponseDRBItemList;
	int isPresent_dataForwardingResponseDRBItemList;

} SI_XNAP_DT_DataForwardingInfoFromTargetNGRANnode;


// PDUSessionResourceChangeConfirmInfo-SNterminated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceChangeConfirmInfo_SNterminated
{
	SI_XNAP_DT_DataForwardingInfoFromTargetNGRANnode * dataforwardinginfoTarget;
	int isPresent_dataforwardinginfoTarget;

} SI_XNAP_DT_PDUSessionResourceChangeConfirmInfo_SNterminated;


// AdditionalListofPDUSessionResourceChangeConfirmInfo-SNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item
{
	SI_XNAP_DT_PDUSessionResourceChangeConfirmInfo_SNterminated * pDUSessionResourceChangeConfirmInfo_SNterminated;

} SI_XNAP_DT_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item;


// AveragePacketDelayValue
// INTEGER,INTEGER(0..10000),MIN=0,MAX=10000  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_AveragePacketDelayValue
{
	unsigned long long int data;
} SI_XNAP_DT_AveragePacketDelayValue;

// AveragePacketDelay
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_AveragePacketDelay
{
	unsigned long long int uL_AveragePacketDelay;

	unsigned long long int dL_AveragePacketDelay;

} SI_XNAP_DT_AveragePacketDelay;


// AdditionLocationInformation
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_AdditionLocationInformation
{
	__si_xnap__AdditionLocationInformation_includePSCell_val
} SI_XNAP_DT_AdditionLocationInformation;


// L:2561
typedef enum __si_xnap_dt_AdditionLocationInformation2
{
	AdditionLocationInformation_includePSCell_val
} SI_XNAP_DT_AdditionLocationInformation2;


// L:2588
typedef struct __si_xnap_dt_AdditionLocationInformation_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_AdditionLocationInformation_EnumProxy;


// Additional-PDCP-Duplication-TNL-List
//SEQUENCE OF Additional-PDCP-Duplication-TNL-Item, MIN=1, MAX=maxnoofAdditionalPDCPDuplicationTNL  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_Additional_PDCP_Duplication_TNL_List
{
	SI_LinkedList * Additional_PDCP_Duplication_TNL_Item;
} SI_XNAP_DT_Additional_PDCP_Duplication_TNL_List;


// Additional-PDCP-Duplication-TNL-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_Additional_PDCP_Duplication_TNL_Item
{
	SI_XNAP_DT_UPTransportLayerInformation * additional_PDCP_Duplication_UP_TNL_Information;

} SI_XNAP_DT_Additional_PDCP_Duplication_TNL_Item;


// Additional-UL-NG-U-TNLatUPF-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_Additional_UL_NG_U_TNLatUPF_Item
{
	SI_XNAP_DT_UPTransportLayerInformation * additional_UL_NG_U_TNLatUPF;

} SI_XNAP_DT_Additional_UL_NG_U_TNLatUPF_Item;


// Additional-UL-NG-U-TNLatUPF-List
//SEQUENCE OF Additional-UL-NG-U-TNLatUPF-Item, MIN=1, MAX=maxnoofMultiConnectivityMinusOne  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_Additional_UL_NG_U_TNLatUPF_List
{
	SI_LinkedList * Additional_UL_NG_U_TNLatUPF_Item;
} SI_XNAP_DT_Additional_UL_NG_U_TNLatUPF_List;


// Additional-Measurement-Timing-Configuration-List
//SEQUENCE OF Additional-Measurement-Timing-Configuration-Item, MIN=1, MAX= maxnoofMTCItems  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_Additional_Measurement_Timing_Configuration_List
{
	SI_LinkedList * Additional_Measurement_Timing_Configuration_Item;
} SI_XNAP_DT_Additional_Measurement_Timing_Configuration_List;


// AdditionalMeasurementTimingConfigurationItem_additionalMeasurementTimingConfigurationIndex
// INTEGER,INTEGER(0..16),MIN=0,MAX=16  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_AdditionalMeasurementTimingConfigurationItem_additionalMeasurementTimingConfigurationIndex
{
	unsigned long long int data;
} SI_XNAP_DT_AdditionalMeasurementTimingConfigurationItem_additionalMeasurementTimingConfigurationIndex;

// CSI-RS-MTC-Configuration-List
//SEQUENCE OF CSI-RS-MTC-Configuration-Item, MIN=1, MAX= maxnoofCSIRSconfigurations  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CSI_RS_MTC_Configuration_List
{
	SI_LinkedList * CSI_RS_MTC_Configuration_Item;
} SI_XNAP_DT_CSI_RS_MTC_Configuration_List;


// Additional-Measurement-Timing-Configuration-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_Additional_Measurement_Timing_Configuration_Item
{
	unsigned long long int additionalMeasurementTimingConfigurationIndex;

	SI_XNAP_DT_CSI_RS_MTC_Configuration_List * csi_RS_MTC_Configuration_List;

} SI_XNAP_DT_Additional_Measurement_Timing_Configuration_Item;


// ActivationIDforCellActivation
// INTEGER,INTEGER(0..255),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_ActivationIDforCellActivation
{
	unsigned long long int data;
} SI_XNAP_DT_ActivationIDforCellActivation;

// MBS-QoSFlowsToAdd-List
//SEQUENCE OF MBS-QoSFlowsToAdd-Item, MIN=1, MAX=maxnoofMBSQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_MBS_QoSFlowsToAdd_List
{
	SI_LinkedList * MBS_QoSFlowsToAdd_Item;
} SI_XNAP_DT_MBS_QoSFlowsToAdd_List;


// MBS-ServiceAreaCell-List
//SEQUENCE OF NR-CGI, MIN=1, MAX= maxnoofCellsforMBS  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_MBS_ServiceAreaCell_List
{
	SI_LinkedList * NR_CGI;
} SI_XNAP_DT_MBS_ServiceAreaCell_List;


// MBS-ServiceAreaTAI-List
//SEQUENCE OF MBS-ServiceAreaTAI-Item, MIN=1, MAX= maxnoofTAIforMBS  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_MBS_ServiceAreaTAI_List
{
	SI_LinkedList * MBS_ServiceAreaTAI_Item;
} SI_XNAP_DT_MBS_ServiceAreaTAI_List;


// MBS-ServiceAreaInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MBS_ServiceAreaInformation
{
	SI_XNAP_DT_MBS_ServiceAreaCell_List * mBS_ServiceAreaCell_List;
	int isPresent_mBS_ServiceAreaCell_List;

	SI_XNAP_DT_MBS_ServiceAreaTAI_List * mBS_ServiceAreaTAI_List;
	int isPresent_mBS_ServiceAreaTAI_List;

} SI_XNAP_DT_MBS_ServiceAreaInformation;


// MBS-ServiceAreaInformationList
//SEQUENCE OF MBS-ServiceAreaInformation-Item, MIN=1, MAX=maxnoofMBSServiceAreaInformation  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_MBS_ServiceAreaInformationList
{
	SI_LinkedList * MBS_ServiceAreaInformation_Item;
} SI_XNAP_DT_MBS_ServiceAreaInformationList;


// MBS-ServiceArea
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_MBS_ServiceArea
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_MBS_ServiceAreaInformation * locationindependent;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_XNAP_DT_MBS_ServiceAreaInformationList * locationdependent;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_MBS_ServiceArea_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_MBS_ServiceArea;


// MBS-MappingandDataForwardingRequestInfofromSource
//SEQUENCE OF MBS-MappingandDataForwardingRequestInfofromSource-Item, MIN=1, MAX=maxnoofMRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_MBS_MappingandDataForwardingRequestInfofromSource
{
	SI_LinkedList * MBS_MappingandDataForwardingRequestInfofromSource_Item;
} SI_XNAP_DT_MBS_MappingandDataForwardingRequestInfofromSource;


// Active-MBS-SessionInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_Active_MBS_SessionInformation
{
	SI_XNAP_DT_MBS_QoSFlowsToAdd_List * mBS_QoSFlowsToAdd_List;

	SI_XNAP_DT_MBS_ServiceArea * mBS_ServiceArea;
	int isPresent_mBS_ServiceArea;

	SI_XNAP_DT_MBS_MappingandDataForwardingRequestInfofromSource * mBS_MappingandDataForwardingRequestInfofromSource;
	int isPresent_mBS_MappingandDataForwardingRequestInfofromSource;

} SI_XNAP_DT_Active_MBS_SessionInformation;


// Measurement-ID
// INTEGER,INTEGER(1..4095,...),MIN=1,MAX=4095  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_Measurement_ID
{
	unsigned long long int data;
} SI_XNAP_DT_Measurement_ID;

// DataCollectionID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DataCollectionID
{
	unsigned long long int nGRAN_Node1_Measurement_ID;

	unsigned long long int nGRAN_Node2_Measurement_ID;

} SI_XNAP_DT_DataCollectionID;


// AerialControllerUE
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_AerialControllerUE
{
	__si_xnap__AerialControllerUE_authorized_val,
	__si_xnap__AerialControllerUE_not_authorized_val
} SI_XNAP_DT_AerialControllerUE;


// L:2561
typedef enum __si_xnap_dt_AerialControllerUE2
{
	AerialControllerUE_authorized_val,
	AerialControllerUE_not_authorized_val
} SI_XNAP_DT_AerialControllerUE2;


// L:2588
typedef struct __si_xnap_dt_AerialControllerUE_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_AerialControllerUE_EnumProxy;


// AerialUE
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_AerialUE
{
	__si_xnap__AerialUE_authorized_val,
	__si_xnap__AerialUE_not_authorized_val
} SI_XNAP_DT_AerialUE;


// L:2561
typedef enum __si_xnap_dt_AerialUE2
{
	AerialUE_authorized_val,
	AerialUE_not_authorized_val
} SI_XNAP_DT_AerialUE2;


// L:2588
typedef struct __si_xnap_dt_AerialUE_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_AerialUE_EnumProxy;


// AerialUESubscriptionInformation
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_AerialUESubscriptionInformation
{
	__si_xnap__AerialUESubscriptionInformation_allowed_val,
	__si_xnap__AerialUESubscriptionInformation_not_allowed_val
} SI_XNAP_DT_AerialUESubscriptionInformation;


// L:2561
typedef enum __si_xnap_dt_AerialUESubscriptionInformation2
{
	AerialUESubscriptionInformation_allowed_val,
	AerialUESubscriptionInformation_not_allowed_val
} SI_XNAP_DT_AerialUESubscriptionInformation2;


// L:2588
typedef struct __si_xnap_dt_AerialUESubscriptionInformation_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_AerialUESubscriptionInformation_EnumProxy;


// AllocationandRetentionPriority_priorityLevel
// INTEGER,INTEGER(0..15,...),MIN=0,MAX=15  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_AllocationandRetentionPriority_priorityLevel
{
	unsigned long long int data;
} SI_XNAP_DT_AllocationandRetentionPriority_priorityLevel;

// AllocationandRetentionPriority_pre-emption-capability
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_AllocationandRetentionPriority_pre_emption_capability
{
	__si_xnap__AllocationandRetentionPriority_pre_emption_capability_shall_not_trigger_preemption_val,
	__si_xnap__AllocationandRetentionPriority_pre_emption_capability_may_trigger_preemption_val
} SI_XNAP_DT_AllocationandRetentionPriority_pre_emption_capability;


// L:2561
typedef enum __si_xnap_dt_AllocationandRetentionPriority_pre_emption_capability2
{
	AllocationandRetentionPriority_pre_emption_capability_shall_not_trigger_preemption_val,
	AllocationandRetentionPriority_pre_emption_capability_may_trigger_preemption_val
} SI_XNAP_DT_AllocationandRetentionPriority_pre_emption_capability2;


// L:2588
typedef struct __si_xnap_dt_AllocationandRetentionPriority_pre_emption_capability_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_AllocationandRetentionPriority_pre_emption_capability_EnumProxy;


// AllocationandRetentionPriority_pre-emption-vulnerability
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_AllocationandRetentionPriority_pre_emption_vulnerability
{
	__si_xnap__AllocationandRetentionPriority_pre_emption_vulnerability_not_preemptable_val,
	__si_xnap__AllocationandRetentionPriority_pre_emption_vulnerability_preemptable_val
} SI_XNAP_DT_AllocationandRetentionPriority_pre_emption_vulnerability;


// L:2561
typedef enum __si_xnap_dt_AllocationandRetentionPriority_pre_emption_vulnerability2
{
	AllocationandRetentionPriority_pre_emption_vulnerability_not_preemptable_val,
	AllocationandRetentionPriority_pre_emption_vulnerability_preemptable_val
} SI_XNAP_DT_AllocationandRetentionPriority_pre_emption_vulnerability2;


// L:2588
typedef struct __si_xnap_dt_AllocationandRetentionPriority_pre_emption_vulnerability_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_AllocationandRetentionPriority_pre_emption_vulnerability_EnumProxy;


// AllocationandRetentionPriority
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_AllocationandRetentionPriority
{
	unsigned long long int priorityLevel;

	uint8_t selected_epre_emption_capability;
	int extSelected_epre_emption_capability;

	uint8_t selected_epre_emption_vulnerability;
	int extSelected_epre_emption_vulnerability;

} SI_XNAP_DT_AllocationandRetentionPriority;


// ActivationSFN
// INTEGER,INTEGER(0..1023),MIN=0,MAX=1023  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_ActivationSFN
{
	unsigned long long int data;
} SI_XNAP_DT_ActivationSFN;

// AllowedCAG-ID-List-perPLMN
//SEQUENCE OF CAG-Identifier, MIN=1, MAX=maxnoofCAGsperPLMN  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_AllowedCAG_ID_List_perPLMN
{
	SI_LinkedList * CAG_Identifier;
} SI_XNAP_DT_AllowedCAG_ID_List_perPLMN;


// AllowedPNI-NPN-ID-List
//SEQUENCE OF AllowedPNI-NPN-ID-Item, MIN=1, MAX=maxnoofEPLMNsplus1  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_AllowedPNI_NPN_ID_List
{
	SI_LinkedList * AllowedPNI_NPN_ID_Item;
} SI_XNAP_DT_AllowedPNI_NPN_ID_List;


// PLMN-Identity
// OCTETSTRING,OCTET STRING(SIZE(3))
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_PLMN_Identity
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_PLMN_Identity;

// PNI-NPN-Restricted-Information
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PNI_NPN_Restricted_Information
{
	__si_xnap__PNI_NPN_Restricted_Information_restriced_val,
	__si_xnap__PNI_NPN_Restricted_Information_not_restricted_val
} SI_XNAP_DT_PNI_NPN_Restricted_Information;


// L:2561
typedef enum __si_xnap_dt_PNI_NPN_Restricted_Information2
{
	PNI_NPN_Restricted_Information_restriced_val,
	PNI_NPN_Restricted_Information_not_restricted_val
} SI_XNAP_DT_PNI_NPN_Restricted_Information2;


// L:2588
typedef struct __si_xnap_dt_PNI_NPN_Restricted_Information_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PNI_NPN_Restricted_Information_EnumProxy;


// AllowedPNI-NPN-ID-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_AllowedPNI_NPN_ID_Item
{
	SI_XNAP_DT_PLMN_Identity * plmn_id;

	uint8_t selected_epni_npn_restricted_information;
	int extSelected_epni_npn_restricted_information;

	SI_XNAP_DT_AllowedCAG_ID_List_perPLMN * allowed_CAG_id_list_per_plmn;

} SI_XNAP_DT_AllowedPNI_NPN_ID_Item;


// AllTrafficIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_AllTrafficIndication
{
	__si_xnap__AllTrafficIndication_true_val
} SI_XNAP_DT_AllTrafficIndication;


// L:2561
typedef enum __si_xnap_dt_AllTrafficIndication2
{
	AllTrafficIndication_true_val
} SI_XNAP_DT_AllTrafficIndication2;


// L:2588
typedef struct __si_xnap_dt_AllTrafficIndication_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_AllTrafficIndication_EnumProxy;


// AlternativeQoSParaSetList
//SEQUENCE OF AlternativeQoSParaSetItem, MIN=1, MAX=maxnoofQoSParaSets  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_AlternativeQoSParaSetList
{
	SI_LinkedList * AlternativeQoSParaSetItem;
} SI_XNAP_DT_AlternativeQoSParaSetList;


// QoSParaSetIndex
// INTEGER,INTEGER(1..8,...),MIN=1,MAX=8  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_QoSParaSetIndex
{
	unsigned long long int data;
} SI_XNAP_DT_QoSParaSetIndex;

// PacketDelayBudget
// INTEGER,INTEGER(0..1023,...),MIN=0,MAX=1023  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_PacketDelayBudget
{
	unsigned long long int data;
} SI_XNAP_DT_PacketDelayBudget;

// PER-Scalar
// INTEGER,INTEGER(0..9,...),MIN=0,MAX=9  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_PER_Scalar
{
	unsigned long long int data;
} SI_XNAP_DT_PER_Scalar;

// PER-Exponent
// INTEGER,INTEGER(0..9,...),MIN=0,MAX=9  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_PER_Exponent
{
	unsigned long long int data;
} SI_XNAP_DT_PER_Exponent;

// PacketErrorRate
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PacketErrorRate
{
	unsigned long long int pER_Scalar;

	unsigned long long int pER_Exponent;

} SI_XNAP_DT_PacketErrorRate;


// AlternativeQoSParaSetItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_AlternativeQoSParaSetItem
{
	unsigned long long int alternativeQoSParaSetIndex;

	unsigned long long int guaranteedFlowBitRateDL;
	int isPresent_guaranteedFlowBitRateDL;

	unsigned long long int guaranteedFlowBitRateUL;
	int isPresent_guaranteedFlowBitRateUL;

	unsigned long long int packetDelayBudget;
	int isPresent_packetDelayBudget;

	SI_XNAP_DT_PacketErrorRate * packetErrorRate;
	int isPresent_packetErrorRate;

} SI_XNAP_DT_AlternativeQoSParaSetItem;


// AMF-Region-Information
//SEQUENCE OF GlobalAMF-Region-Information, MIN=1, MAX=maxnoofAMFRegions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_AMF_Region_Information
{
	SI_LinkedList * GlobalAMF_Region_Information;
} SI_XNAP_DT_AMF_Region_Information;


// GlobalAMFRegionInformation_amf-region-id
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_GlobalAMFRegionInformation_amf_region_id
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_GlobalAMFRegionInformation_amf_region_id;

// GlobalAMF-Region-Information
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_GlobalAMF_Region_Information
{
	SI_XNAP_DT_PLMN_Identity * plmn_ID;

	SI_XNAP_DT_GlobalAMFRegionInformation_amf_region_id * amf_region_id;

} SI_XNAP_DT_GlobalAMF_Region_Information;


// AMF-UE-NGAP-ID
// INTEGER,INTEGER(0..1099511627775),MIN=0,MAX=1099511627775  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_AMF_UE_NGAP_ID
{
	unsigned long long int data;
} SI_XNAP_DT_AMF_UE_NGAP_ID;

// AreaOfInterestInformation
//SEQUENCE OF AreaOfInterest-Item, MIN=1, MAX=maxnoofAoIs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_AreaOfInterestInformation
{
	SI_LinkedList * AreaOfInterest_Item;
} SI_XNAP_DT_AreaOfInterestInformation;


// ListOfTAIsinAoI
//SEQUENCE OF TAIsinAoI-Item, MIN=1, MAX=maxnoofTAIsinAoI  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ListOfTAIsinAoI
{
	SI_LinkedList * TAIsinAoI_Item;
} SI_XNAP_DT_ListOfTAIsinAoI;


// ListOfCells
//SEQUENCE OF CellsinAoI-Item, MIN=1, MAX=maxnoofCellsinAoI  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ListOfCells
{
	SI_LinkedList * CellsinAoI_Item;
} SI_XNAP_DT_ListOfCells;


// ListOfRANNodesinAoI
//SEQUENCE OF GlobalNG-RANNodesinAoI-Item, MIN=1, MAX= maxnoofRANNodesinAoI  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ListOfRANNodesinAoI
{
	SI_LinkedList * GlobalNG_RANNodesinAoI_Item;
} SI_XNAP_DT_ListOfRANNodesinAoI;


// RequestReferenceID
// INTEGER,INTEGER(1..64,...),MIN=1,MAX=64  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_RequestReferenceID
{
	unsigned long long int data;
} SI_XNAP_DT_RequestReferenceID;

// AreaOfInterest-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_AreaOfInterest_Item
{
	SI_XNAP_DT_ListOfTAIsinAoI * listOfTAIsinAoI;
	int isPresent_listOfTAIsinAoI;

	SI_XNAP_DT_ListOfCells * listOfCellsinAoI;
	int isPresent_listOfCellsinAoI;

	SI_XNAP_DT_ListOfRANNodesinAoI * listOfRANNodesinAoI;
	int isPresent_listOfRANNodesinAoI;

	unsigned long long int requestReferenceID;

} SI_XNAP_DT_AreaOfInterest_Item;


// CellIdListforMDT-NR
//SEQUENCE OF NR-CGI, MIN=1, MAX=maxnoofCellIDforMDT  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CellIdListforMDT_NR
{
	SI_LinkedList * NR_CGI;
} SI_XNAP_DT_CellIdListforMDT_NR;


// CellBasedMDT-NR
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CellBasedMDT_NR
{
	SI_XNAP_DT_CellIdListforMDT_NR * cellIdListforMDT_NR;

} SI_XNAP_DT_CellBasedMDT_NR;


// TAListforMDT
//SEQUENCE OF TAC, MIN=1, MAX=maxnoofTAforMDT  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TAListforMDT
{
	SI_LinkedList * TAC;
} SI_XNAP_DT_TAListforMDT;


// TABasedMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TABasedMDT
{
	SI_XNAP_DT_TAListforMDT * tAListforMDT;

} SI_XNAP_DT_TABasedMDT;


// TAIListforMDT
//SEQUENCE OF TAIforMDT-Item, MIN=1, MAX=maxnoofTAforMDT  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TAIListforMDT
{
	SI_LinkedList * TAIforMDT_Item;
} SI_XNAP_DT_TAIListforMDT;


// TAIBasedMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TAIBasedMDT
{
	SI_XNAP_DT_TAIListforMDT * tAIListforMDT;

} SI_XNAP_DT_TAIBasedMDT;


// AreaScopeOfMDT-NR
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_AreaScopeOfMDT_NR
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_CellBasedMDT_NR * cellBased;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_TABasedMDT * tABased;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_TAIBasedMDT * tAIBased;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_AreaScopeOfMDT_NR_ExtIEs * choice_extension_ext;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_AreaScopeOfMDT_NR;


// CellIdListforMDT-EUTRA
//SEQUENCE OF E-UTRA-CGI, MIN=1, MAX=maxnoofCellIDforMDT  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CellIdListforMDT_EUTRA
{
	SI_LinkedList * E_UTRA_CGI;
} SI_XNAP_DT_CellIdListforMDT_EUTRA;


// CellBasedMDT-EUTRA
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CellBasedMDT_EUTRA
{
	SI_XNAP_DT_CellIdListforMDT_EUTRA * cellIdListforMDT_EUTRA;

} SI_XNAP_DT_CellBasedMDT_EUTRA;


// AreaScopeOfMDT-EUTRA
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_AreaScopeOfMDT_EUTRA
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_CellBasedMDT_EUTRA * cellBased;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_TABasedMDT * tABased;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_TAIBasedMDT * tAIBased;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_AreaScopeOfMDT_EUTRA_ExtIEs * choice_extension_ext;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_AreaScopeOfMDT_EUTRA;


// AreaScopeOfNeighCellsList
//SEQUENCE OF AreaScopeOfNeighCellsItem, MIN=1, MAX=maxnoofFreqforMDT  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_AreaScopeOfNeighCellsList
{
	SI_LinkedList * AreaScopeOfNeighCellsItem;
} SI_XNAP_DT_AreaScopeOfNeighCellsList;


// NRARFCN
// INTEGER,INTEGER(0.. maxNRARFCN),MIN=0,MAX=NaN  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_NRARFCN
{
	unsigned long long int data;
} SI_XNAP_DT_NRARFCN;

// NRSCS
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NRSCS
{
	__si_xnap__NRSCS_scs15_val,
	__si_xnap__NRSCS_scs30_val,
	__si_xnap__NRSCS_scs60_val,
	__si_xnap__NRSCS_scs120_val,
	__si_xnap__NRSCS_scs480_val_ext,
	__si_xnap__NRSCS_scs960_val_ext
} SI_XNAP_DT_NRSCS;


// L:2561
typedef enum __si_xnap_dt_NRSCS2
{
	NRSCS_scs15_val,
	NRSCS_scs30_val,
	NRSCS_scs60_val,
	NRSCS_scs120_val,
	NRSCS_scs480_val_ext,
	NRSCS_scs960_val_ext
} SI_XNAP_DT_NRSCS2;


// L:2588
typedef struct __si_xnap_dt_NRSCS_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NRSCS_EnumProxy;


// NRNRB
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NRNRB
{
	__si_xnap__NRNRB_nrb11_val,
	__si_xnap__NRNRB_nrb18_val,
	__si_xnap__NRNRB_nrb24_val,
	__si_xnap__NRNRB_nrb25_val,
	__si_xnap__NRNRB_nrb31_val,
	__si_xnap__NRNRB_nrb32_val,
	__si_xnap__NRNRB_nrb38_val,
	__si_xnap__NRNRB_nrb51_val,
	__si_xnap__NRNRB_nrb52_val,
	__si_xnap__NRNRB_nrb65_val,
	__si_xnap__NRNRB_nrb66_val,
	__si_xnap__NRNRB_nrb78_val,
	__si_xnap__NRNRB_nrb79_val,
	__si_xnap__NRNRB_nrb93_val,
	__si_xnap__NRNRB_nrb106_val,
	__si_xnap__NRNRB_nrb107_val,
	__si_xnap__NRNRB_nrb121_val,
	__si_xnap__NRNRB_nrb132_val,
	__si_xnap__NRNRB_nrb133_val,
	__si_xnap__NRNRB_nrb135_val,
	__si_xnap__NRNRB_nrb160_val,
	__si_xnap__NRNRB_nrb162_val,
	__si_xnap__NRNRB_nrb189_val,
	__si_xnap__NRNRB_nrb216_val,
	__si_xnap__NRNRB_nrb217_val,
	__si_xnap__NRNRB_nrb245_val,
	__si_xnap__NRNRB_nrb264_val,
	__si_xnap__NRNRB_nrb270_val,
	__si_xnap__NRNRB_nrb273_val,
	__si_xnap__NRNRB_nrb33_val_ext,
	__si_xnap__NRNRB_nrb62_val_ext,
	__si_xnap__NRNRB_nrb124_val_ext,
	__si_xnap__NRNRB_nrb148_val_ext,
	__si_xnap__NRNRB_nrb248_val_ext,
	__si_xnap__NRNRB_nrb44_val_ext,
	__si_xnap__NRNRB_nrb58_val_ext,
	__si_xnap__NRNRB_nrb92_val_ext,
	__si_xnap__NRNRB_nrb119_val_ext,
	__si_xnap__NRNRB_nrb188_val_ext,
	__si_xnap__NRNRB_nrb242_val_ext,
	__si_xnap__NRNRB_nrb15_val_ext
} SI_XNAP_DT_NRNRB;


// L:2561
typedef enum __si_xnap_dt_NRNRB2
{
	NRNRB_nrb11_val,
	NRNRB_nrb18_val,
	NRNRB_nrb24_val,
	NRNRB_nrb25_val,
	NRNRB_nrb31_val,
	NRNRB_nrb32_val,
	NRNRB_nrb38_val,
	NRNRB_nrb51_val,
	NRNRB_nrb52_val,
	NRNRB_nrb65_val,
	NRNRB_nrb66_val,
	NRNRB_nrb78_val,
	NRNRB_nrb79_val,
	NRNRB_nrb93_val,
	NRNRB_nrb106_val,
	NRNRB_nrb107_val,
	NRNRB_nrb121_val,
	NRNRB_nrb132_val,
	NRNRB_nrb133_val,
	NRNRB_nrb135_val,
	NRNRB_nrb160_val,
	NRNRB_nrb162_val,
	NRNRB_nrb189_val,
	NRNRB_nrb216_val,
	NRNRB_nrb217_val,
	NRNRB_nrb245_val,
	NRNRB_nrb264_val,
	NRNRB_nrb270_val,
	NRNRB_nrb273_val,
	NRNRB_nrb33_val_ext,
	NRNRB_nrb62_val_ext,
	NRNRB_nrb124_val_ext,
	NRNRB_nrb148_val_ext,
	NRNRB_nrb248_val_ext,
	NRNRB_nrb44_val_ext,
	NRNRB_nrb58_val_ext,
	NRNRB_nrb92_val_ext,
	NRNRB_nrb119_val_ext,
	NRNRB_nrb188_val_ext,
	NRNRB_nrb242_val_ext,
	NRNRB_nrb15_val_ext
} SI_XNAP_DT_NRNRB2;


// L:2588
typedef struct __si_xnap_dt_NRNRB_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NRNRB_EnumProxy;


// NRTransmissionBandwidth
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NRTransmissionBandwidth
{
	uint8_t selected_enRSCS;
	int extSelected_enRSCS;

	uint8_t selected_enRNRB;
	int extSelected_enRNRB;

} SI_XNAP_DT_NRTransmissionBandwidth;


// SUL-Information
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SUL_Information
{
	unsigned long long int sulFrequencyInfo;

	SI_XNAP_DT_NRTransmissionBandwidth * sulTransmissionBandwidth;

} SI_XNAP_DT_SUL_Information;


// NRFrequencyBand-List
//SEQUENCE OF NRFrequencyBandItem, MIN=1, MAX=maxnoofNRCellBands  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_NRFrequencyBand_List
{
	SI_LinkedList * NRFrequencyBandItem;
} SI_XNAP_DT_NRFrequencyBand_List;


// NRFrequencyInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NRFrequencyInfo
{
	unsigned long long int nrARFCN;

	SI_XNAP_DT_SUL_Information * sul_information;
	int isPresent_sul_information;

	SI_XNAP_DT_NRFrequencyBand_List * frequencyBand_List;

} SI_XNAP_DT_NRFrequencyInfo;


// PCIListForMDT
//SEQUENCE OF NRPCI, MIN=1, MAX= maxnoofNeighPCIforMDT  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PCIListForMDT
{
	SI_LinkedList * NRPCI;
} SI_XNAP_DT_PCIListForMDT;


// AreaScopeOfNeighCellsItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_AreaScopeOfNeighCellsItem
{
	SI_XNAP_DT_NRFrequencyInfo * nrFrequencyInfo;

	SI_XNAP_DT_PCIListForMDT * pciListForMDT;
	int isPresent_pciListForMDT;

} SI_XNAP_DT_AreaScopeOfNeighCellsItem;


// CellIdListforQMC
//SEQUENCE OF GlobalNG-RANCell-ID, MIN=1, MAX=maxnoofCellIDforQMC  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CellIdListforQMC
{
	SI_LinkedList * GlobalNG_RANCell_ID;
} SI_XNAP_DT_CellIdListforQMC;


// CellBasedQMC
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CellBasedQMC
{
	SI_XNAP_DT_CellIdListforQMC * cellIdListforQMC;

} SI_XNAP_DT_CellBasedQMC;


// TAListforQMC
//SEQUENCE OF TAC, MIN=1, MAX=maxnoofTAforQMC  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TAListforQMC
{
	SI_LinkedList * TAC;
} SI_XNAP_DT_TAListforQMC;


// TABasedQMC
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TABasedQMC
{
	SI_XNAP_DT_TAListforQMC * tAListforQMC;

} SI_XNAP_DT_TABasedQMC;


// TAIListforQMC
//SEQUENCE OF TAI-Item, MIN=1, MAX=maxnoofTAforQMC  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TAIListforQMC
{
	SI_LinkedList * TAI_Item;
} SI_XNAP_DT_TAIListforQMC;


// TAIBasedQMC
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TAIBasedQMC
{
	SI_XNAP_DT_TAIListforQMC * tAIListforQMC;

} SI_XNAP_DT_TAIBasedQMC;


// PLMNListforQMC
//SEQUENCE OF PLMN-Identity, MIN=1, MAX=maxnoofPLMNforQMC  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PLMNListforQMC
{
	SI_LinkedList * PLMN_Identity;
} SI_XNAP_DT_PLMNListforQMC;


// PLMNAreaBasedQMC
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PLMNAreaBasedQMC
{
	SI_XNAP_DT_PLMNListforQMC * plmnListforQMC;

} SI_XNAP_DT_PLMNAreaBasedQMC;


// AreaScopeOfQMC
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_AreaScopeOfQMC
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_CellBasedQMC * cellBased;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_TABasedQMC * tABased;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_TAIBasedQMC * tAIBased;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_PLMNAreaBasedQMC * pLMNAreaBased;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_AreaScopeOfQMC_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_AreaScopeOfQMC;


// ASSecurityInformation_key-NG-RAN-Star
// BITSTRING,BIT STRING(SIZE(256))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_ASSecurityInformation_key_NG_RAN_Star
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_ASSecurityInformation_key_NG_RAN_Star;

// ASSecurityInformation_ncc
// INTEGER,INTEGER(0..7),MIN=0,MAX=7  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_ASSecurityInformation_ncc
{
	unsigned long long int data;
} SI_XNAP_DT_ASSecurityInformation_ncc;

// AS-SecurityInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_AS_SecurityInformation
{
	SI_XNAP_DT_ASSecurityInformation_key_NG_RAN_Star * key_NG_RAN_Star;

	unsigned long long int ncc;

} SI_XNAP_DT_AS_SecurityInformation;


// RANPagingAttemptInfo_pagingAttemptCount
// INTEGER,INTEGER(1..16,...),MIN=1,MAX=16  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_RANPagingAttemptInfo_pagingAttemptCount
{
	unsigned long long int data;
} SI_XNAP_DT_RANPagingAttemptInfo_pagingAttemptCount;

// RANPagingAttemptInfo_intendedNumberOfPagingAttempts
// INTEGER,INTEGER(1..16,...),MIN=1,MAX=16  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_RANPagingAttemptInfo_intendedNumberOfPagingAttempts
{
	unsigned long long int data;
} SI_XNAP_DT_RANPagingAttemptInfo_intendedNumberOfPagingAttempts;

// RANPagingAttemptInfo_nextPagingAreaScope
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_RANPagingAttemptInfo_nextPagingAreaScope
{
	__si_xnap__RANPagingAttemptInfo_nextPagingAreaScope_same_val,
	__si_xnap__RANPagingAttemptInfo_nextPagingAreaScope_changed_val
} SI_XNAP_DT_RANPagingAttemptInfo_nextPagingAreaScope;


// L:2561
typedef enum __si_xnap_dt_RANPagingAttemptInfo_nextPagingAreaScope2
{
	RANPagingAttemptInfo_nextPagingAreaScope_same_val,
	RANPagingAttemptInfo_nextPagingAreaScope_changed_val
} SI_XNAP_DT_RANPagingAttemptInfo_nextPagingAreaScope2;


// L:2588
typedef struct __si_xnap_dt_RANPagingAttemptInfo_nextPagingAreaScope_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_RANPagingAttemptInfo_nextPagingAreaScope_EnumProxy;


// RANPagingAttemptInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RANPagingAttemptInfo
{
	unsigned long long int pagingAttemptCount;

	unsigned long long int intendedNumberOfPagingAttempts;

	uint8_t selected_enextPagingAreaScope;
	int extSelected_enextPagingAreaScope;
	int isPresent_nextPagingAreaScope;

} SI_XNAP_DT_RANPagingAttemptInfo;


// AssistanceDataForRANPaging
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_AssistanceDataForRANPaging
{
	SI_XNAP_DT_RANPagingAttemptInfo * ran_paging_attempt_info;
	int isPresent_ran_paging_attempt_info;

} SI_XNAP_DT_AssistanceDataForRANPaging;


// AssistanceInformationQoE-Meas
// INTEGER,INTEGER(1..16,...),MIN=1,MAX=16  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_AssistanceInformationQoE_Meas
{
	unsigned long long int data;
} SI_XNAP_DT_AssistanceInformationQoE_Meas;

// Associated-QoSFlowInfo-List
//SEQUENCE OF Associated-QoSFlowInfo-Item, MIN=1, MAX=maxnoofMBSQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_Associated_QoSFlowInfo_List
{
	SI_LinkedList * Associated_QoSFlowInfo_Item;
} SI_XNAP_DT_Associated_QoSFlowInfo_List;


// QoSFlowIdentifier
// INTEGER,INTEGER(0..63,...),MIN=0,MAX=63  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_QoSFlowIdentifier
{
	unsigned long long int data;
} SI_XNAP_DT_QoSFlowIdentifier;

// Associated-QoSFlowInfo-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_Associated_QoSFlowInfo_Item
{
	unsigned long long int mBS_QoSFlowIdentifier;

	unsigned long long int associatedUnicastQoSFlowIdentifier;

} SI_XNAP_DT_Associated_QoSFlowInfo_Item;


// AvailableCapacity
// INTEGER,INTEGER(1.. 100,...),MIN=1,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_AvailableCapacity
{
	unsigned long long int data;
} SI_XNAP_DT_AvailableCapacity;

// AvailableRRCConnectionCapacityValue
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_AvailableRRCConnectionCapacityValue
{
	unsigned long long int data;
} SI_XNAP_DT_AvailableRRCConnectionCapacityValue;

// AvailableRVQoEMetrics_applicationLayerBufferLevelList
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_AvailableRVQoEMetrics_applicationLayerBufferLevelList
{
	__si_xnap__AvailableRVQoEMetrics_applicationLayerBufferLevelList_true_val
} SI_XNAP_DT_AvailableRVQoEMetrics_applicationLayerBufferLevelList;


// L:2561
typedef enum __si_xnap_dt_AvailableRVQoEMetrics_applicationLayerBufferLevelList2
{
	AvailableRVQoEMetrics_applicationLayerBufferLevelList_true_val
} SI_XNAP_DT_AvailableRVQoEMetrics_applicationLayerBufferLevelList2;


// L:2588
typedef struct __si_xnap_dt_AvailableRVQoEMetrics_applicationLayerBufferLevelList_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_AvailableRVQoEMetrics_applicationLayerBufferLevelList_EnumProxy;


// AvailableRVQoEMetrics_playoutDelayForMediaStartup
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_AvailableRVQoEMetrics_playoutDelayForMediaStartup
{
	__si_xnap__AvailableRVQoEMetrics_playoutDelayForMediaStartup_true_val
} SI_XNAP_DT_AvailableRVQoEMetrics_playoutDelayForMediaStartup;


// L:2561
typedef enum __si_xnap_dt_AvailableRVQoEMetrics_playoutDelayForMediaStartup2
{
	AvailableRVQoEMetrics_playoutDelayForMediaStartup_true_val
} SI_XNAP_DT_AvailableRVQoEMetrics_playoutDelayForMediaStartup2;


// L:2588
typedef struct __si_xnap_dt_AvailableRVQoEMetrics_playoutDelayForMediaStartup_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_AvailableRVQoEMetrics_playoutDelayForMediaStartup_EnumProxy;


// AvailableRVQoEMetrics
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_AvailableRVQoEMetrics
{
	uint8_t selected_eapplicationLayerBufferLevelList;
	int extSelected_eapplicationLayerBufferLevelList;
	int isPresent_applicationLayerBufferLevelList;

	uint8_t selected_eplayoutDelayForMediaStartup;
	int extSelected_eplayoutDelayForMediaStartup;
	int isPresent_playoutDelayForMediaStartup;

} SI_XNAP_DT_AvailableRVQoEMetrics;


// AveragingWindow
// INTEGER,INTEGER(0..4095,...),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_AveragingWindow
{
	unsigned long long int data;
} SI_XNAP_DT_AveragingWindow;

// BAPAddress
// BITSTRING,BIT STRING(SIZE(10))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_BAPAddress
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_BAPAddress;

// BAPPathID
// BITSTRING,BIT STRING(SIZE(10))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_BAPPathID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_BAPPathID;

// BAPRoutingID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_BAPRoutingID
{
	SI_XNAP_DT_BAPAddress * bAPAddress;

	SI_XNAP_DT_BAPPathID * bAPPathID;

} SI_XNAP_DT_BAPRoutingID;


// BeamMeasurementIndicationM1
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_BeamMeasurementIndicationM1
{
	__si_xnap__BeamMeasurementIndicationM1_true_val
} SI_XNAP_DT_BeamMeasurementIndicationM1;


// L:2561
typedef enum __si_xnap_dt_BeamMeasurementIndicationM12
{
	BeamMeasurementIndicationM1_true_val
} SI_XNAP_DT_BeamMeasurementIndicationM12;


// L:2588
typedef struct __si_xnap_dt_BeamMeasurementIndicationM1_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_BeamMeasurementIndicationM1_EnumProxy;


// BeamMeasurementsReportQuantity_rSRP
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_BeamMeasurementsReportQuantity_rSRP
{
	__si_xnap__BeamMeasurementsReportQuantity_rSRP_true_val
} SI_XNAP_DT_BeamMeasurementsReportQuantity_rSRP;


// L:2561
typedef enum __si_xnap_dt_BeamMeasurementsReportQuantity_rSRP2
{
	BeamMeasurementsReportQuantity_rSRP_true_val
} SI_XNAP_DT_BeamMeasurementsReportQuantity_rSRP2;


// L:2588
typedef struct __si_xnap_dt_BeamMeasurementsReportQuantity_rSRP_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_BeamMeasurementsReportQuantity_rSRP_EnumProxy;


// BeamMeasurementsReportQuantity_rSRQ
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_BeamMeasurementsReportQuantity_rSRQ
{
	__si_xnap__BeamMeasurementsReportQuantity_rSRQ_true_val
} SI_XNAP_DT_BeamMeasurementsReportQuantity_rSRQ;


// L:2561
typedef enum __si_xnap_dt_BeamMeasurementsReportQuantity_rSRQ2
{
	BeamMeasurementsReportQuantity_rSRQ_true_val
} SI_XNAP_DT_BeamMeasurementsReportQuantity_rSRQ2;


// L:2588
typedef struct __si_xnap_dt_BeamMeasurementsReportQuantity_rSRQ_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_BeamMeasurementsReportQuantity_rSRQ_EnumProxy;


// BeamMeasurementsReportQuantity_sINR
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_BeamMeasurementsReportQuantity_sINR
{
	__si_xnap__BeamMeasurementsReportQuantity_sINR_true_val
} SI_XNAP_DT_BeamMeasurementsReportQuantity_sINR;


// L:2561
typedef enum __si_xnap_dt_BeamMeasurementsReportQuantity_sINR2
{
	BeamMeasurementsReportQuantity_sINR_true_val
} SI_XNAP_DT_BeamMeasurementsReportQuantity_sINR2;


// L:2588
typedef struct __si_xnap_dt_BeamMeasurementsReportQuantity_sINR_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_BeamMeasurementsReportQuantity_sINR_EnumProxy;


// BeamMeasurementsReportQuantity
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_BeamMeasurementsReportQuantity
{
	uint8_t selected_erSRP;
	int extSelected_erSRP;

	uint8_t selected_erSRQ;
	int extSelected_erSRQ;

	uint8_t selected_esINR;
	int extSelected_esINR;

} SI_XNAP_DT_BeamMeasurementsReportQuantity;


// MaxNrofRS-IndexesToReport
// INTEGER,INTEGER(1..64,...),MIN=1,MAX=64  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_MaxNrofRS_IndexesToReport
{
	unsigned long long int data;
} SI_XNAP_DT_MaxNrofRS_IndexesToReport;

// BeamMeasurementsReportConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_BeamMeasurementsReportConfiguration
{
	SI_XNAP_DT_BeamMeasurementsReportQuantity * beamMeasurementsReportQuantity;
	int isPresent_beamMeasurementsReportQuantity;

	unsigned long long int maxNrofRS_IndexesToReport;
	int isPresent_maxNrofRS_IndexesToReport;

} SI_XNAP_DT_BeamMeasurementsReportConfiguration;


// BHInfoIndex
// INTEGER,INTEGER(1.. maxnoofBHInfo),MIN=1,MAX=NaN  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_BHInfoIndex
{
	unsigned long long int data;
} SI_XNAP_DT_BHInfoIndex;

// BHInfoList
//SEQUENCE OF BHInfo-Item, MIN=1, MAX= maxnoofBHInfo  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_BHInfoList
{
	SI_LinkedList * BHInfo_Item;
} SI_XNAP_DT_BHInfoList;


// BHInfo-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_BHInfo_Item
{
	unsigned long long int bHInfoIndex;

} SI_XNAP_DT_BHInfo_Item;


// BHRLCChannelID
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_BHRLCChannelID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_BHRLCChannelID;

// BAPControlPDURLCCH-List
//SEQUENCE OF BAPControlPDURLCCH-Item, MIN=1, MAX= maxnoofBAPControlPDURLCCHs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_BAPControlPDURLCCH_List
{
	SI_LinkedList * BAPControlPDURLCCH_Item;
} SI_XNAP_DT_BAPControlPDURLCCH_List;


// BAPControlPDURLCCH-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_BAPControlPDURLCCH_Item
{
	SI_XNAP_DT_BHRLCChannelID * bHRLCCHID;

	SI_XNAP_DT_BAPAddress * nexthopBAPAddress;

} SI_XNAP_DT_BAPControlPDURLCCH_Item;


// BarringExemptionforEmerCallInfo
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_BarringExemptionforEmerCallInfo
{
	__si_xnap__BarringExemptionforEmerCallInfo_true_val
} SI_XNAP_DT_BarringExemptionforEmerCallInfo;


// L:2561
typedef enum __si_xnap_dt_BarringExemptionforEmerCallInfo2
{
	BarringExemptionforEmerCallInfo_true_val
} SI_XNAP_DT_BarringExemptionforEmerCallInfo2;


// L:2588
typedef struct __si_xnap_dt_BarringExemptionforEmerCallInfo_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_BarringExemptionforEmerCallInfo_EnumProxy;


// BluetoothMeasurementConfiguration_bt-rssi
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_BluetoothMeasurementConfiguration_bt_rssi
{
	__si_xnap__BluetoothMeasurementConfiguration_bt_rssi_true_val
} SI_XNAP_DT_BluetoothMeasurementConfiguration_bt_rssi;


// L:2561
typedef enum __si_xnap_dt_BluetoothMeasurementConfiguration_bt_rssi2
{
	BluetoothMeasurementConfiguration_bt_rssi_true_val
} SI_XNAP_DT_BluetoothMeasurementConfiguration_bt_rssi2;


// L:2588
typedef struct __si_xnap_dt_BluetoothMeasurementConfiguration_bt_rssi_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_BluetoothMeasurementConfiguration_bt_rssi_EnumProxy;


// BluetoothMeasConfig
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_BluetoothMeasConfig
{
	__si_xnap__BluetoothMeasConfig_setup_val
} SI_XNAP_DT_BluetoothMeasConfig;


// L:2561
typedef enum __si_xnap_dt_BluetoothMeasConfig2
{
	BluetoothMeasConfig_setup_val
} SI_XNAP_DT_BluetoothMeasConfig2;


// L:2588
typedef struct __si_xnap_dt_BluetoothMeasConfig_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_BluetoothMeasConfig_EnumProxy;


// BluetoothMeasConfigNameList
//SEQUENCE OF BluetoothName, MIN=1, MAX=maxnoofBluetoothName  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_BluetoothMeasConfigNameList
{
	SI_LinkedList * BluetoothName;
} SI_XNAP_DT_BluetoothMeasConfigNameList;


// BluetoothMeasurementConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_BluetoothMeasurementConfiguration
{
	uint8_t selected_ebluetoothMeasConfig;
	int extSelected_ebluetoothMeasConfig;

	SI_XNAP_DT_BluetoothMeasConfigNameList * bluetoothMeasConfigNameList;
	int isPresent_bluetoothMeasConfigNameList;

	uint8_t selected_ebt_rssi;
	int extSelected_ebt_rssi;
	int isPresent_bt_rssi;

} SI_XNAP_DT_BluetoothMeasurementConfiguration;


// BluetoothName
// OCTETSTRING,OCTET STRING(SIZE(1..248))
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_BluetoothName
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_BluetoothName;

// BPLMN-ID-Info-EUTRA
//SEQUENCE OF BPLMN-ID-Info-EUTRA-Item, MIN=1, MAX=maxnoofEUTRABPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_BPLMN_ID_Info_EUTRA
{
	SI_LinkedList * BPLMN_ID_Info_EUTRA_Item;
} SI_XNAP_DT_BPLMN_ID_Info_EUTRA;


// BroadcastEUTRAPLMNs
//SEQUENCE OF PLMN-Identity, MIN=1, MAX=maxnoofEUTRABPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_BroadcastEUTRAPLMNs
{
	SI_LinkedList * PLMN_Identity;
} SI_XNAP_DT_BroadcastEUTRAPLMNs;


// TAC
// OCTETSTRING,OCTET STRING(SIZE(3))
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_TAC
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_TAC;

// E-UTRA-Cell-Identity
// BITSTRING,BIT STRING(SIZE(28))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_E_UTRA_Cell_Identity
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_E_UTRA_Cell_Identity;

// RANAC
// INTEGER,INTEGER(0..255),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_RANAC
{
	unsigned long long int data;
} SI_XNAP_DT_RANAC;

// BPLMN-ID-Info-EUTRA-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_BPLMN_ID_Info_EUTRA_Item
{
	SI_XNAP_DT_BroadcastEUTRAPLMNs * broadcastPLMNs;

	SI_XNAP_DT_TAC * tac;

	SI_XNAP_DT_E_UTRA_Cell_Identity * e_utraCI;

	unsigned long long int ranac;
	int isPresent_ranac;

} SI_XNAP_DT_BPLMN_ID_Info_EUTRA_Item;


// BPLMN-ID-Info-NR
//SEQUENCE OF BPLMN-ID-Info-NR-Item, MIN=1, MAX=maxnoofBPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_BPLMN_ID_Info_NR
{
	SI_LinkedList * BPLMN_ID_Info_NR_Item;
} SI_XNAP_DT_BPLMN_ID_Info_NR;


// BroadcastPLMNs
//SEQUENCE OF PLMN-Identity, MIN=1, MAX=maxnoofBPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_BroadcastPLMNs
{
	SI_LinkedList * PLMN_Identity;
} SI_XNAP_DT_BroadcastPLMNs;


// NR-Cell-Identity
// BITSTRING,BIT STRING(SIZE(36))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_NR_Cell_Identity
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_NR_Cell_Identity;

// BPLMN-ID-Info-NR-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_BPLMN_ID_Info_NR_Item
{
	SI_XNAP_DT_BroadcastPLMNs * broadcastPLMNs;

	SI_XNAP_DT_TAC * tac;

	SI_XNAP_DT_NR_Cell_Identity * nr_CI;

	unsigned long long int ranac;
	int isPresent_ranac;

} SI_XNAP_DT_BPLMN_ID_Info_NR_Item;


// BroadcastCAG-Identifier-List
//SEQUENCE OF BroadcastCAG-Identifier-Item, MIN=1, MAX=maxnoofCAGs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_BroadcastCAG_Identifier_List
{
	SI_LinkedList * BroadcastCAG_Identifier_Item;
} SI_XNAP_DT_BroadcastCAG_Identifier_List;


// CAG-Identifier
// BITSTRING,BIT STRING(SIZE(32))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_CAG_Identifier
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_CAG_Identifier;

// BroadcastCAG-Identifier-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_BroadcastCAG_Identifier_Item
{
	SI_XNAP_DT_CAG_Identifier * cag_Identifier;

} SI_XNAP_DT_BroadcastCAG_Identifier_Item;


// BroadcastNID-List
//SEQUENCE OF BroadcastNID-Item, MIN=1, MAX=maxnoofNIDs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_BroadcastNID_List
{
	SI_LinkedList * BroadcastNID_Item;
} SI_XNAP_DT_BroadcastNID_List;


// NID
// BITSTRING,BIT STRING(SIZE(44))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_NID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_NID;

// BroadcastNID-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_BroadcastNID_Item
{
	SI_XNAP_DT_NID * nid;

} SI_XNAP_DT_BroadcastNID_Item;


// SliceSupport-List
//SEQUENCE OF S-NSSAI, MIN=1, MAX=maxnoofSliceItems  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SliceSupport_List
{
	SI_LinkedList * S_NSSAI;
} SI_XNAP_DT_SliceSupport_List;


// BroadcastPLMNinTAISupport-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_BroadcastPLMNinTAISupport_Item
{
	SI_XNAP_DT_PLMN_Identity * plmn_id;

	SI_XNAP_DT_SliceSupport_List * tAISliceSupport_List;

} SI_XNAP_DT_BroadcastPLMNinTAISupport_Item;


// BroadcastPNI-NPN-ID-Information
//SEQUENCE OF BroadcastPNI-NPN-ID-Information-Item, MIN=1, MAX=maxnoofBPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_BroadcastPNI_NPN_ID_Information
{
	SI_LinkedList * BroadcastPNI_NPN_ID_Information_Item;
} SI_XNAP_DT_BroadcastPNI_NPN_ID_Information;


// BroadcastPNI-NPN-ID-Information-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_BroadcastPNI_NPN_ID_Information_Item
{
	SI_XNAP_DT_PLMN_Identity * plmn_id;

	SI_XNAP_DT_BroadcastCAG_Identifier_List * broadcastCAG_Identifier_List;

} SI_XNAP_DT_BroadcastPNI_NPN_ID_Information_Item;


// BroadcastSNPNID-List
//SEQUENCE OF BroadcastSNPNID, MIN=1, MAX=maxnoofSNPNIDs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_BroadcastSNPNID_List
{
	SI_LinkedList * BroadcastSNPNID;
} SI_XNAP_DT_BroadcastSNPNID_List;


// BroadcastSNPNID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_BroadcastSNPNID
{
	SI_XNAP_DT_PLMN_Identity * plmn_id;

	SI_XNAP_DT_BroadcastNID_List * broadcastNID_List;

} SI_XNAP_DT_BroadcastSNPNID;


// CandidateRelayUEInfoList
//SEQUENCE OF CandidateRelayUEInfoItem, MIN=1, MAX=maxnoofCandidateRelayUEs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CandidateRelayUEInfoList
{
	SI_LinkedList * CandidateRelayUEInfoItem;
} SI_XNAP_DT_CandidateRelayUEInfoList;


// CandidateRelayUEInfoItem_candidateRelayUEID
// BITSTRING,BIT STRING(SIZE(24))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_CandidateRelayUEInfoItem_candidateRelayUEID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_CandidateRelayUEInfoItem_candidateRelayUEID;

// CandidateRelayUEInfoItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CandidateRelayUEInfoItem
{
	SI_XNAP_DT_CandidateRelayUEInfoItem_candidateRelayUEID * candidateRelayUEID;

} SI_XNAP_DT_CandidateRelayUEInfoItem;


// CapacityValue
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_CapacityValue
{
	unsigned long long int data;
} SI_XNAP_DT_CapacityValue;

// SSBAreaCapacityValue-List
//SEQUENCE OF SSBAreaCapacityValue-List-Item, MIN=1, MAX=maxnoofSSBAreas  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SSBAreaCapacityValue_List
{
	SI_LinkedList * SSBAreaCapacityValue_List_Item;
} SI_XNAP_DT_SSBAreaCapacityValue_List;


// CapacityValueInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CapacityValueInfo
{
	unsigned long long int capacityValue;

	SI_XNAP_DT_SSBAreaCapacityValue_List * ssbAreaCapacityValueList;
	int isPresent_ssbAreaCapacityValueList;

} SI_XNAP_DT_CapacityValueInfo;


// CauseRadioNetworkLayer
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CauseRadioNetworkLayer
{
	__si_xnap__CauseRadioNetworkLayer_cell_not_available_val,
	__si_xnap__CauseRadioNetworkLayer_handover_desirable_for_radio_reasons_val,
	__si_xnap__CauseRadioNetworkLayer_handover_target_not_allowed_val,
	__si_xnap__CauseRadioNetworkLayer_invalid_AMF_Set_ID_val,
	__si_xnap__CauseRadioNetworkLayer_no_radio_resources_available_in_target_cell_val,
	__si_xnap__CauseRadioNetworkLayer_partial_handover_val,
	__si_xnap__CauseRadioNetworkLayer_reduce_load_in_serving_cell_val,
	__si_xnap__CauseRadioNetworkLayer_resource_optimisation_handover_val,
	__si_xnap__CauseRadioNetworkLayer_time_critical_handover_val,
	__si_xnap__CauseRadioNetworkLayer_tXnRELOCoverall_expiry_val,
	__si_xnap__CauseRadioNetworkLayer_tXnRELOCprep_expiry_val,
	__si_xnap__CauseRadioNetworkLayer_unknown_GUAMI_ID_val,
	__si_xnap__CauseRadioNetworkLayer_unknown_local_NG_RAN_node_UE_XnAP_ID_val,
	__si_xnap__CauseRadioNetworkLayer_inconsistent_remote_NG_RAN_node_UE_XnAP_ID_val,
	__si_xnap__CauseRadioNetworkLayer_encryption_and_or_integrity_protection_algorithms_not_supported_val,
	__si_xnap__CauseRadioNetworkLayer_not_used_causes_value_1_val,
	__si_xnap__CauseRadioNetworkLayer_multiple_PDU_session_ID_instances_val,
	__si_xnap__CauseRadioNetworkLayer_unknown_PDU_session_ID_val,
	__si_xnap__CauseRadioNetworkLayer_unknown_QoS_Flow_ID_val,
	__si_xnap__CauseRadioNetworkLayer_multiple_QoS_Flow_ID_instances_val,
	__si_xnap__CauseRadioNetworkLayer_switch_off_ongoing_val,
	__si_xnap__CauseRadioNetworkLayer_not_supported_5QI_value_val,
	__si_xnap__CauseRadioNetworkLayer_tXnDCoverall_expiry_val,
	__si_xnap__CauseRadioNetworkLayer_tXnDCprep_expiry_val,
	__si_xnap__CauseRadioNetworkLayer_action_desirable_for_radio_reasons_val,
	__si_xnap__CauseRadioNetworkLayer_reduce_load_val,
	__si_xnap__CauseRadioNetworkLayer_resource_optimisation_val,
	__si_xnap__CauseRadioNetworkLayer_time_critical_action_val,
	__si_xnap__CauseRadioNetworkLayer_target_not_allowed_val,
	__si_xnap__CauseRadioNetworkLayer_no_radio_resources_available_val,
	__si_xnap__CauseRadioNetworkLayer_invalid_QoS_combination_val,
	__si_xnap__CauseRadioNetworkLayer_encryption_algorithms_not_supported_val,
	__si_xnap__CauseRadioNetworkLayer_procedure_cancelled_val,
	__si_xnap__CauseRadioNetworkLayer_rRM_purpose_val,
	__si_xnap__CauseRadioNetworkLayer_improve_user_bit_rate_val,
	__si_xnap__CauseRadioNetworkLayer_user_inactivity_val,
	__si_xnap__CauseRadioNetworkLayer_radio_connection_with_UE_lost_val,
	__si_xnap__CauseRadioNetworkLayer_failure_in_the_radio_interface_procedure_val,
	__si_xnap__CauseRadioNetworkLayer_bearer_option_not_supported_val,
	__si_xnap__CauseRadioNetworkLayer_up_integrity_protection_not_possible_val,
	__si_xnap__CauseRadioNetworkLayer_up_confidentiality_protection_not_possible_val,
	__si_xnap__CauseRadioNetworkLayer_resources_not_available_for_the_slice_s_val,
	__si_xnap__CauseRadioNetworkLayer_ue_max_IP_data_rate_reason_val,
	__si_xnap__CauseRadioNetworkLayer_cP_integrity_protection_failure_val,
	__si_xnap__CauseRadioNetworkLayer_uP_integrity_protection_failure_val,
	__si_xnap__CauseRadioNetworkLayer_slice_not_supported_by_NG_RAN_val,
	__si_xnap__CauseRadioNetworkLayer_mN_Mobility_val,
	__si_xnap__CauseRadioNetworkLayer_sN_Mobility_val,
	__si_xnap__CauseRadioNetworkLayer_count_reaches_max_value_val,
	__si_xnap__CauseRadioNetworkLayer_unknown_old_NG_RAN_node_UE_XnAP_ID_val,
	__si_xnap__CauseRadioNetworkLayer_pDCP_Overload_val,
	__si_xnap__CauseRadioNetworkLayer_drb_id_not_available_val,
	__si_xnap__CauseRadioNetworkLayer_unspecified_val,
	__si_xnap__CauseRadioNetworkLayer_ue_context_id_not_known_val_ext,
	__si_xnap__CauseRadioNetworkLayer_non_relocation_of_context_val_ext,
	__si_xnap__CauseRadioNetworkLayer_cho_cpc_resources_tobechanged_val_ext,
	__si_xnap__CauseRadioNetworkLayer_rSN_not_available_for_the_UP_val_ext,
	__si_xnap__CauseRadioNetworkLayer_npn_access_denied_val_ext,
	__si_xnap__CauseRadioNetworkLayer_report_characteristics_empty_val_ext,
	__si_xnap__CauseRadioNetworkLayer_existing_measurement_ID_val_ext,
	__si_xnap__CauseRadioNetworkLayer_measurement_temporarily_not_available_val_ext,
	__si_xnap__CauseRadioNetworkLayer_measurement_not_supported_for_the_object_val_ext,
	__si_xnap__CauseRadioNetworkLayer_ue_power_saving_val_ext,
	__si_xnap__CauseRadioNetworkLayer_not_existing_NG_RAN_node2_Measurement_ID_val_ext,
	__si_xnap__CauseRadioNetworkLayer_insufficient_ue_capabilities_val_ext,
	__si_xnap__CauseRadioNetworkLayer_normal_release_val_ext,
	__si_xnap__CauseRadioNetworkLayer_value_out_of_allowed_range_val_ext,
	__si_xnap__CauseRadioNetworkLayer_scg_activation_deactivation_failure_val_ext,
	__si_xnap__CauseRadioNetworkLayer_scg_deactivation_failure_due_to_data_transmission_val_ext,
	__si_xnap__CauseRadioNetworkLayer_ssb_not_available_val_ext,
	__si_xnap__CauseRadioNetworkLayer_lTM_triggered_val_ext,
	__si_xnap__CauseRadioNetworkLayer_no_Backhaul_Resource_val_ext,
	__si_xnap__CauseRadioNetworkLayer_mIAB_node_not_authorized_val_ext,
	__si_xnap__CauseRadioNetworkLayer_iAB_not_authorized_val_ext
} SI_XNAP_DT_CauseRadioNetworkLayer;


// L:2561
typedef enum __si_xnap_dt_CauseRadioNetworkLayer2
{
	CauseRadioNetworkLayer_cell_not_available_val,
	CauseRadioNetworkLayer_handover_desirable_for_radio_reasons_val,
	CauseRadioNetworkLayer_handover_target_not_allowed_val,
	CauseRadioNetworkLayer_invalid_AMF_Set_ID_val,
	CauseRadioNetworkLayer_no_radio_resources_available_in_target_cell_val,
	CauseRadioNetworkLayer_partial_handover_val,
	CauseRadioNetworkLayer_reduce_load_in_serving_cell_val,
	CauseRadioNetworkLayer_resource_optimisation_handover_val,
	CauseRadioNetworkLayer_time_critical_handover_val,
	CauseRadioNetworkLayer_tXnRELOCoverall_expiry_val,
	CauseRadioNetworkLayer_tXnRELOCprep_expiry_val,
	CauseRadioNetworkLayer_unknown_GUAMI_ID_val,
	CauseRadioNetworkLayer_unknown_local_NG_RAN_node_UE_XnAP_ID_val,
	CauseRadioNetworkLayer_inconsistent_remote_NG_RAN_node_UE_XnAP_ID_val,
	CauseRadioNetworkLayer_encryption_and_or_integrity_protection_algorithms_not_supported_val,
	CauseRadioNetworkLayer_not_used_causes_value_1_val,
	CauseRadioNetworkLayer_multiple_PDU_session_ID_instances_val,
	CauseRadioNetworkLayer_unknown_PDU_session_ID_val,
	CauseRadioNetworkLayer_unknown_QoS_Flow_ID_val,
	CauseRadioNetworkLayer_multiple_QoS_Flow_ID_instances_val,
	CauseRadioNetworkLayer_switch_off_ongoing_val,
	CauseRadioNetworkLayer_not_supported_5QI_value_val,
	CauseRadioNetworkLayer_tXnDCoverall_expiry_val,
	CauseRadioNetworkLayer_tXnDCprep_expiry_val,
	CauseRadioNetworkLayer_action_desirable_for_radio_reasons_val,
	CauseRadioNetworkLayer_reduce_load_val,
	CauseRadioNetworkLayer_resource_optimisation_val,
	CauseRadioNetworkLayer_time_critical_action_val,
	CauseRadioNetworkLayer_target_not_allowed_val,
	CauseRadioNetworkLayer_no_radio_resources_available_val,
	CauseRadioNetworkLayer_invalid_QoS_combination_val,
	CauseRadioNetworkLayer_encryption_algorithms_not_supported_val,
	CauseRadioNetworkLayer_procedure_cancelled_val,
	CauseRadioNetworkLayer_rRM_purpose_val,
	CauseRadioNetworkLayer_improve_user_bit_rate_val,
	CauseRadioNetworkLayer_user_inactivity_val,
	CauseRadioNetworkLayer_radio_connection_with_UE_lost_val,
	CauseRadioNetworkLayer_failure_in_the_radio_interface_procedure_val,
	CauseRadioNetworkLayer_bearer_option_not_supported_val,
	CauseRadioNetworkLayer_up_integrity_protection_not_possible_val,
	CauseRadioNetworkLayer_up_confidentiality_protection_not_possible_val,
	CauseRadioNetworkLayer_resources_not_available_for_the_slice_s_val,
	CauseRadioNetworkLayer_ue_max_IP_data_rate_reason_val,
	CauseRadioNetworkLayer_cP_integrity_protection_failure_val,
	CauseRadioNetworkLayer_uP_integrity_protection_failure_val,
	CauseRadioNetworkLayer_slice_not_supported_by_NG_RAN_val,
	CauseRadioNetworkLayer_mN_Mobility_val,
	CauseRadioNetworkLayer_sN_Mobility_val,
	CauseRadioNetworkLayer_count_reaches_max_value_val,
	CauseRadioNetworkLayer_unknown_old_NG_RAN_node_UE_XnAP_ID_val,
	CauseRadioNetworkLayer_pDCP_Overload_val,
	CauseRadioNetworkLayer_drb_id_not_available_val,
	CauseRadioNetworkLayer_unspecified_val,
	CauseRadioNetworkLayer_ue_context_id_not_known_val_ext,
	CauseRadioNetworkLayer_non_relocation_of_context_val_ext,
	CauseRadioNetworkLayer_cho_cpc_resources_tobechanged_val_ext,
	CauseRadioNetworkLayer_rSN_not_available_for_the_UP_val_ext,
	CauseRadioNetworkLayer_npn_access_denied_val_ext,
	CauseRadioNetworkLayer_report_characteristics_empty_val_ext,
	CauseRadioNetworkLayer_existing_measurement_ID_val_ext,
	CauseRadioNetworkLayer_measurement_temporarily_not_available_val_ext,
	CauseRadioNetworkLayer_measurement_not_supported_for_the_object_val_ext,
	CauseRadioNetworkLayer_ue_power_saving_val_ext,
	CauseRadioNetworkLayer_not_existing_NG_RAN_node2_Measurement_ID_val_ext,
	CauseRadioNetworkLayer_insufficient_ue_capabilities_val_ext,
	CauseRadioNetworkLayer_normal_release_val_ext,
	CauseRadioNetworkLayer_value_out_of_allowed_range_val_ext,
	CauseRadioNetworkLayer_scg_activation_deactivation_failure_val_ext,
	CauseRadioNetworkLayer_scg_deactivation_failure_due_to_data_transmission_val_ext,
	CauseRadioNetworkLayer_ssb_not_available_val_ext,
	CauseRadioNetworkLayer_lTM_triggered_val_ext,
	CauseRadioNetworkLayer_no_Backhaul_Resource_val_ext,
	CauseRadioNetworkLayer_mIAB_node_not_authorized_val_ext,
	CauseRadioNetworkLayer_iAB_not_authorized_val_ext
} SI_XNAP_DT_CauseRadioNetworkLayer2;


// L:2588
typedef struct __si_xnap_dt_CauseRadioNetworkLayer_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CauseRadioNetworkLayer_EnumProxy;


// CauseTransportLayer
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CauseTransportLayer
{
	__si_xnap__CauseTransportLayer_transport_resource_unavailable_val,
	__si_xnap__CauseTransportLayer_unspecified_val
} SI_XNAP_DT_CauseTransportLayer;


// L:2561
typedef enum __si_xnap_dt_CauseTransportLayer2
{
	CauseTransportLayer_transport_resource_unavailable_val,
	CauseTransportLayer_unspecified_val
} SI_XNAP_DT_CauseTransportLayer2;


// L:2588
typedef struct __si_xnap_dt_CauseTransportLayer_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CauseTransportLayer_EnumProxy;


// CauseProtocol
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CauseProtocol
{
	__si_xnap__CauseProtocol_transfer_syntax_error_val,
	__si_xnap__CauseProtocol_abstract_syntax_error_reject_val,
	__si_xnap__CauseProtocol_abstract_syntax_error_ignore_and_notify_val,
	__si_xnap__CauseProtocol_message_not_compatible_with_receiver_state_val,
	__si_xnap__CauseProtocol_semantic_error_val,
	__si_xnap__CauseProtocol_abstract_syntax_error_falsely_constructed_message_val,
	__si_xnap__CauseProtocol_unspecified_val
} SI_XNAP_DT_CauseProtocol;


// L:2561
typedef enum __si_xnap_dt_CauseProtocol2
{
	CauseProtocol_transfer_syntax_error_val,
	CauseProtocol_abstract_syntax_error_reject_val,
	CauseProtocol_abstract_syntax_error_ignore_and_notify_val,
	CauseProtocol_message_not_compatible_with_receiver_state_val,
	CauseProtocol_semantic_error_val,
	CauseProtocol_abstract_syntax_error_falsely_constructed_message_val,
	CauseProtocol_unspecified_val
} SI_XNAP_DT_CauseProtocol2;


// L:2588
typedef struct __si_xnap_dt_CauseProtocol_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CauseProtocol_EnumProxy;


// CauseMisc
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CauseMisc
{
	__si_xnap__CauseMisc_control_processing_overload_val,
	__si_xnap__CauseMisc_hardware_failure_val,
	__si_xnap__CauseMisc_o_and_M_intervention_val,
	__si_xnap__CauseMisc_not_enough_user_plane_processing_resources_val,
	__si_xnap__CauseMisc_unspecified_val
} SI_XNAP_DT_CauseMisc;


// L:2561
typedef enum __si_xnap_dt_CauseMisc2
{
	CauseMisc_control_processing_overload_val,
	CauseMisc_hardware_failure_val,
	CauseMisc_o_and_M_intervention_val,
	CauseMisc_not_enough_user_plane_processing_resources_val,
	CauseMisc_unspecified_val
} SI_XNAP_DT_CauseMisc2;


// L:2588
typedef struct __si_xnap_dt_CauseMisc_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CauseMisc_EnumProxy;


// Cause
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_Cause
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t radioNetwork;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t transport;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t protocol;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t misc;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_Cause_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_Cause;


// CellAssistanceInfoNR_limitedNR_List
//SEQUENCE OF NR-CGI, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CellAssistanceInfoNR_limitedNR_List
{
	SI_LinkedList * NR_CGI;
} SI_XNAP_DT_CellAssistanceInfoNR_limitedNR_List;


// CellAssistanceInfoNR_full-List
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CellAssistanceInfoNR_full_List
{
	__si_xnap__CellAssistanceInfoNR_full_List_all_served_cells_NR_val
} SI_XNAP_DT_CellAssistanceInfoNR_full_List;


// L:2561
typedef enum __si_xnap_dt_CellAssistanceInfoNR_full_List2
{
	CellAssistanceInfoNR_full_List_all_served_cells_NR_val
} SI_XNAP_DT_CellAssistanceInfoNR_full_List2;


// L:2588
typedef struct __si_xnap_dt_CellAssistanceInfoNR_full_List_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CellAssistanceInfoNR_full_List_EnumProxy;


// CellAssistanceInfo-NR
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_CellAssistanceInfo_NR
{
	union 
	{
		// ParserName = SEQUENCE_OF - NonEP false;
		SI_XNAP_DT_CellAssistanceInfoNR_limitedNR_List * limitedNR_List;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t full_List;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_CellAssistanceInfo_NR_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_CellAssistanceInfo_NR;


// MaximumCellListSize
// INTEGER,INTEGER(1..16384,...),MIN=1,MAX=16384  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_MaximumCellListSize
{
	unsigned long long int data;
} SI_XNAP_DT_MaximumCellListSize;

// CellAndCapacityAssistanceInfo-NR
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CellAndCapacityAssistanceInfo_NR
{
	unsigned long long int maximumCellListSize;
	int isPresent_maximumCellListSize;

	SI_XNAP_DT_CellAssistanceInfo_NR * cellAssistanceInfo_NR;
	int isPresent_cellAssistanceInfo_NR;

} SI_XNAP_DT_CellAndCapacityAssistanceInfo_NR;


// CellAssistanceInfoEUTRA_limitedEUTRA_List
//SEQUENCE OF E-UTRA-CGI, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CellAssistanceInfoEUTRA_limitedEUTRA_List
{
	SI_LinkedList * E_UTRA_CGI;
} SI_XNAP_DT_CellAssistanceInfoEUTRA_limitedEUTRA_List;


// CellAssistanceInfoEUTRA_full-List
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CellAssistanceInfoEUTRA_full_List
{
	__si_xnap__CellAssistanceInfoEUTRA_full_List_all_served_cells_E_UTRA_val
} SI_XNAP_DT_CellAssistanceInfoEUTRA_full_List;


// L:2561
typedef enum __si_xnap_dt_CellAssistanceInfoEUTRA_full_List2
{
	CellAssistanceInfoEUTRA_full_List_all_served_cells_E_UTRA_val
} SI_XNAP_DT_CellAssistanceInfoEUTRA_full_List2;


// L:2588
typedef struct __si_xnap_dt_CellAssistanceInfoEUTRA_full_List_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CellAssistanceInfoEUTRA_full_List_EnumProxy;


// CellAssistanceInfo-EUTRA
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_CellAssistanceInfo_EUTRA
{
	union 
	{
		// ParserName = SEQUENCE_OF - NonEP false;
		SI_XNAP_DT_CellAssistanceInfoEUTRA_limitedEUTRA_List * limitedEUTRA_List;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t full_List;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_CellAssistanceInfo_EUTRA_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_CellAssistanceInfo_EUTRA;


// CellAndCapacityAssistanceInfo-EUTRA
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CellAndCapacityAssistanceInfo_EUTRA
{
	unsigned long long int maximumCellListSize;
	int isPresent_maximumCellListSize;

	SI_XNAP_DT_CellAssistanceInfo_EUTRA * cellAssistanceInfo_EUTRA;
	int isPresent_cellAssistanceInfo_EUTRA;

} SI_XNAP_DT_CellAndCapacityAssistanceInfo_EUTRA;


// CellCapacityClassValue
// INTEGER,INTEGER(1..100,...),MIN=1,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_CellCapacityClassValue
{
	unsigned long long int data;
} SI_XNAP_DT_CellCapacityClassValue;

// CellDeploymentStatusIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CellDeploymentStatusIndicator
{
	__si_xnap__CellDeploymentStatusIndicator_pre_change_notification_val
} SI_XNAP_DT_CellDeploymentStatusIndicator;


// L:2561
typedef enum __si_xnap_dt_CellDeploymentStatusIndicator2
{
	CellDeploymentStatusIndicator_pre_change_notification_val
} SI_XNAP_DT_CellDeploymentStatusIndicator2;


// L:2588
typedef struct __si_xnap_dt_CellDeploymentStatusIndicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CellDeploymentStatusIndicator_EnumProxy;


// CellGroupID
// INTEGER,INTEGER(0..maxnoofSCellGroups),MIN=0,MAX=NaN  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_CellGroupID
{
	unsigned long long int data;
} SI_XNAP_DT_CellGroupID;

// CellMeasurementResult
//SEQUENCE OF CellMeasurementResult-Item, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CellMeasurementResult
{
	SI_LinkedList * CellMeasurementResult_Item;
} SI_XNAP_DT_CellMeasurementResult;


// NG-RAN-Cell-Identity
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_NG_RAN_Cell_Identity
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_NR_Cell_Identity * nr;

		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_E_UTRA_Cell_Identity * e_utra;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_NG_RAN_Cell_Identity_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_NG_RAN_Cell_Identity;


// GlobalNG-RANCell-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_GlobalNG_RANCell_ID
{
	SI_XNAP_DT_PLMN_Identity * plmn_id;

	SI_XNAP_DT_NG_RAN_Cell_Identity * ng_RAN_Cell_id;

} SI_XNAP_DT_GlobalNG_RANCell_ID;


// DL-GBR-PRB-usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_DL_GBR_PRB_usage
{
	unsigned long long int data;
} SI_XNAP_DT_DL_GBR_PRB_usage;

// UL-GBR-PRB-usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_UL_GBR_PRB_usage
{
	unsigned long long int data;
} SI_XNAP_DT_UL_GBR_PRB_usage;

// DL-non-GBR-PRB-usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_DL_non_GBR_PRB_usage
{
	unsigned long long int data;
} SI_XNAP_DT_DL_non_GBR_PRB_usage;

// UL-non-GBR-PRB-usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_UL_non_GBR_PRB_usage
{
	unsigned long long int data;
} SI_XNAP_DT_UL_non_GBR_PRB_usage;

// DL-Total-PRB-usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_DL_Total_PRB_usage
{
	unsigned long long int data;
} SI_XNAP_DT_DL_Total_PRB_usage;

// UL-Total-PRB-usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_UL_Total_PRB_usage
{
	unsigned long long int data;
} SI_XNAP_DT_UL_Total_PRB_usage;

// NG-eNB-RadioResourceStatus
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NG_eNB_RadioResourceStatus
{
	unsigned long long int dL_GBR_PRB_usage;

	unsigned long long int uL_GBR_PRB_usage;

	unsigned long long int dL_non_GBR_PRB_usage;

	unsigned long long int uL_non_GBR_PRB_usage;

	unsigned long long int dL_Total_PRB_usage;

	unsigned long long int uL_Total_PRB_usage;

} SI_XNAP_DT_NG_eNB_RadioResourceStatus;


// SSBAreaRadioResourceStatus-List
//SEQUENCE OF SSBAreaRadioResourceStatus-List-Item, MIN=1, MAX=maxnoofSSBAreas  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SSBAreaRadioResourceStatus_List
{
	SI_LinkedList * SSBAreaRadioResourceStatus_List_Item;
} SI_XNAP_DT_SSBAreaRadioResourceStatus_List;


// GNB-RadioResourceStatus
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_GNB_RadioResourceStatus
{
	SI_XNAP_DT_SSBAreaRadioResourceStatus_List * ssbAreaRadioResourceStatus_List;

} SI_XNAP_DT_GNB_RadioResourceStatus;


// RadioResourceStatus
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_RadioResourceStatus
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_NG_eNB_RadioResourceStatus * ng_eNB_RadioResourceStatus;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_GNB_RadioResourceStatus * gNB_RadioResourceStatus;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_RadioResourceStatus_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_RadioResourceStatus;


// OfferedCapacity
// INTEGER,INTEGER(1.. 16777216,...),MIN=1,MAX=16777216  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_OfferedCapacity
{
	unsigned long long int data;
} SI_XNAP_DT_OfferedCapacity;

// TNLCapacityIndicator
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TNLCapacityIndicator
{
	unsigned long long int dLTNLOfferedCapacity;

	unsigned long long int dLTNLAvailableCapacity;

	unsigned long long int uLTNLOfferedCapacity;

	unsigned long long int uLTNLAvailableCapacity;

} SI_XNAP_DT_TNLCapacityIndicator;


// CompositeAvailableCapacity
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CompositeAvailableCapacity
{
	unsigned long long int cellCapacityClassValue;
	int isPresent_cellCapacityClassValue;

	SI_XNAP_DT_CapacityValueInfo * capacityValueInfo;

} SI_XNAP_DT_CompositeAvailableCapacity;


// CompositeAvailableCapacityGroup
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CompositeAvailableCapacityGroup
{
	SI_XNAP_DT_CompositeAvailableCapacity * compositeAvailableCapacityDownlink;

	SI_XNAP_DT_CompositeAvailableCapacity * compositeAvailableCapacityUplink;

} SI_XNAP_DT_CompositeAvailableCapacityGroup;


// SliceAvailableCapacity
//SEQUENCE OF SliceAvailableCapacity-Item, MIN=1, MAX=maxnoofBPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SliceAvailableCapacity
{
	SI_LinkedList * SliceAvailableCapacity_Item;
} SI_XNAP_DT_SliceAvailableCapacity;


// NumberofActiveUEs
// INTEGER,INTEGER(0..16777215,...),MIN=0,MAX=16777215  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_NumberofActiveUEs
{
	unsigned long long int data;
} SI_XNAP_DT_NumberofActiveUEs;

// NoofRRCConnections
// INTEGER,INTEGER(1..65536,...),MIN=1,MAX=65536  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_NoofRRCConnections
{
	unsigned long long int data;
} SI_XNAP_DT_NoofRRCConnections;

// RRCConnections
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RRCConnections
{
	unsigned long long int noofRRCConnections;

	unsigned long long int availableRRCConnectionCapacityValue;

} SI_XNAP_DT_RRCConnections;


// CellMeasurementResult-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CellMeasurementResult_Item
{
	SI_XNAP_DT_GlobalNG_RANCell_ID * cell_ID;

	SI_XNAP_DT_RadioResourceStatus * radioResourceStatus;
	int isPresent_radioResourceStatus;

	SI_XNAP_DT_TNLCapacityIndicator * tNLCapacityIndicator;
	int isPresent_tNLCapacityIndicator;

	SI_XNAP_DT_CompositeAvailableCapacityGroup * compositeAvailableCapacityGroup;
	int isPresent_compositeAvailableCapacityGroup;

	SI_XNAP_DT_SliceAvailableCapacity * sliceAvailableCapacity;
	int isPresent_sliceAvailableCapacity;

	unsigned long long int numberofActiveUEs;
	int isPresent_numberofActiveUEs;

	SI_XNAP_DT_RRCConnections * rRCConnections;
	int isPresent_rRCConnections;

} SI_XNAP_DT_CellMeasurementResult_Item;


// ReplacingCells
//SEQUENCE OF ReplacingCells-Item, MIN=0, MAX= maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ReplacingCells
{
	SI_LinkedList * ReplacingCells_Item;
} SI_XNAP_DT_ReplacingCells;


// CellReplacingInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CellReplacingInfo
{
	SI_XNAP_DT_ReplacingCells * replacingCells;

} SI_XNAP_DT_CellReplacingInfo;


// CellToReport
//SEQUENCE OF CellToReport-Item, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CellToReport
{
	SI_LinkedList * CellToReport_Item;
} SI_XNAP_DT_CellToReport;


// SSBToReport-List
//SEQUENCE OF SSBToReport-List-Item, MIN=1, MAX=maxnoofSSBAreas  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SSBToReport_List
{
	SI_LinkedList * SSBToReport_List_Item;
} SI_XNAP_DT_SSBToReport_List;


// SliceToReport-List
//SEQUENCE OF SliceToReport-List-Item, MIN=1, MAX=maxnoofBPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SliceToReport_List
{
	SI_LinkedList * SliceToReport_List_Item;
} SI_XNAP_DT_SliceToReport_List;


// CellToReport-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CellToReport_Item
{
	SI_XNAP_DT_GlobalNG_RANCell_ID * cell_ID;

	SI_XNAP_DT_SSBToReport_List * sSBToReport_List;
	int isPresent_sSBToReport_List;

	SI_XNAP_DT_SliceToReport_List * sliceToReport_List;
	int isPresent_sliceToReport_List;

} SI_XNAP_DT_CellToReport_Item;


// CellToReportForDataCollection-List
//SEQUENCE OF CellToReportForDataCollection-Item, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CellToReportForDataCollection_List
{
	SI_LinkedList * CellToReportForDataCollection_Item;
} SI_XNAP_DT_CellToReportForDataCollection_List;


// CellToReportForDataCollection-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CellToReportForDataCollection_Item
{
	SI_XNAP_DT_GlobalNG_RANCell_ID * cell_ID;

} SI_XNAP_DT_CellToReportForDataCollection_Item;


// CellBasedUETrajectoryPrediction
//SEQUENCE OF PredictedUETrajectory-Item, MIN=1, MAX=maxnoofCellsTrajectoryPredict  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CellBasedUETrajectoryPrediction
{
	SI_LinkedList * PredictedUETrajectory_Item;
} SI_XNAP_DT_CellBasedUETrajectoryPrediction;


// CellMeasurementInitiationResult-List
//SEQUENCE OF CellMeasurementInitiationResult-Item, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CellMeasurementInitiationResult_List
{
	SI_LinkedList * CellMeasurementInitiationResult_Item;
} SI_XNAP_DT_CellMeasurementInitiationResult_List;


// CellMeasurementFailureCause-List
//SEQUENCE OF CellMeasurementFailureCause-Item, MIN=1, MAX=maxFailedCellMeasObjects  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CellMeasurementFailureCause_List
{
	SI_LinkedList * CellMeasurementFailureCause_Item;
} SI_XNAP_DT_CellMeasurementFailureCause_List;


// CellMeasurementInitiationResult-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CellMeasurementInitiationResult_Item
{
	SI_XNAP_DT_GlobalNG_RANCell_ID * cellID;

	SI_XNAP_DT_CellMeasurementFailureCause_List * cellMeasurementFailureCause_List;
	int isPresent_cellMeasurementFailureCause_List;

} SI_XNAP_DT_CellMeasurementInitiationResult_Item;


// CellMeasurementResultForDataCollection-List
//SEQUENCE OF CellInfoResultForDataCollection-Item, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CellMeasurementResultForDataCollection_List
{
	SI_LinkedList * CellInfoResultForDataCollection_Item;
} SI_XNAP_DT_CellMeasurementResultForDataCollection_List;


// CellInfoResultForDataCollection-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CellInfoResultForDataCollection_Item
{
	SI_XNAP_DT_GlobalNG_RANCell_ID * cellID;

	SI_XNAP_DT_RadioResourceStatus * predictedRadioResourceStatus;
	int isPresent_predictedRadioResourceStatus;

	unsigned long long int predictedNumberofActiveUEs;
	int isPresent_predictedNumberofActiveUEs;

	SI_XNAP_DT_RRCConnections * predictedRRCConnections;
	int isPresent_predictedRRCConnections;

} SI_XNAP_DT_CellInfoResultForDataCollection_Item;


// Cell-Type-Choice
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_Cell_Type_Choice
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_E_UTRA_Cell_Identity * ng_ran_e_utra;

		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_NR_Cell_Identity * ng_ran_nr;

		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_E_UTRA_Cell_Identity * e_utran;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_Cell_Type_Choice_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_Cell_Type_Choice;


// CellMeasurementFailureCauseItem_cellmeasurementFailedReportCharacteristics
// BITSTRING,BIT STRING(SIZE(32))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_CellMeasurementFailureCauseItem_cellmeasurementFailedReportCharacteristics
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_CellMeasurementFailureCauseItem_cellmeasurementFailedReportCharacteristics;

// CellMeasurementFailureCause-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CellMeasurementFailureCause_Item
{
	SI_XNAP_DT_CellMeasurementFailureCauseItem_cellmeasurementFailedReportCharacteristics * cellmeasurementFailedReportCharacteristics;

	SI_XNAP_DT_Cause * cause;

} SI_XNAP_DT_CellMeasurementFailureCause_Item;


// CHOCandidateCell-List
//SEQUENCE OF CHOCandidateCell-Item, MIN=1, MAX=maxnoofCellsinCHO  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CHOCandidateCell_List
{
	SI_LinkedList * CHOCandidateCell_Item;
} SI_XNAP_DT_CHOCandidateCell_List;


// CHOConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CHOConfiguration
{
	SI_XNAP_DT_CHOCandidateCell_List * choCandidateCell_List;

} SI_XNAP_DT_CHOConfiguration;


// CHOExecutionCondition-List
//SEQUENCE OF CHOExecutionCondition-Item, MIN=1, MAX=maxnoofCHOexecutioncond  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CHOExecutionCondition_List
{
	SI_LinkedList * CHOExecutionCondition_Item;
} SI_XNAP_DT_CHOExecutionCondition_List;


// CHOCandidateCell-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CHOCandidateCell_Item
{
	SI_XNAP_DT_GlobalNG_RANCell_ID * choCandidateCellID;

	SI_XNAP_DT_CHOExecutionCondition_List * choExecutionCondition_List;

} SI_XNAP_DT_CHOCandidateCell_Item;


// MeasObjectContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_MeasObjectContainer
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_MeasObjectContainer;

// ReportConfigContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_ReportConfigContainer
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_ReportConfigContainer;

// CHOExecutionCondition-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CHOExecutionCondition_Item
{
	SI_XNAP_DT_MeasObjectContainer * measObjectContainer;

	SI_XNAP_DT_ReportConfigContainer * reportConfigContainer;

} SI_XNAP_DT_CHOExecutionCondition_Item;


// ClockQualityAcceptanceCriteria_synchronisationState
// BITSTRING,BIT STRING(SIZE(8,...))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_ClockQualityAcceptanceCriteria_synchronisationState
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_ClockQualityAcceptanceCriteria_synchronisationState;

// ClockQualityAcceptanceCriteria_traceabletoUTC
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ClockQualityAcceptanceCriteria_traceabletoUTC
{
	__si_xnap__ClockQualityAcceptanceCriteria_traceabletoUTC_true_val
} SI_XNAP_DT_ClockQualityAcceptanceCriteria_traceabletoUTC;


// L:2561
typedef enum __si_xnap_dt_ClockQualityAcceptanceCriteria_traceabletoUTC2
{
	ClockQualityAcceptanceCriteria_traceabletoUTC_true_val
} SI_XNAP_DT_ClockQualityAcceptanceCriteria_traceabletoUTC2;


// L:2588
typedef struct __si_xnap_dt_ClockQualityAcceptanceCriteria_traceabletoUTC_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ClockQualityAcceptanceCriteria_traceabletoUTC_EnumProxy;


// ClockQualityAcceptanceCriteria_traceabletoGNSS
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ClockQualityAcceptanceCriteria_traceabletoGNSS
{
	__si_xnap__ClockQualityAcceptanceCriteria_traceabletoGNSS_true_val
} SI_XNAP_DT_ClockQualityAcceptanceCriteria_traceabletoGNSS;


// L:2561
typedef enum __si_xnap_dt_ClockQualityAcceptanceCriteria_traceabletoGNSS2
{
	ClockQualityAcceptanceCriteria_traceabletoGNSS_true_val
} SI_XNAP_DT_ClockQualityAcceptanceCriteria_traceabletoGNSS2;


// L:2588
typedef struct __si_xnap_dt_ClockQualityAcceptanceCriteria_traceabletoGNSS_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ClockQualityAcceptanceCriteria_traceabletoGNSS_EnumProxy;


// ClockQualityAcceptanceCriteria_clockFrequencyStability
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_ClockQualityAcceptanceCriteria_clockFrequencyStability
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_ClockQualityAcceptanceCriteria_clockFrequencyStability;

// ClockQualityAcceptanceCriteria_clockAccuracy
// INTEGER,INTEGER(1..40000000,...),MIN=1,MAX=40000000  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_ClockQualityAcceptanceCriteria_clockAccuracy
{
	unsigned long long int data;
} SI_XNAP_DT_ClockQualityAcceptanceCriteria_clockAccuracy;

// ClockQualityAcceptanceCriteria_parentTimeSource
// BITSTRING,BIT STRING(SIZE(16,...))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_ClockQualityAcceptanceCriteria_parentTimeSource
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_ClockQualityAcceptanceCriteria_parentTimeSource;

// ClockQualityAcceptanceCriteria
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ClockQualityAcceptanceCriteria
{
	SI_XNAP_DT_ClockQualityAcceptanceCriteria_synchronisationState * synchronisationState;
	int isPresent_synchronisationState;

	uint8_t selected_etraceabletoUTC;
	int extSelected_etraceabletoUTC;
	int isPresent_traceabletoUTC;

	uint8_t selected_etraceabletoGNSS;
	int extSelected_etraceabletoGNSS;
	int isPresent_traceabletoGNSS;

	SI_XNAP_DT_ClockQualityAcceptanceCriteria_clockFrequencyStability * clockFrequencyStability;
	int isPresent_clockFrequencyStability;

	unsigned long long int clockAccuracy;
	int isPresent_clockAccuracy;

	SI_XNAP_DT_ClockQualityAcceptanceCriteria_parentTimeSource * parentTimeSource;
	int isPresent_parentTimeSource;

} SI_XNAP_DT_ClockQualityAcceptanceCriteria;


// ClockQualityDetailLevel
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_ClockQualityDetailLevel
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int clockQualityMetrics;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_ClockQualityAcceptanceCriteria * acceptanceIndication;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_ClockQualityDetailLevel_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_ClockQualityDetailLevel;


// ClockQualityReportingControlInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ClockQualityReportingControlInfo
{
	SI_XNAP_DT_ClockQualityDetailLevel * clockQualityDetailLevel;

} SI_XNAP_DT_ClockQualityReportingControlInfo;


// CapabilityForBATAdaptation
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CapabilityForBATAdaptation
{
	__si_xnap__CapabilityForBATAdaptation_true_val
} SI_XNAP_DT_CapabilityForBATAdaptation;


// L:2561
typedef enum __si_xnap_dt_CapabilityForBATAdaptation2
{
	CapabilityForBATAdaptation_true_val
} SI_XNAP_DT_CapabilityForBATAdaptation2;


// L:2588
typedef struct __si_xnap_dt_CapabilityForBATAdaptation_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CapabilityForBATAdaptation_EnumProxy;


// ControlPlaneTrafficType
// INTEGER,INTEGER(1..3,...),MIN=1,MAX=3  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_ControlPlaneTrafficType
{
	unsigned long long int data;
} SI_XNAP_DT_ControlPlaneTrafficType;

// CHO-MRDC-EarlyDataForwarding
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CHO_MRDC_EarlyDataForwarding
{
	__si_xnap__CHO_MRDC_EarlyDataForwarding_stop_val
} SI_XNAP_DT_CHO_MRDC_EarlyDataForwarding;


// L:2561
typedef enum __si_xnap_dt_CHO_MRDC_EarlyDataForwarding2
{
	CHO_MRDC_EarlyDataForwarding_stop_val
} SI_XNAP_DT_CHO_MRDC_EarlyDataForwarding2;


// L:2588
typedef struct __si_xnap_dt_CHO_MRDC_EarlyDataForwarding_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CHO_MRDC_EarlyDataForwarding_EnumProxy;


// CHO-MRDC-Indicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CHO_MRDC_Indicator
{
	__si_xnap__CHO_MRDC_Indicator_true_val,
	__si_xnap__CHO_MRDC_Indicator_coordination_only_val_ext
} SI_XNAP_DT_CHO_MRDC_Indicator;


// L:2561
typedef enum __si_xnap_dt_CHO_MRDC_Indicator2
{
	CHO_MRDC_Indicator_true_val,
	CHO_MRDC_Indicator_coordination_only_val_ext
} SI_XNAP_DT_CHO_MRDC_Indicator2;


// L:2588
typedef struct __si_xnap_dt_CHO_MRDC_Indicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CHO_MRDC_Indicator_EnumProxy;


// CHOtrigger
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CHOtrigger
{
	__si_xnap__CHOtrigger_cho_initiation_val,
	__si_xnap__CHOtrigger_cho_replace_val
} SI_XNAP_DT_CHOtrigger;


// L:2561
typedef enum __si_xnap_dt_CHOtrigger2
{
	CHOtrigger_cho_initiation_val,
	CHOtrigger_cho_replace_val
} SI_XNAP_DT_CHOtrigger2;


// L:2588
typedef struct __si_xnap_dt_CHOtrigger_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CHOtrigger_EnumProxy;


// NG-RANnodeUEXnAPID
// INTEGER,INTEGER(0.. 4294967295),MIN=0,MAX=4294967295  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_NG_RANnodeUEXnAPID
{
	unsigned long long int data;
} SI_XNAP_DT_NG_RANnodeUEXnAPID;

// CHOinformation-Req
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CHOinformation_Req
{
	uint8_t selected_echo_trigger;
	int extSelected_echo_trigger;

	unsigned long long int targetNG_RANnodeUEXnAPID;
	int isPresent_targetNG_RANnodeUEXnAPID;

} SI_XNAP_DT_CHOinformation_Req;


// CHO-HandoverWindowStart
// INTEGER,INTEGER(0.. 549755813887),MIN=0,MAX=549755813887  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_CHO_HandoverWindowStart
{
	unsigned long long int data;
} SI_XNAP_DT_CHO_HandoverWindowStart;

// CHO-HandoverWindowDuration
// INTEGER,INTEGER(1..6000),MIN=1,MAX=6000  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_CHO_HandoverWindowDuration
{
	unsigned long long int data;
} SI_XNAP_DT_CHO_HandoverWindowDuration;

// CHOTimeBasedInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CHOTimeBasedInformation
{
	unsigned long long int cHO_HOWindowStart;

	unsigned long long int cHO_HOWindowDuration;

} SI_XNAP_DT_CHOTimeBasedInformation;


// NR-CGI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NR_CGI
{
	SI_XNAP_DT_PLMN_Identity * plmn_id;

	SI_XNAP_DT_NR_Cell_Identity * nr_CI;

} SI_XNAP_DT_NR_CGI;


// E-UTRA-CGI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_E_UTRA_CGI
{
	SI_XNAP_DT_PLMN_Identity * plmn_id;

	SI_XNAP_DT_E_UTRA_Cell_Identity * e_utra_CI;

} SI_XNAP_DT_E_UTRA_CGI;


// Target-CGI
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_Target_CGI
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_NR_CGI * nr;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_E_UTRA_CGI * e_utra;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_TargetCGI_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_Target_CGI;


// MaxCHOpreparations
// INTEGER,INTEGER(1..8,...),MIN=1,MAX=8  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_MaxCHOpreparations
{
	unsigned long long int data;
} SI_XNAP_DT_MaxCHOpreparations;

// CHOinformation-Ack
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CHOinformation_Ack
{
	SI_XNAP_DT_Target_CGI * requestedTargetCellGlobalID;

	unsigned long long int maxCHOoperations;
	int isPresent_maxCHOoperations;

} SI_XNAP_DT_CHOinformation_Ack;


// GNBIDChoice_gnb-ID
// BITSTRING,BIT STRING(SIZE(22..32))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_GNBIDChoice_gnb_ID
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_GNBIDChoice_gnb_ID;

// GNB-ID-Choice
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_GNB_ID_Choice
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_GNBIDChoice_gnb_ID * gnb_ID;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_GNB_ID_Choice_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_GNB_ID_Choice;


// GlobalgNB-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_GlobalgNB_ID
{
	SI_XNAP_DT_PLMN_Identity * plmn_id;

	SI_XNAP_DT_GNB_ID_Choice * gnb_id;

} SI_XNAP_DT_GlobalgNB_ID;


// ENBIDChoice_enb-ID-macro
// BITSTRING,BIT STRING(SIZE(20))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_ENBIDChoice_enb_ID_macro
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_ENBIDChoice_enb_ID_macro;

// ENBIDChoice_enb-ID-shortmacro
// BITSTRING,BIT STRING(SIZE(18))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_ENBIDChoice_enb_ID_shortmacro
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_ENBIDChoice_enb_ID_shortmacro;

// ENBIDChoice_enb-ID-longmacro
// BITSTRING,BIT STRING(SIZE(21))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_ENBIDChoice_enb_ID_longmacro
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_ENBIDChoice_enb_ID_longmacro;

// ENB-ID-Choice
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_ENB_ID_Choice
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_ENBIDChoice_enb_ID_macro * enb_ID_macro;

		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_ENBIDChoice_enb_ID_shortmacro * enb_ID_shortmacro;

		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_ENBIDChoice_enb_ID_longmacro * enb_ID_longmacro;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_ENB_ID_Choice_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_ENB_ID_Choice;


// GlobalngeNB-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_GlobalngeNB_ID
{
	SI_XNAP_DT_PLMN_Identity * plmn_id;

	SI_XNAP_DT_ENB_ID_Choice * enb_id;

} SI_XNAP_DT_GlobalngeNB_ID;


// GlobalNG-RANNode-ID
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_GlobalNG_RANNode_ID
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_GlobalgNB_ID * gNB;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_GlobalngeNB_ID * ng_eNB;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_GlobalNG_RANNode_ID_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_GlobalNG_RANNode_ID;


// CHO-Probability
// INTEGER,INTEGER(1..100),MIN=1,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_CHO_Probability
{
	unsigned long long int data;
} SI_XNAP_DT_CHO_Probability;

// CHOinformation-AddReq
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CHOinformation_AddReq
{
	SI_XNAP_DT_GlobalNG_RANNode_ID * source_M_NGRAN_node_ID;

	unsigned long long int source_M_NGRAN_node_UE_XnAP_ID;

	unsigned long long int cHO_EstimatedArrivalProbability;
	int isPresent_cHO_EstimatedArrivalProbability;

} SI_XNAP_DT_CHOinformation_AddReq;


// CHOinformation-AddReqAck
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CHOinformation_AddReqAck
{
	SI_XNAP_DT_GlobalNG_RANCell_ID * pCell_ID;
	int isPresent_pCell_ID;

} SI_XNAP_DT_CHOinformation_AddReqAck;


// CHOinformationModReq_conditionalReconfig
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CHOinformationModReq_conditionalReconfig
{
	__si_xnap__CHOinformationModReq_conditionalReconfig_intra_mn_cho_val
} SI_XNAP_DT_CHOinformationModReq_conditionalReconfig;


// L:2561
typedef enum __si_xnap_dt_CHOinformationModReq_conditionalReconfig2
{
	CHOinformationModReq_conditionalReconfig_intra_mn_cho_val
} SI_XNAP_DT_CHOinformationModReq_conditionalReconfig2;


// L:2588
typedef struct __si_xnap_dt_CHOinformationModReq_conditionalReconfig_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CHOinformationModReq_conditionalReconfig_EnumProxy;


// CHOinformation-ModReq
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CHOinformation_ModReq
{
	uint8_t selected_econditionalReconfig;
	int extSelected_econditionalReconfig;

	unsigned long long int cHO_EstimatedArrivalProbability;
	int isPresent_cHO_EstimatedArrivalProbability;

} SI_XNAP_DT_CHOinformation_ModReq;


// CHO-Maxnoof-CondReconfig
// INTEGER,INTEGER(1..8,...),MIN=1,MAX=8  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_CHO_Maxnoof_CondReconfig
{
	unsigned long long int data;
} SI_XNAP_DT_CHO_Maxnoof_CondReconfig;

// CHO-CPAC-Config-Indicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CHO_CPAC_Config_Indicator
{
	__si_xnap__CHO_CPAC_Config_Indicator_cho_only_not_prepared_val
} SI_XNAP_DT_CHO_CPAC_Config_Indicator;


// L:2561
typedef enum __si_xnap_dt_CHO_CPAC_Config_Indicator2
{
	CHO_CPAC_Config_Indicator_cho_only_not_prepared_val
} SI_XNAP_DT_CHO_CPAC_Config_Indicator2;


// L:2588
typedef struct __si_xnap_dt_CHO_CPAC_Config_Indicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CHO_CPAC_Config_Indicator_EnumProxy;


// CHO-target-SN-node-list
//SEQUENCE OF CHO-target-SN-node-Item, MIN=1, MAX= maxnoofTargetSNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CHO_target_SN_node_list
{
	SI_LinkedList * CHO_target_SN_node_Item;
} SI_XNAP_DT_CHO_target_SN_node_list;


// CHO-CPAC-Information
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CHO_CPAC_Information
{
	uint8_t selected_ecHO_CPAC_config_indicator;
	int extSelected_ecHO_CPAC_config_indicator;
	int isPresent_cHO_CPAC_config_indicator;

	SI_XNAP_DT_CHO_target_SN_node_list * cHO_target_SN_node_list;

} SI_XNAP_DT_CHO_CPAC_Information;


// PDUSessionResourcesAdmitted-List
//SEQUENCE OF PDUSessionResourcesAdmitted-Item, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSessionResourcesAdmitted_List
{
	SI_LinkedList * PDUSessionResourcesAdmitted_Item;
} SI_XNAP_DT_PDUSessionResourcesAdmitted_List;


// CHO-Candidate-PSCells-list
//SEQUENCE OF CHO-Candidate-PSCells-Item, MIN=1, MAX=maxnoofPSCellCandidates  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CHO_Candidate_PSCells_list
{
	SI_LinkedList * CHO_Candidate_PSCells_Item;
} SI_XNAP_DT_CHO_Candidate_PSCells_list;


// CHO-target-SN-node-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CHO_target_SN_node_Item
{
	SI_XNAP_DT_GlobalNG_RANNode_ID * target_S_NG_RANnodeID;

	SI_XNAP_DT_PDUSessionResourcesAdmitted_List * pduSessionResourcesAdmittedList;

	SI_XNAP_DT_CHO_Candidate_PSCells_list * cho_Candidate_PSCells_list;

} SI_XNAP_DT_CHO_target_SN_node_Item;


// CHOCandidatePSCellsItem_target2source-NG-RANNode-Container
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_CHOCandidatePSCellsItem_target2source_NG_RANNode_Container
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_CHOCandidatePSCellsItem_target2source_NG_RANNode_Container;

// CHO-Candidate-PSCells-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CHO_Candidate_PSCells_Item
{
	SI_XNAP_DT_NR_CGI * pscell_id;

	SI_XNAP_DT_CHOCandidatePSCellsItem_target2source_NG_RANNode_Container * target2source_NG_RANNode_Container;

} SI_XNAP_DT_CHO_Candidate_PSCells_Item;


// CNsubgroupID
// INTEGER,INTEGER(0..7,...),MIN=0,MAX=7  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_CNsubgroupID
{
	unsigned long long int data;
} SI_XNAP_DT_CNsubgroupID;

// CompleteCandidateConfig-Indicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CompleteCandidateConfig_Indicator
{
	__si_xnap__CompleteCandidateConfig_Indicator_complete_candidate_config_val
} SI_XNAP_DT_CompleteCandidateConfig_Indicator;


// L:2561
typedef enum __si_xnap_dt_CompleteCandidateConfig_Indicator2
{
	CompleteCandidateConfig_Indicator_complete_candidate_config_val
} SI_XNAP_DT_CompleteCandidateConfig_Indicator2;


// L:2588
typedef struct __si_xnap_dt_CompleteCandidateConfig_Indicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CompleteCandidateConfig_Indicator_EnumProxy;


// Conditional-Reconfig-List
//SEQUENCE OF Conditional-Reconfig-Item, MIN=1, MAX=maxnoofPSCellCandidates  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_Conditional_Reconfig_List
{
	SI_LinkedList * Conditional_Reconfig_Item;
} SI_XNAP_DT_Conditional_Reconfig_List;


// Conditional-Reconfig-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_Conditional_Reconfig_Item
{
	SI_XNAP_DT_Target_CGI * pCell_ID;

	SI_XNAP_DT_NR_CGI * pSCell_ID;
	int isPresent_pSCell_ID;

} SI_XNAP_DT_Conditional_Reconfig_Item;


// ConfiguredTACIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ConfiguredTACIndication
{
	__si_xnap__ConfiguredTACIndication_true_val
} SI_XNAP_DT_ConfiguredTACIndication;


// L:2561
typedef enum __si_xnap_dt_ConfiguredTACIndication2
{
	ConfiguredTACIndication_true_val
} SI_XNAP_DT_ConfiguredTACIndication2;


// L:2588
typedef struct __si_xnap_dt_ConfiguredTACIndication_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ConfiguredTACIndication_EnumProxy;


// ConnectivitySupport_eNDC-Support
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ConnectivitySupport_eNDC_Support
{
	__si_xnap__ConnectivitySupport_eNDC_Support_supported_val,
	__si_xnap__ConnectivitySupport_eNDC_Support_not_supported_val
} SI_XNAP_DT_ConnectivitySupport_eNDC_Support;


// L:2561
typedef enum __si_xnap_dt_ConnectivitySupport_eNDC_Support2
{
	ConnectivitySupport_eNDC_Support_supported_val,
	ConnectivitySupport_eNDC_Support_not_supported_val
} SI_XNAP_DT_ConnectivitySupport_eNDC_Support2;


// L:2588
typedef struct __si_xnap_dt_ConnectivitySupport_eNDC_Support_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ConnectivitySupport_eNDC_Support_EnumProxy;


// Connectivity-Support
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_Connectivity_Support
{
	uint8_t selected_eeNDC_Support;
	int extSelected_eeNDC_Support;

} SI_XNAP_DT_Connectivity_Support;


// ContainerAppLayerMeasConfig
// OCTETSTRING,OCTET STRING(SIZE(1..8000))
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_ContainerAppLayerMeasConfig
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_ContainerAppLayerMeasConfig;

// COUNTPDCPSN12_pdcp-SN12
// INTEGER,INTEGER(0..4095),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_COUNTPDCPSN12_pdcp_SN12
{
	unsigned long long int data;
} SI_XNAP_DT_COUNTPDCPSN12_pdcp_SN12;

// COUNTPDCPSN12_hfn-PDCP-SN12
// INTEGER,INTEGER(0..1048575),MIN=0,MAX=1048575  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_COUNTPDCPSN12_hfn_PDCP_SN12
{
	unsigned long long int data;
} SI_XNAP_DT_COUNTPDCPSN12_hfn_PDCP_SN12;

// COUNT-PDCP-SN12
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_COUNT_PDCP_SN12
{
	unsigned long long int pdcp_SN12;

	unsigned long long int hfn_PDCP_SN12;

} SI_XNAP_DT_COUNT_PDCP_SN12;


// COUNTPDCPSN18_pdcp-SN18
// INTEGER,INTEGER(0..262143),MIN=0,MAX=262143  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_COUNTPDCPSN18_pdcp_SN18
{
	unsigned long long int data;
} SI_XNAP_DT_COUNTPDCPSN18_pdcp_SN18;

// COUNTPDCPSN18_hfn-PDCP-SN18
// INTEGER,INTEGER(0..16383),MIN=0,MAX=16383  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_COUNTPDCPSN18_hfn_PDCP_SN18
{
	unsigned long long int data;
} SI_XNAP_DT_COUNTPDCPSN18_hfn_PDCP_SN18;

// COUNT-PDCP-SN18
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_COUNT_PDCP_SN18
{
	unsigned long long int pdcp_SN18;

	unsigned long long int hfn_PDCP_SN18;

} SI_XNAP_DT_COUNT_PDCP_SN18;


// CoverageModificationCause
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CoverageModificationCause
{
	__si_xnap__CoverageModificationCause_coverage_val,
	__si_xnap__CoverageModificationCause_cell_edge_capacity_val,
	__si_xnap__CoverageModificationCause_network_energy_saving_val_ext
} SI_XNAP_DT_CoverageModificationCause;


// L:2561
typedef enum __si_xnap_dt_CoverageModificationCause2
{
	CoverageModificationCause_coverage_val,
	CoverageModificationCause_cell_edge_capacity_val,
	CoverageModificationCause_network_energy_saving_val_ext
} SI_XNAP_DT_CoverageModificationCause2;


// L:2588
typedef struct __si_xnap_dt_CoverageModificationCause_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CoverageModificationCause_EnumProxy;


// Coverage-Modification-List
//SEQUENCE OF Coverage-Modification-List-Item, MIN=0, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_Coverage_Modification_List
{
	SI_LinkedList * Coverage_Modification_List_Item;
} SI_XNAP_DT_Coverage_Modification_List;


// CoverageModificationListItem_cellCoverageState
// INTEGER,INTEGER(0..63,...),MIN=0,MAX=63  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_CoverageModificationListItem_cellCoverageState
{
	unsigned long long int data;
} SI_XNAP_DT_CoverageModificationListItem_cellCoverageState;

// GlobalCell-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_GlobalCell_ID
{
	SI_XNAP_DT_PLMN_Identity * plmn_id;

	SI_XNAP_DT_Cell_Type_Choice * cell_type;

} SI_XNAP_DT_GlobalCell_ID;


// SSB-Coverage-Modification-List
//SEQUENCE OF SSB-Coverage-Modification-List-Item, MIN=0, MAX=maxnoofSSBAreas  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SSB_Coverage_Modification_List
{
	SI_LinkedList * SSB_Coverage_Modification_List_Item;
} SI_XNAP_DT_SSB_Coverage_Modification_List;


// Coverage-Modification-List-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_Coverage_Modification_List_Item
{
	SI_XNAP_DT_GlobalCell_ID * globalNG_RANCell_ID;

	unsigned long long int cellCoverageState;

	uint8_t selected_ecellDeploymentStatusIndicator;
	int extSelected_ecellDeploymentStatusIndicator;
	int isPresent_cellDeploymentStatusIndicator;

	SI_XNAP_DT_CellReplacingInfo * cellReplacingInfo;
	int isPresent_cellReplacingInfo;

	SI_XNAP_DT_SSB_Coverage_Modification_List * sSB_Coverage_Modification_List;

} SI_XNAP_DT_Coverage_Modification_List_Item;


// CPTransportLayerInformation
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_CPTransportLayerInformation
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_TransportLayerAddress * endpointIPAddress;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_CPTransportLayerInformation_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_CPTransportLayerInformation;


// CPACcandidatePSCells-list
//SEQUENCE OF CPACcandidatePSCells-item, MIN=1, MAX=maxnoofPSCellCandidates  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CPACcandidatePSCells_list
{
	SI_LinkedList * CPACcandidatePSCells_item;
} SI_XNAP_DT_CPACcandidatePSCells_list;


// CPACcandidatePSCells-item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CPACcandidatePSCells_item
{
	SI_XNAP_DT_NR_CGI * pscell_id;

} SI_XNAP_DT_CPACcandidatePSCells_item;


// CPACcandidatePSCells-wotherInfo-list
//SEQUENCE OF CPACcandidatePSCells-wotherInfo-item, MIN=1, MAX=maxnoofPSCellCandidates  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CPACcandidatePSCells_wotherInfo_list
{
	SI_LinkedList * CPACcandidatePSCells_wotherInfo_item;
} SI_XNAP_DT_CPACcandidatePSCells_wotherInfo_list;


// CPACcandidatePSCells-wotherInfo-item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CPACcandidatePSCells_wotherInfo_item
{
	SI_XNAP_DT_NR_CGI * pscell_id;

	uint8_t selected_es_CPAC_CompleteCandidateConfig_Indicator;
	int extSelected_es_CPAC_CompleteCandidateConfig_Indicator;
	int isPresent_s_CPAC_CompleteCandidateConfig_Indicator;

} SI_XNAP_DT_CPACcandidatePSCells_wotherInfo_item;


// CPACCandidateCell-List
//SEQUENCE OF CPACCandidateCell-Item, MIN=1, MAX=maxnoofPSCellsinCPAC  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CPACCandidateCell_List
{
	SI_LinkedList * CPACCandidateCell_Item;
} SI_XNAP_DT_CPACCandidateCell_List;


// CPACConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CPACConfiguration
{
	SI_XNAP_DT_CPACCandidateCell_List * cpacCandidateCell_List;

} SI_XNAP_DT_CPACConfiguration;


// CPACExecutionCondition-List
//SEQUENCE OF CPACExecutionCondition-Item, MIN=1, MAX=maxnoofCPACexecutioncond  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CPACExecutionCondition_List
{
	SI_LinkedList * CPACExecutionCondition_Item;
} SI_XNAP_DT_CPACExecutionCondition_List;


// CPACCandidateCell-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CPACCandidateCell_Item
{
	SI_XNAP_DT_GlobalNG_RANCell_ID * cpacCandidateCellID;

	SI_XNAP_DT_CPACExecutionCondition_List * cpacExecutionCondition_List;

} SI_XNAP_DT_CPACCandidateCell_Item;


// CPACExecutionCondition-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CPACExecutionCondition_Item
{
	SI_XNAP_DT_MeasObjectContainer * measObjectContainer;

	SI_XNAP_DT_ReportConfigContainer * reportConfigContainer;

} SI_XNAP_DT_CPACExecutionCondition_Item;


// CPCindicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CPCindicator
{
	__si_xnap__CPCindicator_cpc_initiation_val,
	__si_xnap__CPCindicator_cpc_modification_val,
	__si_xnap__CPCindicator_cpc_cancellation_val
} SI_XNAP_DT_CPCindicator;


// L:2561
typedef enum __si_xnap_dt_CPCindicator2
{
	CPCindicator_cpc_initiation_val,
	CPCindicator_cpc_modification_val,
	CPCindicator_cpc_cancellation_val
} SI_XNAP_DT_CPCindicator2;


// L:2588
typedef struct __si_xnap_dt_CPCindicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CPCindicator_EnumProxy;


// CPAInformationRequest_max-no-of-pscells
// INTEGER,INTEGER(1..maxnoofPSCellCandidates,...),MIN=1,MAX=NaN  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_CPAInformationRequest_max_no_of_pscells
{
	unsigned long long int data;
} SI_XNAP_DT_CPAInformationRequest_max_no_of_pscells;

// CPAInformationRequest
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CPAInformationRequest
{
	unsigned long long int max_no_of_pscells;

	unsigned long long int cpac_EstimatedArrivalProbability;
	int isPresent_cpac_EstimatedArrivalProbability;

} SI_XNAP_DT_CPAInformationRequest;


// CPAInformationAck
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CPAInformationAck
{
	SI_XNAP_DT_CPACcandidatePSCells_list * candidate_pscells;

} SI_XNAP_DT_CPAInformationAck;


// CPC-target-SN-required-list
//SEQUENCE OF CPC-target-SN-required-list-Item, MIN=1, MAX=maxnoofTargetSNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CPC_target_SN_required_list
{
	SI_LinkedList * CPC_target_SN_required_list_Item;
} SI_XNAP_DT_CPC_target_SN_required_list;


// CPCInformationRequired
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CPCInformationRequired
{
	SI_XNAP_DT_CPC_target_SN_required_list * cpc_target_sn_required_list;

} SI_XNAP_DT_CPCInformationRequired;


// CPCtargetSNrequiredlistItem_max-no-of-pscells
// INTEGER,INTEGER(1..maxnoofPSCellCandidates,...),MIN=1,MAX=NaN  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_CPCtargetSNrequiredlistItem_max_no_of_pscells
{
	unsigned long long int data;
} SI_XNAP_DT_CPCtargetSNrequiredlistItem_max_no_of_pscells;

// CPCtargetSNrequiredlistItem_sN-to-MN-Container
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_CPCtargetSNrequiredlistItem_sN_to_MN_Container
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_CPCtargetSNrequiredlistItem_sN_to_MN_Container;

// CPC-target-SN-required-list-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CPC_target_SN_required_list_Item
{
	SI_XNAP_DT_GlobalNG_RANNode_ID * target_S_NG_RANnodeID;

	uint8_t selected_ecpc_indicator;
	int extSelected_ecpc_indicator;

	unsigned long long int max_no_of_pscells;

	unsigned long long int cpac_EstimatedArrivalProbability;
	int isPresent_cpac_EstimatedArrivalProbability;

	SI_XNAP_DT_CPCtargetSNrequiredlistItem_sN_to_MN_Container * sN_to_MN_Container;

} SI_XNAP_DT_CPC_target_SN_required_list_Item;


// CPC-target-SN-confirm-list
//SEQUENCE OF CPC-target-SN-confirm-list-Item, MIN=1, MAX=maxnoofTargetSNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CPC_target_SN_confirm_list
{
	SI_LinkedList * CPC_target_SN_confirm_list_Item;
} SI_XNAP_DT_CPC_target_SN_confirm_list;


// CPCInformationConfirm
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CPCInformationConfirm
{
	SI_XNAP_DT_CPC_target_SN_confirm_list * cpc_target_sn_confirm_list;

} SI_XNAP_DT_CPCInformationConfirm;


// CPC-target-SN-confirm-list-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CPC_target_SN_confirm_list_Item
{
	SI_XNAP_DT_GlobalNG_RANNode_ID * target_S_NG_RANnodeID;

	SI_XNAP_DT_CPACcandidatePSCells_list * candidate_pscells;

} SI_XNAP_DT_CPC_target_SN_confirm_list_Item;


// CPAInformationModReq_max-no-of-pscells
// INTEGER,INTEGER(1..8,...),MIN=1,MAX=8  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_CPAInformationModReq_max_no_of_pscells
{
	unsigned long long int data;
} SI_XNAP_DT_CPAInformationModReq_max_no_of_pscells;

// CPAInformationModReq
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CPAInformationModReq
{
	unsigned long long int max_no_of_pscells;
	int isPresent_max_no_of_pscells;

	unsigned long long int cpac_EstimatedArrivalProbability;
	int isPresent_cpac_EstimatedArrivalProbability;

} SI_XNAP_DT_CPAInformationModReq;


// CPAInformationModReqAck
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CPAInformationModReqAck
{
	SI_XNAP_DT_CPACcandidatePSCells_list * candidate_pscells;

} SI_XNAP_DT_CPAInformationModReqAck;


// CPC-DataForwarding-Indicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CPC_DataForwarding_Indicator
{
	__si_xnap__CPC_DataForwarding_Indicator_triggered_val,
	__si_xnap__CPC_DataForwarding_Indicator_early_data_transmission_stop_val,
	__si_xnap__CPC_DataForwarding_Indicator_coordination_only_val_ext
} SI_XNAP_DT_CPC_DataForwarding_Indicator;


// L:2561
typedef enum __si_xnap_dt_CPC_DataForwarding_Indicator2
{
	CPC_DataForwarding_Indicator_triggered_val,
	CPC_DataForwarding_Indicator_early_data_transmission_stop_val,
	CPC_DataForwarding_Indicator_coordination_only_val_ext
} SI_XNAP_DT_CPC_DataForwarding_Indicator2;


// L:2588
typedef struct __si_xnap_dt_CPC_DataForwarding_Indicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CPC_DataForwarding_Indicator_EnumProxy;


// CPAC-Preparation-Type
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CPAC_Preparation_Type
{
	__si_xnap__CPAC_Preparation_Type_s_cpac_val
} SI_XNAP_DT_CPAC_Preparation_Type;


// L:2561
typedef enum __si_xnap_dt_CPAC_Preparation_Type2
{
	CPAC_Preparation_Type_s_cpac_val
} SI_XNAP_DT_CPAC_Preparation_Type2;


// L:2588
typedef struct __si_xnap_dt_CPAC_Preparation_Type_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CPAC_Preparation_Type_EnumProxy;


// CPACInformationModRequired
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CPACInformationModRequired
{
	SI_XNAP_DT_CPACcandidatePSCells_list * candidate_pscells;

} SI_XNAP_DT_CPACInformationModRequired;


// CPC-target-SN-mod-list
//SEQUENCE OF CPC-target-SN-mod-item, MIN=1, MAX=maxnoofTargetSNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CPC_target_SN_mod_list
{
	SI_LinkedList * CPC_target_SN_mod_item;
} SI_XNAP_DT_CPC_target_SN_mod_list;


// CPCInformationUpdate
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CPCInformationUpdate
{
	SI_XNAP_DT_CPC_target_SN_mod_list * cpc_target_sn_list;

} SI_XNAP_DT_CPCInformationUpdate;


// CPCInformationUpdatePSCells-list
//SEQUENCE OF CPCInformationUpdatePSCells-item, MIN=1, MAX=maxnoofPSCellCandidates  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CPCInformationUpdatePSCells_list
{
	SI_LinkedList * CPCInformationUpdatePSCells_item;
} SI_XNAP_DT_CPCInformationUpdatePSCells_list;


// CPC-target-SN-mod-item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CPC_target_SN_mod_item
{
	SI_XNAP_DT_GlobalNG_RANNode_ID * target_S_NG_RANnodeID;

	SI_XNAP_DT_CPCInformationUpdatePSCells_list * candidate_pscells;

} SI_XNAP_DT_CPC_target_SN_mod_item;


// CPCInformationUpdatePSCells-item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CPCInformationUpdatePSCells_item
{
	SI_XNAP_DT_NR_CGI * pscell_id;

} SI_XNAP_DT_CPCInformationUpdatePSCells_item;


// CriticalityDiagnostics-IE-List
//SEQUENCE OF CriticalityDiagnostics-IE-List_def_2106595569, MIN=1, MAX=maxNrOfErrors  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CriticalityDiagnostics_IE_List
{
	SI_LinkedList * CriticalityDiagnostics_IE_List_def_2106595569;
} SI_XNAP_DT_CriticalityDiagnostics_IE_List;


// CriticalityDiagnostics
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CriticalityDiagnostics
{
	unsigned long long int procedureCode;
	int isPresent_procedureCode;

	uint8_t selected_etriggeringMessage;
	int extSelected_etriggeringMessage;
	int isPresent_triggeringMessage;

	uint8_t selected_eprocedureCriticality;
	int extSelected_eprocedureCriticality;
	int isPresent_procedureCriticality;

	SI_XNAP_DT_CriticalityDiagnostics_IE_List * iEsCriticalityDiagnostics;
	int isPresent_iEsCriticalityDiagnostics;

} SI_XNAP_DT_CriticalityDiagnostics;


// TypeOfError
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_TypeOfError
{
	__si_xnap__TypeOfError_not_understood_val,
	__si_xnap__TypeOfError_missing_val
} SI_XNAP_DT_TypeOfError;


// L:2561
typedef enum __si_xnap_dt_TypeOfError2
{
	TypeOfError_not_understood_val,
	TypeOfError_missing_val
} SI_XNAP_DT_TypeOfError2;


// L:2588
typedef struct __si_xnap_dt_TypeOfError_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_TypeOfError_EnumProxy;


// CriticalityDiagnostics-IE-List_def_2106595569
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CriticalityDiagnostics_IE_List_def_2106595569
{
	uint8_t selected_eiECriticality;
	int extSelected_eiECriticality;

	unsigned long long int iE_ID;

	uint8_t selected_etypeOfError;
	int extSelected_etypeOfError;

} SI_XNAP_DT_CriticalityDiagnostics_IE_List_def_2106595569;


// C-RNTI
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_C_RNTI
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_C_RNTI;

// CSIRSMTCConfigurationItem_csi-RS-Index
// INTEGER,INTEGER(0..95),MIN=0,MAX=95  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_CSIRSMTCConfigurationItem_csi_RS_Index
{
	unsigned long long int data;
} SI_XNAP_DT_CSIRSMTCConfigurationItem_csi_RS_Index;

// CSIRSMTCConfigurationItem_csi-RS-Status
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CSIRSMTCConfigurationItem_csi_RS_Status
{
	__si_xnap__CSIRSMTCConfigurationItem_csi_RS_Status_activated_val,
	__si_xnap__CSIRSMTCConfigurationItem_csi_RS_Status_deactivated_val
} SI_XNAP_DT_CSIRSMTCConfigurationItem_csi_RS_Status;


// L:2561
typedef enum __si_xnap_dt_CSIRSMTCConfigurationItem_csi_RS_Status2
{
	CSIRSMTCConfigurationItem_csi_RS_Status_activated_val,
	CSIRSMTCConfigurationItem_csi_RS_Status_deactivated_val
} SI_XNAP_DT_CSIRSMTCConfigurationItem_csi_RS_Status2;


// L:2588
typedef struct __si_xnap_dt_CSIRSMTCConfigurationItem_csi_RS_Status_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CSIRSMTCConfigurationItem_csi_RS_Status_EnumProxy;


// CSI-RS-Neighbour-List
//SEQUENCE OF CSI-RS-Neighbour-Item, MIN=1, MAX= maxnoofCSIRSneighbourCells  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CSI_RS_Neighbour_List
{
	SI_LinkedList * CSI_RS_Neighbour_Item;
} SI_XNAP_DT_CSI_RS_Neighbour_List;


// CSI-RS-MTC-Configuration-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CSI_RS_MTC_Configuration_Item
{
	unsigned long long int csi_RS_Index;

	uint8_t selected_ecsi_RS_Status;
	int extSelected_ecsi_RS_Status;

	SI_XNAP_DT_CSI_RS_Neighbour_List * csi_RS_Neighbour_List;
	int isPresent_csi_RS_Neighbour_List;

} SI_XNAP_DT_CSI_RS_MTC_Configuration_Item;


// CSI-RS-MTC-Neighbour-List
//SEQUENCE OF CSI-RS-MTC-Neighbour-Item, MIN=1, MAX= maxnoofCSIRSneighbourCellsInMTC  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CSI_RS_MTC_Neighbour_List
{
	SI_LinkedList * CSI_RS_MTC_Neighbour_Item;
} SI_XNAP_DT_CSI_RS_MTC_Neighbour_List;


// CSI-RS-Neighbour-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CSI_RS_Neighbour_Item
{
	SI_XNAP_DT_NR_CGI * nr_cgi;

	SI_XNAP_DT_CSI_RS_MTC_Neighbour_List * csi_RS_MTC_Neighbour_List;
	int isPresent_csi_RS_MTC_Neighbour_List;

} SI_XNAP_DT_CSI_RS_Neighbour_Item;


// CSIRSMTCNeighbourItem_csi-RS-Index
// INTEGER,INTEGER(0..95),MIN=0,MAX=95  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_CSIRSMTCNeighbourItem_csi_RS_Index
{
	unsigned long long int data;
} SI_XNAP_DT_CSIRSMTCNeighbourItem_csi_RS_Index;

// CSI-RS-MTC-Neighbour-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CSI_RS_MTC_Neighbour_Item
{
	unsigned long long int csi_RS_Index;

} SI_XNAP_DT_CSI_RS_MTC_Neighbour_Item;


// CyclicPrefix-E-UTRA-DL
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CyclicPrefix_E_UTRA_DL
{
	__si_xnap__CyclicPrefix_E_UTRA_DL_normal_val,
	__si_xnap__CyclicPrefix_E_UTRA_DL_extended_val
} SI_XNAP_DT_CyclicPrefix_E_UTRA_DL;


// L:2561
typedef enum __si_xnap_dt_CyclicPrefix_E_UTRA_DL2
{
	CyclicPrefix_E_UTRA_DL_normal_val,
	CyclicPrefix_E_UTRA_DL_extended_val
} SI_XNAP_DT_CyclicPrefix_E_UTRA_DL2;


// L:2588
typedef struct __si_xnap_dt_CyclicPrefix_E_UTRA_DL_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CyclicPrefix_E_UTRA_DL_EnumProxy;


// CyclicPrefix-E-UTRA-UL
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CyclicPrefix_E_UTRA_UL
{
	__si_xnap__CyclicPrefix_E_UTRA_UL_normal_val,
	__si_xnap__CyclicPrefix_E_UTRA_UL_extended_val
} SI_XNAP_DT_CyclicPrefix_E_UTRA_UL;


// L:2561
typedef enum __si_xnap_dt_CyclicPrefix_E_UTRA_UL2
{
	CyclicPrefix_E_UTRA_UL_normal_val,
	CyclicPrefix_E_UTRA_UL_extended_val
} SI_XNAP_DT_CyclicPrefix_E_UTRA_UL2;


// L:2588
typedef struct __si_xnap_dt_CyclicPrefix_E_UTRA_UL_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CyclicPrefix_E_UTRA_UL_EnumProxy;


// CSI-RSTransmissionIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CSI_RSTransmissionIndication
{
	__si_xnap__CSI_RSTransmissionIndication_activated_val,
	__si_xnap__CSI_RSTransmissionIndication_deactivated_val
} SI_XNAP_DT_CSI_RSTransmissionIndication;


// L:2561
typedef enum __si_xnap_dt_CSI_RSTransmissionIndication2
{
	CSI_RSTransmissionIndication_activated_val,
	CSI_RSTransmissionIndication_deactivated_val
} SI_XNAP_DT_CSI_RSTransmissionIndication2;


// L:2588
typedef struct __si_xnap_dt_CSI_RSTransmissionIndication_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CSI_RSTransmissionIndication_EnumProxy;


// CAGListforMDT
//SEQUENCE OF CAGListforMDTItem, MIN=1, MAX= maxnoofCAGforMDT  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CAGListforMDT
{
	SI_LinkedList * CAGListforMDTItem;
} SI_XNAP_DT_CAGListforMDT;


// CAGListforMDTItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CAGListforMDTItem
{
	SI_XNAP_DT_PLMN_Identity * plmnID;

	SI_XNAP_DT_CAG_Identifier * cAGID;

} SI_XNAP_DT_CAGListforMDTItem;


// XnUAddressInfoperPDUSession-List
//SEQUENCE OF XnUAddressInfoperPDUSession-Item, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_XnUAddressInfoperPDUSession_List
{
	SI_LinkedList * XnUAddressInfoperPDUSession_Item;
} SI_XNAP_DT_XnUAddressInfoperPDUSession_List;


// PDUSession-ID
// INTEGER,INTEGER(0..255),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_PDUSession_ID
{
	unsigned long long int data;
} SI_XNAP_DT_PDUSession_ID;

// PDUSessionResourceBearerSetupCompleteInfoSNterminated_dRBsToBeSetupList
//SEQUENCE OF DRBsToBeSetupList-BearerSetupComplete-SNterminated-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSessionResourceBearerSetupCompleteInfoSNterminated_dRBsToBeSetupList
{
	SI_LinkedList * DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item;
} SI_XNAP_DT_PDUSessionResourceBearerSetupCompleteInfoSNterminated_dRBsToBeSetupList;


// PDUSessionResourceBearerSetupCompleteInfo-SNterminated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceBearerSetupCompleteInfo_SNterminated
{
	SI_XNAP_DT_PDUSessionResourceBearerSetupCompleteInfoSNterminated_dRBsToBeSetupList * dRBsToBeSetupList;

} SI_XNAP_DT_PDUSessionResourceBearerSetupCompleteInfo_SNterminated;


// XnUAddressInfoperPDUSession-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_XnUAddressInfoperPDUSession_Item
{
	unsigned long long int pduSession_ID;

	SI_XNAP_DT_DataForwardingInfoFromTargetNGRANnode * dataForwardingInfoFromTargetNGRANnode;
	int isPresent_dataForwardingInfoFromTargetNGRANnode;

	SI_XNAP_DT_PDUSessionResourceBearerSetupCompleteInfo_SNterminated * pduSessionResourceSetupCompleteInfo_SNterm;
	int isPresent_pduSessionResourceSetupCompleteInfo_SNterm;

} SI_XNAP_DT_XnUAddressInfoperPDUSession_Item;


// DataForwardingInfoFromTargetE-UTRANnode-List
//SEQUENCE OF DataForwardingInfoFromTargetE-UTRANnode-Item, MIN=1, MAX= maxnoofDataForwardingTunneltoE-UTRAN  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DataForwardingInfoFromTargetE_UTRANnode_List
{
	SI_LinkedList * DataForwardingInfoFromTargetE_UTRANnode_Item;
} SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode_List;


// DataForwardingInfoFromTargetE-UTRANnode
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DataForwardingInfoFromTargetE_UTRANnode
{
	SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode_List * dataForwardingInfoFromTargetE_UTRANnode_List;

} SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode;


// QoSFlowsToBeForwarded-List
//SEQUENCE OF QoSFlowsToBeForwarded-Item, MIN=1, MAX=maxnoofQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_QoSFlowsToBeForwarded_List
{
	SI_LinkedList * QoSFlowsToBeForwarded_Item;
} SI_XNAP_DT_QoSFlowsToBeForwarded_List;


// DataForwardingInfoFromTargetE-UTRANnode-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DataForwardingInfoFromTargetE_UTRANnode_Item
{
	SI_XNAP_DT_UPTransportLayerInformation * dlForwardingUPTNLInformation;

	SI_XNAP_DT_QoSFlowsToBeForwarded_List * qosFlowsToBeForwarded_List;

} SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode_Item;


// QoSFlowsToBeForwarded-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoSFlowsToBeForwarded_Item
{
	unsigned long long int qosFlowIdentifier;

} SI_XNAP_DT_QoSFlowsToBeForwarded_Item;


// QoSFLowsAcceptedToBeForwarded-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoSFLowsAcceptedToBeForwarded_Item
{
	unsigned long long int qosFlowIdentifier;

} SI_XNAP_DT_QoSFLowsAcceptedToBeForwarded_Item;


// QoSFLowsToBeForwarded-List
//SEQUENCE OF QoSFLowsToBeForwarded-Item, MIN=1, MAX= maxnoofQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_QoSFLowsToBeForwarded_List
{
	SI_LinkedList * QoSFLowsToBeForwarded_Item;
} SI_XNAP_DT_QoSFLowsToBeForwarded_List;


// DRBToQoSFlowMapping-List
//SEQUENCE OF DRBToQoSFlowMapping-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DRBToQoSFlowMapping_List
{
	SI_LinkedList * DRBToQoSFlowMapping_Item;
} SI_XNAP_DT_DRBToQoSFlowMapping_List;


// DataforwardingandOffloadingInfofromSource
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DataforwardingandOffloadingInfofromSource
{
	SI_XNAP_DT_QoSFLowsToBeForwarded_List * qosFlowsToBeForwarded;

	SI_XNAP_DT_DRBToQoSFlowMapping_List * sourceDRBtoQoSFlowMapping;
	int isPresent_sourceDRBtoQoSFlowMapping;

} SI_XNAP_DT_DataforwardingandOffloadingInfofromSource;


// DLForwarding
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_DLForwarding
{
	__si_xnap__DLForwarding_dl_forwarding_proposed_val
} SI_XNAP_DT_DLForwarding;


// L:2561
typedef enum __si_xnap_dt_DLForwarding2
{
	DLForwarding_dl_forwarding_proposed_val
} SI_XNAP_DT_DLForwarding2;


// L:2588
typedef struct __si_xnap_dt_DLForwarding_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_DLForwarding_EnumProxy;


// ULForwarding
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ULForwarding
{
	__si_xnap__ULForwarding_ul_forwarding_proposed_val
} SI_XNAP_DT_ULForwarding;


// L:2561
typedef enum __si_xnap_dt_ULForwarding2
{
	ULForwarding_ul_forwarding_proposed_val
} SI_XNAP_DT_ULForwarding2;


// L:2588
typedef struct __si_xnap_dt_ULForwarding_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ULForwarding_EnumProxy;


// QoSFLowsToBeForwarded-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoSFLowsToBeForwarded_Item
{
	unsigned long long int qosFlowIdentifier;

	uint8_t selected_edl_dataforwarding;
	int extSelected_edl_dataforwarding;

	uint8_t selected_eul_dataforwarding;
	int extSelected_eul_dataforwarding;

} SI_XNAP_DT_QoSFLowsToBeForwarded_Item;


// DRB-ID
// INTEGER,INTEGER(1..32,...),MIN=1,MAX=32  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_DRB_ID
{
	unsigned long long int data;
} SI_XNAP_DT_DRB_ID;

// DataForwardingResponseDRBItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DataForwardingResponseDRBItem
{
	unsigned long long int drb_ID;

	SI_XNAP_DT_UPTransportLayerInformation * dlForwardingUPTNL;
	int isPresent_dlForwardingUPTNL;

	SI_XNAP_DT_UPTransportLayerInformation * ulForwardingUPTNL;
	int isPresent_ulForwardingUPTNL;

} SI_XNAP_DT_DataForwardingResponseDRBItem;


// DataTrafficResources
// BITSTRING,BIT STRING(SIZE(6..17600))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_DataTrafficResources
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_DataTrafficResources;

// SharedResourceType-UL-OnlySharing
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SharedResourceType_UL_OnlySharing
{
	SI_XNAP_DT_DataTrafficResources * ul_resourceBitmap;

} SI_XNAP_DT_SharedResourceType_UL_OnlySharing;


// SharedResourceType-ULDL-Sharing-UL-ResourcesChanged
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged
{
	SI_XNAP_DT_DataTrafficResources * ul_resourceBitmap;

} SI_XNAP_DT_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged;


// SharedResourceType-ULDL-Sharing-UL-Resources
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_SharedResourceType_ULDL_Sharing_UL_Resources
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int unchanged;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged * changed;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_UL_Resources_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_SharedResourceType_ULDL_Sharing_UL_Resources;


// SharedResourceType-ULDL-Sharing-DL-ResourcesChanged
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged
{
	SI_XNAP_DT_DataTrafficResources * dl_resourceBitmap;

} SI_XNAP_DT_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged;


// SharedResourceType-ULDL-Sharing-DL-Resources
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_SharedResourceType_ULDL_Sharing_DL_Resources
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int unchanged;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged * changed;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_DL_Resources_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_SharedResourceType_ULDL_Sharing_DL_Resources;


// SharedResourceType-ULDL-Sharing
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_SharedResourceType_ULDL_Sharing
{
	union 
	{
		// ParserName = CHOICE - NonEP false;
		SI_XNAP_DT_SharedResourceType_ULDL_Sharing_UL_Resources * ul_resources;

		// ParserName = CHOICE - NonEP false;
		SI_XNAP_DT_SharedResourceType_ULDL_Sharing_DL_Resources * dl_resources;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_SharedResourceType_ULDL_Sharing;


// SharedResourceType
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_SharedResourceType
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_SharedResourceType_UL_OnlySharing * ul_onlySharing;

		// ParserName = CHOICE - NonEP false;
		SI_XNAP_DT_SharedResourceType_ULDL_Sharing * ul_and_dl_Sharing;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_SharedResourceType_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_SharedResourceType;


// ReservedSubframePattern_subframeType
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ReservedSubframePattern_subframeType
{
	__si_xnap__ReservedSubframePattern_subframeType_mbsfn_val,
	__si_xnap__ReservedSubframePattern_subframeType_non_mbsfn_val
} SI_XNAP_DT_ReservedSubframePattern_subframeType;


// L:2561
typedef enum __si_xnap_dt_ReservedSubframePattern_subframeType2
{
	ReservedSubframePattern_subframeType_mbsfn_val,
	ReservedSubframePattern_subframeType_non_mbsfn_val
} SI_XNAP_DT_ReservedSubframePattern_subframeType2;


// L:2588
typedef struct __si_xnap_dt_ReservedSubframePattern_subframeType_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ReservedSubframePattern_subframeType_EnumProxy;


// ReservedSubframePattern_reservedSubframePattern
// BITSTRING,BIT STRING(SIZE(10..160))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_ReservedSubframePattern_reservedSubframePattern
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_ReservedSubframePattern_reservedSubframePattern;

// MBSFNControlRegionLength
// INTEGER,INTEGER(0..3),MIN=0,MAX=3  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_MBSFNControlRegionLength
{
	unsigned long long int data;
} SI_XNAP_DT_MBSFNControlRegionLength;

// ReservedSubframePattern
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ReservedSubframePattern
{
	uint8_t selected_esubframeType;
	int extSelected_esubframeType;

	SI_XNAP_DT_ReservedSubframePattern_reservedSubframePattern * reservedSubframePattern;

	unsigned long long int mbsfnControlRegionLength;
	int isPresent_mbsfnControlRegionLength;

} SI_XNAP_DT_ReservedSubframePattern;


// DataTrafficResourceIndication
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DataTrafficResourceIndication
{
	unsigned long long int activationSFN;

	SI_XNAP_DT_SharedResourceType * sharedResourceType;

	SI_XNAP_DT_ReservedSubframePattern * reservedSubframePattern;
	int isPresent_reservedSubframePattern;

} SI_XNAP_DT_DataTrafficResourceIndication;


// DAPSRequestInfo_dapsIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_DAPSRequestInfo_dapsIndicator
{
	__si_xnap__DAPSRequestInfo_dapsIndicator_daps_HO_required_val
} SI_XNAP_DT_DAPSRequestInfo_dapsIndicator;


// L:2561
typedef enum __si_xnap_dt_DAPSRequestInfo_dapsIndicator2
{
	DAPSRequestInfo_dapsIndicator_daps_HO_required_val
} SI_XNAP_DT_DAPSRequestInfo_dapsIndicator2;


// L:2588
typedef struct __si_xnap_dt_DAPSRequestInfo_dapsIndicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_DAPSRequestInfo_dapsIndicator_EnumProxy;


// DAPSRequestInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DAPSRequestInfo
{
	uint8_t selected_edapsIndicator;
	int extSelected_edapsIndicator;

} SI_XNAP_DT_DAPSRequestInfo;


// DAPSResponseInfo-List
//SEQUENCE OF DAPSResponseInfo-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DAPSResponseInfo_List
{
	SI_LinkedList * DAPSResponseInfo_Item;
} SI_XNAP_DT_DAPSResponseInfo_List;


// DAPSResponseInfoItem_dapsResponseIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_DAPSResponseInfoItem_dapsResponseIndicator
{
	__si_xnap__DAPSResponseInfoItem_dapsResponseIndicator_daps_HO_accepted_val,
	__si_xnap__DAPSResponseInfoItem_dapsResponseIndicator_daps_HO_not_accepted_val
} SI_XNAP_DT_DAPSResponseInfoItem_dapsResponseIndicator;


// L:2561
typedef enum __si_xnap_dt_DAPSResponseInfoItem_dapsResponseIndicator2
{
	DAPSResponseInfoItem_dapsResponseIndicator_daps_HO_accepted_val,
	DAPSResponseInfoItem_dapsResponseIndicator_daps_HO_not_accepted_val
} SI_XNAP_DT_DAPSResponseInfoItem_dapsResponseIndicator2;


// L:2588
typedef struct __si_xnap_dt_DAPSResponseInfoItem_dapsResponseIndicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_DAPSResponseInfoItem_dapsResponseIndicator_EnumProxy;


// DAPSResponseInfo-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DAPSResponseInfo_Item
{
	unsigned long long int drbID;

	uint8_t selected_edapsResponseIndicator;
	int extSelected_edapsResponseIndicator;

} SI_XNAP_DT_DAPSResponseInfo_Item;


// DeliveryStatus
// INTEGER,INTEGER(0..4095,...),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_DeliveryStatus
{
	unsigned long long int data;
} SI_XNAP_DT_DeliveryStatus;

// DesiredActNotificationLevel
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_DesiredActNotificationLevel
{
	__si_xnap__DesiredActNotificationLevel_none_val,
	__si_xnap__DesiredActNotificationLevel_qos_flow_val,
	__si_xnap__DesiredActNotificationLevel_pdu_session_val,
	__si_xnap__DesiredActNotificationLevel_ue_level_val
} SI_XNAP_DT_DesiredActNotificationLevel;


// L:2561
typedef enum __si_xnap_dt_DesiredActNotificationLevel2
{
	DesiredActNotificationLevel_none_val,
	DesiredActNotificationLevel_qos_flow_val,
	DesiredActNotificationLevel_pdu_session_val,
	DesiredActNotificationLevel_ue_level_val
} SI_XNAP_DT_DesiredActNotificationLevel2;


// L:2588
typedef struct __si_xnap_dt_DesiredActNotificationLevel_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_DesiredActNotificationLevel_EnumProxy;


// DefaultDRB-Allowed
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_DefaultDRB_Allowed
{
	__si_xnap__DefaultDRB_Allowed_true_val,
	__si_xnap__DefaultDRB_Allowed_false_val
} SI_XNAP_DT_DefaultDRB_Allowed;


// L:2561
typedef enum __si_xnap_dt_DefaultDRB_Allowed2
{
	DefaultDRB_Allowed_true_val,
	DefaultDRB_Allowed_false_val
} SI_XNAP_DT_DefaultDRB_Allowed2;


// L:2588
typedef struct __si_xnap_dt_DefaultDRB_Allowed_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_DefaultDRB_Allowed_EnumProxy;


// DirectForwardingPathAvailability
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_DirectForwardingPathAvailability
{
	__si_xnap__DirectForwardingPathAvailability_direct_path_available_val
} SI_XNAP_DT_DirectForwardingPathAvailability;


// L:2561
typedef enum __si_xnap_dt_DirectForwardingPathAvailability2
{
	DirectForwardingPathAvailability_direct_path_available_val
} SI_XNAP_DT_DirectForwardingPathAvailability2;


// L:2588
typedef struct __si_xnap_dt_DirectForwardingPathAvailability_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_DirectForwardingPathAvailability_EnumProxy;


// DirectForwardingPathAvailabilityWithSourceMN
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_DirectForwardingPathAvailabilityWithSourceMN
{
	__si_xnap__DirectForwardingPathAvailabilityWithSourceMN_direct_path_available_val
} SI_XNAP_DT_DirectForwardingPathAvailabilityWithSourceMN;


// L:2561
typedef enum __si_xnap_dt_DirectForwardingPathAvailabilityWithSourceMN2
{
	DirectForwardingPathAvailabilityWithSourceMN_direct_path_available_val
} SI_XNAP_DT_DirectForwardingPathAvailabilityWithSourceMN2;


// L:2588
typedef struct __si_xnap_dt_DirectForwardingPathAvailabilityWithSourceMN_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_DirectForwardingPathAvailabilityWithSourceMN_EnumProxy;


// DLCountChoice
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_DLCountChoice
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_COUNT_PDCP_SN12 * count12bits;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_COUNT_PDCP_SN18 * count18bits;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_DLCountChoice_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_DLCountChoice;


// DL-GBR-PRB-usage-for-MIMO
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_DL_GBR_PRB_usage_for_MIMO
{
	unsigned long long int data;
} SI_XNAP_DT_DL_GBR_PRB_usage_for_MIMO;

// DL-non-GBR-PRB-usage-for-MIMO
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_DL_non_GBR_PRB_usage_for_MIMO
{
	unsigned long long int data;
} SI_XNAP_DT_DL_non_GBR_PRB_usage_for_MIMO;

// DLF1Terminating-BHInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DLF1Terminating_BHInfo
{
	SI_XNAP_DT_BAPRoutingID * egressBAPRoutingID;

	SI_XNAP_DT_BHRLCChannelID * egressBHRLCCHID;

} SI_XNAP_DT_DLF1Terminating_BHInfo;


// DLLBTFailureInformationRequest
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_DLLBTFailureInformationRequest
{
	__si_xnap__DLLBTFailureInformationRequest_inquiry_val
} SI_XNAP_DT_DLLBTFailureInformationRequest;


// L:2561
typedef enum __si_xnap_dt_DLLBTFailureInformationRequest2
{
	DLLBTFailureInformationRequest_inquiry_val
} SI_XNAP_DT_DLLBTFailureInformationRequest2;


// L:2588
typedef struct __si_xnap_dt_DLLBTFailureInformationRequest_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_DLLBTFailureInformationRequest_EnumProxy;


// DLLBTFailureInformationList
//SEQUENCE OF DLLBTFailureInformationList-Item, MIN=1, MAX= maxnoofLBTFailureInformation  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DLLBTFailureInformationList
{
	SI_LinkedList * DLLBTFailureInformationList_Item;
} SI_XNAP_DT_DLLBTFailureInformationList;


// DLLBTFailureInformationListItem_numberOfDLLBTFailures
// INTEGER,INTEGER(1..1000,...),MIN=1,MAX=1000  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_DLLBTFailureInformationListItem_numberOfDLLBTFailures
{
	unsigned long long int data;
} SI_XNAP_DT_DLLBTFailureInformationListItem_numberOfDLLBTFailures;

// DLLBTFailureInformationList-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DLLBTFailureInformationList_Item
{
	unsigned long long int uEAssistantIdentifier;

	unsigned long long int numberOfDLLBTFailures;
	int isPresent_numberOfDLLBTFailures;

} SI_XNAP_DT_DLLBTFailureInformationList_Item;


// IABQoSMappingInformation_dscp
// BITSTRING,BIT STRING(SIZE(6))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_IABQoSMappingInformation_dscp
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_IABQoSMappingInformation_dscp;

// IABQoSMappingInformation_flow-label
// BITSTRING,BIT STRING(SIZE(20))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_IABQoSMappingInformation_flow_label
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_IABQoSMappingInformation_flow_label;

// IAB-QoS-Mapping-Information
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_IAB_QoS_Mapping_Information
{
	SI_XNAP_DT_IABQoSMappingInformation_dscp * dscp;
	int isPresent_dscp;

	SI_XNAP_DT_IABQoSMappingInformation_flow_label * flow_label;
	int isPresent_flow_label;

} SI_XNAP_DT_IAB_QoS_Mapping_Information;


// DLNonF1Terminating-BHInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DLNonF1Terminating_BHInfo
{
	SI_XNAP_DT_BAPRoutingID * ingressBAPRoutingID;

	SI_XNAP_DT_BHRLCChannelID * ingressBHRLCCHID;

	SI_XNAP_DT_BAPAddress * priorhopBAPAddress;

	SI_XNAP_DT_IAB_QoS_Mapping_Information * iabqosMappingInformation;

} SI_XNAP_DT_DLNonF1Terminating_BHInfo;


// DL-Total-PRB-usage-for-MIMO
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_DL_Total_PRB_usage_for_MIMO
{
	unsigned long long int data;
} SI_XNAP_DT_DL_Total_PRB_usage_for_MIMO;

// DRB-List
//SEQUENCE OF DRB-ID, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DRB_List
{
	SI_LinkedList * DRB_ID;
} SI_XNAP_DT_DRB_List;


// DRB-List-withCause
//SEQUENCE OF DRB-List-withCause-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DRB_List_withCause
{
	SI_LinkedList * DRB_List_withCause_Item;
} SI_XNAP_DT_DRB_List_withCause;


// RLCMode
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_RLCMode
{
	__si_xnap__RLCMode_rlc_am_val,
	__si_xnap__RLCMode_rlc_um_bidirectional_val,
	__si_xnap__RLCMode_rlc_um_unidirectional_ul_val,
	__si_xnap__RLCMode_rlc_um_unidirectional_dl_val
} SI_XNAP_DT_RLCMode;


// L:2561
typedef enum __si_xnap_dt_RLCMode2
{
	RLCMode_rlc_am_val,
	RLCMode_rlc_um_bidirectional_val,
	RLCMode_rlc_um_unidirectional_ul_val,
	RLCMode_rlc_um_unidirectional_dl_val
} SI_XNAP_DT_RLCMode2;


// L:2588
typedef struct __si_xnap_dt_RLCMode_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_RLCMode_EnumProxy;


// DRB-List-withCause-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRB_List_withCause_Item
{
	unsigned long long int drb_id;

	SI_XNAP_DT_Cause * cause;

	uint8_t selected_erLC_Mode;
	int extSelected_erLC_Mode;
	int isPresent_rLC_Mode;

} SI_XNAP_DT_DRB_List_withCause_Item;


// DRB-Number
// INTEGER,INTEGER(1..32,...),MIN=1,MAX=32  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_DRB_Number
{
	unsigned long long int data;
} SI_XNAP_DT_DRB_Number;

// DRBsSubjectToDLDiscarding-List
//SEQUENCE OF DRBsSubjectToDLDiscarding-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DRBsSubjectToDLDiscarding_List
{
	SI_LinkedList * DRBsSubjectToDLDiscarding_Item;
} SI_XNAP_DT_DRBsSubjectToDLDiscarding_List;


// DRBsSubjectToDLDiscarding-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRBsSubjectToDLDiscarding_Item
{
	unsigned long long int drbID;

	SI_XNAP_DT_DLCountChoice * dlCount;

} SI_XNAP_DT_DRBsSubjectToDLDiscarding_Item;


// DRBsSubjectToEarlyStatusTransfer-List
//SEQUENCE OF DRBsSubjectToEarlyStatusTransfer-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DRBsSubjectToEarlyStatusTransfer_List
{
	SI_LinkedList * DRBsSubjectToEarlyStatusTransfer_Item;
} SI_XNAP_DT_DRBsSubjectToEarlyStatusTransfer_List;


// DRBsSubjectToEarlyStatusTransfer-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRBsSubjectToEarlyStatusTransfer_Item
{
	unsigned long long int drbID;

	SI_XNAP_DT_DLCountChoice * dlCount;

} SI_XNAP_DT_DRBsSubjectToEarlyStatusTransfer_Item;


// DRBsSubjectToStatusTransfer-List
//SEQUENCE OF DRBsSubjectToStatusTransfer-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DRBsSubjectToStatusTransfer_List
{
	SI_LinkedList * DRBsSubjectToStatusTransfer_Item;
} SI_XNAP_DT_DRBsSubjectToStatusTransfer_List;


// DRBBStatusTransfer12bitsSN_receiveStatusofPDCPSDU
// BITSTRING,BIT STRING(SIZE(1..2048))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_DRBBStatusTransfer12bitsSN_receiveStatusofPDCPSDU
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_DRBBStatusTransfer12bitsSN_receiveStatusofPDCPSDU;

// DRBBStatusTransfer12bitsSN
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRBBStatusTransfer12bitsSN
{
	SI_XNAP_DT_DRBBStatusTransfer12bitsSN_receiveStatusofPDCPSDU * receiveStatusofPDCPSDU;
	int isPresent_receiveStatusofPDCPSDU;

	SI_XNAP_DT_COUNT_PDCP_SN12 * cOUNTValue;

} SI_XNAP_DT_DRBBStatusTransfer12bitsSN;


// DRBBStatusTransfer18bitsSN_receiveStatusofPDCPSDU
// BITSTRING,BIT STRING(SIZE(1..131072))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_DRBBStatusTransfer18bitsSN_receiveStatusofPDCPSDU
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_DRBBStatusTransfer18bitsSN_receiveStatusofPDCPSDU;

// DRBBStatusTransfer18bitsSN
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRBBStatusTransfer18bitsSN
{
	SI_XNAP_DT_DRBBStatusTransfer18bitsSN_receiveStatusofPDCPSDU * receiveStatusofPDCPSDU;
	int isPresent_receiveStatusofPDCPSDU;

	SI_XNAP_DT_COUNT_PDCP_SN18 * cOUNTValue;

} SI_XNAP_DT_DRBBStatusTransfer18bitsSN;


// DRBBStatusTransferChoice
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_DRBBStatusTransferChoice
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_DRBBStatusTransfer12bitsSN * pdcp_sn_12bits;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_DRBBStatusTransfer18bitsSN * pdcp_sn_18bits;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_DRBBStatusTransferChoice_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_DRBBStatusTransferChoice;


// DRBsSubjectToStatusTransfer-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRBsSubjectToStatusTransfer_Item
{
	unsigned long long int drbID;

	SI_XNAP_DT_DRBBStatusTransferChoice * pdcpStatusTransfer_UL;

	SI_XNAP_DT_DRBBStatusTransferChoice * pdcpStatusTransfer_DL;

} SI_XNAP_DT_DRBsSubjectToStatusTransfer_Item;


// QoSFlows-List
//SEQUENCE OF QoSFlow-Item, MIN=1, MAX=maxnoofQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_QoSFlows_List
{
	SI_LinkedList * QoSFlow_Item;
} SI_XNAP_DT_QoSFlows_List;


// DRBToQoSFlowMapping-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRBToQoSFlowMapping_Item
{
	unsigned long long int drb_ID;

	SI_XNAP_DT_QoSFlows_List * qosFlows_List;

	uint8_t selected_erLC_Mode;
	int extSelected_erLC_Mode;
	int isPresent_rLC_Mode;

} SI_XNAP_DT_DRBToQoSFlowMapping_Item;


// DUF-Slot-Config-List
//SEQUENCE OF DUF-Slot-Config-Item, MIN=1, MAX=maxnoofDUFSlots  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DUF_Slot_Config_List
{
	SI_LinkedList * DUF_Slot_Config_Item;
} SI_XNAP_DT_DUF_Slot_Config_List;


// Permutation
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_Permutation
{
	__si_xnap__Permutation_dfu_val,
	__si_xnap__Permutation_ufd_val
} SI_XNAP_DT_Permutation;


// L:2561
typedef enum __si_xnap_dt_Permutation2
{
	Permutation_dfu_val,
	Permutation_ufd_val
} SI_XNAP_DT_Permutation2;


// L:2588
typedef struct __si_xnap_dt_Permutation_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_Permutation_EnumProxy;


// ExplicitFormat_noofDownlinkSymbols
// INTEGER,INTEGER(0..14),MIN=0,MAX=14  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_ExplicitFormat_noofDownlinkSymbols
{
	unsigned long long int data;
} SI_XNAP_DT_ExplicitFormat_noofDownlinkSymbols;

// ExplicitFormat_noofUplinkSymbols
// INTEGER,INTEGER(0..14),MIN=0,MAX=14  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_ExplicitFormat_noofUplinkSymbols
{
	unsigned long long int data;
} SI_XNAP_DT_ExplicitFormat_noofUplinkSymbols;

// ExplicitFormat
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ExplicitFormat
{
	uint8_t selected_epermutation;
	int extSelected_epermutation;

	unsigned long long int noofDownlinkSymbols;
	int isPresent_noofDownlinkSymbols;

	unsigned long long int noofUplinkSymbols;
	int isPresent_noofUplinkSymbols;

} SI_XNAP_DT_ExplicitFormat;


// DUFSlotformatIndex
// INTEGER,INTEGER(0..254),MIN=0,MAX=254  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_DUFSlotformatIndex
{
	unsigned long long int data;
} SI_XNAP_DT_DUFSlotformatIndex;

// ImplicitFormat
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ImplicitFormat
{
	unsigned long long int dUFSlotformatIndex;

} SI_XNAP_DT_ImplicitFormat;


// DUF-Slot-Config-Item
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_DUF_Slot_Config_Item
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_ExplicitFormat * explicitFormat;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_ImplicitFormat * implicitFormat;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_DUF_Slot_Config_Item_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_DUF_Slot_Config_Item;


// DUFTransmissionPeriodicity
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_DUFTransmissionPeriodicity
{
	__si_xnap__DUFTransmissionPeriodicity_ms0p5_val,
	__si_xnap__DUFTransmissionPeriodicity_ms0p625_val,
	__si_xnap__DUFTransmissionPeriodicity_ms1_val,
	__si_xnap__DUFTransmissionPeriodicity_ms1p25_val,
	__si_xnap__DUFTransmissionPeriodicity_ms2_val,
	__si_xnap__DUFTransmissionPeriodicity_ms2p5_val,
	__si_xnap__DUFTransmissionPeriodicity_ms5_val,
	__si_xnap__DUFTransmissionPeriodicity_ms10_val
} SI_XNAP_DT_DUFTransmissionPeriodicity;


// L:2561
typedef enum __si_xnap_dt_DUFTransmissionPeriodicity2
{
	DUFTransmissionPeriodicity_ms0p5_val,
	DUFTransmissionPeriodicity_ms0p625_val,
	DUFTransmissionPeriodicity_ms1_val,
	DUFTransmissionPeriodicity_ms1p25_val,
	DUFTransmissionPeriodicity_ms2_val,
	DUFTransmissionPeriodicity_ms2p5_val,
	DUFTransmissionPeriodicity_ms5_val,
	DUFTransmissionPeriodicity_ms10_val
} SI_XNAP_DT_DUFTransmissionPeriodicity2;


// L:2588
typedef struct __si_xnap_dt_DUFTransmissionPeriodicity_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_DUFTransmissionPeriodicity_EnumProxy;


// DU-RX-MT-RX
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_DU_RX_MT_RX
{
	__si_xnap__DU_RX_MT_RX_supported_val,
	__si_xnap__DU_RX_MT_RX_not_supported_val,
	__si_xnap__DU_RX_MT_RX_supported_FDM_required_val
} SI_XNAP_DT_DU_RX_MT_RX;


// L:2561
typedef enum __si_xnap_dt_DU_RX_MT_RX2
{
	DU_RX_MT_RX_supported_val,
	DU_RX_MT_RX_not_supported_val,
	DU_RX_MT_RX_supported_FDM_required_val
} SI_XNAP_DT_DU_RX_MT_RX2;


// L:2588
typedef struct __si_xnap_dt_DU_RX_MT_RX_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_DU_RX_MT_RX_EnumProxy;


// DU-TX-MT-TX
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_DU_TX_MT_TX
{
	__si_xnap__DU_TX_MT_TX_supported_val,
	__si_xnap__DU_TX_MT_TX_not_supported_val,
	__si_xnap__DU_TX_MT_TX_supported_FDM_required_val
} SI_XNAP_DT_DU_TX_MT_TX;


// L:2561
typedef enum __si_xnap_dt_DU_TX_MT_TX2
{
	DU_TX_MT_TX_supported_val,
	DU_TX_MT_TX_not_supported_val,
	DU_TX_MT_TX_supported_FDM_required_val
} SI_XNAP_DT_DU_TX_MT_TX2;


// L:2588
typedef struct __si_xnap_dt_DU_TX_MT_TX_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_DU_TX_MT_TX_EnumProxy;


// DU-RX-MT-TX
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_DU_RX_MT_TX
{
	__si_xnap__DU_RX_MT_TX_supported_val,
	__si_xnap__DU_RX_MT_TX_not_supported_val,
	__si_xnap__DU_RX_MT_TX_supported_FDM_required_val
} SI_XNAP_DT_DU_RX_MT_TX;


// L:2561
typedef enum __si_xnap_dt_DU_RX_MT_TX2
{
	DU_RX_MT_TX_supported_val,
	DU_RX_MT_TX_not_supported_val,
	DU_RX_MT_TX_supported_FDM_required_val
} SI_XNAP_DT_DU_RX_MT_TX2;


// L:2588
typedef struct __si_xnap_dt_DU_RX_MT_TX_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_DU_RX_MT_TX_EnumProxy;


// DU-TX-MT-RX
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_DU_TX_MT_RX
{
	__si_xnap__DU_TX_MT_RX_supported_val,
	__si_xnap__DU_TX_MT_RX_not_supported_val,
	__si_xnap__DU_TX_MT_RX_supported_FDM_required_val
} SI_XNAP_DT_DU_TX_MT_RX;


// L:2561
typedef enum __si_xnap_dt_DU_TX_MT_RX2
{
	DU_TX_MT_RX_supported_val,
	DU_TX_MT_RX_not_supported_val,
	DU_TX_MT_RX_supported_FDM_required_val
} SI_XNAP_DT_DU_TX_MT_RX2;


// L:2588
typedef struct __si_xnap_dt_DU_TX_MT_RX_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_DU_TX_MT_RX_EnumProxy;


// DuplicationActivation
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_DuplicationActivation
{
	__si_xnap__DuplicationActivation_active_val,
	__si_xnap__DuplicationActivation_inactive_val
} SI_XNAP_DT_DuplicationActivation;


// L:2561
typedef enum __si_xnap_dt_DuplicationActivation2
{
	DuplicationActivation_active_val,
	DuplicationActivation_inactive_val
} SI_XNAP_DT_DuplicationActivation2;


// L:2588
typedef struct __si_xnap_dt_DuplicationActivation_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_DuplicationActivation_EnumProxy;


// Dynamic5QIDescriptor_delayCritical
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_Dynamic5QIDescriptor_delayCritical
{
	__si_xnap__Dynamic5QIDescriptor_delayCritical_delay_critical_val,
	__si_xnap__Dynamic5QIDescriptor_delayCritical_non_delay_critical_val
} SI_XNAP_DT_Dynamic5QIDescriptor_delayCritical;


// L:2561
typedef enum __si_xnap_dt_Dynamic5QIDescriptor_delayCritical2
{
	Dynamic5QIDescriptor_delayCritical_delay_critical_val,
	Dynamic5QIDescriptor_delayCritical_non_delay_critical_val
} SI_XNAP_DT_Dynamic5QIDescriptor_delayCritical2;


// L:2588
typedef struct __si_xnap_dt_Dynamic5QIDescriptor_delayCritical_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_Dynamic5QIDescriptor_delayCritical_EnumProxy;


// PriorityLevelQoS
// INTEGER,INTEGER(1..127,...),MIN=1,MAX=127  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_PriorityLevelQoS
{
	unsigned long long int data;
} SI_XNAP_DT_PriorityLevelQoS;

// MaximumDataBurstVolume
// INTEGER,INTEGER(0..4095,..., 4096.. 2000000),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_MaximumDataBurstVolume
{
	unsigned long long int data;
} SI_XNAP_DT_MaximumDataBurstVolume;

// Dynamic5QIDescriptor
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_Dynamic5QIDescriptor
{
	unsigned long long int priorityLevelQoS;

	unsigned long long int packetDelayBudget;

	SI_XNAP_DT_PacketErrorRate * packetErrorRate;

	unsigned long long int fiveQI;
	int isPresent_fiveQI;

	uint8_t selected_edelayCritical;
	int extSelected_edelayCritical;
	int isPresent_delayCritical;

	unsigned long long int averagingWindow;
	int isPresent_averagingWindow;

	unsigned long long int maximumDataBurstVolume;
	int isPresent_maximumDataBurstVolume;

} SI_XNAP_DT_Dynamic5QIDescriptor;


// EarlyMeasurement
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_EarlyMeasurement
{
	__si_xnap__EarlyMeasurement_true_val
} SI_XNAP_DT_EarlyMeasurement;


// L:2561
typedef enum __si_xnap_dt_EarlyMeasurement2
{
	EarlyMeasurement_true_val
} SI_XNAP_DT_EarlyMeasurement2;


// L:2588
typedef struct __si_xnap_dt_EarlyMeasurement_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_EarlyMeasurement_EnumProxy;


// ECNMarkingAtRANRequest
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ECNMarkingAtRANRequest
{
	__si_xnap__ECNMarkingAtRANRequest_ul_val,
	__si_xnap__ECNMarkingAtRANRequest_dl_val,
	__si_xnap__ECNMarkingAtRANRequest_both_val,
	__si_xnap__ECNMarkingAtRANRequest_stop_val
} SI_XNAP_DT_ECNMarkingAtRANRequest;


// L:2561
typedef enum __si_xnap_dt_ECNMarkingAtRANRequest2
{
	ECNMarkingAtRANRequest_ul_val,
	ECNMarkingAtRANRequest_dl_val,
	ECNMarkingAtRANRequest_both_val,
	ECNMarkingAtRANRequest_stop_val
} SI_XNAP_DT_ECNMarkingAtRANRequest2;


// L:2588
typedef struct __si_xnap_dt_ECNMarkingAtRANRequest_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ECNMarkingAtRANRequest_EnumProxy;


// ECNMarkingAtUPFRequest
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ECNMarkingAtUPFRequest
{
	__si_xnap__ECNMarkingAtUPFRequest_ul_val,
	__si_xnap__ECNMarkingAtUPFRequest_dl_val,
	__si_xnap__ECNMarkingAtUPFRequest_both_val,
	__si_xnap__ECNMarkingAtUPFRequest_stop_val
} SI_XNAP_DT_ECNMarkingAtUPFRequest;


// L:2561
typedef enum __si_xnap_dt_ECNMarkingAtUPFRequest2
{
	ECNMarkingAtUPFRequest_ul_val,
	ECNMarkingAtUPFRequest_dl_val,
	ECNMarkingAtUPFRequest_both_val,
	ECNMarkingAtUPFRequest_stop_val
} SI_XNAP_DT_ECNMarkingAtUPFRequest2;


// L:2588
typedef struct __si_xnap_dt_ECNMarkingAtUPFRequest_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ECNMarkingAtUPFRequest_EnumProxy;


// CongestionInformationRequest
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CongestionInformationRequest
{
	__si_xnap__CongestionInformationRequest_ul_val,
	__si_xnap__CongestionInformationRequest_dl_val,
	__si_xnap__CongestionInformationRequest_both_val,
	__si_xnap__CongestionInformationRequest_stop_val
} SI_XNAP_DT_CongestionInformationRequest;


// L:2561
typedef enum __si_xnap_dt_CongestionInformationRequest2
{
	CongestionInformationRequest_ul_val,
	CongestionInformationRequest_dl_val,
	CongestionInformationRequest_both_val,
	CongestionInformationRequest_stop_val
} SI_XNAP_DT_CongestionInformationRequest2;


// L:2588
typedef struct __si_xnap_dt_CongestionInformationRequest_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CongestionInformationRequest_EnumProxy;


// ECNMarkingorCongestionInformationReportingRequest
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_ECNMarkingorCongestionInformationReportingRequest
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t eCNMarkingAtRANRequest;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t eCNMarkingAtUPFRequest;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t congestionInformationRequest;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_ECNMarkingorCongestionInformationReportingRequest;


// EnergyCost
// INTEGER,INTEGER(0..10000,...),MIN=0,MAX=10000  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_EnergyCost
{
	unsigned long long int data;
} SI_XNAP_DT_EnergyCost;

// EquivalentSNPNs
//SEQUENCE OF SNPNIdentity, MIN=1, MAX=maxnoofESNPNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_EquivalentSNPNs
{
	SI_LinkedList * SNPNIdentity;
} SI_XNAP_DT_EquivalentSNPNs;


// E-RAB-ID
// INTEGER,INTEGER(0..15,...),MIN=0,MAX=15  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_E_RAB_ID
{
	unsigned long long int data;
} SI_XNAP_DT_E_RAB_ID;

// E-UTRAARFCN
// INTEGER,INTEGER(0..maxEARFCN),MIN=0,MAX=NaN  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_E_UTRAARFCN
{
	unsigned long long int data;
} SI_XNAP_DT_E_UTRAARFCN;

// ERedcap-Bcast-Information
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_ERedcap_Bcast_Information
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_ERedcap_Bcast_Information;

// E-UTRAFrequencyBandIndicator
// INTEGER,INTEGER(1..256,...),MIN=1,MAX=256  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_E_UTRAFrequencyBandIndicator
{
	unsigned long long int data;
} SI_XNAP_DT_E_UTRAFrequencyBandIndicator;

// E-UTRAMultibandInfoList
//SEQUENCE OF E-UTRAFrequencyBandIndicator, MIN=1, MAX=maxnoofEUTRABands  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_E_UTRAMultibandInfoList
{
	SI_LinkedList * E_UTRAFrequencyBandIndicator;
} SI_XNAP_DT_E_UTRAMultibandInfoList;


// EUTRAPaging-eDRX-Cycle
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_EUTRAPaging_eDRX_Cycle
{
	__si_xnap__EUTRAPaging_eDRX_Cycle_hfhalf_val,
	__si_xnap__EUTRAPaging_eDRX_Cycle_hf1_val,
	__si_xnap__EUTRAPaging_eDRX_Cycle_hf2_val,
	__si_xnap__EUTRAPaging_eDRX_Cycle_hf4_val,
	__si_xnap__EUTRAPaging_eDRX_Cycle_hf6_val,
	__si_xnap__EUTRAPaging_eDRX_Cycle_hf8_val,
	__si_xnap__EUTRAPaging_eDRX_Cycle_hf10_val,
	__si_xnap__EUTRAPaging_eDRX_Cycle_hf12_val,
	__si_xnap__EUTRAPaging_eDRX_Cycle_hf14_val,
	__si_xnap__EUTRAPaging_eDRX_Cycle_hf16_val,
	__si_xnap__EUTRAPaging_eDRX_Cycle_hf32_val,
	__si_xnap__EUTRAPaging_eDRX_Cycle_hf64_val,
	__si_xnap__EUTRAPaging_eDRX_Cycle_hf128_val,
	__si_xnap__EUTRAPaging_eDRX_Cycle_hf256_val
} SI_XNAP_DT_EUTRAPaging_eDRX_Cycle;


// L:2561
typedef enum __si_xnap_dt_EUTRAPaging_eDRX_Cycle2
{
	EUTRAPaging_eDRX_Cycle_hfhalf_val,
	EUTRAPaging_eDRX_Cycle_hf1_val,
	EUTRAPaging_eDRX_Cycle_hf2_val,
	EUTRAPaging_eDRX_Cycle_hf4_val,
	EUTRAPaging_eDRX_Cycle_hf6_val,
	EUTRAPaging_eDRX_Cycle_hf8_val,
	EUTRAPaging_eDRX_Cycle_hf10_val,
	EUTRAPaging_eDRX_Cycle_hf12_val,
	EUTRAPaging_eDRX_Cycle_hf14_val,
	EUTRAPaging_eDRX_Cycle_hf16_val,
	EUTRAPaging_eDRX_Cycle_hf32_val,
	EUTRAPaging_eDRX_Cycle_hf64_val,
	EUTRAPaging_eDRX_Cycle_hf128_val,
	EUTRAPaging_eDRX_Cycle_hf256_val
} SI_XNAP_DT_EUTRAPaging_eDRX_Cycle2;


// L:2588
typedef struct __si_xnap_dt_EUTRAPaging_eDRX_Cycle_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_EUTRAPaging_eDRX_Cycle_EnumProxy;


// EUTRAPaging-Time-Window
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_EUTRAPaging_Time_Window
{
	__si_xnap__EUTRAPaging_Time_Window_s1_val,
	__si_xnap__EUTRAPaging_Time_Window_s2_val,
	__si_xnap__EUTRAPaging_Time_Window_s3_val,
	__si_xnap__EUTRAPaging_Time_Window_s4_val,
	__si_xnap__EUTRAPaging_Time_Window_s5_val,
	__si_xnap__EUTRAPaging_Time_Window_s6_val,
	__si_xnap__EUTRAPaging_Time_Window_s7_val,
	__si_xnap__EUTRAPaging_Time_Window_s8_val,
	__si_xnap__EUTRAPaging_Time_Window_s9_val,
	__si_xnap__EUTRAPaging_Time_Window_s10_val,
	__si_xnap__EUTRAPaging_Time_Window_s11_val,
	__si_xnap__EUTRAPaging_Time_Window_s12_val,
	__si_xnap__EUTRAPaging_Time_Window_s13_val,
	__si_xnap__EUTRAPaging_Time_Window_s14_val,
	__si_xnap__EUTRAPaging_Time_Window_s15_val,
	__si_xnap__EUTRAPaging_Time_Window_s16_val
} SI_XNAP_DT_EUTRAPaging_Time_Window;


// L:2561
typedef enum __si_xnap_dt_EUTRAPaging_Time_Window2
{
	EUTRAPaging_Time_Window_s1_val,
	EUTRAPaging_Time_Window_s2_val,
	EUTRAPaging_Time_Window_s3_val,
	EUTRAPaging_Time_Window_s4_val,
	EUTRAPaging_Time_Window_s5_val,
	EUTRAPaging_Time_Window_s6_val,
	EUTRAPaging_Time_Window_s7_val,
	EUTRAPaging_Time_Window_s8_val,
	EUTRAPaging_Time_Window_s9_val,
	EUTRAPaging_Time_Window_s10_val,
	EUTRAPaging_Time_Window_s11_val,
	EUTRAPaging_Time_Window_s12_val,
	EUTRAPaging_Time_Window_s13_val,
	EUTRAPaging_Time_Window_s14_val,
	EUTRAPaging_Time_Window_s15_val,
	EUTRAPaging_Time_Window_s16_val
} SI_XNAP_DT_EUTRAPaging_Time_Window2;


// L:2588
typedef struct __si_xnap_dt_EUTRAPaging_Time_Window_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_EUTRAPaging_Time_Window_EnumProxy;


// EUTRAPagingeDRXInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_EUTRAPagingeDRXInformation
{
	uint8_t selected_eeutrapaging_eDRX_Cycle;
	int extSelected_eeutrapaging_eDRX_Cycle;

	uint8_t selected_eeutrapaging_Time_Window;
	int extSelected_eeutrapaging_Time_Window;
	int isPresent_eutrapaging_Time_Window;

} SI_XNAP_DT_EUTRAPagingeDRXInformation;


// E-UTRAPCI
// INTEGER,INTEGER(0..503,...),MIN=0,MAX=503  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_E_UTRAPCI
{
	unsigned long long int data;
} SI_XNAP_DT_E_UTRAPCI;

// EUTRAPRACHConfiguration_rootSequenceIndex
// INTEGER,INTEGER(0..837),MIN=0,MAX=837  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_EUTRAPRACHConfiguration_rootSequenceIndex
{
	unsigned long long int data;
} SI_XNAP_DT_EUTRAPRACHConfiguration_rootSequenceIndex;

// EUTRAPRACHConfiguration_zeroCorrelationIndex
// INTEGER,INTEGER(0..15),MIN=0,MAX=15  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_EUTRAPRACHConfiguration_zeroCorrelationIndex
{
	unsigned long long int data;
} SI_XNAP_DT_EUTRAPRACHConfiguration_zeroCorrelationIndex;

// EUTRAPRACHConfiguration_highSpeedFlag
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_EUTRAPRACHConfiguration_highSpeedFlag
{
	__si_xnap__EUTRAPRACHConfiguration_highSpeedFlag_true_val,
	__si_xnap__EUTRAPRACHConfiguration_highSpeedFlag_false_val
} SI_XNAP_DT_EUTRAPRACHConfiguration_highSpeedFlag;


// L:2561
typedef enum __si_xnap_dt_EUTRAPRACHConfiguration_highSpeedFlag2
{
	EUTRAPRACHConfiguration_highSpeedFlag_true_val,
	EUTRAPRACHConfiguration_highSpeedFlag_false_val
} SI_XNAP_DT_EUTRAPRACHConfiguration_highSpeedFlag2;


// L:2588
typedef struct __si_xnap_dt_EUTRAPRACHConfiguration_highSpeedFlag_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_EUTRAPRACHConfiguration_highSpeedFlag_EnumProxy;


// EUTRAPRACHConfiguration_prach-FreqOffset
// INTEGER,INTEGER(0..94),MIN=0,MAX=94  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_EUTRAPRACHConfiguration_prach_FreqOffset
{
	unsigned long long int data;
} SI_XNAP_DT_EUTRAPRACHConfiguration_prach_FreqOffset;

// EUTRAPRACHConfiguration_prach-ConfigIndex
// INTEGER,INTEGER(0..63),MIN=0,MAX=63  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_EUTRAPRACHConfiguration_prach_ConfigIndex
{
	unsigned long long int data;
} SI_XNAP_DT_EUTRAPRACHConfiguration_prach_ConfigIndex;

// E-UTRAPRACHConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_E_UTRAPRACHConfiguration
{
	unsigned long long int rootSequenceIndex;

	unsigned long long int zeroCorrelationIndex;

	uint8_t selected_ehighSpeedFlag;
	int extSelected_ehighSpeedFlag;

	unsigned long long int prach_FreqOffset;

	unsigned long long int prach_ConfigIndex;
	int isPresent_prach_ConfigIndex;

} SI_XNAP_DT_E_UTRAPRACHConfiguration;


// E-UTRATransmissionBandwidth
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_E_UTRATransmissionBandwidth
{
	__si_xnap__E_UTRATransmissionBandwidth_bw6_val,
	__si_xnap__E_UTRATransmissionBandwidth_bw15_val,
	__si_xnap__E_UTRATransmissionBandwidth_bw25_val,
	__si_xnap__E_UTRATransmissionBandwidth_bw50_val,
	__si_xnap__E_UTRATransmissionBandwidth_bw75_val,
	__si_xnap__E_UTRATransmissionBandwidth_bw100_val,
	__si_xnap__E_UTRATransmissionBandwidth_bw1_val_ext
} SI_XNAP_DT_E_UTRATransmissionBandwidth;


// L:2561
typedef enum __si_xnap_dt_E_UTRATransmissionBandwidth2
{
	E_UTRATransmissionBandwidth_bw6_val,
	E_UTRATransmissionBandwidth_bw15_val,
	E_UTRATransmissionBandwidth_bw25_val,
	E_UTRATransmissionBandwidth_bw50_val,
	E_UTRATransmissionBandwidth_bw75_val,
	E_UTRATransmissionBandwidth_bw100_val,
	E_UTRATransmissionBandwidth_bw1_val_ext
} SI_XNAP_DT_E_UTRATransmissionBandwidth2;


// L:2588
typedef struct __si_xnap_dt_E_UTRATransmissionBandwidth_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_E_UTRATransmissionBandwidth_EnumProxy;


// PortNumber
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_PortNumber
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_PortNumber;

// EndpointIPAddressAndPort
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_EndpointIPAddressAndPort
{
	SI_XNAP_DT_TransportLayerAddress * endpointIPAddress;

	SI_XNAP_DT_PortNumber * portNumber;

} SI_XNAP_DT_EndpointIPAddressAndPort;


// EventTypeTrigger_outOfCoverage
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_EventTypeTrigger_outOfCoverage
{
	__si_xnap__EventTypeTrigger_outOfCoverage_true_val
} SI_XNAP_DT_EventTypeTrigger_outOfCoverage;


// L:2561
typedef enum __si_xnap_dt_EventTypeTrigger_outOfCoverage2
{
	EventTypeTrigger_outOfCoverage_true_val
} SI_XNAP_DT_EventTypeTrigger_outOfCoverage2;


// L:2588
typedef struct __si_xnap_dt_EventTypeTrigger_outOfCoverage_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_EventTypeTrigger_outOfCoverage_EnumProxy;


// Threshold-RSRP
// INTEGER,INTEGER(0..127),MIN=0,MAX=127  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_Threshold_RSRP
{
	unsigned long long int data;
} SI_XNAP_DT_Threshold_RSRP;

// Threshold-RSRQ
// INTEGER,INTEGER(0..127),MIN=0,MAX=127  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_Threshold_RSRQ
{
	unsigned long long int data;
} SI_XNAP_DT_Threshold_RSRQ;

// MeasurementThresholdL1LoggedMDT
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_MeasurementThresholdL1LoggedMDT
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int threshold_RSRP;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int threshold_RSRQ;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs * choice_extension_ext;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_MeasurementThresholdL1LoggedMDT;


// Hysteresis
// INTEGER,INTEGER(0..30),MIN=0,MAX=30  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_Hysteresis
{
	unsigned long long int data;
} SI_XNAP_DT_Hysteresis;

// TimeToTrigger
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_TimeToTrigger
{
	__si_xnap__TimeToTrigger_ms0_val,
	__si_xnap__TimeToTrigger_ms40_val,
	__si_xnap__TimeToTrigger_ms64_val,
	__si_xnap__TimeToTrigger_ms80_val,
	__si_xnap__TimeToTrigger_ms100_val,
	__si_xnap__TimeToTrigger_ms128_val,
	__si_xnap__TimeToTrigger_ms160_val,
	__si_xnap__TimeToTrigger_ms256_val,
	__si_xnap__TimeToTrigger_ms320_val,
	__si_xnap__TimeToTrigger_ms480_val,
	__si_xnap__TimeToTrigger_ms512_val,
	__si_xnap__TimeToTrigger_ms640_val,
	__si_xnap__TimeToTrigger_ms1024_val,
	__si_xnap__TimeToTrigger_ms1280_val,
	__si_xnap__TimeToTrigger_ms2560_val,
	__si_xnap__TimeToTrigger_ms5120_val
} SI_XNAP_DT_TimeToTrigger;


// L:2561
typedef enum __si_xnap_dt_TimeToTrigger2
{
	TimeToTrigger_ms0_val,
	TimeToTrigger_ms40_val,
	TimeToTrigger_ms64_val,
	TimeToTrigger_ms80_val,
	TimeToTrigger_ms100_val,
	TimeToTrigger_ms128_val,
	TimeToTrigger_ms160_val,
	TimeToTrigger_ms256_val,
	TimeToTrigger_ms320_val,
	TimeToTrigger_ms480_val,
	TimeToTrigger_ms512_val,
	TimeToTrigger_ms640_val,
	TimeToTrigger_ms1024_val,
	TimeToTrigger_ms1280_val,
	TimeToTrigger_ms2560_val,
	TimeToTrigger_ms5120_val
} SI_XNAP_DT_TimeToTrigger2;


// L:2588
typedef struct __si_xnap_dt_TimeToTrigger_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_TimeToTrigger_EnumProxy;


// EventL1
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_EventL1
{
	SI_XNAP_DT_MeasurementThresholdL1LoggedMDT * l1Threshold;

	unsigned long long int hysteresis;

	uint8_t selected_etimeToTrigger;
	int extSelected_etimeToTrigger;

} SI_XNAP_DT_EventL1;


// EventTypeTrigger
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_EventTypeTrigger
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t outOfCoverage;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_EventL1 * eventL1;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_EventTypeTrigger_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_EventTypeTrigger;


// LoggedEventTriggeredConfig
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_LoggedEventTriggeredConfig
{
	SI_XNAP_DT_EventTypeTrigger * eventTypeTrigger;

} SI_XNAP_DT_LoggedEventTriggeredConfig;


// EventTriggered
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_EventTriggered
{
	SI_XNAP_DT_LoggedEventTriggeredConfig * loggedEventTriggeredConfig;

} SI_XNAP_DT_EventTriggered;


// EventType
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_EventType
{
	__si_xnap__EventType_report_upon_change_of_serving_cell_val,
	__si_xnap__EventType_report_UE_moving_presence_into_or_out_of_the_Area_of_Interest_val,
	__si_xnap__EventType_report_upon_change_of_serving_cell_and_Area_of_Interest_val_ext
} SI_XNAP_DT_EventType;


// L:2561
typedef enum __si_xnap_dt_EventType2
{
	EventType_report_upon_change_of_serving_cell_val,
	EventType_report_UE_moving_presence_into_or_out_of_the_Area_of_Interest_val,
	EventType_report_upon_change_of_serving_cell_and_Area_of_Interest_val_ext
} SI_XNAP_DT_EventType2;


// L:2588
typedef struct __si_xnap_dt_EventType_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_EventType_EnumProxy;


// ExcessPacketDelayThresholdConfiguration
//SEQUENCE OF ExcessPacketDelayThresholdItem, MIN=1, MAX=maxnoofThresholdsForExcessPacketDelay  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ExcessPacketDelayThresholdConfiguration
{
	SI_LinkedList * ExcessPacketDelayThresholdItem;
} SI_XNAP_DT_ExcessPacketDelayThresholdConfiguration;


// ExcessPacketDelayThresholdValue
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ExcessPacketDelayThresholdValue
{
	__si_xnap__ExcessPacketDelayThresholdValue_ms0dot25_val,
	__si_xnap__ExcessPacketDelayThresholdValue_ms0dot5_val,
	__si_xnap__ExcessPacketDelayThresholdValue_ms1_val,
	__si_xnap__ExcessPacketDelayThresholdValue_ms2_val,
	__si_xnap__ExcessPacketDelayThresholdValue_ms4_val,
	__si_xnap__ExcessPacketDelayThresholdValue_ms5_val,
	__si_xnap__ExcessPacketDelayThresholdValue_ms10_val,
	__si_xnap__ExcessPacketDelayThresholdValue_ms20_val,
	__si_xnap__ExcessPacketDelayThresholdValue_ms30_val,
	__si_xnap__ExcessPacketDelayThresholdValue_ms40_val,
	__si_xnap__ExcessPacketDelayThresholdValue_ms50_val,
	__si_xnap__ExcessPacketDelayThresholdValue_ms60_val,
	__si_xnap__ExcessPacketDelayThresholdValue_ms70_val,
	__si_xnap__ExcessPacketDelayThresholdValue_ms80_val,
	__si_xnap__ExcessPacketDelayThresholdValue_ms90_val,
	__si_xnap__ExcessPacketDelayThresholdValue_ms100_val,
	__si_xnap__ExcessPacketDelayThresholdValue_ms150_val,
	__si_xnap__ExcessPacketDelayThresholdValue_ms300_val,
	__si_xnap__ExcessPacketDelayThresholdValue_ms500_val
} SI_XNAP_DT_ExcessPacketDelayThresholdValue;


// L:2561
typedef enum __si_xnap_dt_ExcessPacketDelayThresholdValue2
{
	ExcessPacketDelayThresholdValue_ms0dot25_val,
	ExcessPacketDelayThresholdValue_ms0dot5_val,
	ExcessPacketDelayThresholdValue_ms1_val,
	ExcessPacketDelayThresholdValue_ms2_val,
	ExcessPacketDelayThresholdValue_ms4_val,
	ExcessPacketDelayThresholdValue_ms5_val,
	ExcessPacketDelayThresholdValue_ms10_val,
	ExcessPacketDelayThresholdValue_ms20_val,
	ExcessPacketDelayThresholdValue_ms30_val,
	ExcessPacketDelayThresholdValue_ms40_val,
	ExcessPacketDelayThresholdValue_ms50_val,
	ExcessPacketDelayThresholdValue_ms60_val,
	ExcessPacketDelayThresholdValue_ms70_val,
	ExcessPacketDelayThresholdValue_ms80_val,
	ExcessPacketDelayThresholdValue_ms90_val,
	ExcessPacketDelayThresholdValue_ms100_val,
	ExcessPacketDelayThresholdValue_ms150_val,
	ExcessPacketDelayThresholdValue_ms300_val,
	ExcessPacketDelayThresholdValue_ms500_val
} SI_XNAP_DT_ExcessPacketDelayThresholdValue2;


// L:2588
typedef struct __si_xnap_dt_ExcessPacketDelayThresholdValue_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ExcessPacketDelayThresholdValue_EnumProxy;


// ExcessPacketDelayThresholdItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ExcessPacketDelayThresholdItem
{
	unsigned long long int fiveQI;

	uint8_t selected_eexcessPacketDelayThresholdValue;
	int extSelected_eexcessPacketDelayThresholdValue;

} SI_XNAP_DT_ExcessPacketDelayThresholdItem;


// ExpectedActivityPeriod
// INTEGER,INTEGER(1..30|40|50|60|80|100|120|150|180|181,...),MIN=1,MAX=30  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_ExpectedActivityPeriod
{
	unsigned long long int data;
} SI_XNAP_DT_ExpectedActivityPeriod;

// ExpectedHOInterval
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ExpectedHOInterval
{
	__si_xnap__ExpectedHOInterval_sec15_val,
	__si_xnap__ExpectedHOInterval_sec30_val,
	__si_xnap__ExpectedHOInterval_sec60_val,
	__si_xnap__ExpectedHOInterval_sec90_val,
	__si_xnap__ExpectedHOInterval_sec120_val,
	__si_xnap__ExpectedHOInterval_sec180_val,
	__si_xnap__ExpectedHOInterval_long_time_val
} SI_XNAP_DT_ExpectedHOInterval;


// L:2561
typedef enum __si_xnap_dt_ExpectedHOInterval2
{
	ExpectedHOInterval_sec15_val,
	ExpectedHOInterval_sec30_val,
	ExpectedHOInterval_sec60_val,
	ExpectedHOInterval_sec90_val,
	ExpectedHOInterval_sec120_val,
	ExpectedHOInterval_sec180_val,
	ExpectedHOInterval_long_time_val
} SI_XNAP_DT_ExpectedHOInterval2;


// L:2588
typedef struct __si_xnap_dt_ExpectedHOInterval_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ExpectedHOInterval_EnumProxy;


// ExpectedIdlePeriod
// INTEGER,INTEGER(1..30|40|50|60|80|100|120|150|180|181,...),MIN=1,MAX=30  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_ExpectedIdlePeriod
{
	unsigned long long int data;
} SI_XNAP_DT_ExpectedIdlePeriod;

// SourceOfUEActivityBehaviourInformation
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SourceOfUEActivityBehaviourInformation
{
	__si_xnap__SourceOfUEActivityBehaviourInformation_subscription_information_val,
	__si_xnap__SourceOfUEActivityBehaviourInformation_statistics_val
} SI_XNAP_DT_SourceOfUEActivityBehaviourInformation;


// L:2561
typedef enum __si_xnap_dt_SourceOfUEActivityBehaviourInformation2
{
	SourceOfUEActivityBehaviourInformation_subscription_information_val,
	SourceOfUEActivityBehaviourInformation_statistics_val
} SI_XNAP_DT_SourceOfUEActivityBehaviourInformation2;


// L:2588
typedef struct __si_xnap_dt_SourceOfUEActivityBehaviourInformation_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SourceOfUEActivityBehaviourInformation_EnumProxy;


// ExpectedUEActivityBehaviour
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ExpectedUEActivityBehaviour
{
	unsigned long long int expectedActivityPeriod;
	int isPresent_expectedActivityPeriod;

	unsigned long long int expectedIdlePeriod;
	int isPresent_expectedIdlePeriod;

	uint8_t selected_esourceOfUEActivityBehaviourInformation;
	int extSelected_esourceOfUEActivityBehaviourInformation;
	int isPresent_sourceOfUEActivityBehaviourInformation;

} SI_XNAP_DT_ExpectedUEActivityBehaviour;


// ExpectedUEMobility
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ExpectedUEMobility
{
	__si_xnap__ExpectedUEMobility_stationary_val,
	__si_xnap__ExpectedUEMobility_mobile_val
} SI_XNAP_DT_ExpectedUEMobility;


// L:2561
typedef enum __si_xnap_dt_ExpectedUEMobility2
{
	ExpectedUEMobility_stationary_val,
	ExpectedUEMobility_mobile_val
} SI_XNAP_DT_ExpectedUEMobility2;


// L:2588
typedef struct __si_xnap_dt_ExpectedUEMobility_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ExpectedUEMobility_EnumProxy;


// ExpectedUEMovingTrajectory
//SEQUENCE OF ExpectedUEMovingTrajectoryItem, MIN=1, MAX=maxnoofCellsUEMovingTrajectory  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ExpectedUEMovingTrajectory
{
	SI_LinkedList * ExpectedUEMovingTrajectoryItem;
} SI_XNAP_DT_ExpectedUEMovingTrajectory;


// ExpectedUEBehaviour
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ExpectedUEBehaviour
{
	SI_XNAP_DT_ExpectedUEActivityBehaviour * expectedUEActivityBehaviour;
	int isPresent_expectedUEActivityBehaviour;

	uint8_t selected_eexpectedHOInterval;
	int extSelected_eexpectedHOInterval;
	int isPresent_expectedHOInterval;

	uint8_t selected_eexpectedUEMobility;
	int extSelected_eexpectedUEMobility;
	int isPresent_expectedUEMobility;

	SI_XNAP_DT_ExpectedUEMovingTrajectory * expectedUEMovingTrajectory;
	int isPresent_expectedUEMovingTrajectory;

} SI_XNAP_DT_ExpectedUEBehaviour;


// ExpectedUEMovingTrajectoryItem_timeStayedInCell
// INTEGER,INTEGER(0..4095),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_ExpectedUEMovingTrajectoryItem_timeStayedInCell
{
	unsigned long long int data;
} SI_XNAP_DT_ExpectedUEMovingTrajectoryItem_timeStayedInCell;

// ExpectedUEMovingTrajectoryItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ExpectedUEMovingTrajectoryItem
{
	SI_XNAP_DT_GlobalNG_RANCell_ID * nGRAN_CGI;

	unsigned long long int timeStayedInCell;
	int isPresent_timeStayedInCell;

} SI_XNAP_DT_ExpectedUEMovingTrajectoryItem;


// ExtendedRATRestrictionInformation_primaryRATRestriction
// BITSTRING,BIT STRING(SIZE(8,..., 16))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_ExtendedRATRestrictionInformation_primaryRATRestriction
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_ExtendedRATRestrictionInformation_primaryRATRestriction;

// ExtendedRATRestrictionInformation_secondaryRATRestriction
// BITSTRING,BIT STRING(SIZE(8,...))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_ExtendedRATRestrictionInformation_secondaryRATRestriction
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_ExtendedRATRestrictionInformation_secondaryRATRestriction;

// ExtendedRATRestrictionInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ExtendedRATRestrictionInformation
{
	SI_XNAP_DT_ExtendedRATRestrictionInformation_primaryRATRestriction * primaryRATRestriction;

	SI_XNAP_DT_ExtendedRATRestrictionInformation_secondaryRATRestriction * secondaryRATRestriction;

} SI_XNAP_DT_ExtendedRATRestrictionInformation;


// ExtendedPacketDelayBudget
// INTEGER,INTEGER(0..65535,..., 65536..109999),MIN=0,MAX=65535  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_ExtendedPacketDelayBudget
{
	unsigned long long int data;
} SI_XNAP_DT_ExtendedPacketDelayBudget;

// ExtendedSliceSupportList
//SEQUENCE OF S-NSSAI, MIN=1, MAX=maxnoofExtSliceItems  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ExtendedSliceSupportList
{
	SI_LinkedList * S_NSSAI;
} SI_XNAP_DT_ExtendedSliceSupportList;


// ExtendedUEIdentityIndexValue
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_ExtendedUEIdentityIndexValue
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_ExtendedUEIdentityIndexValue;

// ExtTLAs
//SEQUENCE OF ExtTLA-Item, MIN=1, MAX=maxnoofExtTLAs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ExtTLAs
{
	SI_LinkedList * ExtTLA_Item;
} SI_XNAP_DT_ExtTLAs;


// GTPTLAs
//SEQUENCE OF GTPTLA-Item, MIN=1, MAX= maxnoofGTPTLAs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_GTPTLAs
{
	SI_LinkedList * GTPTLA_Item;
} SI_XNAP_DT_GTPTLAs;


// ExtTLA-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ExtTLA_Item
{
	SI_XNAP_DT_TransportLayerAddress * iPsecTLA;
	int isPresent_iPsecTLA;

	SI_XNAP_DT_GTPTLAs * gTPTransportLayerAddresses;
	int isPresent_gTPTransportLayerAddresses;

} SI_XNAP_DT_ExtTLA_Item;


// GTPTLA-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_GTPTLA_Item
{
	SI_XNAP_DT_TransportLayerAddress * gTPTransportLayerAddresses;

} SI_XNAP_DT_GTPTLA_Item;


// F1CTrafficContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_F1CTrafficContainer
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_F1CTrafficContainer;

// F1-terminatingIAB-donorIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_F1_terminatingIAB_donorIndicator
{
	__si_xnap__F1_terminatingIAB_donorIndicator_true_val
} SI_XNAP_DT_F1_terminatingIAB_donorIndicator;


// L:2561
typedef enum __si_xnap_dt_F1_terminatingIAB_donorIndicator2
{
	F1_terminatingIAB_donorIndicator_true_val
} SI_XNAP_DT_F1_terminatingIAB_donorIndicator2;


// L:2588
typedef struct __si_xnap_dt_F1_terminatingIAB_donorIndicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_F1_terminatingIAB_donorIndicator_EnumProxy;


// F1TerminatingBHInformation-List
//SEQUENCE OF F1TerminatingBHInformation-Item, MIN=1, MAX=maxnoofBHInfo  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_F1TerminatingBHInformation_List
{
	SI_LinkedList * F1TerminatingBHInformation_Item;
} SI_XNAP_DT_F1TerminatingBHInformation_List;


// F1-TerminatingTopologyBHInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_F1_TerminatingTopologyBHInformation
{
	SI_XNAP_DT_F1TerminatingBHInformation_List * f1TerminatingBHInformation_List;

} SI_XNAP_DT_F1_TerminatingTopologyBHInformation;


// IABTNLAddress_iPv4Address
// BITSTRING,BIT STRING(SIZE(32))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_IABTNLAddress_iPv4Address
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_IABTNLAddress_iPv4Address;

// IABTNLAddress_iPv6Address
// BITSTRING,BIT STRING(SIZE(128))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_IABTNLAddress_iPv6Address
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_IABTNLAddress_iPv6Address;

// IABTNLAddress_iPv6Prefix
// BITSTRING,BIT STRING(SIZE(64))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_IABTNLAddress_iPv6Prefix
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_IABTNLAddress_iPv6Prefix;

// IABTNLAddress
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_IABTNLAddress
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_IABTNLAddress_iPv4Address * iPv4Address;

		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_IABTNLAddress_iPv6Address * iPv6Address;

		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_IABTNLAddress_iPv6Prefix * iPv6Prefix;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_IABTNLAddress_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_IABTNLAddress;


// ULF1Terminating-BHInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ULF1Terminating_BHInfo
{
	SI_XNAP_DT_BAPRoutingID * ingressBAPRoutingID;

	SI_XNAP_DT_BHRLCChannelID * ingressBHRLCCHID;

} SI_XNAP_DT_ULF1Terminating_BHInfo;


// F1TerminatingBHInformation-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_F1TerminatingBHInformation_Item
{
	unsigned long long int bHInfoIndex;

	SI_XNAP_DT_IABTNLAddress * dLTNLAddress;

	SI_XNAP_DT_DLF1Terminating_BHInfo * dlF1TerminatingBHInfo;
	int isPresent_dlF1TerminatingBHInfo;

	SI_XNAP_DT_ULF1Terminating_BHInfo * ulF1TerminatingBHInfo;
	int isPresent_ulF1TerminatingBHInfo;

} SI_XNAP_DT_F1TerminatingBHInformation_Item;


// FiveGCMobilityRestrictionListContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_FiveGCMobilityRestrictionListContainer
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_FiveGCMobilityRestrictionListContainer;

// FiveGProSeDirectDiscovery
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_FiveGProSeDirectDiscovery
{
	__si_xnap__FiveGProSeDirectDiscovery_authorized_val,
	__si_xnap__FiveGProSeDirectDiscovery_not_authorized_val
} SI_XNAP_DT_FiveGProSeDirectDiscovery;


// L:2561
typedef enum __si_xnap_dt_FiveGProSeDirectDiscovery2
{
	FiveGProSeDirectDiscovery_authorized_val,
	FiveGProSeDirectDiscovery_not_authorized_val
} SI_XNAP_DT_FiveGProSeDirectDiscovery2;


// L:2588
typedef struct __si_xnap_dt_FiveGProSeDirectDiscovery_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_FiveGProSeDirectDiscovery_EnumProxy;


// FiveGProSeDirectCommunication
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_FiveGProSeDirectCommunication
{
	__si_xnap__FiveGProSeDirectCommunication_authorized_val,
	__si_xnap__FiveGProSeDirectCommunication_not_authorized_val
} SI_XNAP_DT_FiveGProSeDirectCommunication;


// L:2561
typedef enum __si_xnap_dt_FiveGProSeDirectCommunication2
{
	FiveGProSeDirectCommunication_authorized_val,
	FiveGProSeDirectCommunication_not_authorized_val
} SI_XNAP_DT_FiveGProSeDirectCommunication2;


// L:2588
typedef struct __si_xnap_dt_FiveGProSeDirectCommunication_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_FiveGProSeDirectCommunication_EnumProxy;


// FiveGProSeLayer2UEtoNetworkRelay
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_FiveGProSeLayer2UEtoNetworkRelay
{
	__si_xnap__FiveGProSeLayer2UEtoNetworkRelay_authorized_val,
	__si_xnap__FiveGProSeLayer2UEtoNetworkRelay_not_authorized_val
} SI_XNAP_DT_FiveGProSeLayer2UEtoNetworkRelay;


// L:2561
typedef enum __si_xnap_dt_FiveGProSeLayer2UEtoNetworkRelay2
{
	FiveGProSeLayer2UEtoNetworkRelay_authorized_val,
	FiveGProSeLayer2UEtoNetworkRelay_not_authorized_val
} SI_XNAP_DT_FiveGProSeLayer2UEtoNetworkRelay2;


// L:2588
typedef struct __si_xnap_dt_FiveGProSeLayer2UEtoNetworkRelay_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_FiveGProSeLayer2UEtoNetworkRelay_EnumProxy;


// FiveGProSeLayer3UEtoNetworkRelay
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_FiveGProSeLayer3UEtoNetworkRelay
{
	__si_xnap__FiveGProSeLayer3UEtoNetworkRelay_authorized_val,
	__si_xnap__FiveGProSeLayer3UEtoNetworkRelay_not_authorized_val
} SI_XNAP_DT_FiveGProSeLayer3UEtoNetworkRelay;


// L:2561
typedef enum __si_xnap_dt_FiveGProSeLayer3UEtoNetworkRelay2
{
	FiveGProSeLayer3UEtoNetworkRelay_authorized_val,
	FiveGProSeLayer3UEtoNetworkRelay_not_authorized_val
} SI_XNAP_DT_FiveGProSeLayer3UEtoNetworkRelay2;


// L:2588
typedef struct __si_xnap_dt_FiveGProSeLayer3UEtoNetworkRelay_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_FiveGProSeLayer3UEtoNetworkRelay_EnumProxy;


// FiveGProSeLayer2RemoteUE
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_FiveGProSeLayer2RemoteUE
{
	__si_xnap__FiveGProSeLayer2RemoteUE_authorized_val,
	__si_xnap__FiveGProSeLayer2RemoteUE_not_authorized_val
} SI_XNAP_DT_FiveGProSeLayer2RemoteUE;


// L:2561
typedef enum __si_xnap_dt_FiveGProSeLayer2RemoteUE2
{
	FiveGProSeLayer2RemoteUE_authorized_val,
	FiveGProSeLayer2RemoteUE_not_authorized_val
} SI_XNAP_DT_FiveGProSeLayer2RemoteUE2;


// L:2588
typedef struct __si_xnap_dt_FiveGProSeLayer2RemoteUE_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_FiveGProSeLayer2RemoteUE_EnumProxy;


// FiveGProSeAuthorized
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_FiveGProSeAuthorized
{
	uint8_t selected_efiveGproSeDirectDiscovery;
	int extSelected_efiveGproSeDirectDiscovery;
	int isPresent_fiveGproSeDirectDiscovery;

	uint8_t selected_efiveGproSeDirectCommunication;
	int extSelected_efiveGproSeDirectCommunication;
	int isPresent_fiveGproSeDirectCommunication;

	uint8_t selected_efiveGnrProSeLayer2UEtoNetworkRelay;
	int extSelected_efiveGnrProSeLayer2UEtoNetworkRelay;
	int isPresent_fiveGnrProSeLayer2UEtoNetworkRelay;

	uint8_t selected_efiveGnrProSeLayer3UEtoNetworkRelay;
	int extSelected_efiveGnrProSeLayer3UEtoNetworkRelay;
	int isPresent_fiveGnrProSeLayer3UEtoNetworkRelay;

	uint8_t selected_efiveGnrProSeLayer2RemoteUE;
	int extSelected_efiveGnrProSeLayer2RemoteUE;
	int isPresent_fiveGnrProSeLayer2RemoteUE;

} SI_XNAP_DT_FiveGProSeAuthorized;


// FiveGProSeLayer2Multipath
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_FiveGProSeLayer2Multipath
{
	__si_xnap__FiveGProSeLayer2Multipath_authorized_val,
	__si_xnap__FiveGProSeLayer2Multipath_not_authorized_val
} SI_XNAP_DT_FiveGProSeLayer2Multipath;


// L:2561
typedef enum __si_xnap_dt_FiveGProSeLayer2Multipath2
{
	FiveGProSeLayer2Multipath_authorized_val,
	FiveGProSeLayer2Multipath_not_authorized_val
} SI_XNAP_DT_FiveGProSeLayer2Multipath2;


// L:2588
typedef struct __si_xnap_dt_FiveGProSeLayer2Multipath_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_FiveGProSeLayer2Multipath_EnumProxy;


// FiveGProSeLayer2UEtoUERelay
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_FiveGProSeLayer2UEtoUERelay
{
	__si_xnap__FiveGProSeLayer2UEtoUERelay_authorized_val,
	__si_xnap__FiveGProSeLayer2UEtoUERelay_not_authorized_val
} SI_XNAP_DT_FiveGProSeLayer2UEtoUERelay;


// L:2561
typedef enum __si_xnap_dt_FiveGProSeLayer2UEtoUERelay2
{
	FiveGProSeLayer2UEtoUERelay_authorized_val,
	FiveGProSeLayer2UEtoUERelay_not_authorized_val
} SI_XNAP_DT_FiveGProSeLayer2UEtoUERelay2;


// L:2588
typedef struct __si_xnap_dt_FiveGProSeLayer2UEtoUERelay_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_FiveGProSeLayer2UEtoUERelay_EnumProxy;


// FiveGProSeLayer2UEtoUERemote
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_FiveGProSeLayer2UEtoUERemote
{
	__si_xnap__FiveGProSeLayer2UEtoUERemote_authorized_val,
	__si_xnap__FiveGProSeLayer2UEtoUERemote_not_authorized_val
} SI_XNAP_DT_FiveGProSeLayer2UEtoUERemote;


// L:2561
typedef enum __si_xnap_dt_FiveGProSeLayer2UEtoUERemote2
{
	FiveGProSeLayer2UEtoUERemote_authorized_val,
	FiveGProSeLayer2UEtoUERemote_not_authorized_val
} SI_XNAP_DT_FiveGProSeLayer2UEtoUERemote2;


// L:2588
typedef struct __si_xnap_dt_FiveGProSeLayer2UEtoUERemote_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_FiveGProSeLayer2UEtoUERemote_EnumProxy;


// FiveGProSePC5QoSFlowList
//SEQUENCE OF FiveGProSePC5QoSFlowItem, MIN=1, MAX=maxnoofPC5QoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_FiveGProSePC5QoSFlowList
{
	SI_LinkedList * FiveGProSePC5QoSFlowItem;
} SI_XNAP_DT_FiveGProSePC5QoSFlowList;


// FiveGProSePC5QoSParameters
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_FiveGProSePC5QoSParameters
{
	SI_XNAP_DT_FiveGProSePC5QoSFlowList * fiveGProSepc5QoSFlowList;

	unsigned long long int fiveGproSepc5LinkAggregateBitRates;
	int isPresent_fiveGproSepc5LinkAggregateBitRates;

} SI_XNAP_DT_FiveGProSePC5QoSParameters;


// FiveGProSePC5FlowBitRates
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_FiveGProSePC5FlowBitRates
{
	unsigned long long int fiveGproSeguaranteedFlowBitRate;

	unsigned long long int fiveGproSemaximumFlowBitRate;

} SI_XNAP_DT_FiveGProSePC5FlowBitRates;


// FiveGProSePC5QoSFlowItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_FiveGProSePC5QoSFlowItem
{
	unsigned long long int fiveGproSepQI;

	SI_XNAP_DT_FiveGProSePC5FlowBitRates * fiveGproSepc5FlowBitRates;
	int isPresent_fiveGproSepc5FlowBitRates;

	uint8_t selected_efiveGproSerange;
	int extSelected_efiveGproSerange;
	int isPresent_fiveGproSerange;

} SI_XNAP_DT_FiveGProSePC5QoSFlowItem;


// Flows-Mapped-To-DRB-List
//SEQUENCE OF Flows-Mapped-To-DRB-Item, MIN=1, MAX= maxnoofQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_Flows_Mapped_To_DRB_List
{
	SI_LinkedList * Flows_Mapped_To_DRB_Item;
} SI_XNAP_DT_Flows_Mapped_To_DRB_List;


// NonDynamic5QIDescriptor
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NonDynamic5QIDescriptor
{
	unsigned long long int fiveQI;

	unsigned long long int priorityLevelQoS;
	int isPresent_priorityLevelQoS;

	unsigned long long int averagingWindow;
	int isPresent_averagingWindow;

	unsigned long long int maximumDataBurstVolume;
	int isPresent_maximumDataBurstVolume;

} SI_XNAP_DT_NonDynamic5QIDescriptor;


// QoSCharacteristics
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_QoSCharacteristics
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_NonDynamic5QIDescriptor * non_dynamic;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_Dynamic5QIDescriptor * dynamic;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_QoSCharacteristics_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_QoSCharacteristics;


// GBRQoSFlowInfo_notificationControl
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_GBRQoSFlowInfo_notificationControl
{
	__si_xnap__GBRQoSFlowInfo_notificationControl_notification_requested_val
} SI_XNAP_DT_GBRQoSFlowInfo_notificationControl;


// L:2561
typedef enum __si_xnap_dt_GBRQoSFlowInfo_notificationControl2
{
	GBRQoSFlowInfo_notificationControl_notification_requested_val
} SI_XNAP_DT_GBRQoSFlowInfo_notificationControl2;


// L:2588
typedef struct __si_xnap_dt_GBRQoSFlowInfo_notificationControl_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_GBRQoSFlowInfo_notificationControl_EnumProxy;


// PacketLossRate
// INTEGER,INTEGER(0..1000,...),MIN=0,MAX=1000  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_PacketLossRate
{
	unsigned long long int data;
} SI_XNAP_DT_PacketLossRate;

// GBRQoSFlowInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_GBRQoSFlowInfo
{
	unsigned long long int maxFlowBitRateDL;

	unsigned long long int maxFlowBitRateUL;

	unsigned long long int guaranteedFlowBitRateDL;

	unsigned long long int guaranteedFlowBitRateUL;

	uint8_t selected_enotificationControl;
	int extSelected_enotificationControl;
	int isPresent_notificationControl;

	unsigned long long int maxPacketLossRateDL;
	int isPresent_maxPacketLossRateDL;

	unsigned long long int maxPacketLossRateUL;
	int isPresent_maxPacketLossRateUL;

} SI_XNAP_DT_GBRQoSFlowInfo;


// ReflectiveQoSAttribute
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ReflectiveQoSAttribute
{
	__si_xnap__ReflectiveQoSAttribute_subject_to_reflective_QoS_val
} SI_XNAP_DT_ReflectiveQoSAttribute;


// L:2561
typedef enum __si_xnap_dt_ReflectiveQoSAttribute2
{
	ReflectiveQoSAttribute_subject_to_reflective_QoS_val
} SI_XNAP_DT_ReflectiveQoSAttribute2;


// L:2588
typedef struct __si_xnap_dt_ReflectiveQoSAttribute_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ReflectiveQoSAttribute_EnumProxy;


// QoSFlowLevelQoSParameters_additionalQoSflowInfo
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_QoSFlowLevelQoSParameters_additionalQoSflowInfo
{
	__si_xnap__QoSFlowLevelQoSParameters_additionalQoSflowInfo_more_likely_val
} SI_XNAP_DT_QoSFlowLevelQoSParameters_additionalQoSflowInfo;


// L:2561
typedef enum __si_xnap_dt_QoSFlowLevelQoSParameters_additionalQoSflowInfo2
{
	QoSFlowLevelQoSParameters_additionalQoSflowInfo_more_likely_val
} SI_XNAP_DT_QoSFlowLevelQoSParameters_additionalQoSflowInfo2;


// L:2588
typedef struct __si_xnap_dt_QoSFlowLevelQoSParameters_additionalQoSflowInfo_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_QoSFlowLevelQoSParameters_additionalQoSflowInfo_EnumProxy;


// QoSFlowLevelQoSParameters
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoSFlowLevelQoSParameters
{
	SI_XNAP_DT_QoSCharacteristics * qos_characteristics;

	SI_XNAP_DT_AllocationandRetentionPriority * allocationAndRetentionPrio;

	SI_XNAP_DT_GBRQoSFlowInfo * gBRQoSFlowInfo;
	int isPresent_gBRQoSFlowInfo;

	uint8_t selected_ereflectiveQoS;
	int extSelected_ereflectiveQoS;
	int isPresent_reflectiveQoS;

	uint8_t selected_eadditionalQoSflowInfo;
	int extSelected_eadditionalQoSflowInfo;
	int isPresent_additionalQoSflowInfo;

} SI_XNAP_DT_QoSFlowLevelQoSParameters;


// QoSFlowMappingIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_QoSFlowMappingIndication
{
	__si_xnap__QoSFlowMappingIndication_ul_val,
	__si_xnap__QoSFlowMappingIndication_dl_val
} SI_XNAP_DT_QoSFlowMappingIndication;


// L:2561
typedef enum __si_xnap_dt_QoSFlowMappingIndication2
{
	QoSFlowMappingIndication_ul_val,
	QoSFlowMappingIndication_dl_val
} SI_XNAP_DT_QoSFlowMappingIndication2;


// L:2588
typedef struct __si_xnap_dt_QoSFlowMappingIndication_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_QoSFlowMappingIndication_EnumProxy;


// Flows-Mapped-To-DRB-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_Flows_Mapped_To_DRB_Item
{
	unsigned long long int qoSFlowIdentifier;

	SI_XNAP_DT_QoSFlowLevelQoSParameters * qoSFlowLevelQoSParameters;

	uint8_t selected_eqoSFlowMappingIndication;
	int extSelected_eqoSFlowMappingIndication;
	int isPresent_qoSFlowMappingIndication;

} SI_XNAP_DT_Flows_Mapped_To_DRB_Item;


// FreqDomainHSNAconfiguration-List
//SEQUENCE OF FreqDomainHSNAconfiguration-List-Item, MIN=1, MAX= maxnoofHSNASlots  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_FreqDomainHSNAconfiguration_List
{
	SI_LinkedList * FreqDomainHSNAconfiguration_List_Item;
} SI_XNAP_DT_FreqDomainHSNAconfiguration_List;


// FreqDomainHSNAconfigurationListItem_rBsetIndex
// INTEGER,INTEGER(0.. maxnoofRBsetsPerCell1,...),MIN=0,MAX=NaN  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_FreqDomainHSNAconfigurationListItem_rBsetIndex
{
	unsigned long long int data;
} SI_XNAP_DT_FreqDomainHSNAconfigurationListItem_rBsetIndex;

// FreqDomainSlotHSNAconfiguration-List
//SEQUENCE OF FreqDomainSlotHSNAconfiguration-List-Item, MIN=1, MAX= maxnoofHSNASlots  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_FreqDomainSlotHSNAconfiguration_List
{
	SI_LinkedList * FreqDomainSlotHSNAconfiguration_List_Item;
} SI_XNAP_DT_FreqDomainSlotHSNAconfiguration_List;


// FreqDomainHSNAconfiguration-List-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_FreqDomainHSNAconfiguration_List_Item
{
	unsigned long long int rBsetIndex;

	SI_XNAP_DT_FreqDomainSlotHSNAconfiguration_List * freqDomainSlotHSNAconfiguration_List;

} SI_XNAP_DT_FreqDomainHSNAconfiguration_List_Item;


// FreqDomainSlotHSNAconfigurationListItem_slotIndex
// INTEGER,INTEGER(1..maxnoofHSNASlots),MIN=1,MAX=NaN  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_FreqDomainSlotHSNAconfigurationListItem_slotIndex
{
	unsigned long long int data;
} SI_XNAP_DT_FreqDomainSlotHSNAconfigurationListItem_slotIndex;

// HSNADownlink
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_HSNADownlink
{
	__si_xnap__HSNADownlink_hard_val,
	__si_xnap__HSNADownlink_soft_val,
	__si_xnap__HSNADownlink_notavailable_val
} SI_XNAP_DT_HSNADownlink;


// L:2561
typedef enum __si_xnap_dt_HSNADownlink2
{
	HSNADownlink_hard_val,
	HSNADownlink_soft_val,
	HSNADownlink_notavailable_val
} SI_XNAP_DT_HSNADownlink2;


// L:2588
typedef struct __si_xnap_dt_HSNADownlink_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_HSNADownlink_EnumProxy;


// HSNAUplink
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_HSNAUplink
{
	__si_xnap__HSNAUplink_hard_val,
	__si_xnap__HSNAUplink_soft_val,
	__si_xnap__HSNAUplink_notavailable_val
} SI_XNAP_DT_HSNAUplink;


// L:2561
typedef enum __si_xnap_dt_HSNAUplink2
{
	HSNAUplink_hard_val,
	HSNAUplink_soft_val,
	HSNAUplink_notavailable_val
} SI_XNAP_DT_HSNAUplink2;


// L:2588
typedef struct __si_xnap_dt_HSNAUplink_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_HSNAUplink_EnumProxy;


// HSNAFlexible
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_HSNAFlexible
{
	__si_xnap__HSNAFlexible_hard_val,
	__si_xnap__HSNAFlexible_soft_val,
	__si_xnap__HSNAFlexible_notavailable_val
} SI_XNAP_DT_HSNAFlexible;


// L:2561
typedef enum __si_xnap_dt_HSNAFlexible2
{
	HSNAFlexible_hard_val,
	HSNAFlexible_soft_val,
	HSNAFlexible_notavailable_val
} SI_XNAP_DT_HSNAFlexible2;


// L:2588
typedef struct __si_xnap_dt_HSNAFlexible_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_HSNAFlexible_EnumProxy;


// FreqDomainSlotHSNAconfiguration-List-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_FreqDomainSlotHSNAconfiguration_List_Item
{
	unsigned long long int slotIndex;

	uint8_t selected_ehSNADownlink;
	int extSelected_ehSNADownlink;
	int isPresent_hSNADownlink;

	uint8_t selected_ehSNAUplink;
	int extSelected_ehSNAUplink;
	int isPresent_hSNAUplink;

	uint8_t selected_ehSNAFlexible;
	int extSelected_ehSNAFlexible;
	int isPresent_hSNAFlexible;

} SI_XNAP_DT_FreqDomainSlotHSNAconfiguration_List_Item;


// FrequencyShift7p5khz
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_FrequencyShift7p5khz
{
	__si_xnap__FrequencyShift7p5khz_false_val,
	__si_xnap__FrequencyShift7p5khz_true_val
} SI_XNAP_DT_FrequencyShift7p5khz;


// L:2561
typedef enum __si_xnap_dt_FrequencyShift7p5khz2
{
	FrequencyShift7p5khz_false_val,
	FrequencyShift7p5khz_true_val
} SI_XNAP_DT_FrequencyShift7p5khz2;


// L:2588
typedef struct __si_xnap_dt_FrequencyShift7p5khz_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_FrequencyShift7p5khz_EnumProxy;


// SSB-subcarrierSpacing
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SSB_subcarrierSpacing
{
	__si_xnap__SSB_subcarrierSpacing_kHz15_val,
	__si_xnap__SSB_subcarrierSpacing_kHz30_val,
	__si_xnap__SSB_subcarrierSpacing_kHz120_val,
	__si_xnap__SSB_subcarrierSpacing_kHz240_val,
	__si_xnap__SSB_subcarrierSpacing_spare3_val,
	__si_xnap__SSB_subcarrierSpacing_spare2_val,
	__si_xnap__SSB_subcarrierSpacing_spare1_val
} SI_XNAP_DT_SSB_subcarrierSpacing;


// L:2561
typedef enum __si_xnap_dt_SSB_subcarrierSpacing2
{
	SSB_subcarrierSpacing_kHz15_val,
	SSB_subcarrierSpacing_kHz30_val,
	SSB_subcarrierSpacing_kHz120_val,
	SSB_subcarrierSpacing_kHz240_val,
	SSB_subcarrierSpacing_spare3_val,
	SSB_subcarrierSpacing_spare2_val,
	SSB_subcarrierSpacing_spare1_val
} SI_XNAP_DT_SSB_subcarrierSpacing2;


// L:2588
typedef struct __si_xnap_dt_SSB_subcarrierSpacing_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SSB_subcarrierSpacing_EnumProxy;


// HSNATransmissionPeriodicity
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_HSNATransmissionPeriodicity
{
	__si_xnap__HSNATransmissionPeriodicity_ms0p5_val,
	__si_xnap__HSNATransmissionPeriodicity_ms0p625_val,
	__si_xnap__HSNATransmissionPeriodicity_ms1_val,
	__si_xnap__HSNATransmissionPeriodicity_ms1p25_val,
	__si_xnap__HSNATransmissionPeriodicity_ms2_val,
	__si_xnap__HSNATransmissionPeriodicity_ms2p5_val,
	__si_xnap__HSNATransmissionPeriodicity_ms5_val,
	__si_xnap__HSNATransmissionPeriodicity_ms10_val,
	__si_xnap__HSNATransmissionPeriodicity_ms20_val,
	__si_xnap__HSNATransmissionPeriodicity_ms40_val,
	__si_xnap__HSNATransmissionPeriodicity_ms80_val,
	__si_xnap__HSNATransmissionPeriodicity_ms160_val
} SI_XNAP_DT_HSNATransmissionPeriodicity;


// L:2561
typedef enum __si_xnap_dt_HSNATransmissionPeriodicity2
{
	HSNATransmissionPeriodicity_ms0p5_val,
	HSNATransmissionPeriodicity_ms0p625_val,
	HSNATransmissionPeriodicity_ms1_val,
	HSNATransmissionPeriodicity_ms1p25_val,
	HSNATransmissionPeriodicity_ms2_val,
	HSNATransmissionPeriodicity_ms2p5_val,
	HSNATransmissionPeriodicity_ms5_val,
	HSNATransmissionPeriodicity_ms10_val,
	HSNATransmissionPeriodicity_ms20_val,
	HSNATransmissionPeriodicity_ms40_val,
	HSNATransmissionPeriodicity_ms80_val,
	HSNATransmissionPeriodicity_ms160_val
} SI_XNAP_DT_HSNATransmissionPeriodicity2;


// L:2588
typedef struct __si_xnap_dt_HSNATransmissionPeriodicity_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_HSNATransmissionPeriodicity_EnumProxy;


// HSNASlotConfigList
//SEQUENCE OF HSNASlotConfigItem, MIN=1, MAX=maxnoofHSNASlots  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_HSNASlotConfigList
{
	SI_LinkedList * HSNASlotConfigItem;
} SI_XNAP_DT_HSNASlotConfigList;


// RBsetConfiguration_rBsetSize
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_RBsetConfiguration_rBsetSize
{
	__si_xnap__RBsetConfiguration_rBsetSize_rb2_val,
	__si_xnap__RBsetConfiguration_rBsetSize_rb4_val,
	__si_xnap__RBsetConfiguration_rBsetSize_rb8_val,
	__si_xnap__RBsetConfiguration_rBsetSize_rb16_val,
	__si_xnap__RBsetConfiguration_rBsetSize_rb32_val,
	__si_xnap__RBsetConfiguration_rBsetSize_rb64_val
} SI_XNAP_DT_RBsetConfiguration_rBsetSize;


// L:2561
typedef enum __si_xnap_dt_RBsetConfiguration_rBsetSize2
{
	RBsetConfiguration_rBsetSize_rb2_val,
	RBsetConfiguration_rBsetSize_rb4_val,
	RBsetConfiguration_rBsetSize_rb8_val,
	RBsetConfiguration_rBsetSize_rb16_val,
	RBsetConfiguration_rBsetSize_rb32_val,
	RBsetConfiguration_rBsetSize_rb64_val
} SI_XNAP_DT_RBsetConfiguration_rBsetSize2;


// L:2588
typedef struct __si_xnap_dt_RBsetConfiguration_rBsetSize_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_RBsetConfiguration_rBsetSize_EnumProxy;


// RBsetConfiguration_numberofRBSets
// INTEGER,INTEGER(1.. maxnoofRBsetsPerCell),MIN=1,MAX=NaN  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_RBsetConfiguration_numberofRBSets
{
	unsigned long long int data;
} SI_XNAP_DT_RBsetConfiguration_numberofRBSets;

// RBsetConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RBsetConfiguration
{
	uint8_t selected_esubcarrierSpacing;
	int extSelected_esubcarrierSpacing;

	uint8_t selected_erBsetSize;
	int extSelected_erBsetSize;

	unsigned long long int numberofRBSets;

} SI_XNAP_DT_RBsetConfiguration;


// NACellResourceConfigurationList
//SEQUENCE OF NACellResourceConfiguration-Item, MIN=1, MAX=maxnoofHSNASlots  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_NACellResourceConfigurationList
{
	SI_LinkedList * NACellResourceConfiguration_Item;
} SI_XNAP_DT_NACellResourceConfigurationList;


// GNB-DU-Cell-Resource-Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_GNB_DU_Cell_Resource_Configuration
{
	uint8_t selected_esubcarrierSpacing;
	int extSelected_esubcarrierSpacing;

	uint8_t selected_edUFTransmissionPeriodicity;
	int extSelected_edUFTransmissionPeriodicity;
	int isPresent_dUFTransmissionPeriodicity;

	SI_XNAP_DT_DUF_Slot_Config_List * dUF_Slot_Config_List;
	int isPresent_dUF_Slot_Config_List;

	uint8_t selected_ehSNATransmissionPeriodicity;
	int extSelected_ehSNATransmissionPeriodicity;

	SI_XNAP_DT_HSNASlotConfigList * hNSASlotConfigList;
	int isPresent_hNSASlotConfigList;

	SI_XNAP_DT_RBsetConfiguration * rBsetConfiguration;
	int isPresent_rBsetConfiguration;

	SI_XNAP_DT_FreqDomainHSNAconfiguration_List * freqDomainHSNAconfiguration_List;
	int isPresent_freqDomainHSNAconfiguration_List;

	SI_XNAP_DT_NACellResourceConfigurationList * nACellResourceConfigurationList;
	int isPresent_nACellResourceConfigurationList;

} SI_XNAP_DT_GNB_DU_Cell_Resource_Configuration;


// GUAMI_amf-region-id
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_GUAMI_amf_region_id
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_GUAMI_amf_region_id;

// GUAMI_amf-set-id
// BITSTRING,BIT STRING(SIZE(10))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_GUAMI_amf_set_id
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_GUAMI_amf_set_id;

// GUAMI_amf-pointer
// BITSTRING,BIT STRING(SIZE(6))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_GUAMI_amf_pointer
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_GUAMI_amf_pointer;

// GUAMI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_GUAMI
{
	SI_XNAP_DT_PLMN_Identity * plmn_ID;

	SI_XNAP_DT_GUAMI_amf_region_id * amf_region_id;

	SI_XNAP_DT_GUAMI_amf_set_id * amf_set_id;

	SI_XNAP_DT_GUAMI_amf_pointer * amf_pointer;

} SI_XNAP_DT_GUAMI;


// HandoverReportType
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_HandoverReportType
{
	__si_xnap__HandoverReportType_hoTooEarly_val,
	__si_xnap__HandoverReportType_hoToWrongCell_val,
	__si_xnap__HandoverReportType_intersystempingpong_val
} SI_XNAP_DT_HandoverReportType;


// L:2561
typedef enum __si_xnap_dt_HandoverReportType2
{
	HandoverReportType_hoTooEarly_val,
	HandoverReportType_hoToWrongCell_val,
	HandoverReportType_intersystempingpong_val
} SI_XNAP_DT_HandoverReportType2;


// L:2588
typedef struct __si_xnap_dt_HandoverReportType_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_HandoverReportType_EnumProxy;


// HashedUEIdentityIndexValue
// BITSTRING,BIT STRING(SIZE(13,...))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_HashedUEIdentityIndexValue
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_HashedUEIdentityIndexValue;

// HSNASlotConfigItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_HSNASlotConfigItem
{
	uint8_t selected_ehSNADownlink;
	int extSelected_ehSNADownlink;
	int isPresent_hSNADownlink;

	uint8_t selected_ehSNAUplink;
	int extSelected_ehSNAUplink;
	int isPresent_hSNAUplink;

	uint8_t selected_ehSNAFlexible;
	int extSelected_ehSNAFlexible;
	int isPresent_hSNAFlexible;

} SI_XNAP_DT_HSNASlotConfigItem;


// IABCellInformation_cSI-RS-Configuration
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_IABCellInformation_cSI_RS_Configuration
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_IABCellInformation_cSI_RS_Configuration;

// IABCellInformation_sR-Configuration
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_IABCellInformation_sR_Configuration
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_IABCellInformation_sR_Configuration;

// IABCellInformation_pDCCH-ConfigSIB1
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_IABCellInformation_pDCCH_ConfigSIB1
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_IABCellInformation_pDCCH_ConfigSIB1;

// IABCellInformation_sCS-Common
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_IABCellInformation_sCS_Common
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_IABCellInformation_sCS_Common;

// NRCarrierList
//SEQUENCE OF NRCarrierItem, MIN=1, MAX=maxnoofNRSCSs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_NRCarrierList
{
	SI_LinkedList * NRCarrierItem;
} SI_XNAP_DT_NRCarrierList;


// IAB-DU-Cell-Resource-Configuration-TDD-Info
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_IAB_DU_Cell_Resource_Configuration_TDD_Info
{
	SI_XNAP_DT_GNB_DU_Cell_Resource_Configuration * gNB_DU_Cell_Resource_Configuration_TDD;

	SI_XNAP_DT_NRFrequencyInfo * frequencyInfo;
	int isPresent_frequencyInfo;

	SI_XNAP_DT_NRTransmissionBandwidth * transmissionBandwidth;
	int isPresent_transmissionBandwidth;

	SI_XNAP_DT_NRCarrierList * carrierList;
	int isPresent_carrierList;

} SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_TDD_Info;


// IAB-DU-Cell-Resource-Configuration-FDD-Info
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_IAB_DU_Cell_Resource_Configuration_FDD_Info
{
	SI_XNAP_DT_GNB_DU_Cell_Resource_Configuration * gNB_DU_Cell_Resource_Configuration_FDD_UL;

	SI_XNAP_DT_GNB_DU_Cell_Resource_Configuration * gNB_DU_Cell_Resource_Configuration_FDD_DL;

	SI_XNAP_DT_NRFrequencyInfo * uLFrequencyInfo;
	int isPresent_uLFrequencyInfo;

	SI_XNAP_DT_NRFrequencyInfo * dLFrequencyInfo;
	int isPresent_dLFrequencyInfo;

	SI_XNAP_DT_NRTransmissionBandwidth * uLTransmissionBandwidth;
	int isPresent_uLTransmissionBandwidth;

	SI_XNAP_DT_NRTransmissionBandwidth * dlTransmissionBandwidth;
	int isPresent_dlTransmissionBandwidth;

	SI_XNAP_DT_NRCarrierList * uLCarrierList;
	int isPresent_uLCarrierList;

	SI_XNAP_DT_NRCarrierList * dlCarrierList;
	int isPresent_dlCarrierList;

} SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_FDD_Info;


// IAB-DU-Cell-Resource-Configuration-Mode-Info
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_IAB_DU_Cell_Resource_Configuration_Mode_Info
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_TDD_Info * tDD;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_FDD_Info * fDD;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_Mode_Info_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_Mode_Info;


// IAB-STC-Info-List
//SEQUENCE OF IAB-STC-Info-Item, MIN=1, MAX=maxnoofIABSTCInfo  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_IAB_STC_Info_List
{
	SI_LinkedList * IAB_STC_Info_Item;
} SI_XNAP_DT_IAB_STC_Info_List;


// IAB-STC-Info
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_IAB_STC_Info
{
	SI_XNAP_DT_IAB_STC_Info_List * iAB_STC_Info_List;

} SI_XNAP_DT_IAB_STC_Info;


// RACH-Config-Common
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_RACH_Config_Common
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_RACH_Config_Common;

// RACH-Config-Common-IAB
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_RACH_Config_Common_IAB
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_RACH_Config_Common_IAB;

// IAB-MT-Cell-List
//SEQUENCE OF IAB-MT-Cell-List-Item, MIN=1, MAX=maxnoofServingCells  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_IAB_MT_Cell_List
{
	SI_LinkedList * IAB_MT_Cell_List_Item;
} SI_XNAP_DT_IAB_MT_Cell_List;


// MultiplexingInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MultiplexingInfo
{
	SI_XNAP_DT_IAB_MT_Cell_List * iAB_MT_Cell_List;

} SI_XNAP_DT_MultiplexingInfo;


// IABCellInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_IABCellInformation
{
	SI_XNAP_DT_NR_CGI * nRCGI;

	SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_Mode_Info * iAB_DU_Cell_Resource_Configuration_Mode_Info;
	int isPresent_iAB_DU_Cell_Resource_Configuration_Mode_Info;

	SI_XNAP_DT_IAB_STC_Info * iAB_STC_Info;
	int isPresent_iAB_STC_Info;

	SI_XNAP_DT_RACH_Config_Common * rACH_Config_Common;
	int isPresent_rACH_Config_Common;

	SI_XNAP_DT_RACH_Config_Common_IAB * rACH_Config_Common_IAB;
	int isPresent_rACH_Config_Common_IAB;

	SI_XNAP_DT_IABCellInformation_cSI_RS_Configuration * cSI_RS_Configuration;
	int isPresent_cSI_RS_Configuration;

	SI_XNAP_DT_IABCellInformation_sR_Configuration * sR_Configuration;
	int isPresent_sR_Configuration;

	SI_XNAP_DT_IABCellInformation_pDCCH_ConfigSIB1 * pDCCH_ConfigSIB1;
	int isPresent_pDCCH_ConfigSIB1;

	SI_XNAP_DT_IABCellInformation_sCS_Common * sCS_Common;
	int isPresent_sCS_Common;

	SI_XNAP_DT_MultiplexingInfo * multiplexingInfo;
	int isPresent_multiplexingInfo;

} SI_XNAP_DT_IABCellInformation;


// IAB-MT-Cell-List-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_IAB_MT_Cell_List_Item
{
	SI_XNAP_DT_NR_Cell_Identity * nRCellIdentity;

	uint8_t selected_edU_RX_MT_RX;
	int extSelected_edU_RX_MT_RX;

	uint8_t selected_edU_TX_MT_TX;
	int extSelected_edU_TX_MT_TX;

	uint8_t selected_edU_RX_MT_TX;
	int extSelected_edU_RX_MT_TX;

	uint8_t selected_edU_TX_MT_RX;
	int extSelected_edU_TX_MT_RX;

} SI_XNAP_DT_IAB_MT_Cell_List_Item;


// IABNodeIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_IABNodeIndication
{
	__si_xnap__IABNodeIndication_true_val
} SI_XNAP_DT_IABNodeIndication;


// L:2561
typedef enum __si_xnap_dt_IABNodeIndication2
{
	IABNodeIndication_true_val
} SI_XNAP_DT_IABNodeIndication2;


// L:2588
typedef struct __si_xnap_dt_IABNodeIndication_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_IABNodeIndication_EnumProxy;


// SSB-freqInfo
// INTEGER,INTEGER(0..maxNRARFCN),MIN=0,MAX=NaN  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SSB_freqInfo
{
	unsigned long long int data;
} SI_XNAP_DT_SSB_freqInfo;

// SSB-transmissionPeriodicity
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SSB_transmissionPeriodicity
{
	__si_xnap__SSB_transmissionPeriodicity_sf10_val,
	__si_xnap__SSB_transmissionPeriodicity_sf20_val,
	__si_xnap__SSB_transmissionPeriodicity_sf40_val,
	__si_xnap__SSB_transmissionPeriodicity_sf80_val,
	__si_xnap__SSB_transmissionPeriodicity_sf160_val,
	__si_xnap__SSB_transmissionPeriodicity_sf320_val,
	__si_xnap__SSB_transmissionPeriodicity_sf640_val,
	__si_xnap__SSB_transmissionPeriodicity_sf5_val_ext
} SI_XNAP_DT_SSB_transmissionPeriodicity;


// L:2561
typedef enum __si_xnap_dt_SSB_transmissionPeriodicity2
{
	SSB_transmissionPeriodicity_sf10_val,
	SSB_transmissionPeriodicity_sf20_val,
	SSB_transmissionPeriodicity_sf40_val,
	SSB_transmissionPeriodicity_sf80_val,
	SSB_transmissionPeriodicity_sf160_val,
	SSB_transmissionPeriodicity_sf320_val,
	SSB_transmissionPeriodicity_sf640_val,
	SSB_transmissionPeriodicity_sf5_val_ext
} SI_XNAP_DT_SSB_transmissionPeriodicity2;


// L:2588
typedef struct __si_xnap_dt_SSB_transmissionPeriodicity_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SSB_transmissionPeriodicity_EnumProxy;


// SSB-transmissionTimingOffset
// INTEGER,INTEGER(0..127,...),MIN=0,MAX=127  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SSB_transmissionTimingOffset
{
	unsigned long long int data;
} SI_XNAP_DT_SSB_transmissionTimingOffset;

// SSBtransmissionBitmap_shortBitmap
// BITSTRING,BIT STRING(SIZE(4))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_SSBtransmissionBitmap_shortBitmap
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_SSBtransmissionBitmap_shortBitmap;

// SSBtransmissionBitmap_mediumBitmap
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_SSBtransmissionBitmap_mediumBitmap
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_SSBtransmissionBitmap_mediumBitmap;

// SSBtransmissionBitmap_longBitmap
// BITSTRING,BIT STRING(SIZE(64))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_SSBtransmissionBitmap_longBitmap
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_SSBtransmissionBitmap_longBitmap;

// SSB-transmissionBitmap
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_SSB_transmissionBitmap
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_SSBtransmissionBitmap_shortBitmap * shortBitmap;

		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_SSBtransmissionBitmap_mediumBitmap * mediumBitmap;

		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_SSBtransmissionBitmap_longBitmap * longBitmap;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_SSB_transmisisonBitmap_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_SSB_transmissionBitmap;


// IAB-STC-Info-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_IAB_STC_Info_Item
{
	unsigned long long int sSB_freqInfo;

	uint8_t selected_esSB_subcarrierSpacing;
	int extSelected_esSB_subcarrierSpacing;

	uint8_t selected_esSB_transmissionPeriodicity;
	int extSelected_esSB_transmissionPeriodicity;

	unsigned long long int sSB_transmissionTimingOffset;

	SI_XNAP_DT_SSB_transmissionBitmap * sSB_transmissionBitmap;

} SI_XNAP_DT_IAB_STC_Info_Item;


// IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedAllTraffic
// INTEGER,INTEGER(1..256),MIN=1,MAX=256  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedAllTraffic
{
	unsigned long long int data;
} SI_XNAP_DT_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedAllTraffic;

// IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1-C
// INTEGER,INTEGER(1..256),MIN=1,MAX=256  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1_C
{
	unsigned long long int data;
} SI_XNAP_DT_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1_C;

// IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1-U
// INTEGER,INTEGER(1..256),MIN=1,MAX=256  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1_U
{
	unsigned long long int data;
} SI_XNAP_DT_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1_U;

// IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedNoNF1
// INTEGER,INTEGER(1..256),MIN=1,MAX=256  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedNoNF1
{
	unsigned long long int data;
} SI_XNAP_DT_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedNoNF1;

// IABTNLAddressesRequested
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_IABTNLAddressesRequested
{
	unsigned long long int tNLAddressesOrPrefixesRequestedAllTraffic;
	int isPresent_tNLAddressesOrPrefixesRequestedAllTraffic;

	unsigned long long int tNLAddressesOrPrefixesRequestedF1_C;
	int isPresent_tNLAddressesOrPrefixesRequestedF1_C;

	unsigned long long int tNLAddressesOrPrefixesRequestedF1_U;
	int isPresent_tNLAddressesOrPrefixesRequestedF1_U;

	unsigned long long int tNLAddressesOrPrefixesRequestedNoNF1;
	int isPresent_tNLAddressesOrPrefixesRequestedNoNF1;

} SI_XNAP_DT_IABTNLAddressesRequested;


// IABIPv6RequestType
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_IABIPv6RequestType
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_IABTNLAddressesRequested * iPv6Address;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_IABTNLAddressesRequested * iPv6Prefix;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_IABIPv6RequestType_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_IABIPv6RequestType;


// IABTNLAddressToRemove-List
//SEQUENCE OF IABTNLAddressToRemove-Item, MIN=1, MAX=maxnoofTLAsIAB  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_IABTNLAddressToRemove_List
{
	SI_LinkedList * IABTNLAddressToRemove_Item;
} SI_XNAP_DT_IABTNLAddressToRemove_List;


// IAB-TNL-Address-Request
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_IAB_TNL_Address_Request
{
	SI_XNAP_DT_IABTNLAddressesRequested * iABIPv4AddressesRequested;

	SI_XNAP_DT_IABIPv6RequestType * iABIPv6RequestType;

	SI_XNAP_DT_IABTNLAddressToRemove_List * iABTNLAddressToRemove_List;

} SI_XNAP_DT_IAB_TNL_Address_Request;


// IABAllocatedTNLAddress-List
//SEQUENCE OF IABAllocatedTNLAddress-Item, MIN=1, MAX=maxnoofTLAsIAB  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_IABAllocatedTNLAddress_List
{
	SI_LinkedList * IABAllocatedTNLAddress_Item;
} SI_XNAP_DT_IABAllocatedTNLAddress_List;


// IAB-TNL-Address-Response
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_IAB_TNL_Address_Response
{
	SI_XNAP_DT_IABAllocatedTNLAddress_List * iABAllocatedTNLAddress_List;

} SI_XNAP_DT_IAB_TNL_Address_Response;


// IABTNLAddressUsage
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_IABTNLAddressUsage
{
	__si_xnap__IABTNLAddressUsage_f1_c_val,
	__si_xnap__IABTNLAddressUsage_f1_u_val,
	__si_xnap__IABTNLAddressUsage_non_f1_val,
	__si_xnap__IABTNLAddressUsage_all_val_ext
} SI_XNAP_DT_IABTNLAddressUsage;


// L:2561
typedef enum __si_xnap_dt_IABTNLAddressUsage2
{
	IABTNLAddressUsage_f1_c_val,
	IABTNLAddressUsage_f1_u_val,
	IABTNLAddressUsage_non_f1_val,
	IABTNLAddressUsage_all_val_ext
} SI_XNAP_DT_IABTNLAddressUsage2;


// L:2588
typedef struct __si_xnap_dt_IABTNLAddressUsage_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_IABTNLAddressUsage_EnumProxy;


// IABAllocatedTNLAddress-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_IABAllocatedTNLAddress_Item
{
	SI_XNAP_DT_IABTNLAddress * iABTNLAddress;

	uint8_t selected_eiABTNLAddressUsage;
	int extSelected_eiABTNLAddressUsage;
	int isPresent_iABTNLAddressUsage;

	SI_XNAP_DT_BAPAddress * associatedDonorDUAddress;
	int isPresent_associatedDonorDUAddress;

} SI_XNAP_DT_IABAllocatedTNLAddress_Item;


// IABTNLAddressToRemove-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_IABTNLAddressToRemove_Item
{
	SI_XNAP_DT_IABTNLAddress * iABTNLAddress;

} SI_XNAP_DT_IABTNLAddressToRemove_Item;


// IABTNLAddressException
//SEQUENCE OF IABTNLAddress-Item, MIN=1, MAX=maxnoofTLAsIAB  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_IABTNLAddressException
{
	SI_LinkedList * IABTNLAddress_Item;
} SI_XNAP_DT_IABTNLAddressException;


//TODO: DataType ->ProtocolExtensionContainer{{IABTNLAddress-ItemExtIEs}}<- Got NULL  L:7884

// IABTNLAddress-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_IABTNLAddress_Item
{
	SI_XNAP_DT_IABTNLAddress * iABTNLAddress;

} SI_XNAP_DT_IABTNLAddress_Item;


// MeasurementsToActivate
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_MeasurementsToActivate
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_MeasurementsToActivate;

// M1ReportingTrigger
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_M1ReportingTrigger
{
	__si_xnap__M1ReportingTrigger_periodic_val,
	__si_xnap__M1ReportingTrigger_a2eventtriggered_val,
	__si_xnap__M1ReportingTrigger_a2eventtriggered_periodic_val
} SI_XNAP_DT_M1ReportingTrigger;


// L:2561
typedef enum __si_xnap_dt_M1ReportingTrigger2
{
	M1ReportingTrigger_periodic_val,
	M1ReportingTrigger_a2eventtriggered_val,
	M1ReportingTrigger_a2eventtriggered_periodic_val
} SI_XNAP_DT_M1ReportingTrigger2;


// L:2588
typedef struct __si_xnap_dt_M1ReportingTrigger_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_M1ReportingTrigger_EnumProxy;


// Threshold-SINR
// INTEGER,INTEGER(0..127),MIN=0,MAX=127  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_Threshold_SINR
{
	unsigned long long int data;
} SI_XNAP_DT_Threshold_SINR;

// MeasurementThresholdA2
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_MeasurementThresholdA2
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int threshold_RSRP;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int threshold_RSRQ;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int threshold_SINR;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_MeasurementThresholdA2_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_MeasurementThresholdA2;


// M1ThresholdEventA2
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_M1ThresholdEventA2
{
	SI_XNAP_DT_MeasurementThresholdA2 * measurementThreshold;

} SI_XNAP_DT_M1ThresholdEventA2;


// ReportIntervalMDT
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ReportIntervalMDT
{
	__si_xnap__ReportIntervalMDT_ms120_val,
	__si_xnap__ReportIntervalMDT_ms240_val,
	__si_xnap__ReportIntervalMDT_ms480_val,
	__si_xnap__ReportIntervalMDT_ms640_val,
	__si_xnap__ReportIntervalMDT_ms1024_val,
	__si_xnap__ReportIntervalMDT_ms2048_val,
	__si_xnap__ReportIntervalMDT_ms5120_val,
	__si_xnap__ReportIntervalMDT_ms10240_val,
	__si_xnap__ReportIntervalMDT_min1_val,
	__si_xnap__ReportIntervalMDT_min6_val,
	__si_xnap__ReportIntervalMDT_min12_val,
	__si_xnap__ReportIntervalMDT_min30_val,
	__si_xnap__ReportIntervalMDT_min60_val
} SI_XNAP_DT_ReportIntervalMDT;


// L:2561
typedef enum __si_xnap_dt_ReportIntervalMDT2
{
	ReportIntervalMDT_ms120_val,
	ReportIntervalMDT_ms240_val,
	ReportIntervalMDT_ms480_val,
	ReportIntervalMDT_ms640_val,
	ReportIntervalMDT_ms1024_val,
	ReportIntervalMDT_ms2048_val,
	ReportIntervalMDT_ms5120_val,
	ReportIntervalMDT_ms10240_val,
	ReportIntervalMDT_min1_val,
	ReportIntervalMDT_min6_val,
	ReportIntervalMDT_min12_val,
	ReportIntervalMDT_min30_val,
	ReportIntervalMDT_min60_val
} SI_XNAP_DT_ReportIntervalMDT2;


// L:2588
typedef struct __si_xnap_dt_ReportIntervalMDT_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ReportIntervalMDT_EnumProxy;


// ReportAmountMDT
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ReportAmountMDT
{
	__si_xnap__ReportAmountMDT_r1_val,
	__si_xnap__ReportAmountMDT_r2_val,
	__si_xnap__ReportAmountMDT_r4_val,
	__si_xnap__ReportAmountMDT_r8_val,
	__si_xnap__ReportAmountMDT_r16_val,
	__si_xnap__ReportAmountMDT_r32_val,
	__si_xnap__ReportAmountMDT_r64_val,
	__si_xnap__ReportAmountMDT_infinity_val
} SI_XNAP_DT_ReportAmountMDT;


// L:2561
typedef enum __si_xnap_dt_ReportAmountMDT2
{
	ReportAmountMDT_r1_val,
	ReportAmountMDT_r2_val,
	ReportAmountMDT_r4_val,
	ReportAmountMDT_r8_val,
	ReportAmountMDT_r16_val,
	ReportAmountMDT_r32_val,
	ReportAmountMDT_r64_val,
	ReportAmountMDT_infinity_val
} SI_XNAP_DT_ReportAmountMDT2;


// L:2588
typedef struct __si_xnap_dt_ReportAmountMDT_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ReportAmountMDT_EnumProxy;


// M1PeriodicReporting
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_M1PeriodicReporting
{
	uint8_t selected_ereportInterval;
	int extSelected_ereportInterval;

	uint8_t selected_ereportAmount;
	int extSelected_ereportAmount;

} SI_XNAP_DT_M1PeriodicReporting;


// M1Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_M1Configuration
{
	uint8_t selected_em1reportingTrigger;
	int extSelected_em1reportingTrigger;

	SI_XNAP_DT_M1ThresholdEventA2 * m1thresholdeventA2;
	int isPresent_m1thresholdeventA2;

	SI_XNAP_DT_M1PeriodicReporting * m1periodicReporting;
	int isPresent_m1periodicReporting;

} SI_XNAP_DT_M1Configuration;


// M4period
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_M4period
{
	__si_xnap__M4period_ms1024_val,
	__si_xnap__M4period_ms2048_val,
	__si_xnap__M4period_ms5120_val,
	__si_xnap__M4period_ms10240_val,
	__si_xnap__M4period_min1_val
} SI_XNAP_DT_M4period;


// L:2561
typedef enum __si_xnap_dt_M4period2
{
	M4period_ms1024_val,
	M4period_ms2048_val,
	M4period_ms5120_val,
	M4period_ms10240_val,
	M4period_min1_val
} SI_XNAP_DT_M4period2;


// L:2588
typedef struct __si_xnap_dt_M4period_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_M4period_EnumProxy;


// Links-to-log
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_Links_to_log
{
	__si_xnap__Links_to_log_uplink_val,
	__si_xnap__Links_to_log_downlink_val,
	__si_xnap__Links_to_log_both_uplink_and_downlink_val
} SI_XNAP_DT_Links_to_log;


// L:2561
typedef enum __si_xnap_dt_Links_to_log2
{
	Links_to_log_uplink_val,
	Links_to_log_downlink_val,
	Links_to_log_both_uplink_and_downlink_val
} SI_XNAP_DT_Links_to_log2;


// L:2588
typedef struct __si_xnap_dt_Links_to_log_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_Links_to_log_EnumProxy;


// M4Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_M4Configuration
{
	uint8_t selected_em4period;
	int extSelected_em4period;

	uint8_t selected_em4_links_to_log;
	int extSelected_em4_links_to_log;

} SI_XNAP_DT_M4Configuration;


// M5period
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_M5period
{
	__si_xnap__M5period_ms1024_val,
	__si_xnap__M5period_ms2048_val,
	__si_xnap__M5period_ms5120_val,
	__si_xnap__M5period_ms10240_val,
	__si_xnap__M5period_min1_val
} SI_XNAP_DT_M5period;


// L:2561
typedef enum __si_xnap_dt_M5period2
{
	M5period_ms1024_val,
	M5period_ms2048_val,
	M5period_ms5120_val,
	M5period_ms10240_val,
	M5period_min1_val
} SI_XNAP_DT_M5period2;


// L:2588
typedef struct __si_xnap_dt_M5period_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_M5period_EnumProxy;


// M5Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_M5Configuration
{
	uint8_t selected_em5period;
	int extSelected_em5period;

	uint8_t selected_em5_links_to_log;
	int extSelected_em5_links_to_log;

} SI_XNAP_DT_M5Configuration;


// MDT-Location-Info
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_MDT_Location_Info
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_MDT_Location_Info;

// M6report-Interval
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_M6report_Interval
{
	__si_xnap__M6report_Interval_ms120_val,
	__si_xnap__M6report_Interval_ms240_val,
	__si_xnap__M6report_Interval_ms480_val,
	__si_xnap__M6report_Interval_ms640_val,
	__si_xnap__M6report_Interval_ms1024_val,
	__si_xnap__M6report_Interval_ms2048_val,
	__si_xnap__M6report_Interval_ms5120_val,
	__si_xnap__M6report_Interval_ms10240_val,
	__si_xnap__M6report_Interval_ms20480_val,
	__si_xnap__M6report_Interval_ms40960_val,
	__si_xnap__M6report_Interval_min1_val,
	__si_xnap__M6report_Interval_min6_val,
	__si_xnap__M6report_Interval_min12_val,
	__si_xnap__M6report_Interval_min30_val
} SI_XNAP_DT_M6report_Interval;


// L:2561
typedef enum __si_xnap_dt_M6report_Interval2
{
	M6report_Interval_ms120_val,
	M6report_Interval_ms240_val,
	M6report_Interval_ms480_val,
	M6report_Interval_ms640_val,
	M6report_Interval_ms1024_val,
	M6report_Interval_ms2048_val,
	M6report_Interval_ms5120_val,
	M6report_Interval_ms10240_val,
	M6report_Interval_ms20480_val,
	M6report_Interval_ms40960_val,
	M6report_Interval_min1_val,
	M6report_Interval_min6_val,
	M6report_Interval_min12_val,
	M6report_Interval_min30_val
} SI_XNAP_DT_M6report_Interval2;


// L:2588
typedef struct __si_xnap_dt_M6report_Interval_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_M6report_Interval_EnumProxy;


// M6Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_M6Configuration
{
	uint8_t selected_em6report_Interval;
	int extSelected_em6report_Interval;

	uint8_t selected_em6_links_to_log;
	int extSelected_em6_links_to_log;

} SI_XNAP_DT_M6Configuration;


// M7period
// INTEGER,INTEGER(1..60,...),MIN=1,MAX=60  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_M7period
{
	unsigned long long int data;
} SI_XNAP_DT_M7period;

// M7Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_M7Configuration
{
	unsigned long long int m7period;

	uint8_t selected_em7_links_to_log;
	int extSelected_em7_links_to_log;

} SI_XNAP_DT_M7Configuration;


// WLANMeasConfig
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_WLANMeasConfig
{
	__si_xnap__WLANMeasConfig_setup_val
} SI_XNAP_DT_WLANMeasConfig;


// L:2561
typedef enum __si_xnap_dt_WLANMeasConfig2
{
	WLANMeasConfig_setup_val
} SI_XNAP_DT_WLANMeasConfig2;


// L:2588
typedef struct __si_xnap_dt_WLANMeasConfig_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_WLANMeasConfig_EnumProxy;


// WLANMeasConfigNameList
//SEQUENCE OF WLANName, MIN=1, MAX=maxnoofWLANName  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_WLANMeasConfigNameList
{
	SI_LinkedList * WLANName;
} SI_XNAP_DT_WLANMeasConfigNameList;


// WLANMeasurementConfiguration_wlan-rssi
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_WLANMeasurementConfiguration_wlan_rssi
{
	__si_xnap__WLANMeasurementConfiguration_wlan_rssi_true_val
} SI_XNAP_DT_WLANMeasurementConfiguration_wlan_rssi;


// L:2561
typedef enum __si_xnap_dt_WLANMeasurementConfiguration_wlan_rssi2
{
	WLANMeasurementConfiguration_wlan_rssi_true_val
} SI_XNAP_DT_WLANMeasurementConfiguration_wlan_rssi2;


// L:2588
typedef struct __si_xnap_dt_WLANMeasurementConfiguration_wlan_rssi_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_WLANMeasurementConfiguration_wlan_rssi_EnumProxy;


// WLANMeasurementConfiguration_wlan-rtt
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_WLANMeasurementConfiguration_wlan_rtt
{
	__si_xnap__WLANMeasurementConfiguration_wlan_rtt_true_val
} SI_XNAP_DT_WLANMeasurementConfiguration_wlan_rtt;


// L:2561
typedef enum __si_xnap_dt_WLANMeasurementConfiguration_wlan_rtt2
{
	WLANMeasurementConfiguration_wlan_rtt_true_val
} SI_XNAP_DT_WLANMeasurementConfiguration_wlan_rtt2;


// L:2588
typedef struct __si_xnap_dt_WLANMeasurementConfiguration_wlan_rtt_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_WLANMeasurementConfiguration_wlan_rtt_EnumProxy;


// WLANMeasurementConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_WLANMeasurementConfiguration
{
	uint8_t selected_ewlanMeasConfig;
	int extSelected_ewlanMeasConfig;

	SI_XNAP_DT_WLANMeasConfigNameList * wlanMeasConfigNameList;
	int isPresent_wlanMeasConfigNameList;

	uint8_t selected_ewlan_rssi;
	int extSelected_ewlan_rssi;
	int isPresent_wlan_rssi;

	uint8_t selected_ewlan_rtt;
	int extSelected_ewlan_rtt;
	int isPresent_wlan_rtt;

} SI_XNAP_DT_WLANMeasurementConfiguration;


// SensorMeasConfig
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SensorMeasConfig
{
	__si_xnap__SensorMeasConfig_setup_val
} SI_XNAP_DT_SensorMeasConfig;


// L:2561
typedef enum __si_xnap_dt_SensorMeasConfig2
{
	SensorMeasConfig_setup_val
} SI_XNAP_DT_SensorMeasConfig2;


// L:2588
typedef struct __si_xnap_dt_SensorMeasConfig_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SensorMeasConfig_EnumProxy;


// SensorMeasConfigNameList
//SEQUENCE OF SensorName, MIN=1, MAX=maxnoofSensorName  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SensorMeasConfigNameList
{
	SI_LinkedList * SensorName;
} SI_XNAP_DT_SensorMeasConfigNameList;


// SensorMeasurementConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SensorMeasurementConfiguration
{
	uint8_t selected_esensorMeasConfig;
	int extSelected_esensorMeasConfig;

	SI_XNAP_DT_SensorMeasConfigNameList * sensorMeasConfigNameList;
	int isPresent_sensorMeasConfigNameList;

} SI_XNAP_DT_SensorMeasurementConfiguration;


// ImmediateMDT-NR
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ImmediateMDT_NR
{
	SI_XNAP_DT_MeasurementsToActivate * measurementsToActivate;

	SI_XNAP_DT_M1Configuration * m1Configuration;
	int isPresent_m1Configuration;

	SI_XNAP_DT_M4Configuration * m4Configuration;
	int isPresent_m4Configuration;

	SI_XNAP_DT_M5Configuration * m5Configuration;
	int isPresent_m5Configuration;

	SI_XNAP_DT_MDT_Location_Info * mDT_Location_Info;
	int isPresent_mDT_Location_Info;

	SI_XNAP_DT_M6Configuration * m6Configuration;
	int isPresent_m6Configuration;

	SI_XNAP_DT_M7Configuration * m7Configuration;
	int isPresent_m7Configuration;

	SI_XNAP_DT_BluetoothMeasurementConfiguration * bluetoothMeasurementConfiguration;
	int isPresent_bluetoothMeasurementConfiguration;

	SI_XNAP_DT_WLANMeasurementConfiguration * wLANMeasurementConfiguration;
	int isPresent_wLANMeasurementConfiguration;

	SI_XNAP_DT_SensorMeasurementConfiguration * sensorMeasurementConfiguration;
	int isPresent_sensorMeasurementConfiguration;

} SI_XNAP_DT_ImmediateMDT_NR;


// NRPCI
// INTEGER,INTEGER(0..1007,...),MIN=0,MAX=1007  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_NRPCI
{
	unsigned long long int data;
} SI_XNAP_DT_NRPCI;

// NG-RAN-CellPCI
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_NG_RAN_CellPCI
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int nr;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int e_utra;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_NG_RAN_CellPCI_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_NG_RAN_CellPCI;


// MAC-I
// BITSTRING,BIT STRING(SIZE(16))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_MAC_I
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_MAC_I;

// RRCReestab-Initiated-Reporting-wo-UERLFReport
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RRCReestab_Initiated_Reporting_wo_UERLFReport
{
	SI_XNAP_DT_NG_RAN_CellPCI * failureCellPCI;

	SI_XNAP_DT_GlobalNG_RANCell_ID * reestabCellCGI;

	SI_XNAP_DT_C_RNTI * c_RNTI;

	SI_XNAP_DT_MAC_I * shortMAC_I;

} SI_XNAP_DT_RRCReestab_Initiated_Reporting_wo_UERLFReport;


// UERLFReportContainerNR
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_UERLFReportContainerNR
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_UERLFReportContainerNR;

// UERLFReportContainerLTE
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_UERLFReportContainerLTE
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_UERLFReportContainerLTE;

// UERLFReportContainer
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_UERLFReportContainer
{
	union 
	{
		// ParserName = OCTETSTRING - NonEP false;
		SI_XNAP_DT_UERLFReportContainerNR * nR_UERLFReportContainer;

		// ParserName = OCTETSTRING - NonEP false;
		SI_XNAP_DT_UERLFReportContainerLTE * lTE_UERLFReportContainer;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_UERLFReportContainer_ExtIEs * choice_Extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_UERLFReportContainer;


// RRCReestab-Initiated-Reporting-with-UERLFReport
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RRCReestab_Initiated_Reporting_with_UERLFReport
{
	SI_XNAP_DT_UERLFReportContainer * uERLFReportContainer;

} SI_XNAP_DT_RRCReestab_Initiated_Reporting_with_UERLFReport;


// RRCReestab-Initiated-Reporting
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_RRCReestab_Initiated_Reporting
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_RRCReestab_Initiated_Reporting_wo_UERLFReport * rRCReestab_reporting_wo_UERLFReport;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_RRCReestab_Initiated_Reporting_with_UERLFReport * rRCReestab_reporting_with_UERLFReport;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_RRCReestab_Initiated_Reporting;


// RRCReestab-initiated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RRCReestab_initiated
{
	SI_XNAP_DT_RRCReestab_Initiated_Reporting * rRRCReestab_initiated_reporting;

} SI_XNAP_DT_RRCReestab_initiated;


// RRCSetup-Initiated-Reporting-with-UERLFReport
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RRCSetup_Initiated_Reporting_with_UERLFReport
{
	SI_XNAP_DT_UERLFReportContainer * uERLFReportContainer;

} SI_XNAP_DT_RRCSetup_Initiated_Reporting_with_UERLFReport;


// RRCSetup-Initiated-Reporting
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_RRCSetup_Initiated_Reporting
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_RRCSetup_Initiated_Reporting_with_UERLFReport * rRCSetup_reporting_with_UERLFReport;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_RRCSetup_Initiated_Reporting_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_RRCSetup_Initiated_Reporting;


// RRCSetup-initiated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RRCSetup_initiated
{
	SI_XNAP_DT_RRCSetup_Initiated_Reporting * rRRCSetup_Initiated_Reporting;

	SI_XNAP_DT_UERLFReportContainer * uERLFReportContainer;
	int isPresent_uERLFReportContainer;

} SI_XNAP_DT_RRCSetup_initiated;


// InitiatingCondition-FailureIndication
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_InitiatingCondition_FailureIndication
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_RRCReestab_initiated * rRCReestab;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_RRCSetup_initiated * rRCSetup;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_InitiatingCondition_FailureIndication_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_InitiatingCondition_FailureIndication;


// NRCyclicPrefix
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NRCyclicPrefix
{
	__si_xnap__NRCyclicPrefix_normal_val,
	__si_xnap__NRCyclicPrefix_extended_val
} SI_XNAP_DT_NRCyclicPrefix;


// L:2561
typedef enum __si_xnap_dt_NRCyclicPrefix2
{
	NRCyclicPrefix_normal_val,
	NRCyclicPrefix_extended_val
} SI_XNAP_DT_NRCyclicPrefix2;


// L:2588
typedef struct __si_xnap_dt_NRCyclicPrefix_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NRCyclicPrefix_EnumProxy;


// NRDL-ULTransmissionPeriodicity
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NRDL_ULTransmissionPeriodicity
{
	__si_xnap__NRDL_ULTransmissionPeriodicity_ms0p5_val,
	__si_xnap__NRDL_ULTransmissionPeriodicity_ms0p625_val,
	__si_xnap__NRDL_ULTransmissionPeriodicity_ms1_val,
	__si_xnap__NRDL_ULTransmissionPeriodicity_ms1p25_val,
	__si_xnap__NRDL_ULTransmissionPeriodicity_ms2_val,
	__si_xnap__NRDL_ULTransmissionPeriodicity_ms2p5_val,
	__si_xnap__NRDL_ULTransmissionPeriodicity_ms3_val,
	__si_xnap__NRDL_ULTransmissionPeriodicity_ms4_val,
	__si_xnap__NRDL_ULTransmissionPeriodicity_ms5_val,
	__si_xnap__NRDL_ULTransmissionPeriodicity_ms10_val,
	__si_xnap__NRDL_ULTransmissionPeriodicity_ms20_val,
	__si_xnap__NRDL_ULTransmissionPeriodicity_ms40_val,
	__si_xnap__NRDL_ULTransmissionPeriodicity_ms60_val,
	__si_xnap__NRDL_ULTransmissionPeriodicity_ms80_val,
	__si_xnap__NRDL_ULTransmissionPeriodicity_ms100_val,
	__si_xnap__NRDL_ULTransmissionPeriodicity_ms120_val,
	__si_xnap__NRDL_ULTransmissionPeriodicity_ms140_val,
	__si_xnap__NRDL_ULTransmissionPeriodicity_ms160_val
} SI_XNAP_DT_NRDL_ULTransmissionPeriodicity;


// L:2561
typedef enum __si_xnap_dt_NRDL_ULTransmissionPeriodicity2
{
	NRDL_ULTransmissionPeriodicity_ms0p5_val,
	NRDL_ULTransmissionPeriodicity_ms0p625_val,
	NRDL_ULTransmissionPeriodicity_ms1_val,
	NRDL_ULTransmissionPeriodicity_ms1p25_val,
	NRDL_ULTransmissionPeriodicity_ms2_val,
	NRDL_ULTransmissionPeriodicity_ms2p5_val,
	NRDL_ULTransmissionPeriodicity_ms3_val,
	NRDL_ULTransmissionPeriodicity_ms4_val,
	NRDL_ULTransmissionPeriodicity_ms5_val,
	NRDL_ULTransmissionPeriodicity_ms10_val,
	NRDL_ULTransmissionPeriodicity_ms20_val,
	NRDL_ULTransmissionPeriodicity_ms40_val,
	NRDL_ULTransmissionPeriodicity_ms60_val,
	NRDL_ULTransmissionPeriodicity_ms80_val,
	NRDL_ULTransmissionPeriodicity_ms100_val,
	NRDL_ULTransmissionPeriodicity_ms120_val,
	NRDL_ULTransmissionPeriodicity_ms140_val,
	NRDL_ULTransmissionPeriodicity_ms160_val
} SI_XNAP_DT_NRDL_ULTransmissionPeriodicity2;


// L:2588
typedef struct __si_xnap_dt_NRDL_ULTransmissionPeriodicity_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NRDL_ULTransmissionPeriodicity_EnumProxy;


// SlotConfiguration-List
//SEQUENCE OF SlotConfiguration-List-Item, MIN=1, MAX=maxnoofslots  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SlotConfiguration_List
{
	SI_LinkedList * SlotConfiguration_List_Item;
} SI_XNAP_DT_SlotConfiguration_List;


// IntendedTDD-DL-ULConfiguration-NR
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_IntendedTDD_DL_ULConfiguration_NR
{
	uint8_t selected_enrscs;
	int extSelected_enrscs;

	uint8_t selected_enrCyclicPrefix;
	int extSelected_enrCyclicPrefix;

	uint8_t selected_enrDL_ULTransmissionPeriodicity;
	int extSelected_enrDL_ULTransmissionPeriodicity;

	SI_XNAP_DT_SlotConfiguration_List * slotConfiguration_List;

} SI_XNAP_DT_IntendedTDD_DL_ULConfiguration_NR;


// InterfaceInstanceIndication
// INTEGER,INTEGER(0..255,...),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_InterfaceInstanceIndication
{
	unsigned long long int data;
} SI_XNAP_DT_InterfaceInstanceIndication;

// IRNTI_i-RNTI-full
// BITSTRING,BIT STRING(SIZE(40))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_IRNTI_i_RNTI_full
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_IRNTI_i_RNTI_full;

// IRNTI_i-RNTI-short
// BITSTRING,BIT STRING(SIZE(24))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_IRNTI_i_RNTI_short
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_IRNTI_i_RNTI_short;

// I-RNTI
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_I_RNTI
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_IRNTI_i_RNTI_full * i_RNTI_full;

		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_IRNTI_i_RNTI_short * i_RNTI_short;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_I_RNTI_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_I_RNTI;


// IABAuthorizationStatus
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_IABAuthorizationStatus
{
	__si_xnap__IABAuthorizationStatus_authorized_val,
	__si_xnap__IABAuthorizationStatus_not_authorized_val
} SI_XNAP_DT_IABAuthorizationStatus;


// L:2561
typedef enum __si_xnap_dt_IABAuthorizationStatus2
{
	IABAuthorizationStatus_authorized_val,
	IABAuthorizationStatus_not_authorized_val
} SI_XNAP_DT_IABAuthorizationStatus2;


// L:2588
typedef struct __si_xnap_dt_IABAuthorizationStatus_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_IABAuthorizationStatus_EnumProxy;


// FullIRNTIProfileList_full-I-RNTI-Profile-0
// BITSTRING,BIT STRING(SIZE(21))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_FullIRNTIProfileList_full_I_RNTI_Profile_0
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_0;

// FullIRNTIProfileList_full-I-RNTI-Profile-1
// BITSTRING,BIT STRING(SIZE(18))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_FullIRNTIProfileList_full_I_RNTI_Profile_1
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_1;

// FullIRNTIProfileList_full-I-RNTI-Profile-2
// BITSTRING,BIT STRING(SIZE(15))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_FullIRNTIProfileList_full_I_RNTI_Profile_2
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_2;

// FullIRNTIProfileList_full-I-RNTI-Profile-3
// BITSTRING,BIT STRING(SIZE(12))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_FullIRNTIProfileList_full_I_RNTI_Profile_3
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_3;

// Full-I-RNTI-Profile-List
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_Full_I_RNTI_Profile_List
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_0 * full_I_RNTI_Profile_0;

		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_1 * full_I_RNTI_Profile_1;

		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_2 * full_I_RNTI_Profile_2;

		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_3 * full_I_RNTI_Profile_3;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_Full_I_RNTI_Profile_List_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_Full_I_RNTI_Profile_List;


// ShortIRNTIProfileList_short-I-RNTI-Profile-0
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_ShortIRNTIProfileList_short_I_RNTI_Profile_0
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_ShortIRNTIProfileList_short_I_RNTI_Profile_0;

// ShortIRNTIProfileList_short-I-RNTI-Profile-1
// BITSTRING,BIT STRING(SIZE(6))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_ShortIRNTIProfileList_short_I_RNTI_Profile_1
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_ShortIRNTIProfileList_short_I_RNTI_Profile_1;

// Short-I-RNTI-Profile-List
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_Short_I_RNTI_Profile_List
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_ShortIRNTIProfileList_short_I_RNTI_Profile_0 * short_I_RNTI_Profile_0;

		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_ShortIRNTIProfileList_short_I_RNTI_Profile_1 * short_I_RNTI_Profile_1;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_Short_I_RNTI_Profile_List_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_Short_I_RNTI_Profile_List;


// Local-NG-RAN-Node-Identifier
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_Local_NG_RAN_Node_Identifier
{
	union 
	{
		// ParserName = CHOICE - NonEP false;
		SI_XNAP_DT_Full_I_RNTI_Profile_List * full_I_RNTI_Profile_List;

		// ParserName = CHOICE - NonEP false;
		SI_XNAP_DT_Short_I_RNTI_Profile_List * short_I_RNTI_Profile_List;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_Local_NG_RAN_Node_Identifier_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_Local_NG_RAN_Node_Identifier;


// Full-and-Short-I-RNTI-Profile-List
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_Full_and_Short_I_RNTI_Profile_List
{
	SI_XNAP_DT_Full_I_RNTI_Profile_List * full_I_RNTI_Profile_List;

	SI_XNAP_DT_Short_I_RNTI_Profile_List * short_I_RNTI_Profile_List;

} SI_XNAP_DT_Full_and_Short_I_RNTI_Profile_List;


// LastVisitedNGRANCellInformation
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_LastVisitedNGRANCellInformation
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_LastVisitedNGRANCellInformation;

// LastVisitedEUTRANCellInformation
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_LastVisitedEUTRANCellInformation
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_LastVisitedEUTRANCellInformation;

// LastVisitedUTRANCellInformation
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_LastVisitedUTRANCellInformation
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_LastVisitedUTRANCellInformation;

// LastVisitedGERANCellInformation
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_LastVisitedGERANCellInformation
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_LastVisitedGERANCellInformation;

// LastVisitedCell-Item
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_LastVisitedCell_Item
{
	union 
	{
		// ParserName = OCTETSTRING - NonEP false;
		SI_XNAP_DT_LastVisitedNGRANCellInformation * nG_RAN_Cell;

		// ParserName = OCTETSTRING - NonEP false;
		SI_XNAP_DT_LastVisitedEUTRANCellInformation * e_UTRAN_Cell;

		// ParserName = OCTETSTRING - NonEP false;
		SI_XNAP_DT_LastVisitedUTRANCellInformation * uTRAN_Cell;

		// ParserName = OCTETSTRING - NonEP false;
		SI_XNAP_DT_LastVisitedGERANCellInformation * gERAN_Cell;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_LastVisitedCell_Item_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_LastVisitedCell_Item;


// LastVisitedPSCellInformation
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_LastVisitedPSCellInformation
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_LastVisitedPSCellInformation;

// LastVisitedPSCellList
//SEQUENCE OF LastVisitedPSCellList-Item, MIN=1, MAX=maxnoofPSCellsPerSN  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_LastVisitedPSCellList
{
	SI_LinkedList * LastVisitedPSCellList_Item;
} SI_XNAP_DT_LastVisitedPSCellList;


// LastVisitedPSCellList-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_LastVisitedPSCellList_Item
{
	SI_XNAP_DT_LastVisitedPSCellInformation * lastVisitedPSCellInformation;

} SI_XNAP_DT_LastVisitedPSCellList_Item;


// SCGUEHistoryInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SCGUEHistoryInformation
{
	SI_XNAP_DT_LastVisitedPSCellList * lastVisitedPSCellList;
	int isPresent_lastVisitedPSCellList;

} SI_XNAP_DT_SCGUEHistoryInformation;


// LCID
// INTEGER,INTEGER(1..32,...),MIN=1,MAX=32  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_LCID
{
	unsigned long long int data;
} SI_XNAP_DT_LCID;

// CellsinAoI-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CellsinAoI_Item
{
	SI_XNAP_DT_PLMN_Identity * pLMN_Identity;

	SI_XNAP_DT_NG_RAN_Cell_Identity * ng_ran_cell_id;

} SI_XNAP_DT_CellsinAoI_Item;


// GlobalNG-RANNodesinAoI-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_GlobalNG_RANNodesinAoI_Item
{
	SI_XNAP_DT_GlobalNG_RANNode_ID * global_NG_RAN_Node_ID;

} SI_XNAP_DT_GlobalNG_RANNodesinAoI_Item;


// TAIsinAoI-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TAIsinAoI_Item
{
	SI_XNAP_DT_PLMN_Identity * pLMN_Identity;

	SI_XNAP_DT_TAC * tAC;

} SI_XNAP_DT_TAIsinAoI_Item;


// LocationInformationSNReporting
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_LocationInformationSNReporting
{
	__si_xnap__LocationInformationSNReporting_pSCell_val
} SI_XNAP_DT_LocationInformationSNReporting;


// L:2561
typedef enum __si_xnap_dt_LocationInformationSNReporting2
{
	LocationInformationSNReporting_pSCell_val
} SI_XNAP_DT_LocationInformationSNReporting2;


// L:2588
typedef struct __si_xnap_dt_LocationInformationSNReporting_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_LocationInformationSNReporting_EnumProxy;


// ReportArea
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ReportArea
{
	__si_xnap__ReportArea_cell_val
} SI_XNAP_DT_ReportArea;


// L:2561
typedef enum __si_xnap_dt_ReportArea2
{
	ReportArea_cell_val
} SI_XNAP_DT_ReportArea2;


// L:2588
typedef struct __si_xnap_dt_ReportArea_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ReportArea_EnumProxy;


// LocationReportingInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_LocationReportingInformation
{
	uint8_t selected_eeventType;
	int extSelected_eeventType;

	uint8_t selected_ereportArea;
	int extSelected_ereportArea;

	SI_XNAP_DT_AreaOfInterestInformation * areaOfInterest;
	int isPresent_areaOfInterest;

} SI_XNAP_DT_LocationReportingInformation;


// LoggingInterval
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_LoggingInterval
{
	__si_xnap__LoggingInterval_ms320_val,
	__si_xnap__LoggingInterval_ms640_val,
	__si_xnap__LoggingInterval_ms1280_val,
	__si_xnap__LoggingInterval_ms2560_val,
	__si_xnap__LoggingInterval_ms5120_val,
	__si_xnap__LoggingInterval_ms10240_val,
	__si_xnap__LoggingInterval_ms20480_val,
	__si_xnap__LoggingInterval_ms30720_val,
	__si_xnap__LoggingInterval_ms40960_val,
	__si_xnap__LoggingInterval_ms61440_val,
	__si_xnap__LoggingInterval_infinity_val
} SI_XNAP_DT_LoggingInterval;


// L:2561
typedef enum __si_xnap_dt_LoggingInterval2
{
	LoggingInterval_ms320_val,
	LoggingInterval_ms640_val,
	LoggingInterval_ms1280_val,
	LoggingInterval_ms2560_val,
	LoggingInterval_ms5120_val,
	LoggingInterval_ms10240_val,
	LoggingInterval_ms20480_val,
	LoggingInterval_ms30720_val,
	LoggingInterval_ms40960_val,
	LoggingInterval_ms61440_val,
	LoggingInterval_infinity_val
} SI_XNAP_DT_LoggingInterval2;


// L:2588
typedef struct __si_xnap_dt_LoggingInterval_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_LoggingInterval_EnumProxy;


// LoggingDuration
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_LoggingDuration
{
	__si_xnap__LoggingDuration_m10_val,
	__si_xnap__LoggingDuration_m20_val,
	__si_xnap__LoggingDuration_m40_val,
	__si_xnap__LoggingDuration_m60_val,
	__si_xnap__LoggingDuration_m90_val,
	__si_xnap__LoggingDuration_m120_val
} SI_XNAP_DT_LoggingDuration;


// L:2561
typedef enum __si_xnap_dt_LoggingDuration2
{
	LoggingDuration_m10_val,
	LoggingDuration_m20_val,
	LoggingDuration_m40_val,
	LoggingDuration_m60_val,
	LoggingDuration_m90_val,
	LoggingDuration_m120_val
} SI_XNAP_DT_LoggingDuration2;


// L:2588
typedef struct __si_xnap_dt_LoggingDuration_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_LoggingDuration_EnumProxy;


// Periodical
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_Periodical
{
} SI_XNAP_DT_Periodical;


// ReportType
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_ReportType
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_Periodical * periodical;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_EventTriggered * eventTriggered;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_ReportType_ExtIEs * choice_extension_ext;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_ReportType;


// LoggedMDT-NR
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_LoggedMDT_NR
{
	uint8_t selected_eloggingInterval;
	int extSelected_eloggingInterval;

	uint8_t selected_eloggingDuration;
	int extSelected_eloggingDuration;

	SI_XNAP_DT_ReportType * reportType;

	SI_XNAP_DT_BluetoothMeasurementConfiguration * bluetoothMeasurementConfiguration;
	int isPresent_bluetoothMeasurementConfiguration;

	SI_XNAP_DT_WLANMeasurementConfiguration * wLANMeasurementConfiguration;
	int isPresent_wLANMeasurementConfiguration;

	SI_XNAP_DT_SensorMeasurementConfiguration * sensorMeasurementConfiguration;
	int isPresent_sensorMeasurementConfiguration;

	SI_XNAP_DT_AreaScopeOfNeighCellsList * areaScopeOfNeighCellsList;
	int isPresent_areaScopeOfNeighCellsList;

} SI_XNAP_DT_LoggedMDT_NR;


// LowerLayerPresenceStatusChange
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_LowerLayerPresenceStatusChange
{
	__si_xnap__LowerLayerPresenceStatusChange_release_lower_layers_val,
	__si_xnap__LowerLayerPresenceStatusChange_re_establish_lower_layers_val,
	__si_xnap__LowerLayerPresenceStatusChange_suspend_lower_layers_val_ext,
	__si_xnap__LowerLayerPresenceStatusChange_resume_lower_layers_val_ext
} SI_XNAP_DT_LowerLayerPresenceStatusChange;


// L:2561
typedef enum __si_xnap_dt_LowerLayerPresenceStatusChange2
{
	LowerLayerPresenceStatusChange_release_lower_layers_val,
	LowerLayerPresenceStatusChange_re_establish_lower_layers_val,
	LowerLayerPresenceStatusChange_suspend_lower_layers_val_ext,
	LowerLayerPresenceStatusChange_resume_lower_layers_val_ext
} SI_XNAP_DT_LowerLayerPresenceStatusChange2;


// L:2588
typedef struct __si_xnap_dt_LowerLayerPresenceStatusChange_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_LowerLayerPresenceStatusChange_EnumProxy;


// LTEA2XServicesAuthorized
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_LTEA2XServicesAuthorized
{
	uint8_t selected_eaerialUE;
	int extSelected_eaerialUE;
	int isPresent_aerialUE;

	uint8_t selected_eaerialControllerUE;
	int extSelected_eaerialControllerUE;
	int isPresent_aerialControllerUE;

} SI_XNAP_DT_LTEA2XServicesAuthorized;


// VehicleUE
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_VehicleUE
{
	__si_xnap__VehicleUE_authorized_val,
	__si_xnap__VehicleUE_not_authorized_val
} SI_XNAP_DT_VehicleUE;


// L:2561
typedef enum __si_xnap_dt_VehicleUE2
{
	VehicleUE_authorized_val,
	VehicleUE_not_authorized_val
} SI_XNAP_DT_VehicleUE2;


// L:2588
typedef struct __si_xnap_dt_VehicleUE_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_VehicleUE_EnumProxy;


// PedestrianUE
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PedestrianUE
{
	__si_xnap__PedestrianUE_authorized_val,
	__si_xnap__PedestrianUE_not_authorized_val
} SI_XNAP_DT_PedestrianUE;


// L:2561
typedef enum __si_xnap_dt_PedestrianUE2
{
	PedestrianUE_authorized_val,
	PedestrianUE_not_authorized_val
} SI_XNAP_DT_PedestrianUE2;


// L:2588
typedef struct __si_xnap_dt_PedestrianUE_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PedestrianUE_EnumProxy;


// LTEV2XServicesAuthorized
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_LTEV2XServicesAuthorized
{
	uint8_t selected_evehicleUE;
	int extSelected_evehicleUE;
	int isPresent_vehicleUE;

	uint8_t selected_epedestrianUE;
	int extSelected_epedestrianUE;
	int isPresent_pedestrianUE;

} SI_XNAP_DT_LTEV2XServicesAuthorized;


// LTEUESidelinkAggregateMaximumBitRate
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_LTEUESidelinkAggregateMaximumBitRate
{
	unsigned long long int uESidelinkAggregateMaximumBitRate;

} SI_XNAP_DT_LTEUESidelinkAggregateMaximumBitRate;


// MBSCommServiceType
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MBSCommServiceType
{
	__si_xnap__MBSCommServiceType_multicast_val,
	__si_xnap__MBSCommServiceType_broadcast_val
} SI_XNAP_DT_MBSCommServiceType;


// L:2561
typedef enum __si_xnap_dt_MBSCommServiceType2
{
	MBSCommServiceType_multicast_val,
	MBSCommServiceType_broadcast_val
} SI_XNAP_DT_MBSCommServiceType2;


// L:2588
typedef struct __si_xnap_dt_MBSCommServiceType_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MBSCommServiceType_EnumProxy;


// NG-RANTraceID
// OCTETSTRING,OCTET STRING(SIZE(8))
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_NG_RANTraceID
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_NG_RANTraceID;

// S-BasedMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_S_BasedMDT
{
	SI_XNAP_DT_NG_RANTraceID * ng_ran_TraceID;

} SI_XNAP_DT_S_BasedMDT;


// MDTAlignmentInfo
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_MDTAlignmentInfo
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_S_BasedMDT * s_BasedMDT;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_MDTAlignmentInfo_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_MDTAlignmentInfo;


// MeasCollectionEntityIPAddress
// Asn_Generic_DataType,TransportLayerAddress
// ADT=0  Generic  DT=2
// L:6377
typedef struct __si_xnap_dt_MeasCollectionEntityIPAddress
{

} SI_XNAP_DT_MeasCollectionEntityIPAddress;

// M4ReportAmountMDT
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_M4ReportAmountMDT
{
	__si_xnap__M4ReportAmountMDT_r1_val,
	__si_xnap__M4ReportAmountMDT_r2_val,
	__si_xnap__M4ReportAmountMDT_r4_val,
	__si_xnap__M4ReportAmountMDT_r8_val,
	__si_xnap__M4ReportAmountMDT_r16_val,
	__si_xnap__M4ReportAmountMDT_r32_val,
	__si_xnap__M4ReportAmountMDT_r64_val,
	__si_xnap__M4ReportAmountMDT_infinity_val
} SI_XNAP_DT_M4ReportAmountMDT;


// L:2561
typedef enum __si_xnap_dt_M4ReportAmountMDT2
{
	M4ReportAmountMDT_r1_val,
	M4ReportAmountMDT_r2_val,
	M4ReportAmountMDT_r4_val,
	M4ReportAmountMDT_r8_val,
	M4ReportAmountMDT_r16_val,
	M4ReportAmountMDT_r32_val,
	M4ReportAmountMDT_r64_val,
	M4ReportAmountMDT_infinity_val
} SI_XNAP_DT_M4ReportAmountMDT2;


// L:2588
typedef struct __si_xnap_dt_M4ReportAmountMDT_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_M4ReportAmountMDT_EnumProxy;


// M5ReportAmountMDT
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_M5ReportAmountMDT
{
	__si_xnap__M5ReportAmountMDT_r1_val,
	__si_xnap__M5ReportAmountMDT_r2_val,
	__si_xnap__M5ReportAmountMDT_r4_val,
	__si_xnap__M5ReportAmountMDT_r8_val,
	__si_xnap__M5ReportAmountMDT_r16_val,
	__si_xnap__M5ReportAmountMDT_r32_val,
	__si_xnap__M5ReportAmountMDT_r64_val,
	__si_xnap__M5ReportAmountMDT_infinity_val
} SI_XNAP_DT_M5ReportAmountMDT;


// L:2561
typedef enum __si_xnap_dt_M5ReportAmountMDT2
{
	M5ReportAmountMDT_r1_val,
	M5ReportAmountMDT_r2_val,
	M5ReportAmountMDT_r4_val,
	M5ReportAmountMDT_r8_val,
	M5ReportAmountMDT_r16_val,
	M5ReportAmountMDT_r32_val,
	M5ReportAmountMDT_r64_val,
	M5ReportAmountMDT_infinity_val
} SI_XNAP_DT_M5ReportAmountMDT2;


// L:2588
typedef struct __si_xnap_dt_M5ReportAmountMDT_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_M5ReportAmountMDT_EnumProxy;


// M6ReportAmountMDT
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_M6ReportAmountMDT
{
	__si_xnap__M6ReportAmountMDT_r1_val,
	__si_xnap__M6ReportAmountMDT_r2_val,
	__si_xnap__M6ReportAmountMDT_r4_val,
	__si_xnap__M6ReportAmountMDT_r8_val,
	__si_xnap__M6ReportAmountMDT_r16_val,
	__si_xnap__M6ReportAmountMDT_r32_val,
	__si_xnap__M6ReportAmountMDT_r64_val,
	__si_xnap__M6ReportAmountMDT_infinity_val
} SI_XNAP_DT_M6ReportAmountMDT;


// L:2561
typedef enum __si_xnap_dt_M6ReportAmountMDT2
{
	M6ReportAmountMDT_r1_val,
	M6ReportAmountMDT_r2_val,
	M6ReportAmountMDT_r4_val,
	M6ReportAmountMDT_r8_val,
	M6ReportAmountMDT_r16_val,
	M6ReportAmountMDT_r32_val,
	M6ReportAmountMDT_r64_val,
	M6ReportAmountMDT_infinity_val
} SI_XNAP_DT_M6ReportAmountMDT2;


// L:2588
typedef struct __si_xnap_dt_M6ReportAmountMDT_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_M6ReportAmountMDT_EnumProxy;


// M7ReportAmountMDT
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_M7ReportAmountMDT
{
	__si_xnap__M7ReportAmountMDT_r1_val,
	__si_xnap__M7ReportAmountMDT_r2_val,
	__si_xnap__M7ReportAmountMDT_r4_val,
	__si_xnap__M7ReportAmountMDT_r8_val,
	__si_xnap__M7ReportAmountMDT_r16_val,
	__si_xnap__M7ReportAmountMDT_r32_val,
	__si_xnap__M7ReportAmountMDT_r64_val,
	__si_xnap__M7ReportAmountMDT_infinity_val
} SI_XNAP_DT_M7ReportAmountMDT;


// L:2561
typedef enum __si_xnap_dt_M7ReportAmountMDT2
{
	M7ReportAmountMDT_r1_val,
	M7ReportAmountMDT_r2_val,
	M7ReportAmountMDT_r4_val,
	M7ReportAmountMDT_r8_val,
	M7ReportAmountMDT_r16_val,
	M7ReportAmountMDT_r32_val,
	M7ReportAmountMDT_r64_val,
	M7ReportAmountMDT_infinity_val
} SI_XNAP_DT_M7ReportAmountMDT2;


// L:2588
typedef struct __si_xnap_dt_M7ReportAmountMDT_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_M7ReportAmountMDT_EnumProxy;


// MaskedIMEISV
// BITSTRING,BIT STRING(SIZE(64))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_MaskedIMEISV
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_MaskedIMEISV;

// MaxIPrate
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MaxIPrate
{
	__si_xnap__MaxIPrate_bitrate64kbs_val,
	__si_xnap__MaxIPrate_max_UErate_val
} SI_XNAP_DT_MaxIPrate;


// L:2561
typedef enum __si_xnap_dt_MaxIPrate2
{
	MaxIPrate_bitrate64kbs_val,
	MaxIPrate_max_UErate_val
} SI_XNAP_DT_MaxIPrate2;


// L:2588
typedef struct __si_xnap_dt_MaxIPrate_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MaxIPrate_EnumProxy;


// MaximumIPdatarate
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MaximumIPdatarate
{
	uint8_t selected_emaxIPrate_UL;
	int extSelected_emaxIPrate_UL;

} SI_XNAP_DT_MaximumIPdatarate;


// MBSFNSubframeAllocationEUTRA_oneframe
// BITSTRING,BIT STRING(SIZE(6))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_MBSFNSubframeAllocationEUTRA_oneframe
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_MBSFNSubframeAllocationEUTRA_oneframe;

// MBSFNSubframeAllocationEUTRA_fourframes
// BITSTRING,BIT STRING(SIZE(24))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_MBSFNSubframeAllocationEUTRA_fourframes
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_MBSFNSubframeAllocationEUTRA_fourframes;

// MBSFNSubframeAllocation-E-UTRA
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_MBSFNSubframeAllocation_E_UTRA
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_MBSFNSubframeAllocationEUTRA_oneframe * oneframe;

		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_MBSFNSubframeAllocationEUTRA_fourframes * fourframes;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_MBSFNSubframeAllocation_E_UTRA_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_MBSFNSubframeAllocation_E_UTRA;


// MBSFNSubframeInfo-E-UTRA
//SEQUENCE OF MBSFNSubframeInfo-E-UTRA-Item, MIN=1, MAX=maxnoofMBSFNEUTRA  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_MBSFNSubframeInfo_E_UTRA
{
	SI_LinkedList * MBSFNSubframeInfo_E_UTRA_Item;
} SI_XNAP_DT_MBSFNSubframeInfo_E_UTRA;


// MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod
{
	__si_xnap__MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod_n1_val,
	__si_xnap__MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod_n2_val,
	__si_xnap__MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod_n4_val,
	__si_xnap__MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod_n8_val,
	__si_xnap__MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod_n16_val,
	__si_xnap__MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod_n32_val
} SI_XNAP_DT_MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod;


// L:2561
typedef enum __si_xnap_dt_MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod2
{
	MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod_n1_val,
	MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod_n2_val,
	MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod_n4_val,
	MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod_n8_val,
	MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod_n16_val,
	MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod_n32_val
} SI_XNAP_DT_MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod2;


// L:2588
typedef struct __si_xnap_dt_MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod_EnumProxy;


// MBSFNSubframeInfoEUTRAItem_radioframeAllocationOffset
// INTEGER,INTEGER(0..7,...),MIN=0,MAX=7  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_MBSFNSubframeInfoEUTRAItem_radioframeAllocationOffset
{
	unsigned long long int data;
} SI_XNAP_DT_MBSFNSubframeInfoEUTRAItem_radioframeAllocationOffset;

// MBSFNSubframeInfo-E-UTRA-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MBSFNSubframeInfo_E_UTRA_Item
{
	uint8_t selected_eradioframeAllocationPeriod;
	int extSelected_eradioframeAllocationPeriod;

	unsigned long long int radioframeAllocationOffset;

	SI_XNAP_DT_MBSFNSubframeAllocation_E_UTRA * subframeAllocation;

} SI_XNAP_DT_MBSFNSubframeInfo_E_UTRA_Item;


// MBS-FrequencySelectionArea-Identity
// OCTETSTRING,OCTET STRING(SIZE(3))
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_MBS_FrequencySelectionArea_Identity
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_MBS_FrequencySelectionArea_Identity;

// MBS-Area-Session-ID
// INTEGER,INTEGER(0..65535,...),MIN=0,MAX=65535  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_MBS_Area_Session_ID
{
	unsigned long long int data;
} SI_XNAP_DT_MBS_Area_Session_ID;

// MRB-ID
// INTEGER,INTEGER(1..512,...),MIN=1,MAX=512  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_MRB_ID
{
	unsigned long long int data;
} SI_XNAP_DT_MRB_ID;

// MBS-QoSFlow-List
//SEQUENCE OF QoSFlowIdentifier, MIN=1, MAX=maxnoofMBSQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_MBS_QoSFlow_List
{
	SI_LinkedList * QoSFlowIdentifier;
} SI_XNAP_DT_MBS_QoSFlow_List;


// MRBProgressInformation_pdcp-SN12
// INTEGER,INTEGER(0..4095),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_MRBProgressInformation_pdcp_SN12
{
	unsigned long long int data;
} SI_XNAP_DT_MRBProgressInformation_pdcp_SN12;

// MRBProgressInformation_pdcp-SN18
// INTEGER,INTEGER(0..262143),MIN=0,MAX=262143  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_MRBProgressInformation_pdcp_SN18
{
	unsigned long long int data;
} SI_XNAP_DT_MRBProgressInformation_pdcp_SN18;

// MRB-ProgressInformation
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_MRB_ProgressInformation
{
	union 
	{
		// ParserName = INTEGER - NonEP false;
		unsigned long long int pdcp_SN12;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int pdcp_SN18;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_MRB_ProgressInformation_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_MRB_ProgressInformation;


// MBS-MappingandDataForwardingRequestInfofromSource-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MBS_MappingandDataForwardingRequestInfofromSource_Item
{
	unsigned long long int mRB_ID;

	SI_XNAP_DT_MBS_QoSFlow_List * mBS_QoSFlow_List;

	SI_XNAP_DT_MRB_ProgressInformation * mRB_ProgressInformation;
	int isPresent_mRB_ProgressInformation;

} SI_XNAP_DT_MBS_MappingandDataForwardingRequestInfofromSource_Item;


// MBS-DataForwarding-Indicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MBS_DataForwarding_Indicator
{
	__si_xnap__MBS_DataForwarding_Indicator_mbs_only_val
} SI_XNAP_DT_MBS_DataForwarding_Indicator;


// L:2561
typedef enum __si_xnap_dt_MBS_DataForwarding_Indicator2
{
	MBS_DataForwarding_Indicator_mbs_only_val
} SI_XNAP_DT_MBS_DataForwarding_Indicator2;


// L:2588
typedef struct __si_xnap_dt_MBS_DataForwarding_Indicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MBS_DataForwarding_Indicator_EnumProxy;


// MBS-DataForwardingResponseInfofromTarget
//SEQUENCE OF MBS-DataForwardingResponseInfofromTarget-Item, MIN=1, MAX=maxnoofMRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_MBS_DataForwardingResponseInfofromTarget
{
	SI_LinkedList * MBS_DataForwardingResponseInfofromTarget_Item;
} SI_XNAP_DT_MBS_DataForwardingResponseInfofromTarget;


// MBS-DataForwardingResponseInfofromTarget-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MBS_DataForwardingResponseInfofromTarget_Item
{
	unsigned long long int mRB_ID;

	SI_XNAP_DT_UPTransportLayerInformation * dlForwardingUPTNL;

	SI_XNAP_DT_MRB_ProgressInformation * mRB_ProgressInformation;
	int isPresent_mRB_ProgressInformation;

} SI_XNAP_DT_MBS_DataForwardingResponseInfofromTarget_Item;


// MBS-QoSFlowsToAdd-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MBS_QoSFlowsToAdd_Item
{
	unsigned long long int mBS_QosFlowIdentifier;

	SI_XNAP_DT_QoSFlowLevelQoSParameters * mBS_QosFlowLevelQosParameters;

} SI_XNAP_DT_MBS_QoSFlowsToAdd_Item;


// MBS-ServiceAreaInformation-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MBS_ServiceAreaInformation_Item
{
	unsigned long long int mBS_Area_Session_ID;

	SI_XNAP_DT_MBS_ServiceAreaInformation * mBS_ServiceAreaInformation;

} SI_XNAP_DT_MBS_ServiceAreaInformation_Item;


// MBS-ServiceAreaTAI-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MBS_ServiceAreaTAI_Item
{
	SI_XNAP_DT_PLMN_Identity * plmn_ID;

	SI_XNAP_DT_TAC * tAC;

} SI_XNAP_DT_MBS_ServiceAreaTAI_Item;


// TMGI
// OCTETSTRING,OCTET STRING(SIZE(6))
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_TMGI
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_TMGI;

// MBS-Session-ID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MBS_Session_ID
{
	SI_XNAP_DT_TMGI * tMGI;

	SI_XNAP_DT_NID * nID;
	int isPresent_nID;

} SI_XNAP_DT_MBS_Session_ID;


// MBS-AssistanceInformation
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MBS_AssistanceInformation
{
	__si_xnap__MBS_AssistanceInformation_true_val
} SI_XNAP_DT_MBS_AssistanceInformation;


// L:2561
typedef enum __si_xnap_dt_MBS_AssistanceInformation2
{
	MBS_AssistanceInformation_true_val
} SI_XNAP_DT_MBS_AssistanceInformation2;


// L:2588
typedef struct __si_xnap_dt_MBS_AssistanceInformation_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MBS_AssistanceInformation_EnumProxy;


// MBS-SessionAssociatedInformation
//SEQUENCE OF MBS-SessionAssociatedInformation-Item, MIN=1, MAX=maxnoofAssociatedMBSSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_MBS_SessionAssociatedInformation
{
	SI_LinkedList * MBS_SessionAssociatedInformation_Item;
} SI_XNAP_DT_MBS_SessionAssociatedInformation;


// MBS-SessionAssociatedInformation-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MBS_SessionAssociatedInformation_Item
{
	SI_XNAP_DT_MBS_Session_ID * mBS_Session_ID;

	SI_XNAP_DT_Associated_QoSFlowInfo_List * associated_QoSFlowInfo_List;

} SI_XNAP_DT_MBS_SessionAssociatedInformation_Item;


// MBS-SessionInformation-List
//SEQUENCE OF MBS-SessionInformation-Item, MIN=1, MAX=maxnoofMBSSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_MBS_SessionInformation_List
{
	SI_LinkedList * MBS_SessionInformation_Item;
} SI_XNAP_DT_MBS_SessionInformation_List;


// MBS-SessionInformation-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MBS_SessionInformation_Item
{
	SI_XNAP_DT_MBS_Session_ID * mBS_Session_ID;

	unsigned long long int mBS_Area_Session_ID;
	int isPresent_mBS_Area_Session_ID;

	SI_XNAP_DT_Active_MBS_SessionInformation * active_MBS_SessioInformation;
	int isPresent_active_MBS_SessioInformation;

} SI_XNAP_DT_MBS_SessionInformation_Item;


// MBS-SessionInformationResponse-List
//SEQUENCE OF MBS-SessionInformationResponse-Item, MIN=1, MAX=maxnoofMBSSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_MBS_SessionInformationResponse_List
{
	SI_LinkedList * MBS_SessionInformationResponse_Item;
} SI_XNAP_DT_MBS_SessionInformationResponse_List;


// MBS-SessionInformationResponse-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MBS_SessionInformationResponse_Item
{
	SI_XNAP_DT_MBS_Session_ID * mBS_Session_ID;

	SI_XNAP_DT_MBS_DataForwardingResponseInfofromTarget * mBS_DataForwardingResponseInfofromTarget;
	int isPresent_mBS_DataForwardingResponseInfofromTarget;

} SI_XNAP_DT_MBS_SessionInformationResponse_Item;


// MDT-Activation
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MDT_Activation
{
	__si_xnap__MDT_Activation_immediate_MDT_only_val,
	__si_xnap__MDT_Activation_immediate_MDT_and_Trace_val,
	__si_xnap__MDT_Activation_logged_MDT_only_val
} SI_XNAP_DT_MDT_Activation;


// L:2561
typedef enum __si_xnap_dt_MDT_Activation2
{
	MDT_Activation_immediate_MDT_only_val,
	MDT_Activation_immediate_MDT_and_Trace_val,
	MDT_Activation_logged_MDT_only_val
} SI_XNAP_DT_MDT_Activation2;


// L:2588
typedef struct __si_xnap_dt_MDT_Activation_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MDT_Activation_EnumProxy;


// MDTMode-NR-Extension
// Asn_Generic_DataType,ProtocolIE-Single-Container{{MDTMode-NR-ExtensionIE }}
// ADT=0  Generic  DT=1
// L:6377
typedef struct __si_xnap_dt_MDTMode_NR_Extension
{

} SI_XNAP_DT_MDTMode_NR_Extension;

// MDTMode-NR
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_MDTMode_NR
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_ImmediateMDT_NR * immediateMDT;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_LoggedMDT_NR * loggedMDT;

		// ParserName = Asn_Generic_DataType - NonEP false;
		SI_XNAP_DT_MDTMode_NR_Extension * mDTMode_NR_Extension_ext;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_MDTMode_NR;


// MDTPLMNList
//SEQUENCE OF PLMN-Identity, MIN=1, MAX=maxnoofMDTPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_MDTPLMNList
{
	SI_LinkedList * PLMN_Identity;
} SI_XNAP_DT_MDTPLMNList;


// MDT-Configuration-NR
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MDT_Configuration_NR
{
	uint8_t selected_emdt_Activation;
	int extSelected_emdt_Activation;

	SI_XNAP_DT_AreaScopeOfMDT_NR * areaScopeOfMDT_NR;
	int isPresent_areaScopeOfMDT_NR;

	SI_XNAP_DT_MDTMode_NR * mDTMode_NR;

	SI_XNAP_DT_MDTPLMNList * signallingBasedMDTPLMNList;
	int isPresent_signallingBasedMDTPLMNList;

} SI_XNAP_DT_MDT_Configuration_NR;


// MDTMode-EUTRA
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_MDTMode_EUTRA
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_MDTMode_EUTRA;

// MDT-Configuration-EUTRA
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MDT_Configuration_EUTRA
{
	uint8_t selected_emdt_Activation;
	int extSelected_emdt_Activation;

	SI_XNAP_DT_AreaScopeOfMDT_EUTRA * areaScopeOfMDT_EUTRA;
	int isPresent_areaScopeOfMDT_EUTRA;

	SI_XNAP_DT_MDTMode_EUTRA * mDTMode_EUTRA;

	SI_XNAP_DT_MDTPLMNList * signallingBasedMDTPLMNList;

} SI_XNAP_DT_MDT_Configuration_EUTRA;


// MDT-Configuration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MDT_Configuration
{
	SI_XNAP_DT_MDT_Configuration_NR * mDT_Configuration_NR;
	int isPresent_mDT_Configuration_NR;

	SI_XNAP_DT_MDT_Configuration_EUTRA * mDT_Configuration_EUTRA;
	int isPresent_mDT_Configuration_EUTRA;

} SI_XNAP_DT_MDT_Configuration;


// MN-only-MDT-collection
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MN_only_MDT_collection
{
	__si_xnap__MN_only_MDT_collection_mN_Only_val
} SI_XNAP_DT_MN_only_MDT_collection;


// L:2561
typedef enum __si_xnap_dt_MN_only_MDT_collection2
{
	MN_only_MDT_collection_mN_Only_val
} SI_XNAP_DT_MN_only_MDT_collection2;


// L:2588
typedef struct __si_xnap_dt_MN_only_MDT_collection_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MN_only_MDT_collection_EnumProxy;


// MDTPLMNModificationList
//SEQUENCE OF PLMN-Identity, MIN=0, MAX=maxnoofMDTPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_MDTPLMNModificationList
{
	SI_LinkedList * PLMN_Identity;
} SI_XNAP_DT_MDTPLMNModificationList;


// UL-GBR-PRB-usage-for-MIMO
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_UL_GBR_PRB_usage_for_MIMO
{
	unsigned long long int data;
} SI_XNAP_DT_UL_GBR_PRB_usage_for_MIMO;

// UL-non-GBR-PRB-usage-for-MIMO
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_UL_non_GBR_PRB_usage_for_MIMO
{
	unsigned long long int data;
} SI_XNAP_DT_UL_non_GBR_PRB_usage_for_MIMO;

// UL-Total-PRB-usage-for-MIMO
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_UL_Total_PRB_usage_for_MIMO
{
	unsigned long long int data;
} SI_XNAP_DT_UL_Total_PRB_usage_for_MIMO;

// MIMOPRBusageInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MIMOPRBusageInformation
{
	unsigned long long int dl_GBR_PRB_usage_for_MIMO;

	unsigned long long int ul_GBR_PRB_usage_for_MIMO;

	unsigned long long int dl_non_GBR_PRB_usage_for_MIMO;

	unsigned long long int ul_non_GBR_PRB_usage_for_MIMO;

	unsigned long long int dl_Total_PRB_usage_for_MIMO;

	unsigned long long int ul_Total_PRB_usage_for_MIMO;

} SI_XNAP_DT_MIMOPRBusageInformation;


// MobileIAB-AuthorizationStatus
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MobileIAB_AuthorizationStatus
{
	__si_xnap__MobileIAB_AuthorizationStatus_authorized_val,
	__si_xnap__MobileIAB_AuthorizationStatus_not_authorized_val
} SI_XNAP_DT_MobileIAB_AuthorizationStatus;


// L:2561
typedef enum __si_xnap_dt_MobileIAB_AuthorizationStatus2
{
	MobileIAB_AuthorizationStatus_authorized_val,
	MobileIAB_AuthorizationStatus_not_authorized_val
} SI_XNAP_DT_MobileIAB_AuthorizationStatus2;


// L:2588
typedef struct __si_xnap_dt_MobileIAB_AuthorizationStatus_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MobileIAB_AuthorizationStatus_EnumProxy;


// MobileIABCell
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MobileIABCell
{
	__si_xnap__MobileIABCell_true_val
} SI_XNAP_DT_MobileIABCell;


// L:2561
typedef enum __si_xnap_dt_MobileIABCell2
{
	MobileIABCell_true_val
} SI_XNAP_DT_MobileIABCell2;


// L:2588
typedef struct __si_xnap_dt_MobileIABCell_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MobileIABCell_EnumProxy;


// MobilityInformation
// BITSTRING,BIT STRING(SIZE(32))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_MobilityInformation
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_MobilityInformation;

// MobilityParametersModificationRange_handoverTriggerChangeLowerLimit
// INTEGER,INTEGER(-20..20),MIN=-20,MAX=20  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_MobilityParametersModificationRange_handoverTriggerChangeLowerLimit
{
	unsigned long long int data;
} SI_XNAP_DT_MobilityParametersModificationRange_handoverTriggerChangeLowerLimit;

// MobilityParametersModificationRange_handoverTriggerChangeUpperLimit
// INTEGER,INTEGER(-20..20),MIN=-20,MAX=20  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_MobilityParametersModificationRange_handoverTriggerChangeUpperLimit
{
	unsigned long long int data;
} SI_XNAP_DT_MobilityParametersModificationRange_handoverTriggerChangeUpperLimit;

// MobilityParametersModificationRange
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MobilityParametersModificationRange
{
	unsigned long long int handoverTriggerChangeLowerLimit;

	unsigned long long int handoverTriggerChangeUpperLimit;

} SI_XNAP_DT_MobilityParametersModificationRange;


// MobilityParametersInformation_handoverTriggerChange
// INTEGER,INTEGER(-20..20),MIN=-20,MAX=20  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_MobilityParametersInformation_handoverTriggerChange
{
	unsigned long long int data;
} SI_XNAP_DT_MobilityParametersInformation_handoverTriggerChange;

// MobilityParametersInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MobilityParametersInformation
{
	unsigned long long int handoverTriggerChange;

} SI_XNAP_DT_MobilityParametersInformation;


// MobilityRestrictionList_equivalent_PLMNs
//SEQUENCE OF PLMN-Identity, MIN=1, MAX=maxnoofEPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_MobilityRestrictionList_equivalent_PLMNs
{
	SI_LinkedList * PLMN_Identity;
} SI_XNAP_DT_MobilityRestrictionList_equivalent_PLMNs;


// RAT-RestrictionsList
//SEQUENCE OF RAT-RestrictionsItem, MIN=1, MAX=maxnoofPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_RAT_RestrictionsList
{
	SI_LinkedList * RAT_RestrictionsItem;
} SI_XNAP_DT_RAT_RestrictionsList;


// ForbiddenAreaList
//SEQUENCE OF ForbiddenAreaItem, MIN=1, MAX=maxnoofPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ForbiddenAreaList
{
	SI_LinkedList * ForbiddenAreaItem;
} SI_XNAP_DT_ForbiddenAreaList;


// ServiceAreaList
//SEQUENCE OF ServiceAreaItem, MIN=1, MAX=maxnoofPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ServiceAreaList
{
	SI_LinkedList * ServiceAreaItem;
} SI_XNAP_DT_ServiceAreaList;


// MobilityRestrictionList
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MobilityRestrictionList
{
	SI_XNAP_DT_PLMN_Identity * serving_PLMN;

	SI_XNAP_DT_MobilityRestrictionList_equivalent_PLMNs * equivalent_PLMNs;
	int isPresent_equivalent_PLMNs;

	SI_XNAP_DT_RAT_RestrictionsList * rat_Restrictions;
	int isPresent_rat_Restrictions;

	SI_XNAP_DT_ForbiddenAreaList * forbiddenAreaInformation;
	int isPresent_forbiddenAreaInformation;

	SI_XNAP_DT_ServiceAreaList * serviceAreaInformation;
	int isPresent_serviceAreaInformation;

} SI_XNAP_DT_MobilityRestrictionList;


// CNTypeRestrictionsForEquivalent
//SEQUENCE OF CNTypeRestrictionsForEquivalentItem, MIN=1, MAX=maxnoofEPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_CNTypeRestrictionsForEquivalent
{
	SI_LinkedList * CNTypeRestrictionsForEquivalentItem;
} SI_XNAP_DT_CNTypeRestrictionsForEquivalent;


// CNTypeRestrictionsForEquivalentItem_cn-Type
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CNTypeRestrictionsForEquivalentItem_cn_Type
{
	__si_xnap__CNTypeRestrictionsForEquivalentItem_cn_Type_epc_forbidden_val,
	__si_xnap__CNTypeRestrictionsForEquivalentItem_cn_Type_fiveGC_forbidden_val
} SI_XNAP_DT_CNTypeRestrictionsForEquivalentItem_cn_Type;


// L:2561
typedef enum __si_xnap_dt_CNTypeRestrictionsForEquivalentItem_cn_Type2
{
	CNTypeRestrictionsForEquivalentItem_cn_Type_epc_forbidden_val,
	CNTypeRestrictionsForEquivalentItem_cn_Type_fiveGC_forbidden_val
} SI_XNAP_DT_CNTypeRestrictionsForEquivalentItem_cn_Type2;


// L:2588
typedef struct __si_xnap_dt_CNTypeRestrictionsForEquivalentItem_cn_Type_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CNTypeRestrictionsForEquivalentItem_cn_Type_EnumProxy;


// CNTypeRestrictionsForEquivalentItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_CNTypeRestrictionsForEquivalentItem
{
	SI_XNAP_DT_PLMN_Identity * plmn_Identity;

	uint8_t selected_ecn_Type;
	int extSelected_ecn_Type;

} SI_XNAP_DT_CNTypeRestrictionsForEquivalentItem;


// CNTypeRestrictionsForServing
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_CNTypeRestrictionsForServing
{
	__si_xnap__CNTypeRestrictionsForServing_epc_forbidden_val
} SI_XNAP_DT_CNTypeRestrictionsForServing;


// L:2561
typedef enum __si_xnap_dt_CNTypeRestrictionsForServing2
{
	CNTypeRestrictionsForServing_epc_forbidden_val
} SI_XNAP_DT_CNTypeRestrictionsForServing2;


// L:2588
typedef struct __si_xnap_dt_CNTypeRestrictionsForServing_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_CNTypeRestrictionsForServing_EnumProxy;


// RAT-RestrictionInformation
// BITSTRING,BIT STRING{e-UTRA(0),nR(1), nR-unlicensed(2), nR-LEO(3), nR-MEO(4), nR-GEO(5), nR-OTHERSAT(6)}(SIZE(8,...))
// ADT=0  DT=1
// L:5330
typedef struct __si_xnap_dt_RAT_RestrictionInformation
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_RAT_RestrictionInformation;

// RAT-RestrictionsItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RAT_RestrictionsItem
{
	SI_XNAP_DT_PLMN_Identity * plmn_Identity;

	SI_XNAP_DT_RAT_RestrictionInformation * rat_RestrictionInformation;

} SI_XNAP_DT_RAT_RestrictionsItem;


// ForbiddenAreaItem_forbidden_TACs
//SEQUENCE OF TAC, MIN=1, MAX=maxnoofForbiddenTACs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ForbiddenAreaItem_forbidden_TACs
{
	SI_LinkedList * TAC;
} SI_XNAP_DT_ForbiddenAreaItem_forbidden_TACs;


// ForbiddenAreaItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ForbiddenAreaItem
{
	SI_XNAP_DT_PLMN_Identity * plmn_Identity;

	SI_XNAP_DT_ForbiddenAreaItem_forbidden_TACs * forbidden_TACs;

} SI_XNAP_DT_ForbiddenAreaItem;


// ServiceAreaItem_allowed_TACs_ServiceArea
//SEQUENCE OF TAC, MIN=1, MAX=maxnoofAllowedAreas  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ServiceAreaItem_allowed_TACs_ServiceArea
{
	SI_LinkedList * TAC;
} SI_XNAP_DT_ServiceAreaItem_allowed_TACs_ServiceArea;


// ServiceAreaItem_not_allowed_TACs_ServiceArea
//SEQUENCE OF TAC, MIN=1, MAX=maxnoofAllowedAreas  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ServiceAreaItem_not_allowed_TACs_ServiceArea
{
	SI_LinkedList * TAC;
} SI_XNAP_DT_ServiceAreaItem_not_allowed_TACs_ServiceArea;


// ServiceAreaItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ServiceAreaItem
{
	SI_XNAP_DT_PLMN_Identity * plmn_Identity;

	SI_XNAP_DT_ServiceAreaItem_allowed_TACs_ServiceArea * allowed_TACs_ServiceArea;
	int isPresent_allowed_TACs_ServiceArea;

	SI_XNAP_DT_ServiceAreaItem_not_allowed_TACs_ServiceArea * not_allowed_TACs_ServiceArea;
	int isPresent_not_allowed_TACs_ServiceArea;

} SI_XNAP_DT_ServiceAreaItem;


// EUTRAResourceCoordinationInfo_ul-coordination-info
// BITSTRING,BIT STRING(SIZE(6..4400))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_EUTRAResourceCoordinationInfo_ul_coordination_info
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_EUTRAResourceCoordinationInfo_ul_coordination_info;

// EUTRAResourceCoordinationInfo_dl-coordination-info
// BITSTRING,BIT STRING(SIZE(6..4400))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_EUTRAResourceCoordinationInfo_dl_coordination_info
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_EUTRAResourceCoordinationInfo_dl_coordination_info;

// E-UTRA-CoordinationAssistanceInfo
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_E_UTRA_CoordinationAssistanceInfo
{
	__si_xnap__E_UTRA_CoordinationAssistanceInfo_coordination_not_required_val
} SI_XNAP_DT_E_UTRA_CoordinationAssistanceInfo;


// L:2561
typedef enum __si_xnap_dt_E_UTRA_CoordinationAssistanceInfo2
{
	E_UTRA_CoordinationAssistanceInfo_coordination_not_required_val
} SI_XNAP_DT_E_UTRA_CoordinationAssistanceInfo2;


// L:2588
typedef struct __si_xnap_dt_E_UTRA_CoordinationAssistanceInfo_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_E_UTRA_CoordinationAssistanceInfo_EnumProxy;


// E-UTRA-ResourceCoordinationInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_E_UTRA_ResourceCoordinationInfo
{
	SI_XNAP_DT_E_UTRA_CGI * e_utra_cell;

	SI_XNAP_DT_EUTRAResourceCoordinationInfo_ul_coordination_info * ul_coordination_info;

	SI_XNAP_DT_EUTRAResourceCoordinationInfo_dl_coordination_info * dl_coordination_info;
	int isPresent_dl_coordination_info;

	SI_XNAP_DT_NR_CGI * nr_cell;
	int isPresent_nr_cell;

	uint8_t selected_ee_utra_coordination_assistance_info;
	int extSelected_ee_utra_coordination_assistance_info;
	int isPresent_e_utra_coordination_assistance_info;

} SI_XNAP_DT_E_UTRA_ResourceCoordinationInfo;


// NRResourceCoordinationInfo_ul-coordination-info
// BITSTRING,BIT STRING(SIZE(6..4400))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_NRResourceCoordinationInfo_ul_coordination_info
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_NRResourceCoordinationInfo_ul_coordination_info;

// NRResourceCoordinationInfo_dl-coordination-info
// BITSTRING,BIT STRING(SIZE(6..4400))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_NRResourceCoordinationInfo_dl_coordination_info
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_NRResourceCoordinationInfo_dl_coordination_info;

// NR-CoordinationAssistanceInfo
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NR_CoordinationAssistanceInfo
{
	__si_xnap__NR_CoordinationAssistanceInfo_coordination_not_required_val
} SI_XNAP_DT_NR_CoordinationAssistanceInfo;


// L:2561
typedef enum __si_xnap_dt_NR_CoordinationAssistanceInfo2
{
	NR_CoordinationAssistanceInfo_coordination_not_required_val
} SI_XNAP_DT_NR_CoordinationAssistanceInfo2;


// L:2588
typedef struct __si_xnap_dt_NR_CoordinationAssistanceInfo_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NR_CoordinationAssistanceInfo_EnumProxy;


// NR-ResourceCoordinationInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NR_ResourceCoordinationInfo
{
	SI_XNAP_DT_NR_CGI * nr_cell;

	SI_XNAP_DT_NRResourceCoordinationInfo_ul_coordination_info * ul_coordination_info;

	SI_XNAP_DT_NRResourceCoordinationInfo_dl_coordination_info * dl_coordination_info;
	int isPresent_dl_coordination_info;

	SI_XNAP_DT_E_UTRA_CGI * e_utra_cell;
	int isPresent_e_utra_cell;

	uint8_t selected_enr_coordination_assistance_info;
	int extSelected_enr_coordination_assistance_info;
	int isPresent_nr_coordination_assistance_info;

} SI_XNAP_DT_NR_ResourceCoordinationInfo;


// NG-RAN-Node-ResourceCoordinationInfo
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_NG_RAN_Node_ResourceCoordinationInfo
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_E_UTRA_ResourceCoordinationInfo * eutra_resource_coordination_info;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_NR_ResourceCoordinationInfo * nr_resource_coordination_info;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_NG_RAN_Node_ResourceCoordinationInfo;


// MR-DC-ResourceCoordinationInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MR_DC_ResourceCoordinationInfo
{
	SI_XNAP_DT_NG_RAN_Node_ResourceCoordinationInfo * ng_RAN_Node_ResourceCoordinationInfo;

} SI_XNAP_DT_MR_DC_ResourceCoordinationInfo;


// MessageOversizeNotification
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MessageOversizeNotification
{
	unsigned long long int maximumCellListSize;

} SI_XNAP_DT_MessageOversizeNotification;


// MT-SDT-Indicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MT_SDT_Indicator
{
	__si_xnap__MT_SDT_Indicator_true_val
} SI_XNAP_DT_MT_SDT_Indicator;


// L:2561
typedef enum __si_xnap_dt_MT_SDT_Indicator2
{
	MT_SDT_Indicator_true_val
} SI_XNAP_DT_MT_SDT_Indicator2;


// L:2588
typedef struct __si_xnap_dt_MT_SDT_Indicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MT_SDT_Indicator_EnumProxy;


// MT-SDT-DataSize
// INTEGER,INTEGER(1..96000,...),MIN=1,MAX=96000  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_MT_SDT_DataSize
{
	unsigned long long int data;
} SI_XNAP_DT_MT_SDT_DataSize;

// MT-SDT-Information
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MT_SDT_Information
{
	uint8_t selected_emT_SDT_Indicator;
	int extSelected_emT_SDT_Indicator;

	unsigned long long int mT_SDT_DataSize;

} SI_XNAP_DT_MT_SDT_Information;


// MeasuredUETrajectory
//SEQUENCE OF MeasuredUETrajectory-Item, MIN=1, MAX=maxnoofCellsTrajectory  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_MeasuredUETrajectory
{
	SI_LinkedList * MeasuredUETrajectory_Item;
} SI_XNAP_DT_MeasuredUETrajectory;


// MeasuredTrajectoryNGRANCellInfo_timeUEStaysInCell
// INTEGER,INTEGER(0..4095),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_MeasuredTrajectoryNGRANCellInfo_timeUEStaysInCell
{
	unsigned long long int data;
} SI_XNAP_DT_MeasuredTrajectoryNGRANCellInfo_timeUEStaysInCell;

// MeasuredTrajectoryNGRANCellInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MeasuredTrajectoryNGRANCellInfo
{
	SI_XNAP_DT_GlobalNG_RANCell_ID * globalNG_RANCell_ID;

	unsigned long long int timeUEStaysInCell;

} SI_XNAP_DT_MeasuredTrajectoryNGRANCellInfo;


// MeasuredTrajectoryCellInfo
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_MeasuredTrajectoryCellInfo
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_MeasuredTrajectoryNGRANCellInfo * nG_RAN_Cell;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_MeasuredTrajectoryCellInfo_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_MeasuredTrajectoryCellInfo;


// MeasuredUETrajectory-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MeasuredUETrajectory_Item
{
	SI_XNAP_DT_MeasuredTrajectoryCellInfo * measuredtrajectoryCellInfo;

} SI_XNAP_DT_MeasuredUETrajectory_Item;


// N6JitterInformation_n6JitterLowerBound
// INTEGER,INTEGER(-127..127),MIN=-127,MAX=127  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_N6JitterInformation_n6JitterLowerBound
{
	unsigned long long int data;
} SI_XNAP_DT_N6JitterInformation_n6JitterLowerBound;

// N6JitterInformation_n6JitterUpperBound
// INTEGER,INTEGER(-127..127),MIN=-127,MAX=127  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_N6JitterInformation_n6JitterUpperBound
{
	unsigned long long int data;
} SI_XNAP_DT_N6JitterInformation_n6JitterUpperBound;

//TODO: DataType ->ProtocolExtensionContainer{{N6JitterInformationExtIEs}}<- Got NULL  L:7884

// N6JitterInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_N6JitterInformation
{
	unsigned long long int n6JitterLowerBound;

	unsigned long long int n6JitterUpperBound;

} SI_XNAP_DT_N6JitterInformation;


// NACellResourceConfigurationItem_nAdownlink
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NACellResourceConfigurationItem_nAdownlink
{
	__si_xnap__NACellResourceConfigurationItem_nAdownlink_true_val,
	__si_xnap__NACellResourceConfigurationItem_nAdownlink_false_val
} SI_XNAP_DT_NACellResourceConfigurationItem_nAdownlink;


// L:2561
typedef enum __si_xnap_dt_NACellResourceConfigurationItem_nAdownlink2
{
	NACellResourceConfigurationItem_nAdownlink_true_val,
	NACellResourceConfigurationItem_nAdownlink_false_val
} SI_XNAP_DT_NACellResourceConfigurationItem_nAdownlink2;


// L:2588
typedef struct __si_xnap_dt_NACellResourceConfigurationItem_nAdownlink_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NACellResourceConfigurationItem_nAdownlink_EnumProxy;


// NACellResourceConfigurationItem_nAuplink
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NACellResourceConfigurationItem_nAuplink
{
	__si_xnap__NACellResourceConfigurationItem_nAuplink_true_val,
	__si_xnap__NACellResourceConfigurationItem_nAuplink_false_val
} SI_XNAP_DT_NACellResourceConfigurationItem_nAuplink;


// L:2561
typedef enum __si_xnap_dt_NACellResourceConfigurationItem_nAuplink2
{
	NACellResourceConfigurationItem_nAuplink_true_val,
	NACellResourceConfigurationItem_nAuplink_false_val
} SI_XNAP_DT_NACellResourceConfigurationItem_nAuplink2;


// L:2588
typedef struct __si_xnap_dt_NACellResourceConfigurationItem_nAuplink_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NACellResourceConfigurationItem_nAuplink_EnumProxy;


// NACellResourceConfigurationItem_nAflexible
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NACellResourceConfigurationItem_nAflexible
{
	__si_xnap__NACellResourceConfigurationItem_nAflexible_true_val,
	__si_xnap__NACellResourceConfigurationItem_nAflexible_false_val
} SI_XNAP_DT_NACellResourceConfigurationItem_nAflexible;


// L:2561
typedef enum __si_xnap_dt_NACellResourceConfigurationItem_nAflexible2
{
	NACellResourceConfigurationItem_nAflexible_true_val,
	NACellResourceConfigurationItem_nAflexible_false_val
} SI_XNAP_DT_NACellResourceConfigurationItem_nAflexible2;


// L:2588
typedef struct __si_xnap_dt_NACellResourceConfigurationItem_nAflexible_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NACellResourceConfigurationItem_nAflexible_EnumProxy;


// NACellResourceConfiguration-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NACellResourceConfiguration_Item
{
	uint8_t selected_enAdownlink;
	int extSelected_enAdownlink;
	int isPresent_nAdownlink;

	uint8_t selected_enAuplink;
	int extSelected_enAuplink;
	int isPresent_nAuplink;

	uint8_t selected_enAflexible;
	int extSelected_enAflexible;
	int isPresent_nAflexible;

} SI_XNAP_DT_NACellResourceConfiguration_Item;


// NBIoT-UL-DL-AlignmentOffset
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NBIoT_UL_DL_AlignmentOffset
{
	__si_xnap__NBIoT_UL_DL_AlignmentOffset_khz_7dot5_val,
	__si_xnap__NBIoT_UL_DL_AlignmentOffset_khz0_val,
	__si_xnap__NBIoT_UL_DL_AlignmentOffset_khz7dot5_val
} SI_XNAP_DT_NBIoT_UL_DL_AlignmentOffset;


// L:2561
typedef enum __si_xnap_dt_NBIoT_UL_DL_AlignmentOffset2
{
	NBIoT_UL_DL_AlignmentOffset_khz_7dot5_val,
	NBIoT_UL_DL_AlignmentOffset_khz0_val,
	NBIoT_UL_DL_AlignmentOffset_khz7dot5_val
} SI_XNAP_DT_NBIoT_UL_DL_AlignmentOffset2;


// L:2588
typedef struct __si_xnap_dt_NBIoT_UL_DL_AlignmentOffset_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NBIoT_UL_DL_AlignmentOffset_EnumProxy;


// NEDCTDMPattern_subframeAssignment
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NEDCTDMPattern_subframeAssignment
{
	__si_xnap__NEDCTDMPattern_subframeAssignment_sa0_val,
	__si_xnap__NEDCTDMPattern_subframeAssignment_sa1_val,
	__si_xnap__NEDCTDMPattern_subframeAssignment_sa2_val,
	__si_xnap__NEDCTDMPattern_subframeAssignment_sa3_val,
	__si_xnap__NEDCTDMPattern_subframeAssignment_sa4_val,
	__si_xnap__NEDCTDMPattern_subframeAssignment_sa5_val,
	__si_xnap__NEDCTDMPattern_subframeAssignment_sa6_val
} SI_XNAP_DT_NEDCTDMPattern_subframeAssignment;


// L:2561
typedef enum __si_xnap_dt_NEDCTDMPattern_subframeAssignment2
{
	NEDCTDMPattern_subframeAssignment_sa0_val,
	NEDCTDMPattern_subframeAssignment_sa1_val,
	NEDCTDMPattern_subframeAssignment_sa2_val,
	NEDCTDMPattern_subframeAssignment_sa3_val,
	NEDCTDMPattern_subframeAssignment_sa4_val,
	NEDCTDMPattern_subframeAssignment_sa5_val,
	NEDCTDMPattern_subframeAssignment_sa6_val
} SI_XNAP_DT_NEDCTDMPattern_subframeAssignment2;


// L:2588
typedef struct __si_xnap_dt_NEDCTDMPattern_subframeAssignment_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NEDCTDMPattern_subframeAssignment_EnumProxy;


// NEDCTDMPattern_harqOffset
// INTEGER,INTEGER(0..9),MIN=0,MAX=9  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_NEDCTDMPattern_harqOffset
{
	unsigned long long int data;
} SI_XNAP_DT_NEDCTDMPattern_harqOffset;

// NE-DC-TDM-Pattern
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NE_DC_TDM_Pattern
{
	uint8_t selected_esubframeAssignment;
	int extSelected_esubframeAssignment;

	unsigned long long int harqOffset;

} SI_XNAP_DT_NE_DC_TDM_Pattern;


// NeighbourInformation-E-UTRA
//SEQUENCE OF NeighbourInformation-E-UTRA-Item, MIN=1, MAX=maxnoofNeighbours  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_NeighbourInformation_E_UTRA
{
	SI_LinkedList * NeighbourInformation_E_UTRA_Item;
} SI_XNAP_DT_NeighbourInformation_E_UTRA;


// NeighbourInformation-E-UTRA-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NeighbourInformation_E_UTRA_Item
{
	unsigned long long int e_utra_PCI;

	SI_XNAP_DT_E_UTRA_CGI * e_utra_cgi;

	unsigned long long int earfcn;

	SI_XNAP_DT_TAC * tac;

	unsigned long long int ranac;
	int isPresent_ranac;

} SI_XNAP_DT_NeighbourInformation_E_UTRA_Item;


// NeighbourInformation-NR
//SEQUENCE OF NeighbourInformation-NR-Item, MIN=1, MAX=maxnoofNeighbours  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_NeighbourInformation_NR
{
	SI_LinkedList * NeighbourInformation_NR_Item;
} SI_XNAP_DT_NeighbourInformation_NR;


// NeighbourInformationNRItem_measurementTimingConfiguration
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_NeighbourInformationNRItem_measurementTimingConfiguration
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_NeighbourInformationNRItem_measurementTimingConfiguration;

// NeighbourInformation-NR-ModeFDDInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NeighbourInformation_NR_ModeFDDInfo
{
	SI_XNAP_DT_NRFrequencyInfo * ul_NR_FreqInfo;

	SI_XNAP_DT_NRFrequencyInfo * dl_NR_FequInfo;

} SI_XNAP_DT_NeighbourInformation_NR_ModeFDDInfo;


// NeighbourInformation-NR-ModeTDDInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NeighbourInformation_NR_ModeTDDInfo
{
	SI_XNAP_DT_NRFrequencyInfo * nr_FreqInfo;

} SI_XNAP_DT_NeighbourInformation_NR_ModeTDDInfo;


// NeighbourInformation-NR-ModeInfo
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_NeighbourInformation_NR_ModeInfo
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_NeighbourInformation_NR_ModeFDDInfo * fdd_info;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_NeighbourInformation_NR_ModeTDDInfo * tdd_info;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeInfo_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_NeighbourInformation_NR_ModeInfo;


// NeighbourInformation-NR-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NeighbourInformation_NR_Item
{
	unsigned long long int nr_PCI;

	SI_XNAP_DT_NR_CGI * nr_cgi;

	SI_XNAP_DT_TAC * tac;

	unsigned long long int ranac;
	int isPresent_ranac;

	SI_XNAP_DT_NeighbourInformation_NR_ModeInfo * nr_mode_info;

	SI_XNAP_DT_Connectivity_Support * connectivitySupport;

	SI_XNAP_DT_NeighbourInformationNRItem_measurementTimingConfiguration * measurementTimingConfiguration;

} SI_XNAP_DT_NeighbourInformation_NR_Item;


// Neighbour-NG-RAN-Node-List
//SEQUENCE OF Neighbour-NG-RAN-Node-Item, MIN=0, MAX=maxnoofNeighbour_NG_RAN_Nodes  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_Neighbour_NG_RAN_Node_List
{
	SI_LinkedList * Neighbour_NG_RAN_Node_Item;
} SI_XNAP_DT_Neighbour_NG_RAN_Node_List;


// Neighbour-NG-RAN-Node-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_Neighbour_NG_RAN_Node_Item
{
	SI_XNAP_DT_GlobalNG_RANNode_ID * globalNG_RANNodeID;

	SI_XNAP_DT_Local_NG_RAN_Node_Identifier * local_NG_RAN_Node_Identifier;

} SI_XNAP_DT_Neighbour_NG_RAN_Node_Item;


// NRCarrierItem_offsetToCarrier
// INTEGER,INTEGER(0..2199,...),MIN=0,MAX=2199  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_NRCarrierItem_offsetToCarrier
{
	unsigned long long int data;
} SI_XNAP_DT_NRCarrierItem_offsetToCarrier;

// NRCarrierItem_carrierBandwidth
// INTEGER,INTEGER(0..maxnoofPhysicalResourceBlocks,...),MIN=0,MAX=NaN  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_NRCarrierItem_carrierBandwidth
{
	unsigned long long int data;
} SI_XNAP_DT_NRCarrierItem_carrierBandwidth;

// NRCarrierItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NRCarrierItem
{
	uint8_t selected_ecarrierSCS;
	int extSelected_ecarrierSCS;

	unsigned long long int offsetToCarrier;

	unsigned long long int carrierBandwidth;

} SI_XNAP_DT_NRCarrierItem;


// NRCellPRACHConfig
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_NRCellPRACHConfig
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_NRCellPRACHConfig;

// NG-RANnode2SSBOffsetsModificationRange
//SEQUENCE OF SSBOffsetModificationRange, MIN=1, MAX=maxnoofSSBAreas  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_NG_RANnode2SSBOffsetsModificationRange
{
	SI_LinkedList * SSBOffsetModificationRange;
} SI_XNAP_DT_NG_RANnode2SSBOffsetsModificationRange;


// NodeAssociatedInfoResult
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NodeAssociatedInfoResult
{
	unsigned long long int energyCost;
	int isPresent_energyCost;

} SI_XNAP_DT_NodeAssociatedInfoResult;


// NodeMeasurementInitiationResult-List
//SEQUENCE OF NodeMeasurementInitiationResult-Item, MIN=1, MAX=maxFailedMeasPerNode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_NodeMeasurementInitiationResult_List
{
	SI_LinkedList * NodeMeasurementInitiationResult_Item;
} SI_XNAP_DT_NodeMeasurementInitiationResult_List;


// NodeMeasurementInitiationResultItem_nodemeasurementFailedReportCharacteristics
// BITSTRING,BIT STRING(SIZE(32))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_NodeMeasurementInitiationResultItem_nodemeasurementFailedReportCharacteristics
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_NodeMeasurementInitiationResultItem_nodemeasurementFailedReportCharacteristics;

// NodeMeasurementInitiationResult-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NodeMeasurementInitiationResult_Item
{
	SI_XNAP_DT_NodeMeasurementInitiationResultItem_nodemeasurementFailedReportCharacteristics * nodemeasurementFailedReportCharacteristics;

	SI_XNAP_DT_Cause * cause;

} SI_XNAP_DT_NodeMeasurementInitiationResult_Item;


// DL-scheduling-PDCCH-CCE-usage
// INTEGER,INTEGER(0.. 100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_DL_scheduling_PDCCH_CCE_usage
{
	unsigned long long int data;
} SI_XNAP_DT_DL_scheduling_PDCCH_CCE_usage;

// UL-scheduling-PDCCH-CCE-usage
// INTEGER,INTEGER(0.. 100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_UL_scheduling_PDCCH_CCE_usage
{
	unsigned long long int data;
} SI_XNAP_DT_UL_scheduling_PDCCH_CCE_usage;

// NonF1TerminatingBHInformation-List
//SEQUENCE OF NonF1TerminatingBHInformation-Item, MIN=1, MAX=maxnoofBHInfo  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_NonF1TerminatingBHInformation_List
{
	SI_LinkedList * NonF1TerminatingBHInformation_Item;
} SI_XNAP_DT_NonF1TerminatingBHInformation_List;


// Non-F1-TerminatingTopologyBHInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_Non_F1_TerminatingTopologyBHInformation
{
	SI_XNAP_DT_NonF1TerminatingBHInformation_List * nonF1TerminatingBHInformation_List;

	SI_XNAP_DT_BAPControlPDURLCCH_List * bAPControlPDURLCCH_List;
	int isPresent_bAPControlPDURLCCH_List;

} SI_XNAP_DT_Non_F1_TerminatingTopologyBHInformation;


// ULNonF1Terminating-BHInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ULNonF1Terminating_BHInfo
{
	SI_XNAP_DT_BAPRoutingID * egressBAPRoutingID;

	SI_XNAP_DT_BHRLCChannelID * egressBHRLCCHID;

	SI_XNAP_DT_BAPAddress * nexthopBAPAddress;

} SI_XNAP_DT_ULNonF1Terminating_BHInfo;


// NonF1TerminatingBHInformation-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NonF1TerminatingBHInformation_Item
{
	unsigned long long int bHInfoIndex;

	SI_XNAP_DT_DLNonF1Terminating_BHInfo * dlNon_F1TerminatingBHInfo;
	int isPresent_dlNon_F1TerminatingBHInfo;

	SI_XNAP_DT_ULNonF1Terminating_BHInfo * ulNon_F1TerminatingBHInfo;
	int isPresent_ulNon_F1TerminatingBHInfo;

} SI_XNAP_DT_NonF1TerminatingBHInformation_Item;


// NonUPTrafficType
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NonUPTrafficType
{
	__si_xnap__NonUPTrafficType_ueassociatedf1ap_val,
	__si_xnap__NonUPTrafficType_nonueassociatedf1ap_val,
	__si_xnap__NonUPTrafficType_nonf1_val
} SI_XNAP_DT_NonUPTrafficType;


// L:2561
typedef enum __si_xnap_dt_NonUPTrafficType2
{
	NonUPTrafficType_ueassociatedf1ap_val,
	NonUPTrafficType_nonueassociatedf1ap_val,
	NonUPTrafficType_nonf1_val
} SI_XNAP_DT_NonUPTrafficType2;


// L:2588
typedef struct __si_xnap_dt_NonUPTrafficType_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NonUPTrafficType_EnumProxy;


// NonUPTraffic
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_NonUPTraffic
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t nonUPTrafficType;

		// ParserName = INTEGER - NonEP false;
		unsigned long long int controlPlaneTrafficType;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_NonUPTraffic_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_NonUPTraffic;


// NoPDUSessionIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NoPDUSessionIndication
{
	__si_xnap__NoPDUSessionIndication_true_val
} SI_XNAP_DT_NoPDUSessionIndication;


// L:2561
typedef enum __si_xnap_dt_NoPDUSessionIndication2
{
	NoPDUSessionIndication_true_val
} SI_XNAP_DT_NoPDUSessionIndication2;


// L:2588
typedef struct __si_xnap_dt_NoPDUSessionIndication_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NoPDUSessionIndication_EnumProxy;


// NPN-Broadcast-Information-SNPN
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NPN_Broadcast_Information_SNPN
{
	SI_XNAP_DT_BroadcastSNPNID_List * broadcastSNPNID_List;

} SI_XNAP_DT_NPN_Broadcast_Information_SNPN;


// NPN-Broadcast-Information-PNI-NPN
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NPN_Broadcast_Information_PNI_NPN
{
	SI_XNAP_DT_BroadcastPNI_NPN_ID_Information * broadcastPNI_NPN_ID_Information;

} SI_XNAP_DT_NPN_Broadcast_Information_PNI_NPN;


// NPN-Broadcast-Information
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_NPN_Broadcast_Information
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_NPN_Broadcast_Information_SNPN * snpn_Information;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_NPN_Broadcast_Information_PNI_NPN * pni_npn_Information;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_NPN_Broadcast_Information_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_NPN_Broadcast_Information;


// NPNMobilityInformation-SNPN
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NPNMobilityInformation_SNPN
{
	SI_XNAP_DT_NID * serving_NID;

} SI_XNAP_DT_NPNMobilityInformation_SNPN;


// NPNMobilityInformation-PNI-NPN
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NPNMobilityInformation_PNI_NPN
{
	SI_XNAP_DT_AllowedPNI_NPN_ID_List * allowedPNI_NPN_ID_List;

} SI_XNAP_DT_NPNMobilityInformation_PNI_NPN;


// NPNMobilityInformation
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_NPNMobilityInformation
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_NPNMobilityInformation_SNPN * snpn_mobility_information;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_NPNMobilityInformation_PNI_NPN * pni_npn_mobility_information;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_NPNMobilityInformation_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_NPNMobilityInformation;


// NPNPagingAssistanceInformation-PNI-NPN
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NPNPagingAssistanceInformation_PNI_NPN
{
	SI_XNAP_DT_AllowedPNI_NPN_ID_List * allowedPNI_NPN_ID_List;

} SI_XNAP_DT_NPNPagingAssistanceInformation_PNI_NPN;


// NPNPagingAssistanceInformation
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_NPNPagingAssistanceInformation
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_NPNPagingAssistanceInformation_PNI_NPN * pni_npn_Information;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_NPNPagingAssistanceInformation_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_NPNPagingAssistanceInformation;


// NPN-Support-SNPN
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NPN_Support_SNPN
{
	SI_XNAP_DT_NID * nid;

} SI_XNAP_DT_NPN_Support_SNPN;


// NPN-Support
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_NPN_Support
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_NPN_Support_SNPN * sNPN;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_NPN_Support_ExtIEs * choice_Extensions;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_NPN_Support;


// NPRACH-CP-Length
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NPRACH_CP_Length
{
	__si_xnap__NPRACH_CP_Length_us66dot7_val,
	__si_xnap__NPRACH_CP_Length_us266dot7_val
} SI_XNAP_DT_NPRACH_CP_Length;


// L:2561
typedef enum __si_xnap_dt_NPRACH_CP_Length2
{
	NPRACH_CP_Length_us66dot7_val,
	NPRACH_CP_Length_us266dot7_val
} SI_XNAP_DT_NPRACH_CP_Length2;


// L:2588
typedef struct __si_xnap_dt_NPRACH_CP_Length_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NPRACH_CP_Length_EnumProxy;


// NPRACHConfigurationFDD_anchorCarrier-NPRACHConfig
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_NPRACHConfigurationFDD_anchorCarrier_NPRACHConfig
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_NPRACHConfig;

// NPRACHConfigurationFDD_anchorCarrier-EDT-NPRACHConfig
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_NPRACHConfigurationFDD_anchorCarrier_EDT_NPRACHConfig
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_EDT_NPRACHConfig;

// NPRACHConfigurationFDD_anchorCarrier-Format2-NPRACHConfig
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_NPRACHConfigurationFDD_anchorCarrier_Format2_NPRACHConfig
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_Format2_NPRACHConfig;

// NPRACHConfigurationFDD_anchorCarrier-Format2-EDT-NPRACHConfig
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_NPRACHConfigurationFDD_anchorCarrier_Format2_EDT_NPRACHConfig
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_Format2_EDT_NPRACHConfig;

// NPRACHConfigurationFDD_non-anchorCarrier-NPRACHConfig
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_NPRACHConfigurationFDD_non_anchorCarrier_NPRACHConfig
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_NPRACHConfigurationFDD_non_anchorCarrier_NPRACHConfig;

// NPRACHConfigurationFDD_non-anchorCarrier-Format2-NPRACHConfig
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_NPRACHConfigurationFDD_non_anchorCarrier_Format2_NPRACHConfig
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_NPRACHConfigurationFDD_non_anchorCarrier_Format2_NPRACHConfig;

// NPRACHConfiguration-FDD
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NPRACHConfiguration_FDD
{
	uint8_t selected_enprach_CP_length;
	int extSelected_enprach_CP_length;

	SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_NPRACHConfig * anchorCarrier_NPRACHConfig;

	SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_EDT_NPRACHConfig * anchorCarrier_EDT_NPRACHConfig;
	int isPresent_anchorCarrier_EDT_NPRACHConfig;

	SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_Format2_NPRACHConfig * anchorCarrier_Format2_NPRACHConfig;
	int isPresent_anchorCarrier_Format2_NPRACHConfig;

	SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_Format2_EDT_NPRACHConfig * anchorCarrier_Format2_EDT_NPRACHConfig;
	int isPresent_anchorCarrier_Format2_EDT_NPRACHConfig;

	SI_XNAP_DT_NPRACHConfigurationFDD_non_anchorCarrier_NPRACHConfig * non_anchorCarrier_NPRACHConfig;
	int isPresent_non_anchorCarrier_NPRACHConfig;

	SI_XNAP_DT_NPRACHConfigurationFDD_non_anchorCarrier_Format2_NPRACHConfig * non_anchorCarrier_Format2_NPRACHConfig;
	int isPresent_non_anchorCarrier_Format2_NPRACHConfig;

} SI_XNAP_DT_NPRACHConfiguration_FDD;


// NPRACH-preambleFormat
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NPRACH_preambleFormat
{
	__si_xnap__NPRACH_preambleFormat_fmt0_val,
	__si_xnap__NPRACH_preambleFormat_fmt1_val,
	__si_xnap__NPRACH_preambleFormat_fmt2_val,
	__si_xnap__NPRACH_preambleFormat_fmt0a_val,
	__si_xnap__NPRACH_preambleFormat_fmt1a_val
} SI_XNAP_DT_NPRACH_preambleFormat;


// L:2561
typedef enum __si_xnap_dt_NPRACH_preambleFormat2
{
	NPRACH_preambleFormat_fmt0_val,
	NPRACH_preambleFormat_fmt1_val,
	NPRACH_preambleFormat_fmt2_val,
	NPRACH_preambleFormat_fmt0a_val,
	NPRACH_preambleFormat_fmt1a_val
} SI_XNAP_DT_NPRACH_preambleFormat2;


// L:2588
typedef struct __si_xnap_dt_NPRACH_preambleFormat_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NPRACH_preambleFormat_EnumProxy;


// NPRACHConfigurationTDD_anchorCarrier-NPRACHConfigTDD
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_NPRACHConfigurationTDD_anchorCarrier_NPRACHConfigTDD
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_NPRACHConfigurationTDD_anchorCarrier_NPRACHConfigTDD;

// Non-AnchorCarrierFrequencylist
//SEQUENCE OF Non-AnchorCarrierFrequencylist_def_213223650, MIN=1, MAX=maxnoofNonAnchorCarrierFreqConfig  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_Non_AnchorCarrierFrequencylist
{
	SI_LinkedList * Non_AnchorCarrierFrequencylist_def_213223650;
} SI_XNAP_DT_Non_AnchorCarrierFrequencylist;


// NPRACHConfigurationTDD_non-anchorCarrier-NPRACHConfigTDD
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_NPRACHConfigurationTDD_non_anchorCarrier_NPRACHConfigTDD
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_NPRACHConfigurationTDD_non_anchorCarrier_NPRACHConfigTDD;

// NPRACHConfiguration-TDD
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NPRACHConfiguration_TDD
{
	uint8_t selected_enprach_preambleFormat;
	int extSelected_enprach_preambleFormat;

	SI_XNAP_DT_NPRACHConfigurationTDD_anchorCarrier_NPRACHConfigTDD * anchorCarrier_NPRACHConfigTDD;

	SI_XNAP_DT_Non_AnchorCarrierFrequencylist * non_anchorCarrierFequencyConfiglist;
	int isPresent_non_anchorCarrierFequencyConfiglist;

	SI_XNAP_DT_NPRACHConfigurationTDD_non_anchorCarrier_NPRACHConfigTDD * non_anchorCarrier_NPRACHConfigTDD;
	int isPresent_non_anchorCarrier_NPRACHConfigTDD;

} SI_XNAP_DT_NPRACHConfiguration_TDD;


// NPRACHConfiguration_fdd_or_tdd
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_NPRACHConfiguration_fdd_or_tdd
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_NPRACHConfiguration_FDD * fdd;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_NPRACHConfiguration_TDD * tdd;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_FDD_or_TDD_in_NPRACHConfiguration_Choice_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_NPRACHConfiguration_fdd_or_tdd;


// NPRACHConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NPRACHConfiguration
{
	SI_XNAP_DT_NPRACHConfiguration_fdd_or_tdd * fdd_or_tdd;

} SI_XNAP_DT_NPRACHConfiguration;


// NonAnchorCarrierFrequencylist_non-anchorCarrierFrquency
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_NonAnchorCarrierFrequencylist_non_anchorCarrierFrquency
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_NonAnchorCarrierFrequencylist_non_anchorCarrierFrquency;

// Non-AnchorCarrierFrequencylist_def_213223650
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_Non_AnchorCarrierFrequencylist_def_213223650
{
	SI_XNAP_DT_NonAnchorCarrierFrequencylist_non_anchorCarrierFrquency * non_anchorCarrierFrquency;

} SI_XNAP_DT_Non_AnchorCarrierFrequencylist_def_213223650;


// NG-RAN-Cell-Identity-ListinRANPagingArea
//SEQUENCE OF NG-RAN-Cell-Identity, MIN=1, MAX=maxnoofCellsinRNA  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_NG_RAN_Cell_Identity_ListinRANPagingArea
{
	SI_LinkedList * NG_RAN_Cell_Identity;
} SI_XNAP_DT_NG_RAN_Cell_Identity_ListinRANPagingArea;


// NR-U-Channel-List
//SEQUENCE OF NR-U-Channel-Item, MIN=1, MAX=maxnoofNR-UChannelIDs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_NR_U_Channel_List
{
	SI_LinkedList * NR_U_Channel_Item;
} SI_XNAP_DT_NR_U_Channel_List;


// NR-U-ChannelID
// INTEGER,INTEGER(1..maxnoofNR-UChannelIDs,...),MIN=1,MAX=NaN  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_NR_U_ChannelID
{
	unsigned long long int data;
} SI_XNAP_DT_NR_U_ChannelID;

// ChannelOccupancyTimePercentage
// INTEGER,INTEGER(0..100,...),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_ChannelOccupancyTimePercentage
{
	unsigned long long int data;
} SI_XNAP_DT_ChannelOccupancyTimePercentage;

// EnergyDetectionThreshold
// INTEGER,INTEGER(-100..-50,...),MIN=-100,MAX=-50  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_EnergyDetectionThreshold
{
	unsigned long long int data;
} SI_XNAP_DT_EnergyDetectionThreshold;

// NR-U-Channel-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NR_U_Channel_Item
{
	unsigned long long int nR_U_ChannelID;

	unsigned long long int channelOccupancyTimePercentageDL;

	unsigned long long int energyDetectionThresholdDL;

} SI_XNAP_DT_NR_U_Channel_Item;


// NR-U-ChannelInfo-List
//SEQUENCE OF NR-U-ChannelInfo-Item, MIN=1, MAX=maxnoofNR-UChannelIDs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_NR_U_ChannelInfo_List
{
	SI_LinkedList * NR_U_ChannelInfo_Item;
} SI_XNAP_DT_NR_U_ChannelInfo_List;


// Bandwidth
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_Bandwidth
{
	__si_xnap__Bandwidth_mhz10_val,
	__si_xnap__Bandwidth_mhz20_val,
	__si_xnap__Bandwidth_mhz40_val,
	__si_xnap__Bandwidth_mhz60_val,
	__si_xnap__Bandwidth_mhz80_val,
	__si_xnap__Bandwidth_mhz100_val_ext
} SI_XNAP_DT_Bandwidth;


// L:2561
typedef enum __si_xnap_dt_Bandwidth2
{
	Bandwidth_mhz10_val,
	Bandwidth_mhz20_val,
	Bandwidth_mhz40_val,
	Bandwidth_mhz60_val,
	Bandwidth_mhz80_val,
	Bandwidth_mhz100_val_ext
} SI_XNAP_DT_Bandwidth2;


// L:2588
typedef struct __si_xnap_dt_Bandwidth_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_Bandwidth_EnumProxy;


// NR-U-ChannelInfo-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NR_U_ChannelInfo_Item
{
	unsigned long long int nR_U_ChannelID;

	unsigned long long int nRARFCN;

	uint8_t selected_ebandwidth;
	int extSelected_ebandwidth;

} SI_XNAP_DT_NR_U_ChannelInfo_Item;


// NRA2XServicesAuthorized
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NRA2XServicesAuthorized
{
	uint8_t selected_eaerialUE;
	int extSelected_eaerialUE;
	int isPresent_aerialUE;

	uint8_t selected_eaerialControllerUE;
	int extSelected_eaerialControllerUE;
	int isPresent_aerialControllerUE;

} SI_XNAP_DT_NRA2XServicesAuthorized;


// NRFrequencyBand
// INTEGER,INTEGER(1..1024,...),MIN=1,MAX=1024  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_NRFrequencyBand
{
	unsigned long long int data;
} SI_XNAP_DT_NRFrequencyBand;

// SupportedSULBandList
//SEQUENCE OF SupportedSULBandItem, MIN=1, MAX=maxnoofNRCellBands  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SupportedSULBandList
{
	SI_LinkedList * SupportedSULBandItem;
} SI_XNAP_DT_SupportedSULBandList;


// NRFrequencyBandItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NRFrequencyBandItem
{
	unsigned long long int nr_frequency_band;

	SI_XNAP_DT_SupportedSULBandList * supported_SUL_Band_List;
	int isPresent_supported_SUL_Band_List;

} SI_XNAP_DT_NRFrequencyBandItem;


// NRMobilityHistoryReport
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_NRMobilityHistoryReport
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_NRMobilityHistoryReport;

// NRModeInfoFDD
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NRModeInfoFDD
{
	SI_XNAP_DT_NRFrequencyInfo * ulNRFrequencyInfo;

	SI_XNAP_DT_NRFrequencyInfo * dlNRFrequencyInfo;

	SI_XNAP_DT_NRTransmissionBandwidth * ulNRTransmissonBandwidth;

	SI_XNAP_DT_NRTransmissionBandwidth * dlNRTransmissonBandwidth;

} SI_XNAP_DT_NRModeInfoFDD;


// NRModeInfoTDD
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NRModeInfoTDD
{
	SI_XNAP_DT_NRFrequencyInfo * nrFrequencyInfo;

	SI_XNAP_DT_NRTransmissionBandwidth * nrTransmissonBandwidth;

} SI_XNAP_DT_NRModeInfoTDD;


// NRModeInfo
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_NRModeInfo
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_NRModeInfoFDD * fdd;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_NRModeInfoTDD * tdd;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_NRModeInfo_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_NRModeInfo;


// NRPaging-eDRX-Cycle
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NRPaging_eDRX_Cycle
{
	__si_xnap__NRPaging_eDRX_Cycle_hfquarter_val,
	__si_xnap__NRPaging_eDRX_Cycle_hfhalf_val,
	__si_xnap__NRPaging_eDRX_Cycle_hf1_val,
	__si_xnap__NRPaging_eDRX_Cycle_hf2_val,
	__si_xnap__NRPaging_eDRX_Cycle_hf4_val,
	__si_xnap__NRPaging_eDRX_Cycle_hf8_val,
	__si_xnap__NRPaging_eDRX_Cycle_hf16_val,
	__si_xnap__NRPaging_eDRX_Cycle_hf32_val,
	__si_xnap__NRPaging_eDRX_Cycle_hf64_val,
	__si_xnap__NRPaging_eDRX_Cycle_hf128_val,
	__si_xnap__NRPaging_eDRX_Cycle_hf256_val,
	__si_xnap__NRPaging_eDRX_Cycle_hf512_val,
	__si_xnap__NRPaging_eDRX_Cycle_hf1024_val
} SI_XNAP_DT_NRPaging_eDRX_Cycle;


// L:2561
typedef enum __si_xnap_dt_NRPaging_eDRX_Cycle2
{
	NRPaging_eDRX_Cycle_hfquarter_val,
	NRPaging_eDRX_Cycle_hfhalf_val,
	NRPaging_eDRX_Cycle_hf1_val,
	NRPaging_eDRX_Cycle_hf2_val,
	NRPaging_eDRX_Cycle_hf4_val,
	NRPaging_eDRX_Cycle_hf8_val,
	NRPaging_eDRX_Cycle_hf16_val,
	NRPaging_eDRX_Cycle_hf32_val,
	NRPaging_eDRX_Cycle_hf64_val,
	NRPaging_eDRX_Cycle_hf128_val,
	NRPaging_eDRX_Cycle_hf256_val,
	NRPaging_eDRX_Cycle_hf512_val,
	NRPaging_eDRX_Cycle_hf1024_val
} SI_XNAP_DT_NRPaging_eDRX_Cycle2;


// L:2588
typedef struct __si_xnap_dt_NRPaging_eDRX_Cycle_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NRPaging_eDRX_Cycle_EnumProxy;


// NRPaging-Time-Window
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NRPaging_Time_Window
{
	__si_xnap__NRPaging_Time_Window_s1_val,
	__si_xnap__NRPaging_Time_Window_s2_val,
	__si_xnap__NRPaging_Time_Window_s3_val,
	__si_xnap__NRPaging_Time_Window_s4_val,
	__si_xnap__NRPaging_Time_Window_s5_val,
	__si_xnap__NRPaging_Time_Window_s6_val,
	__si_xnap__NRPaging_Time_Window_s7_val,
	__si_xnap__NRPaging_Time_Window_s8_val,
	__si_xnap__NRPaging_Time_Window_s9_val,
	__si_xnap__NRPaging_Time_Window_s10_val,
	__si_xnap__NRPaging_Time_Window_s11_val,
	__si_xnap__NRPaging_Time_Window_s12_val,
	__si_xnap__NRPaging_Time_Window_s13_val,
	__si_xnap__NRPaging_Time_Window_s14_val,
	__si_xnap__NRPaging_Time_Window_s15_val,
	__si_xnap__NRPaging_Time_Window_s16_val,
	__si_xnap__NRPaging_Time_Window_s17_val_ext,
	__si_xnap__NRPaging_Time_Window_s18_val_ext,
	__si_xnap__NRPaging_Time_Window_s19_val_ext,
	__si_xnap__NRPaging_Time_Window_s20_val_ext,
	__si_xnap__NRPaging_Time_Window_s21_val_ext,
	__si_xnap__NRPaging_Time_Window_s22_val_ext,
	__si_xnap__NRPaging_Time_Window_s23_val_ext,
	__si_xnap__NRPaging_Time_Window_s24_val_ext,
	__si_xnap__NRPaging_Time_Window_s25_val_ext,
	__si_xnap__NRPaging_Time_Window_s26_val_ext,
	__si_xnap__NRPaging_Time_Window_s27_val_ext,
	__si_xnap__NRPaging_Time_Window_s28_val_ext,
	__si_xnap__NRPaging_Time_Window_s29_val_ext,
	__si_xnap__NRPaging_Time_Window_s30_val_ext,
	__si_xnap__NRPaging_Time_Window_s31_val_ext,
	__si_xnap__NRPaging_Time_Window_s32_val_ext
} SI_XNAP_DT_NRPaging_Time_Window;


// L:2561
typedef enum __si_xnap_dt_NRPaging_Time_Window2
{
	NRPaging_Time_Window_s1_val,
	NRPaging_Time_Window_s2_val,
	NRPaging_Time_Window_s3_val,
	NRPaging_Time_Window_s4_val,
	NRPaging_Time_Window_s5_val,
	NRPaging_Time_Window_s6_val,
	NRPaging_Time_Window_s7_val,
	NRPaging_Time_Window_s8_val,
	NRPaging_Time_Window_s9_val,
	NRPaging_Time_Window_s10_val,
	NRPaging_Time_Window_s11_val,
	NRPaging_Time_Window_s12_val,
	NRPaging_Time_Window_s13_val,
	NRPaging_Time_Window_s14_val,
	NRPaging_Time_Window_s15_val,
	NRPaging_Time_Window_s16_val,
	NRPaging_Time_Window_s17_val_ext,
	NRPaging_Time_Window_s18_val_ext,
	NRPaging_Time_Window_s19_val_ext,
	NRPaging_Time_Window_s20_val_ext,
	NRPaging_Time_Window_s21_val_ext,
	NRPaging_Time_Window_s22_val_ext,
	NRPaging_Time_Window_s23_val_ext,
	NRPaging_Time_Window_s24_val_ext,
	NRPaging_Time_Window_s25_val_ext,
	NRPaging_Time_Window_s26_val_ext,
	NRPaging_Time_Window_s27_val_ext,
	NRPaging_Time_Window_s28_val_ext,
	NRPaging_Time_Window_s29_val_ext,
	NRPaging_Time_Window_s30_val_ext,
	NRPaging_Time_Window_s31_val_ext,
	NRPaging_Time_Window_s32_val_ext
} SI_XNAP_DT_NRPaging_Time_Window2;


// L:2588
typedef struct __si_xnap_dt_NRPaging_Time_Window_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NRPaging_Time_Window_EnumProxy;


// NRPagingeDRXInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NRPagingeDRXInformation
{
	uint8_t selected_enRPaging_eDRX_Cycle;
	int extSelected_enRPaging_eDRX_Cycle;

	uint8_t selected_enRPaging_Time_Window;
	int extSelected_enRPaging_Time_Window;
	int isPresent_nRPaging_Time_Window;

} SI_XNAP_DT_NRPagingeDRXInformation;


// NRPaging-eDRX-Cycle-Inactive
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NRPaging_eDRX_Cycle_Inactive
{
	__si_xnap__NRPaging_eDRX_Cycle_Inactive_hfquarter_val,
	__si_xnap__NRPaging_eDRX_Cycle_Inactive_hfhalf_val,
	__si_xnap__NRPaging_eDRX_Cycle_Inactive_hf1_val
} SI_XNAP_DT_NRPaging_eDRX_Cycle_Inactive;


// L:2561
typedef enum __si_xnap_dt_NRPaging_eDRX_Cycle_Inactive2
{
	NRPaging_eDRX_Cycle_Inactive_hfquarter_val,
	NRPaging_eDRX_Cycle_Inactive_hfhalf_val,
	NRPaging_eDRX_Cycle_Inactive_hf1_val
} SI_XNAP_DT_NRPaging_eDRX_Cycle_Inactive2;


// L:2588
typedef struct __si_xnap_dt_NRPaging_eDRX_Cycle_Inactive_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NRPaging_eDRX_Cycle_Inactive_EnumProxy;


// NRPagingeDRXInformationforRRCINACTIVE
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NRPagingeDRXInformationforRRCINACTIVE
{
	uint8_t selected_enRPaging_eDRX_Cycle_Inactive;
	int extSelected_enRPaging_eDRX_Cycle_Inactive;

} SI_XNAP_DT_NRPagingeDRXInformationforRRCINACTIVE;


// NRPaging-long-eDRX-Cycle-Inactive
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NRPaging_long_eDRX_Cycle_Inactive
{
	__si_xnap__NRPaging_long_eDRX_Cycle_Inactive_hf2_val,
	__si_xnap__NRPaging_long_eDRX_Cycle_Inactive_hf4_val,
	__si_xnap__NRPaging_long_eDRX_Cycle_Inactive_hf8_val,
	__si_xnap__NRPaging_long_eDRX_Cycle_Inactive_hf16_val,
	__si_xnap__NRPaging_long_eDRX_Cycle_Inactive_hf32_val,
	__si_xnap__NRPaging_long_eDRX_Cycle_Inactive_hf64_val,
	__si_xnap__NRPaging_long_eDRX_Cycle_Inactive_hf128_val,
	__si_xnap__NRPaging_long_eDRX_Cycle_Inactive_hf256_val,
	__si_xnap__NRPaging_long_eDRX_Cycle_Inactive_hf512_val,
	__si_xnap__NRPaging_long_eDRX_Cycle_Inactive_hf1024_val
} SI_XNAP_DT_NRPaging_long_eDRX_Cycle_Inactive;


// L:2561
typedef enum __si_xnap_dt_NRPaging_long_eDRX_Cycle_Inactive2
{
	NRPaging_long_eDRX_Cycle_Inactive_hf2_val,
	NRPaging_long_eDRX_Cycle_Inactive_hf4_val,
	NRPaging_long_eDRX_Cycle_Inactive_hf8_val,
	NRPaging_long_eDRX_Cycle_Inactive_hf16_val,
	NRPaging_long_eDRX_Cycle_Inactive_hf32_val,
	NRPaging_long_eDRX_Cycle_Inactive_hf64_val,
	NRPaging_long_eDRX_Cycle_Inactive_hf128_val,
	NRPaging_long_eDRX_Cycle_Inactive_hf256_val,
	NRPaging_long_eDRX_Cycle_Inactive_hf512_val,
	NRPaging_long_eDRX_Cycle_Inactive_hf1024_val
} SI_XNAP_DT_NRPaging_long_eDRX_Cycle_Inactive2;


// L:2588
typedef struct __si_xnap_dt_NRPaging_long_eDRX_Cycle_Inactive_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NRPaging_long_eDRX_Cycle_Inactive_EnumProxy;


// NRPaging-Time-Window-Inactive
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NRPaging_Time_Window_Inactive
{
	__si_xnap__NRPaging_Time_Window_Inactive_s1_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s2_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s3_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s4_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s5_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s6_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s7_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s8_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s9_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s10_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s11_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s12_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s13_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s14_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s15_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s16_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s17_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s18_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s19_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s20_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s21_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s22_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s23_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s24_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s25_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s26_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s27_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s28_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s29_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s30_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s31_val,
	__si_xnap__NRPaging_Time_Window_Inactive_s32_val
} SI_XNAP_DT_NRPaging_Time_Window_Inactive;


// L:2561
typedef enum __si_xnap_dt_NRPaging_Time_Window_Inactive2
{
	NRPaging_Time_Window_Inactive_s1_val,
	NRPaging_Time_Window_Inactive_s2_val,
	NRPaging_Time_Window_Inactive_s3_val,
	NRPaging_Time_Window_Inactive_s4_val,
	NRPaging_Time_Window_Inactive_s5_val,
	NRPaging_Time_Window_Inactive_s6_val,
	NRPaging_Time_Window_Inactive_s7_val,
	NRPaging_Time_Window_Inactive_s8_val,
	NRPaging_Time_Window_Inactive_s9_val,
	NRPaging_Time_Window_Inactive_s10_val,
	NRPaging_Time_Window_Inactive_s11_val,
	NRPaging_Time_Window_Inactive_s12_val,
	NRPaging_Time_Window_Inactive_s13_val,
	NRPaging_Time_Window_Inactive_s14_val,
	NRPaging_Time_Window_Inactive_s15_val,
	NRPaging_Time_Window_Inactive_s16_val,
	NRPaging_Time_Window_Inactive_s17_val,
	NRPaging_Time_Window_Inactive_s18_val,
	NRPaging_Time_Window_Inactive_s19_val,
	NRPaging_Time_Window_Inactive_s20_val,
	NRPaging_Time_Window_Inactive_s21_val,
	NRPaging_Time_Window_Inactive_s22_val,
	NRPaging_Time_Window_Inactive_s23_val,
	NRPaging_Time_Window_Inactive_s24_val,
	NRPaging_Time_Window_Inactive_s25_val,
	NRPaging_Time_Window_Inactive_s26_val,
	NRPaging_Time_Window_Inactive_s27_val,
	NRPaging_Time_Window_Inactive_s28_val,
	NRPaging_Time_Window_Inactive_s29_val,
	NRPaging_Time_Window_Inactive_s30_val,
	NRPaging_Time_Window_Inactive_s31_val,
	NRPaging_Time_Window_Inactive_s32_val
} SI_XNAP_DT_NRPaging_Time_Window_Inactive2;


// L:2588
typedef struct __si_xnap_dt_NRPaging_Time_Window_Inactive_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NRPaging_Time_Window_Inactive_EnumProxy;


// NRPagingLongeDRXInformationforRRCINACTIVE
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NRPagingLongeDRXInformationforRRCINACTIVE
{
	uint8_t selected_enRPaging_long_eDRX_Cycle_Inactive;
	int extSelected_enRPaging_long_eDRX_Cycle_Inactive;

	uint8_t selected_enRPaging_Time_Window_Inactive;
	int extSelected_enRPaging_Time_Window_Inactive;

} SI_XNAP_DT_NRPagingLongeDRXInformationforRRCINACTIVE;


// NRPPaPositioningInformation_nRPPaTransactionID
// INTEGER,INTEGER(0..32767),MIN=0,MAX=32767  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_NRPPaPositioningInformation_nRPPaTransactionID
{
	unsigned long long int data;
} SI_XNAP_DT_NRPPaPositioningInformation_nRPPaTransactionID;

// RoutingID
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_RoutingID
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_RoutingID;

// NRPPaPositioningInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NRPPaPositioningInformation
{
	SI_XNAP_DT_RoutingID * routingID;

	unsigned long long int nRPPaTransactionID;

} SI_XNAP_DT_NRPPaPositioningInformation;


// Transmission-Bandwidth-asymmetric
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_Transmission_Bandwidth_asymmetric
{
	SI_XNAP_DT_NRTransmissionBandwidth * ul_Transmission_Bandwidth;

	SI_XNAP_DT_NRTransmissionBandwidth * dl_Transmission_Bandwidth;

} SI_XNAP_DT_Transmission_Bandwidth_asymmetric;


// NumberOfAntennaPorts-E-UTRA
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NumberOfAntennaPorts_E_UTRA
{
	__si_xnap__NumberOfAntennaPorts_E_UTRA_an1_val,
	__si_xnap__NumberOfAntennaPorts_E_UTRA_an2_val,
	__si_xnap__NumberOfAntennaPorts_E_UTRA_an4_val
} SI_XNAP_DT_NumberOfAntennaPorts_E_UTRA;


// L:2561
typedef enum __si_xnap_dt_NumberOfAntennaPorts_E_UTRA2
{
	NumberOfAntennaPorts_E_UTRA_an1_val,
	NumberOfAntennaPorts_E_UTRA_an2_val,
	NumberOfAntennaPorts_E_UTRA_an4_val
} SI_XNAP_DT_NumberOfAntennaPorts_E_UTRA2;


// L:2588
typedef struct __si_xnap_dt_NumberOfAntennaPorts_E_UTRA_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NumberOfAntennaPorts_E_UTRA_EnumProxy;


// NonGBRResources-Offered
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_NonGBRResources_Offered
{
	__si_xnap__NonGBRResources_Offered_true_val
} SI_XNAP_DT_NonGBRResources_Offered;


// L:2561
typedef enum __si_xnap_dt_NonGBRResources_Offered2
{
	NonGBRResources_Offered_true_val
} SI_XNAP_DT_NonGBRResources_Offered2;


// L:2588
typedef struct __si_xnap_dt_NonGBRResources_Offered_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_NonGBRResources_Offered_EnumProxy;


// NRV2XServicesAuthorized
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NRV2XServicesAuthorized
{
	uint8_t selected_evehicleUE;
	int extSelected_evehicleUE;
	int isPresent_vehicleUE;

	uint8_t selected_epedestrianUE;
	int extSelected_epedestrianUE;
	int isPresent_pedestrianUE;

} SI_XNAP_DT_NRV2XServicesAuthorized;


// NRUESidelinkAggregateMaximumBitRate
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_NRUESidelinkAggregateMaximumBitRate
{
	unsigned long long int uESidelinkAggregateMaximumBitRate;

} SI_XNAP_DT_NRUESidelinkAggregateMaximumBitRate;


// NSAG-ID
// INTEGER,INTEGER(0..255,...),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_NSAG_ID
{
	unsigned long long int data;
} SI_XNAP_DT_NSAG_ID;

// OffsetOfNbiotChannelNumberToEARFCN
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_OffsetOfNbiotChannelNumberToEARFCN
{
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_minusTen_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_minusNine_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_minusEightDotFive_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_minusEight_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_minusSeven_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_minusSix_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_minusFive_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_minusFourDotFive_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_minusFour_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_minusThree_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_minusTwo_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_minusOne_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_minusZeroDotFive_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_zero_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_one_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_two_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_three_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_threeDotFive_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_four_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_five_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_six_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_seven_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_sevenDotFive_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_eight_val,
	__si_xnap__OffsetOfNbiotChannelNumberToEARFCN_nine_val
} SI_XNAP_DT_OffsetOfNbiotChannelNumberToEARFCN;


// L:2561
typedef enum __si_xnap_dt_OffsetOfNbiotChannelNumberToEARFCN2
{
	OffsetOfNbiotChannelNumberToEARFCN_minusTen_val,
	OffsetOfNbiotChannelNumberToEARFCN_minusNine_val,
	OffsetOfNbiotChannelNumberToEARFCN_minusEightDotFive_val,
	OffsetOfNbiotChannelNumberToEARFCN_minusEight_val,
	OffsetOfNbiotChannelNumberToEARFCN_minusSeven_val,
	OffsetOfNbiotChannelNumberToEARFCN_minusSix_val,
	OffsetOfNbiotChannelNumberToEARFCN_minusFive_val,
	OffsetOfNbiotChannelNumberToEARFCN_minusFourDotFive_val,
	OffsetOfNbiotChannelNumberToEARFCN_minusFour_val,
	OffsetOfNbiotChannelNumberToEARFCN_minusThree_val,
	OffsetOfNbiotChannelNumberToEARFCN_minusTwo_val,
	OffsetOfNbiotChannelNumberToEARFCN_minusOne_val,
	OffsetOfNbiotChannelNumberToEARFCN_minusZeroDotFive_val,
	OffsetOfNbiotChannelNumberToEARFCN_zero_val,
	OffsetOfNbiotChannelNumberToEARFCN_one_val,
	OffsetOfNbiotChannelNumberToEARFCN_two_val,
	OffsetOfNbiotChannelNumberToEARFCN_three_val,
	OffsetOfNbiotChannelNumberToEARFCN_threeDotFive_val,
	OffsetOfNbiotChannelNumberToEARFCN_four_val,
	OffsetOfNbiotChannelNumberToEARFCN_five_val,
	OffsetOfNbiotChannelNumberToEARFCN_six_val,
	OffsetOfNbiotChannelNumberToEARFCN_seven_val,
	OffsetOfNbiotChannelNumberToEARFCN_sevenDotFive_val,
	OffsetOfNbiotChannelNumberToEARFCN_eight_val,
	OffsetOfNbiotChannelNumberToEARFCN_nine_val
} SI_XNAP_DT_OffsetOfNbiotChannelNumberToEARFCN2;


// L:2588
typedef struct __si_xnap_dt_OffsetOfNbiotChannelNumberToEARFCN_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_OffsetOfNbiotChannelNumberToEARFCN_EnumProxy;


// PositioningInformation_nRPPaTransactionID
// INTEGER,INTEGER(0..32767),MIN=0,MAX=32767  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_PositioningInformation_nRPPaTransactionID
{
	unsigned long long int data;
} SI_XNAP_DT_PositioningInformation_nRPPaTransactionID;

// RequestedSRSTransmissionCharacteristics
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_RequestedSRSTransmissionCharacteristics
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_RequestedSRSTransmissionCharacteristics;

// PositioningInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PositioningInformation
{
	SI_XNAP_DT_RequestedSRSTransmissionCharacteristics * requestedSRSTransmissionCharacteristics;

	SI_XNAP_DT_RoutingID * routingID;

	unsigned long long int nRPPaTransactionID;

} SI_XNAP_DT_PositioningInformation;


// PagingCause
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PagingCause
{
	__si_xnap__PagingCause_voice_val
} SI_XNAP_DT_PagingCause;


// L:2561
typedef enum __si_xnap_dt_PagingCause2
{
	PagingCause_voice_val
} SI_XNAP_DT_PagingCause2;


// L:2588
typedef struct __si_xnap_dt_PagingCause_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PagingCause_EnumProxy;


// PEIPSassistanceInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PEIPSassistanceInformation
{
	unsigned long long int cNsubgroupID;

} SI_XNAP_DT_PEIPSassistanceInformation;


// PagingDRX
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PagingDRX
{
	__si_xnap__PagingDRX_v32_val,
	__si_xnap__PagingDRX_v64_val,
	__si_xnap__PagingDRX_v128_val,
	__si_xnap__PagingDRX_v256_val,
	__si_xnap__PagingDRX_v512_val_ext,
	__si_xnap__PagingDRX_v1024_val_ext
} SI_XNAP_DT_PagingDRX;


// L:2561
typedef enum __si_xnap_dt_PagingDRX2
{
	PagingDRX_v32_val,
	PagingDRX_v64_val,
	PagingDRX_v128_val,
	PagingDRX_v256_val,
	PagingDRX_v512_val_ext,
	PagingDRX_v1024_val_ext
} SI_XNAP_DT_PagingDRX2;


// L:2588
typedef struct __si_xnap_dt_PagingDRX_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PagingDRX_EnumProxy;


// PagingPriority
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PagingPriority
{
	__si_xnap__PagingPriority_priolevel1_val,
	__si_xnap__PagingPriority_priolevel2_val,
	__si_xnap__PagingPriority_priolevel3_val,
	__si_xnap__PagingPriority_priolevel4_val,
	__si_xnap__PagingPriority_priolevel5_val,
	__si_xnap__PagingPriority_priolevel6_val,
	__si_xnap__PagingPriority_priolevel7_val,
	__si_xnap__PagingPriority_priolevel8_val
} SI_XNAP_DT_PagingPriority;


// L:2561
typedef enum __si_xnap_dt_PagingPriority2
{
	PagingPriority_priolevel1_val,
	PagingPriority_priolevel2_val,
	PagingPriority_priolevel3_val,
	PagingPriority_priolevel4_val,
	PagingPriority_priolevel5_val,
	PagingPriority_priolevel6_val,
	PagingPriority_priolevel7_val,
	PagingPriority_priolevel8_val
} SI_XNAP_DT_PagingPriority2;


// L:2588
typedef struct __si_xnap_dt_PagingPriority_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PagingPriority_EnumProxy;


// PartialListIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PartialListIndicator
{
	__si_xnap__PartialListIndicator_partial_val
} SI_XNAP_DT_PartialListIndicator;


// L:2561
typedef enum __si_xnap_dt_PartialListIndicator2
{
	PartialListIndicator_partial_val
} SI_XNAP_DT_PartialListIndicator2;


// L:2588
typedef struct __si_xnap_dt_PartialListIndicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PartialListIndicator_EnumProxy;


// PC5QoSFlowList
//SEQUENCE OF PC5QoSFlowItem, MIN=1, MAX=maxnoofPC5QoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PC5QoSFlowList
{
	SI_LinkedList * PC5QoSFlowItem;
} SI_XNAP_DT_PC5QoSFlowList;


// PC5QoSParameters
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PC5QoSParameters
{
	SI_XNAP_DT_PC5QoSFlowList * pc5QoSFlowList;

	unsigned long long int pc5LinkAggregateBitRates;
	int isPresent_pc5LinkAggregateBitRates;

} SI_XNAP_DT_PC5QoSParameters;


// PC5FlowBitRates
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PC5FlowBitRates
{
	unsigned long long int guaranteedFlowBitRate;

	unsigned long long int maximumFlowBitRate;

} SI_XNAP_DT_PC5FlowBitRates;


// PC5QoSFlowItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PC5QoSFlowItem
{
	unsigned long long int pQI;

	SI_XNAP_DT_PC5FlowBitRates * pc5FlowBitRates;
	int isPresent_pc5FlowBitRates;

	uint8_t selected_erange;
	int extSelected_erange;
	int isPresent_range;

} SI_XNAP_DT_PC5QoSFlowItem;


// PDCPChangeIndication_from-S-NG-RAN-node
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PDCPChangeIndication_from_S_NG_RAN_node
{
	__si_xnap__PDCPChangeIndication_from_S_NG_RAN_node_s_ng_ran_node_key_update_required_val,
	__si_xnap__PDCPChangeIndication_from_S_NG_RAN_node_pdcp_data_recovery_required_val
} SI_XNAP_DT_PDCPChangeIndication_from_S_NG_RAN_node;


// L:2561
typedef enum __si_xnap_dt_PDCPChangeIndication_from_S_NG_RAN_node2
{
	PDCPChangeIndication_from_S_NG_RAN_node_s_ng_ran_node_key_update_required_val,
	PDCPChangeIndication_from_S_NG_RAN_node_pdcp_data_recovery_required_val
} SI_XNAP_DT_PDCPChangeIndication_from_S_NG_RAN_node2;


// L:2588
typedef struct __si_xnap_dt_PDCPChangeIndication_from_S_NG_RAN_node_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PDCPChangeIndication_from_S_NG_RAN_node_EnumProxy;


// PDCPChangeIndication_from-M-NG-RAN-node
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PDCPChangeIndication_from_M_NG_RAN_node
{
	__si_xnap__PDCPChangeIndication_from_M_NG_RAN_node_pdcp_data_recovery_required_val
} SI_XNAP_DT_PDCPChangeIndication_from_M_NG_RAN_node;


// L:2561
typedef enum __si_xnap_dt_PDCPChangeIndication_from_M_NG_RAN_node2
{
	PDCPChangeIndication_from_M_NG_RAN_node_pdcp_data_recovery_required_val
} SI_XNAP_DT_PDCPChangeIndication_from_M_NG_RAN_node2;


// L:2588
typedef struct __si_xnap_dt_PDCPChangeIndication_from_M_NG_RAN_node_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PDCPChangeIndication_from_M_NG_RAN_node_EnumProxy;


// PDCPChangeIndication
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_PDCPChangeIndication
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t from_S_NG_RAN_node;

		// ParserName = ENUMERATED - NonEP false;
		uint8_t from_M_NG_RAN_node;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_PDCPChangeIndication_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_PDCPChangeIndication;


// PDCPDuplicationConfiguration
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PDCPDuplicationConfiguration
{
	__si_xnap__PDCPDuplicationConfiguration_configured_val,
	__si_xnap__PDCPDuplicationConfiguration_de_configured_val
} SI_XNAP_DT_PDCPDuplicationConfiguration;


// L:2561
typedef enum __si_xnap_dt_PDCPDuplicationConfiguration2
{
	PDCPDuplicationConfiguration_configured_val,
	PDCPDuplicationConfiguration_de_configured_val
} SI_XNAP_DT_PDCPDuplicationConfiguration2;


// L:2588
typedef struct __si_xnap_dt_PDCPDuplicationConfiguration_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PDCPDuplicationConfiguration_EnumProxy;


// PDCPSNLength_ulPDCPSNLength
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PDCPSNLength_ulPDCPSNLength
{
	__si_xnap__PDCPSNLength_ulPDCPSNLength_v12bits_val,
	__si_xnap__PDCPSNLength_ulPDCPSNLength_v18bits_val
} SI_XNAP_DT_PDCPSNLength_ulPDCPSNLength;


// L:2561
typedef enum __si_xnap_dt_PDCPSNLength_ulPDCPSNLength2
{
	PDCPSNLength_ulPDCPSNLength_v12bits_val,
	PDCPSNLength_ulPDCPSNLength_v18bits_val
} SI_XNAP_DT_PDCPSNLength_ulPDCPSNLength2;


// L:2588
typedef struct __si_xnap_dt_PDCPSNLength_ulPDCPSNLength_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PDCPSNLength_ulPDCPSNLength_EnumProxy;


// PDCPSNLength_dlPDCPSNLength
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PDCPSNLength_dlPDCPSNLength
{
	__si_xnap__PDCPSNLength_dlPDCPSNLength_v12bits_val,
	__si_xnap__PDCPSNLength_dlPDCPSNLength_v18bits_val
} SI_XNAP_DT_PDCPSNLength_dlPDCPSNLength;


// L:2561
typedef enum __si_xnap_dt_PDCPSNLength_dlPDCPSNLength2
{
	PDCPSNLength_dlPDCPSNLength_v12bits_val,
	PDCPSNLength_dlPDCPSNLength_v18bits_val
} SI_XNAP_DT_PDCPSNLength_dlPDCPSNLength2;


// L:2588
typedef struct __si_xnap_dt_PDCPSNLength_dlPDCPSNLength_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PDCPSNLength_dlPDCPSNLength_EnumProxy;


// PDCPSNLength
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDCPSNLength
{
	uint8_t selected_eulPDCPSNLength;
	int extSelected_eulPDCPSNLength;

	uint8_t selected_edlPDCPSNLength;
	int extSelected_edlPDCPSNLength;

} SI_XNAP_DT_PDCPSNLength;


// PDUSetQoSInformation_pduSetIntegratedHandlingInformation
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PDUSetQoSInformation_pduSetIntegratedHandlingInformation
{
	__si_xnap__PDUSetQoSInformation_pduSetIntegratedHandlingInformation_true_val,
	__si_xnap__PDUSetQoSInformation_pduSetIntegratedHandlingInformation_false_val
} SI_XNAP_DT_PDUSetQoSInformation_pduSetIntegratedHandlingInformation;


// L:2561
typedef enum __si_xnap_dt_PDUSetQoSInformation_pduSetIntegratedHandlingInformation2
{
	PDUSetQoSInformation_pduSetIntegratedHandlingInformation_true_val,
	PDUSetQoSInformation_pduSetIntegratedHandlingInformation_false_val
} SI_XNAP_DT_PDUSetQoSInformation_pduSetIntegratedHandlingInformation2;


// L:2588
typedef struct __si_xnap_dt_PDUSetQoSInformation_pduSetIntegratedHandlingInformation_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PDUSetQoSInformation_pduSetIntegratedHandlingInformation_EnumProxy;


// PDUSetQoSInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSetQoSInformation
{
	unsigned long long int pduSetDelayBudget;
	int isPresent_pduSetDelayBudget;

	SI_XNAP_DT_PacketErrorRate * pduSetErrorRate;
	int isPresent_pduSetErrorRate;

	uint8_t selected_epduSetIntegratedHandlingInformation;
	int extSelected_epduSetIntegratedHandlingInformation;
	int isPresent_pduSetIntegratedHandlingInformation;

} SI_XNAP_DT_PDUSetQoSInformation;


// PDUSetQoSParameters
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSetQoSParameters
{
	SI_XNAP_DT_PDUSetQoSInformation * ulPDUSetQoSInformation;
	int isPresent_ulPDUSetQoSInformation;

	SI_XNAP_DT_PDUSetQoSInformation * dlPDUSetQoSInformation;
	int isPresent_dlPDUSetQoSInformation;

} SI_XNAP_DT_PDUSetQoSParameters;


// PDUSetbasedHandlingIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PDUSetbasedHandlingIndicator
{
	__si_xnap__PDUSetbasedHandlingIndicator_supported_val
} SI_XNAP_DT_PDUSetbasedHandlingIndicator;


// L:2561
typedef enum __si_xnap_dt_PDUSetbasedHandlingIndicator2
{
	PDUSetbasedHandlingIndicator_supported_val
} SI_XNAP_DT_PDUSetbasedHandlingIndicator2;


// L:2588
typedef struct __si_xnap_dt_PDUSetbasedHandlingIndicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PDUSetbasedHandlingIndicator_EnumProxy;


// PDUSessionAggregateMaximumBitRate
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionAggregateMaximumBitRate
{
	unsigned long long int downlink_session_AMBR;

	unsigned long long int uplink_session_AMBR;

} SI_XNAP_DT_PDUSessionAggregateMaximumBitRate;


// PDUSession-List
//SEQUENCE OF PDUSession-ID, MIN=1, MAX= maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSession_List
{
	SI_LinkedList * PDUSession_ID;
} SI_XNAP_DT_PDUSession_List;


// PDUSession-List-withCause
//SEQUENCE OF PDUSession-List-withCause-Item, MIN=1, MAX= maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSession_List_withCause
{
	SI_LinkedList * PDUSession_List_withCause_Item;
} SI_XNAP_DT_PDUSession_List_withCause;


// PDUSession-List-withCause-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSession_List_withCause_Item
{
	unsigned long long int pduSessionId;

	SI_XNAP_DT_Cause * cause;
	int isPresent_cause;

} SI_XNAP_DT_PDUSession_List_withCause_Item;


// PDUSession-List-withDataForwardingFromTarget
//SEQUENCE OF PDUSession-List-withDataForwardingFromTarget-Item, MIN=1, MAX= maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSession_List_withDataForwardingFromTarget
{
	SI_LinkedList * PDUSession_List_withDataForwardingFromTarget_Item;
} SI_XNAP_DT_PDUSession_List_withDataForwardingFromTarget;


// PDUSession-List-withDataForwardingFromTarget-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSession_List_withDataForwardingFromTarget_Item
{
	unsigned long long int pduSessionId;

	SI_XNAP_DT_DataForwardingInfoFromTargetNGRANnode * dataforwardinginfoTarget;

} SI_XNAP_DT_PDUSession_List_withDataForwardingFromTarget_Item;


// PDUSession-List-withDataForwardingRequest
//SEQUENCE OF PDUSession-List-withDataForwardingRequest-Item, MIN=1, MAX= maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSession_List_withDataForwardingRequest
{
	SI_LinkedList * PDUSession_List_withDataForwardingRequest_Item;
} SI_XNAP_DT_PDUSession_List_withDataForwardingRequest;


// PDUSession-List-withDataForwardingRequest-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSession_List_withDataForwardingRequest_Item
{
	unsigned long long int pduSessionId;

	SI_XNAP_DT_DataforwardingandOffloadingInfofromSource * dataforwardingInfofromSource;
	int isPresent_dataforwardingInfofromSource;

	SI_XNAP_DT_DRBToQoSFlowMapping_List * dRBtoBeReleasedList;
	int isPresent_dRBtoBeReleasedList;

} SI_XNAP_DT_PDUSession_List_withDataForwardingRequest_Item;


// PDUSessionsListToBeReleased-UPError
//SEQUENCE OF PDUSessionsListToBeReleased-UPError-Item, MIN=1, MAX= maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSessionsListToBeReleased_UPError
{
	SI_LinkedList * PDUSessionsListToBeReleased_UPError_Item;
} SI_XNAP_DT_PDUSessionsListToBeReleased_UPError;


// UserPlaneErrorIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_UserPlaneErrorIndicator
{
	__si_xnap__UserPlaneErrorIndicator_gtpu_error_indication_received_val
} SI_XNAP_DT_UserPlaneErrorIndicator;


// L:2561
typedef enum __si_xnap_dt_UserPlaneErrorIndicator2
{
	UserPlaneErrorIndicator_gtpu_error_indication_received_val
} SI_XNAP_DT_UserPlaneErrorIndicator2;


// L:2588
typedef struct __si_xnap_dt_UserPlaneErrorIndicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_UserPlaneErrorIndicator_EnumProxy;


// PDUSessionsListToBeReleased-UPError-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionsListToBeReleased_UPError_Item
{
	unsigned long long int pduSessionId;

	uint8_t selected_euserPlaneErrorIndicator;
	int extSelected_euserPlaneErrorIndicator;

} SI_XNAP_DT_PDUSessionsListToBeReleased_UPError_Item;


// PDUSessionResourceAdmittedInfo_dL-NG-U-TNL-Information-Unchanged
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PDUSessionResourceAdmittedInfo_dL_NG_U_TNL_Information_Unchanged
{
	__si_xnap__PDUSessionResourceAdmittedInfo_dL_NG_U_TNL_Information_Unchanged_true_val
} SI_XNAP_DT_PDUSessionResourceAdmittedInfo_dL_NG_U_TNL_Information_Unchanged;


// L:2561
typedef enum __si_xnap_dt_PDUSessionResourceAdmittedInfo_dL_NG_U_TNL_Information_Unchanged2
{
	PDUSessionResourceAdmittedInfo_dL_NG_U_TNL_Information_Unchanged_true_val
} SI_XNAP_DT_PDUSessionResourceAdmittedInfo_dL_NG_U_TNL_Information_Unchanged2;


// L:2588
typedef struct __si_xnap_dt_PDUSessionResourceAdmittedInfo_dL_NG_U_TNL_Information_Unchanged_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PDUSessionResourceAdmittedInfo_dL_NG_U_TNL_Information_Unchanged_EnumProxy;


// QoSFlowsAdmitted-List
//SEQUENCE OF QoSFlowsAdmitted-Item, MIN=1, MAX=maxnoofQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_QoSFlowsAdmitted_List
{
	SI_LinkedList * QoSFlowsAdmitted_Item;
} SI_XNAP_DT_QoSFlowsAdmitted_List;


// QoSFlows-List-withCause
//SEQUENCE OF QoSFlowwithCause-Item, MIN=1, MAX=maxnoofQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_QoSFlows_List_withCause
{
	SI_LinkedList * QoSFlowwithCause_Item;
} SI_XNAP_DT_QoSFlows_List_withCause;


// PDUSessionResourceAdmittedInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceAdmittedInfo
{
	uint8_t selected_edL_NG_U_TNL_Information_Unchanged;
	int extSelected_edL_NG_U_TNL_Information_Unchanged;
	int isPresent_dL_NG_U_TNL_Information_Unchanged;

	SI_XNAP_DT_QoSFlowsAdmitted_List * qosFlowsAdmitted_List;

	SI_XNAP_DT_QoSFlows_List_withCause * qosFlowsNotAdmitted_List;
	int isPresent_qosFlowsNotAdmitted_List;

	SI_XNAP_DT_DataForwardingInfoFromTargetNGRANnode * dataForwardingInfoFromTarget;
	int isPresent_dataForwardingInfoFromTarget;

} SI_XNAP_DT_PDUSessionResourceAdmittedInfo;


// PDUSessionResourcesAdmitted-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourcesAdmitted_Item
{
	unsigned long long int pduSessionId;

	SI_XNAP_DT_PDUSessionResourceAdmittedInfo * pduSessionResourceAdmittedInfo;

} SI_XNAP_DT_PDUSessionResourcesAdmitted_Item;


// PDUSessionResourcesNotAdmitted-List
//SEQUENCE OF PDUSessionResourcesNotAdmitted-Item, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSessionResourcesNotAdmitted_List
{
	SI_LinkedList * PDUSessionResourcesNotAdmitted_Item;
} SI_XNAP_DT_PDUSessionResourcesNotAdmitted_List;


// PDUSessionResourcesNotAdmitted-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourcesNotAdmitted_Item
{
	unsigned long long int pduSessionId;

	SI_XNAP_DT_Cause * cause;
	int isPresent_cause;

} SI_XNAP_DT_PDUSessionResourcesNotAdmitted_Item;


// PDUSessionResourcesToBeSetup-List
//SEQUENCE OF PDUSessionResourcesToBeSetup-Item, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSessionResourcesToBeSetup_List
{
	SI_LinkedList * PDUSessionResourcesToBeSetup_Item;
} SI_XNAP_DT_PDUSessionResourcesToBeSetup_List;


// SNSSAI_sst
// OCTETSTRING,OCTET STRING(SIZE(1))
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_SNSSAI_sst
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_SNSSAI_sst;

// SNSSAI_sd
// OCTETSTRING,OCTET STRING(SIZE(3))
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_SNSSAI_sd
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_SNSSAI_sd;

// S-NSSAI
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_S_NSSAI
{
	SI_XNAP_DT_SNSSAI_sst * sst;

	SI_XNAP_DT_SNSSAI_sd * sd;
	int isPresent_sd;

} SI_XNAP_DT_S_NSSAI;


// SecurityIndication_integrityProtectionIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SecurityIndication_integrityProtectionIndication
{
	__si_xnap__SecurityIndication_integrityProtectionIndication_required_val,
	__si_xnap__SecurityIndication_integrityProtectionIndication_preferred_val,
	__si_xnap__SecurityIndication_integrityProtectionIndication_not_needed_val
} SI_XNAP_DT_SecurityIndication_integrityProtectionIndication;


// L:2561
typedef enum __si_xnap_dt_SecurityIndication_integrityProtectionIndication2
{
	SecurityIndication_integrityProtectionIndication_required_val,
	SecurityIndication_integrityProtectionIndication_preferred_val,
	SecurityIndication_integrityProtectionIndication_not_needed_val
} SI_XNAP_DT_SecurityIndication_integrityProtectionIndication2;


// L:2588
typedef struct __si_xnap_dt_SecurityIndication_integrityProtectionIndication_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SecurityIndication_integrityProtectionIndication_EnumProxy;


// SecurityIndication_confidentialityProtectionIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SecurityIndication_confidentialityProtectionIndication
{
	__si_xnap__SecurityIndication_confidentialityProtectionIndication_required_val,
	__si_xnap__SecurityIndication_confidentialityProtectionIndication_preferred_val,
	__si_xnap__SecurityIndication_confidentialityProtectionIndication_not_needed_val
} SI_XNAP_DT_SecurityIndication_confidentialityProtectionIndication;


// L:2561
typedef enum __si_xnap_dt_SecurityIndication_confidentialityProtectionIndication2
{
	SecurityIndication_confidentialityProtectionIndication_required_val,
	SecurityIndication_confidentialityProtectionIndication_preferred_val,
	SecurityIndication_confidentialityProtectionIndication_not_needed_val
} SI_XNAP_DT_SecurityIndication_confidentialityProtectionIndication2;


// L:2588
typedef struct __si_xnap_dt_SecurityIndication_confidentialityProtectionIndication_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SecurityIndication_confidentialityProtectionIndication_EnumProxy;


// SecurityIndication
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SecurityIndication
{
	uint8_t selected_eintegrityProtectionIndication;
	int extSelected_eintegrityProtectionIndication;

	uint8_t selected_econfidentialityProtectionIndication;
	int extSelected_econfidentialityProtectionIndication;

	SI_XNAP_DT_MaximumIPdatarate * maximumIPdatarate;
	int isPresent_maximumIPdatarate;

} SI_XNAP_DT_SecurityIndication;


// PDUSessionType
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PDUSessionType
{
	__si_xnap__PDUSessionType_ipv4_val,
	__si_xnap__PDUSessionType_ipv6_val,
	__si_xnap__PDUSessionType_ipv4v6_val,
	__si_xnap__PDUSessionType_ethernet_val,
	__si_xnap__PDUSessionType_unstructured_val
} SI_XNAP_DT_PDUSessionType;


// L:2561
typedef enum __si_xnap_dt_PDUSessionType2
{
	PDUSessionType_ipv4_val,
	PDUSessionType_ipv6_val,
	PDUSessionType_ipv4v6_val,
	PDUSessionType_ethernet_val,
	PDUSessionType_unstructured_val
} SI_XNAP_DT_PDUSessionType2;


// L:2588
typedef struct __si_xnap_dt_PDUSessionType_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PDUSessionType_EnumProxy;


// PDUSessionNetworkInstance
// INTEGER,INTEGER(1..256,...),MIN=1,MAX=256  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_PDUSessionNetworkInstance
{
	unsigned long long int data;
} SI_XNAP_DT_PDUSessionNetworkInstance;

// QoSFlowsToBeSetup-List
//SEQUENCE OF QoSFlowsToBeSetup-Item, MIN=1, MAX=maxnoofQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_QoSFlowsToBeSetup_List
{
	SI_LinkedList * QoSFlowsToBeSetup_Item;
} SI_XNAP_DT_QoSFlowsToBeSetup_List;


// PDUSessionResourcesToBeSetup-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourcesToBeSetup_Item
{
	unsigned long long int pduSessionId;

	SI_XNAP_DT_S_NSSAI * s_NSSAI;

	SI_XNAP_DT_PDUSessionAggregateMaximumBitRate * pduSessionAMBR;
	int isPresent_pduSessionAMBR;

	SI_XNAP_DT_UPTransportLayerInformation * uL_NG_U_TNLatUPF;

	SI_XNAP_DT_UPTransportLayerInformation * source_DL_NG_U_TNL_Information;
	int isPresent_source_DL_NG_U_TNL_Information;

	SI_XNAP_DT_SecurityIndication * securityIndication;
	int isPresent_securityIndication;

	uint8_t selected_epduSessionType;
	int extSelected_epduSessionType;

	unsigned long long int pduSessionNetworkInstance;
	int isPresent_pduSessionNetworkInstance;

	SI_XNAP_DT_QoSFlowsToBeSetup_List * qosFlowsToBeSetup_List;

	SI_XNAP_DT_DataforwardingandOffloadingInfofromSource * dataforwardinginfofromSource;
	int isPresent_dataforwardinginfofromSource;

} SI_XNAP_DT_PDUSessionResourcesToBeSetup_Item;


// QoSFlowsToBeSetup-List-Setup-SNterminated
//SEQUENCE OF QoSFlowsToBeSetup-List-Setup-SNterminated-Item, MIN=1, MAX=maxnoofQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_QoSFlowsToBeSetup_List_Setup_SNterminated
{
	SI_LinkedList * QoSFlowsToBeSetup_List_Setup_SNterminated_Item;
} SI_XNAP_DT_QoSFlowsToBeSetup_List_Setup_SNterminated;


// PDUSessionResourceSetupInfo-SNterminated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceSetupInfo_SNterminated
{
	SI_XNAP_DT_UPTransportLayerInformation * uL_NG_U_TNLatUPF;

	uint8_t selected_epduSessionType;
	int extSelected_epduSessionType;

	unsigned long long int pduSessionNetworkInstance;
	int isPresent_pduSessionNetworkInstance;

	SI_XNAP_DT_QoSFlowsToBeSetup_List_Setup_SNterminated * qosFlowsToBeSetup_List;

	SI_XNAP_DT_DataforwardingandOffloadingInfofromSource * dataforwardinginfofromSource;
	int isPresent_dataforwardinginfofromSource;

	SI_XNAP_DT_SecurityIndication * securityIndication;
	int isPresent_securityIndication;

} SI_XNAP_DT_PDUSessionResourceSetupInfo_SNterminated;


// QoSFlowsToBeSetup-List-Setup-SNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoSFlowsToBeSetup_List_Setup_SNterminated_Item
{
	unsigned long long int qfi;

	SI_XNAP_DT_QoSFlowLevelQoSParameters * qosFlowLevelQoSParameters;

	SI_XNAP_DT_GBRQoSFlowInfo * offeredGBRQoSFlowInfo;
	int isPresent_offeredGBRQoSFlowInfo;

} SI_XNAP_DT_QoSFlowsToBeSetup_List_Setup_SNterminated_Item;


// DRBsToBeSetupList-SetupResponse-SNterminated
//SEQUENCE OF DRBsToBeSetupList-SetupResponse-SNterminated-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DRBsToBeSetupList_SetupResponse_SNterminated
{
	SI_LinkedList * DRBsToBeSetupList_SetupResponse_SNterminated_Item;
} SI_XNAP_DT_DRBsToBeSetupList_SetupResponse_SNterminated;


// SecurityResult_integrityProtectionResult
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SecurityResult_integrityProtectionResult
{
	__si_xnap__SecurityResult_integrityProtectionResult_performed_val,
	__si_xnap__SecurityResult_integrityProtectionResult_not_performed_val
} SI_XNAP_DT_SecurityResult_integrityProtectionResult;


// L:2561
typedef enum __si_xnap_dt_SecurityResult_integrityProtectionResult2
{
	SecurityResult_integrityProtectionResult_performed_val,
	SecurityResult_integrityProtectionResult_not_performed_val
} SI_XNAP_DT_SecurityResult_integrityProtectionResult2;


// L:2588
typedef struct __si_xnap_dt_SecurityResult_integrityProtectionResult_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SecurityResult_integrityProtectionResult_EnumProxy;


// SecurityResult_confidentialityProtectionResult
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SecurityResult_confidentialityProtectionResult
{
	__si_xnap__SecurityResult_confidentialityProtectionResult_performed_val,
	__si_xnap__SecurityResult_confidentialityProtectionResult_not_performed_val
} SI_XNAP_DT_SecurityResult_confidentialityProtectionResult;


// L:2561
typedef enum __si_xnap_dt_SecurityResult_confidentialityProtectionResult2
{
	SecurityResult_confidentialityProtectionResult_performed_val,
	SecurityResult_confidentialityProtectionResult_not_performed_val
} SI_XNAP_DT_SecurityResult_confidentialityProtectionResult2;


// L:2588
typedef struct __si_xnap_dt_SecurityResult_confidentialityProtectionResult_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SecurityResult_confidentialityProtectionResult_EnumProxy;


// SecurityResult
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SecurityResult
{
	uint8_t selected_eintegrityProtectionResult;
	int extSelected_eintegrityProtectionResult;

	uint8_t selected_econfidentialityProtectionResult;
	int extSelected_econfidentialityProtectionResult;

} SI_XNAP_DT_SecurityResult;


// PDUSessionResourceSetupResponseInfo-SNterminated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceSetupResponseInfo_SNterminated
{
	SI_XNAP_DT_UPTransportLayerInformation * dL_NG_U_TNLatNG_RAN;

	SI_XNAP_DT_DRBsToBeSetupList_SetupResponse_SNterminated * dRBsToBeSetup;
	int isPresent_dRBsToBeSetup;

	SI_XNAP_DT_DataForwardingInfoFromTargetNGRANnode * dataforwardinginfoTarget;
	int isPresent_dataforwardinginfoTarget;

	SI_XNAP_DT_QoSFlows_List_withCause * qosFlowsNotAdmittedList;
	int isPresent_qosFlowsNotAdmittedList;

	SI_XNAP_DT_SecurityResult * securityResult;
	int isPresent_securityResult;

} SI_XNAP_DT_PDUSessionResourceSetupResponseInfo_SNterminated;


// UPTransportParameters
//SEQUENCE OF UPTransportParametersItem, MIN=1, MAX=maxnoofSCellGroupsplus1  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_UPTransportParameters
{
	SI_LinkedList * UPTransportParametersItem;
} SI_XNAP_DT_UPTransportParameters;


// UL-UE-Configuration
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_UL_UE_Configuration
{
	__si_xnap__UL_UE_Configuration_no_data_val,
	__si_xnap__UL_UE_Configuration_shared_val,
	__si_xnap__UL_UE_Configuration_only_val
} SI_XNAP_DT_UL_UE_Configuration;


// L:2561
typedef enum __si_xnap_dt_UL_UE_Configuration2
{
	UL_UE_Configuration_no_data_val,
	UL_UE_Configuration_shared_val,
	UL_UE_Configuration_only_val
} SI_XNAP_DT_UL_UE_Configuration2;


// L:2588
typedef struct __si_xnap_dt_UL_UE_Configuration_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_UL_UE_Configuration_EnumProxy;


// ULConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ULConfiguration
{
	uint8_t selected_euL_PDCP;
	int extSelected_euL_PDCP;

} SI_XNAP_DT_ULConfiguration;


// QoSFlowsMappedtoDRB-SetupResponse-SNterminated
//SEQUENCE OF QoSFlowsMappedtoDRB-SetupResponse-SNterminated-Item, MIN=1, MAX=maxnoofQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_QoSFlowsMappedtoDRB_SetupResponse_SNterminated
{
	SI_LinkedList * QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item;
} SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_SNterminated;


// DRBsToBeSetupList-SetupResponse-SNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRBsToBeSetupList_SetupResponse_SNterminated_Item
{
	unsigned long long int drb_ID;

	SI_XNAP_DT_UPTransportParameters * sN_UL_PDCP_UP_TNLInfo;

	SI_XNAP_DT_QoSFlowLevelQoSParameters * dRB_QoS;

	SI_XNAP_DT_PDCPSNLength * pDCP_SNLength;
	int isPresent_pDCP_SNLength;

	uint8_t selected_erLC_Mode;
	int extSelected_erLC_Mode;

	SI_XNAP_DT_ULConfiguration * uL_Configuration;
	int isPresent_uL_Configuration;

	SI_XNAP_DT_UPTransportParameters * secondary_SN_UL_PDCP_UP_TNLInfo;
	int isPresent_secondary_SN_UL_PDCP_UP_TNLInfo;

	uint8_t selected_eduplicationActivation;
	int extSelected_eduplicationActivation;
	int isPresent_duplicationActivation;

	SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_SNterminated * qoSFlowsMappedtoDRB_SetupResponse_SNterminated;

} SI_XNAP_DT_DRBsToBeSetupList_SetupResponse_SNterminated_Item;


// QoSFlowsMappedtoDRB-SetupResponse-SNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item
{
	unsigned long long int qoSFlowIdentifier;

	SI_XNAP_DT_GBRQoSFlowInfo * mCGRequestedGBRQoSFlowInfo;
	int isPresent_mCGRequestedGBRQoSFlowInfo;

	uint8_t selected_eqosFlowMappingIndication;
	int extSelected_eqosFlowMappingIndication;
	int isPresent_qosFlowMappingIndication;

} SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item;


// DRBsToBeSetupList-Setup-MNterminated
//SEQUENCE OF DRBsToBeSetupList-Setup-MNterminated-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DRBsToBeSetupList_Setup_MNterminated
{
	SI_LinkedList * DRBsToBeSetupList_Setup_MNterminated_Item;
} SI_XNAP_DT_DRBsToBeSetupList_Setup_MNterminated;


// PDUSessionResourceSetupInfo-MNterminated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceSetupInfo_MNterminated
{
	uint8_t selected_epduSessionType;
	int extSelected_epduSessionType;

	SI_XNAP_DT_DRBsToBeSetupList_Setup_MNterminated * dRBsToBeSetup;

} SI_XNAP_DT_PDUSessionResourceSetupInfo_MNterminated;


// QoSFlowsMappedtoDRB-Setup-MNterminated
//SEQUENCE OF QoSFlowsMappedtoDRB-Setup-MNterminated-Item, MIN=1, MAX=maxnoofQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_QoSFlowsMappedtoDRB_Setup_MNterminated
{
	SI_LinkedList * QoSFlowsMappedtoDRB_Setup_MNterminated_Item;
} SI_XNAP_DT_QoSFlowsMappedtoDRB_Setup_MNterminated;


// DRBsToBeSetupList-Setup-MNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRBsToBeSetupList_Setup_MNterminated_Item
{
	unsigned long long int drb_ID;

	SI_XNAP_DT_UPTransportParameters * mN_UL_PDCP_UP_TNLInfo;

	uint8_t selected_erLC_Mode;
	int extSelected_erLC_Mode;

	SI_XNAP_DT_ULConfiguration * uL_Configuration;
	int isPresent_uL_Configuration;

	SI_XNAP_DT_QoSFlowLevelQoSParameters * dRB_QoS;

	SI_XNAP_DT_PDCPSNLength * pDCP_SNLength;
	int isPresent_pDCP_SNLength;

	SI_XNAP_DT_UPTransportParameters * secondary_MN_UL_PDCP_UP_TNLInfo;
	int isPresent_secondary_MN_UL_PDCP_UP_TNLInfo;

	uint8_t selected_eduplicationActivation;
	int extSelected_eduplicationActivation;
	int isPresent_duplicationActivation;

	SI_XNAP_DT_QoSFlowsMappedtoDRB_Setup_MNterminated * qoSFlowsMappedtoDRB_Setup_MNterminated;

} SI_XNAP_DT_DRBsToBeSetupList_Setup_MNterminated_Item;


// QoSFlowsMappedtoDRB-Setup-MNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoSFlowsMappedtoDRB_Setup_MNterminated_Item
{
	unsigned long long int qoSFlowIdentifier;

	SI_XNAP_DT_QoSFlowLevelQoSParameters * qoSFlowLevelQoSParameters;

	uint8_t selected_eqosFlowMappingIndication;
	int extSelected_eqosFlowMappingIndication;
	int isPresent_qosFlowMappingIndication;

} SI_XNAP_DT_QoSFlowsMappedtoDRB_Setup_MNterminated_Item;


// DRBsAdmittedList-SetupResponse-MNterminated
//SEQUENCE OF DRBsAdmittedList-SetupResponse-MNterminated-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DRBsAdmittedList_SetupResponse_MNterminated
{
	SI_LinkedList * DRBsAdmittedList_SetupResponse_MNterminated_Item;
} SI_XNAP_DT_DRBsAdmittedList_SetupResponse_MNterminated;


// PDUSessionResourceSetupResponseInfo-MNterminated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceSetupResponseInfo_MNterminated
{
	SI_XNAP_DT_DRBsAdmittedList_SetupResponse_MNterminated * dRBsAdmittedList;

} SI_XNAP_DT_PDUSessionResourceSetupResponseInfo_MNterminated;


// DRBsAdmittedList-SetupResponse-MNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRBsAdmittedList_SetupResponse_MNterminated_Item
{
	unsigned long long int drb_ID;

	SI_XNAP_DT_UPTransportParameters * sN_DL_SCG_UP_TNLInfo;

	SI_XNAP_DT_UPTransportParameters * secondary_SN_DL_SCG_UP_TNLInfo;
	int isPresent_secondary_SN_DL_SCG_UP_TNLInfo;

	unsigned long long int lCID;
	int isPresent_lCID;

} SI_XNAP_DT_DRBsAdmittedList_SetupResponse_MNterminated_Item;


// QoSFlowsMappedtoDRB-SetupResponse-MNterminated
//SEQUENCE OF QoSFlowsMappedtoDRB-SetupResponse-MNterminated-Item, MIN=1, MAX=maxnoofQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_QoSFlowsMappedtoDRB_SetupResponse_MNterminated
{
	SI_LinkedList * QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item;
} SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_MNterminated;


// QoSFlowsMappedtoDRB-SetupResponse-MNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item
{
	unsigned long long int qoSFlowIdentifier;

	unsigned long long int currentQoSParaSetIndex;

} SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item;


// QoSFlowsToBeSetup-List-Modified-SNterminated
//SEQUENCE OF QoSFlowsToBeSetup-List-Modified-SNterminated-Item, MIN=1, MAX=maxnoofQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_QoSFlowsToBeSetup_List_Modified_SNterminated
{
	SI_LinkedList * QoSFlowsToBeSetup_List_Modified_SNterminated_Item;
} SI_XNAP_DT_QoSFlowsToBeSetup_List_Modified_SNterminated;


// DRBsToBeModified-List-Modified-SNterminated
//SEQUENCE OF DRBsToBeModified-List-Modified-SNterminated-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DRBsToBeModified_List_Modified_SNterminated
{
	SI_LinkedList * DRBsToBeModified_List_Modified_SNterminated_Item;
} SI_XNAP_DT_DRBsToBeModified_List_Modified_SNterminated;


// PDUSessionResourceModificationInfo-SNterminated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceModificationInfo_SNterminated
{
	SI_XNAP_DT_UPTransportLayerInformation * uL_NG_U_TNLatUPF;
	int isPresent_uL_NG_U_TNLatUPF;

	unsigned long long int pduSessionNetworkInstance;
	int isPresent_pduSessionNetworkInstance;

	SI_XNAP_DT_QoSFlowsToBeSetup_List_Setup_SNterminated * qosFlowsToBeSetup_List;
	int isPresent_qosFlowsToBeSetup_List;

	SI_XNAP_DT_DataforwardingandOffloadingInfofromSource * dataforwardinginfofromSource;
	int isPresent_dataforwardinginfofromSource;

	SI_XNAP_DT_QoSFlowsToBeSetup_List_Modified_SNterminated * qosFlowsToBeModified_List;
	int isPresent_qosFlowsToBeModified_List;

	SI_XNAP_DT_QoSFlows_List_withCause * qoSFlowsToBeReleased_List;
	int isPresent_qoSFlowsToBeReleased_List;

	SI_XNAP_DT_DRBsToBeModified_List_Modified_SNterminated * drbsToBeModifiedList;
	int isPresent_drbsToBeModifiedList;

	SI_XNAP_DT_DRB_List_withCause * dRBsToBeReleased;
	int isPresent_dRBsToBeReleased;

} SI_XNAP_DT_PDUSessionResourceModificationInfo_SNterminated;


// QoSFlowsToBeSetup-List-Modified-SNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoSFlowsToBeSetup_List_Modified_SNterminated_Item
{
	unsigned long long int qfi;

	SI_XNAP_DT_QoSFlowLevelQoSParameters * qosFlowLevelQoSParameters;
	int isPresent_qosFlowLevelQoSParameters;

	SI_XNAP_DT_GBRQoSFlowInfo * offeredGBRQoSFlowInfo;
	int isPresent_offeredGBRQoSFlowInfo;

	uint8_t selected_eqosFlowMappingIndication;
	int extSelected_eqosFlowMappingIndication;
	int isPresent_qosFlowMappingIndication;

} SI_XNAP_DT_QoSFlowsToBeSetup_List_Modified_SNterminated_Item;


// Reestablishment-Indication
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_Reestablishment_Indication
{
	__si_xnap__Reestablishment_Indication_reestablished_val
} SI_XNAP_DT_Reestablishment_Indication;


// L:2561
typedef enum __si_xnap_dt_Reestablishment_Indication2
{
	Reestablishment_Indication_reestablished_val
} SI_XNAP_DT_Reestablishment_Indication2;


// L:2588
typedef struct __si_xnap_dt_Reestablishment_Indication_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_Reestablishment_Indication_EnumProxy;


// RLC-Status
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RLC_Status
{
	uint8_t selected_ereestablishment_Indication;
	int extSelected_ereestablishment_Indication;

} SI_XNAP_DT_RLC_Status;


// DRBsToBeModified-List-Modified-SNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRBsToBeModified_List_Modified_SNterminated_Item
{
	unsigned long long int drb_ID;

	SI_XNAP_DT_UPTransportParameters * mN_DL_SCG_UP_TNLInfo;
	int isPresent_mN_DL_SCG_UP_TNLInfo;

	SI_XNAP_DT_UPTransportParameters * secondary_MN_DL_SCG_UP_TNLInfo;
	int isPresent_secondary_MN_DL_SCG_UP_TNLInfo;

	unsigned long long int lCID;
	int isPresent_lCID;

	SI_XNAP_DT_RLC_Status * rlc_status;
	int isPresent_rlc_status;

} SI_XNAP_DT_DRBsToBeModified_List_Modified_SNterminated_Item;


// DRBsToBeModifiedList-ModificationResponse-SNterminated
//SEQUENCE OF DRBsToBeModifiedList-ModificationResponse-SNterminated-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DRBsToBeModifiedList_ModificationResponse_SNterminated
{
	SI_LinkedList * DRBsToBeModifiedList_ModificationResponse_SNterminated_Item;
} SI_XNAP_DT_DRBsToBeModifiedList_ModificationResponse_SNterminated;


// PDUSessionResourceModificationResponseInfo-SNterminated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceModificationResponseInfo_SNterminated
{
	SI_XNAP_DT_UPTransportLayerInformation * dL_NG_U_TNLatNG_RAN;
	int isPresent_dL_NG_U_TNLatNG_RAN;

	SI_XNAP_DT_DRBsToBeSetupList_SetupResponse_SNterminated * dRBsToBeSetup;
	int isPresent_dRBsToBeSetup;

	SI_XNAP_DT_DataForwardingInfoFromTargetNGRANnode * dataforwardinginfoTarget;
	int isPresent_dataforwardinginfoTarget;

	SI_XNAP_DT_DRBsToBeModifiedList_ModificationResponse_SNterminated * dRBsToBeModified;
	int isPresent_dRBsToBeModified;

	SI_XNAP_DT_DRB_List_withCause * dRBsToBeReleased;
	int isPresent_dRBsToBeReleased;

	SI_XNAP_DT_DataforwardingandOffloadingInfofromSource * dataforwardinginfofromSource;
	int isPresent_dataforwardinginfofromSource;

	SI_XNAP_DT_QoSFlows_List_withCause * qosFlowsNotAdmittedTBAdded;
	int isPresent_qosFlowsNotAdmittedTBAdded;

	SI_XNAP_DT_QoSFlows_List_withCause * qosFlowsReleased;
	int isPresent_qosFlowsReleased;

} SI_XNAP_DT_PDUSessionResourceModificationResponseInfo_SNterminated;


// DRBsToBeModifiedList-ModificationResponse-SNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item
{
	unsigned long long int drb_ID;

	SI_XNAP_DT_UPTransportParameters * sN_UL_PDCP_UP_TNLInfo;
	int isPresent_sN_UL_PDCP_UP_TNLInfo;

	SI_XNAP_DT_QoSFlowLevelQoSParameters * dRB_QoS;
	int isPresent_dRB_QoS;

	SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_SNterminated * qoSFlowsMappedtoDRB_SetupResponse_SNterminated;
	int isPresent_qoSFlowsMappedtoDRB_SetupResponse_SNterminated;

} SI_XNAP_DT_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item;


// DRBsToBeModifiedList-Modification-MNterminated
//SEQUENCE OF DRBsToBeModifiedList-Modification-MNterminated-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DRBsToBeModifiedList_Modification_MNterminated
{
	SI_LinkedList * DRBsToBeModifiedList_Modification_MNterminated_Item;
} SI_XNAP_DT_DRBsToBeModifiedList_Modification_MNterminated;


// PDUSessionResourceModificationInfo-MNterminated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceModificationInfo_MNterminated
{
	uint8_t selected_epduSessionType;
	int extSelected_epduSessionType;

	SI_XNAP_DT_DRBsToBeSetupList_Setup_MNterminated * dRBsToBeSetup;
	int isPresent_dRBsToBeSetup;

	SI_XNAP_DT_DRBsToBeModifiedList_Modification_MNterminated * dRBsToBeModified;
	int isPresent_dRBsToBeModified;

	SI_XNAP_DT_DRB_List_withCause * dRBsToBeReleased;
	int isPresent_dRBsToBeReleased;

} SI_XNAP_DT_PDUSessionResourceModificationInfo_MNterminated;


// DRBsToBeModifiedList-Modification-MNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRBsToBeModifiedList_Modification_MNterminated_Item
{
	unsigned long long int drb_ID;

	SI_XNAP_DT_UPTransportParameters * mN_UL_PDCP_UP_TNLInfo;
	int isPresent_mN_UL_PDCP_UP_TNLInfo;

	SI_XNAP_DT_QoSFlowLevelQoSParameters * dRB_QoS;
	int isPresent_dRB_QoS;

	SI_XNAP_DT_UPTransportParameters * secondary_MN_UL_PDCP_UP_TNLInfo;
	int isPresent_secondary_MN_UL_PDCP_UP_TNLInfo;

	SI_XNAP_DT_ULConfiguration * uL_Configuration;
	int isPresent_uL_Configuration;

	uint8_t selected_epdcpDuplicationConfiguration;
	int extSelected_epdcpDuplicationConfiguration;
	int isPresent_pdcpDuplicationConfiguration;

	uint8_t selected_eduplicationActivation;
	int extSelected_eduplicationActivation;
	int isPresent_duplicationActivation;

	SI_XNAP_DT_QoSFlowsMappedtoDRB_Setup_MNterminated * qoSFlowsMappedtoDRB_Setup_MNterminated;
	int isPresent_qoSFlowsMappedtoDRB_Setup_MNterminated;

} SI_XNAP_DT_DRBsToBeModifiedList_Modification_MNterminated_Item;


// DRBsAdmittedList-ModificationResponse-MNterminated
//SEQUENCE OF DRBsAdmittedList-ModificationResponse-MNterminated-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DRBsAdmittedList_ModificationResponse_MNterminated
{
	SI_LinkedList * DRBsAdmittedList_ModificationResponse_MNterminated_Item;
} SI_XNAP_DT_DRBsAdmittedList_ModificationResponse_MNterminated;


// PDUSessionResourceModificationResponseInfo-MNterminated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceModificationResponseInfo_MNterminated
{
	SI_XNAP_DT_DRBsAdmittedList_ModificationResponse_MNterminated * dRBsAdmittedList;

	SI_XNAP_DT_DRB_List * dRBsReleasedList;
	int isPresent_dRBsReleasedList;

	SI_XNAP_DT_DRB_List_withCause * dRBsNotAdmittedSetupModifyList;
	int isPresent_dRBsNotAdmittedSetupModifyList;

} SI_XNAP_DT_PDUSessionResourceModificationResponseInfo_MNterminated;


// DRBsAdmittedList-ModificationResponse-MNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRBsAdmittedList_ModificationResponse_MNterminated_Item
{
	unsigned long long int drb_ID;

	SI_XNAP_DT_UPTransportParameters * sN_DL_SCG_UP_TNLInfo;
	int isPresent_sN_DL_SCG_UP_TNLInfo;

	SI_XNAP_DT_UPTransportParameters * secondary_SN_DL_SCG_UP_TNLInfo;
	int isPresent_secondary_SN_DL_SCG_UP_TNLInfo;

	unsigned long long int lCID;
	int isPresent_lCID;

} SI_XNAP_DT_DRBsAdmittedList_ModificationResponse_MNterminated_Item;


// PDUSessionResourceChangeRequiredInfo-SNterminated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceChangeRequiredInfo_SNterminated
{
	SI_XNAP_DT_DataforwardingandOffloadingInfofromSource * dataforwardinginfofromSource;
	int isPresent_dataforwardinginfofromSource;

} SI_XNAP_DT_PDUSessionResourceChangeRequiredInfo_SNterminated;


// PDUSessionResourceChangeRequiredInfo-MNterminated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceChangeRequiredInfo_MNterminated
{
} SI_XNAP_DT_PDUSessionResourceChangeRequiredInfo_MNterminated;


// PDUSessionResourceChangeConfirmInfo-MNterminated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceChangeConfirmInfo_MNterminated
{
} SI_XNAP_DT_PDUSessionResourceChangeConfirmInfo_MNterminated;


// DRBsToBeSetup-List-ModRqd-SNterminated
//SEQUENCE OF DRBsToBeSetup-List-ModRqd-SNterminated-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DRBsToBeSetup_List_ModRqd_SNterminated
{
	SI_LinkedList * DRBsToBeSetup_List_ModRqd_SNterminated_Item;
} SI_XNAP_DT_DRBsToBeSetup_List_ModRqd_SNterminated;


// DRBsToBeModified-List-ModRqd-SNterminated
//SEQUENCE OF DRBsToBeModified-List-ModRqd-SNterminated-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DRBsToBeModified_List_ModRqd_SNterminated
{
	SI_LinkedList * DRBsToBeModified_List_ModRqd_SNterminated_Item;
} SI_XNAP_DT_DRBsToBeModified_List_ModRqd_SNterminated;


// PDUSessionResourceModRqdInfo-SNterminated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceModRqdInfo_SNterminated
{
	SI_XNAP_DT_UPTransportLayerInformation * dL_NG_U_TNLatNG_RAN;
	int isPresent_dL_NG_U_TNLatNG_RAN;

	SI_XNAP_DT_QoSFlows_List_withCause * qoSFlowsToBeReleased_List;
	int isPresent_qoSFlowsToBeReleased_List;

	SI_XNAP_DT_DataforwardingandOffloadingInfofromSource * dataforwardinginfofromSource;
	int isPresent_dataforwardinginfofromSource;

	SI_XNAP_DT_DRBsToBeSetup_List_ModRqd_SNterminated * drbsToBeSetupList;
	int isPresent_drbsToBeSetupList;

	SI_XNAP_DT_DRBsToBeModified_List_ModRqd_SNterminated * drbsToBeModifiedList;
	int isPresent_drbsToBeModifiedList;

	SI_XNAP_DT_DRB_List_withCause * dRBsToBeReleased;
	int isPresent_dRBsToBeReleased;

} SI_XNAP_DT_PDUSessionResourceModRqdInfo_SNterminated;


// QoSFlowsSetupMappedtoDRB-ModRqd-SNterminated
//SEQUENCE OF QoSFlowsSetupMappedtoDRB-ModRqd-SNterminated-Item, MIN=1, MAX=maxnoofQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated
{
	SI_LinkedList * QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item;
} SI_XNAP_DT_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated;


// DRBsToBeSetup-List-ModRqd-SNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRBsToBeSetup_List_ModRqd_SNterminated_Item
{
	unsigned long long int drb_ID;

	SI_XNAP_DT_PDCPSNLength * pDCP_SNLength;
	int isPresent_pDCP_SNLength;

	SI_XNAP_DT_UPTransportParameters * sn_UL_PDCP_UPTNLinfo;

	SI_XNAP_DT_QoSFlowLevelQoSParameters * dRB_QoS;

	SI_XNAP_DT_UPTransportParameters * secondary_SN_UL_PDCP_UP_TNLInfo;
	int isPresent_secondary_SN_UL_PDCP_UP_TNLInfo;

	uint8_t selected_eduplicationActivation;
	int extSelected_eduplicationActivation;
	int isPresent_duplicationActivation;

	SI_XNAP_DT_ULConfiguration * uL_Configuration;
	int isPresent_uL_Configuration;

	SI_XNAP_DT_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated * qoSFlowsMappedtoDRB_ModRqd_SNterminated;

	uint8_t selected_erLC_Mode;
	int extSelected_erLC_Mode;

} SI_XNAP_DT_DRBsToBeSetup_List_ModRqd_SNterminated_Item;


// QoSFlowsSetupMappedtoDRB-ModRqd-SNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item
{
	unsigned long long int qoSFlowIdentifier;

	SI_XNAP_DT_GBRQoSFlowInfo * mCGRequestedGBRQoSFlowInfo;
	int isPresent_mCGRequestedGBRQoSFlowInfo;

} SI_XNAP_DT_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item;


// QoSFlowsModifiedMappedtoDRB-ModRqd-SNterminated
//SEQUENCE OF QoSFlowsModifiedMappedtoDRB-ModRqd-SNterminated-Item, MIN=1, MAX=maxnoofQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated
{
	SI_LinkedList * QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item;
} SI_XNAP_DT_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated;


// DRBsToBeModified-List-ModRqd-SNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRBsToBeModified_List_ModRqd_SNterminated_Item
{
	unsigned long long int drb_ID;

	SI_XNAP_DT_UPTransportParameters * sN_UL_PDCP_UP_TNLInfo;
	int isPresent_sN_UL_PDCP_UP_TNLInfo;

	SI_XNAP_DT_QoSFlowLevelQoSParameters * dRB_QoS;
	int isPresent_dRB_QoS;

	SI_XNAP_DT_UPTransportParameters * secondary_SN_UL_PDCP_UP_TNLInfo;
	int isPresent_secondary_SN_UL_PDCP_UP_TNLInfo;

	SI_XNAP_DT_ULConfiguration * uL_Configuration;
	int isPresent_uL_Configuration;

	uint8_t selected_epdcpDuplicationConfiguration;
	int extSelected_epdcpDuplicationConfiguration;
	int isPresent_pdcpDuplicationConfiguration;

	uint8_t selected_eduplicationActivation;
	int extSelected_eduplicationActivation;
	int isPresent_duplicationActivation;

	SI_XNAP_DT_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated * qoSFlowsMappedtoDRB_ModRqd_SNterminated;
	int isPresent_qoSFlowsMappedtoDRB_ModRqd_SNterminated;

} SI_XNAP_DT_DRBsToBeModified_List_ModRqd_SNterminated_Item;


// QoSFlowsModifiedMappedtoDRB-ModRqd-SNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item
{
	unsigned long long int qoSFlowIdentifier;

	SI_XNAP_DT_GBRQoSFlowInfo * mCGRequestedGBRQoSFlowInfo;
	int isPresent_mCGRequestedGBRQoSFlowInfo;

} SI_XNAP_DT_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item;


// DRBsAdmittedList-ModConfirm-SNterminated
//SEQUENCE OF DRBsAdmittedList-ModConfirm-SNterminated-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DRBsAdmittedList_ModConfirm_SNterminated
{
	SI_LinkedList * DRBsAdmittedList_ModConfirm_SNterminated_Item;
} SI_XNAP_DT_DRBsAdmittedList_ModConfirm_SNterminated;


// PDUSessionResourceModConfirmInfo-SNterminated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceModConfirmInfo_SNterminated
{
	SI_XNAP_DT_UPTransportLayerInformation * uL_NG_U_TNLatUPF;
	int isPresent_uL_NG_U_TNLatUPF;

	SI_XNAP_DT_DRBsAdmittedList_ModConfirm_SNterminated * dRBsAdmittedList;

	SI_XNAP_DT_DRB_List_withCause * dRBsNotAdmittedSetupModifyList;
	int isPresent_dRBsNotAdmittedSetupModifyList;

	SI_XNAP_DT_DataForwardingInfoFromTargetNGRANnode * dataforwardinginfoTarget;
	int isPresent_dataforwardinginfoTarget;

} SI_XNAP_DT_PDUSessionResourceModConfirmInfo_SNterminated;


// DRBsAdmittedList-ModConfirm-SNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRBsAdmittedList_ModConfirm_SNterminated_Item
{
	unsigned long long int drb_ID;

	SI_XNAP_DT_UPTransportParameters * mN_DL_CG_UP_TNLInfo;
	int isPresent_mN_DL_CG_UP_TNLInfo;

	SI_XNAP_DT_UPTransportParameters * secondary_MN_DL_CG_UP_TNLInfo;
	int isPresent_secondary_MN_DL_CG_UP_TNLInfo;

	unsigned long long int lCID;
	int isPresent_lCID;

} SI_XNAP_DT_DRBsAdmittedList_ModConfirm_SNterminated_Item;


// DRBsToBeModified-List-ModRqd-MNterminated
//SEQUENCE OF DRBsToBeModified-List-ModRqd-MNterminated-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_DRBsToBeModified_List_ModRqd_MNterminated
{
	SI_LinkedList * DRBsToBeModified_List_ModRqd_MNterminated_Item;
} SI_XNAP_DT_DRBsToBeModified_List_ModRqd_MNterminated;


// PDUSessionResourceModRqdInfo-MNterminated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceModRqdInfo_MNterminated
{
	SI_XNAP_DT_DRBsToBeModified_List_ModRqd_MNterminated * dRBsToBeModified;
	int isPresent_dRBsToBeModified;

	SI_XNAP_DT_DRB_List_withCause * dRBsToBeReleased;
	int isPresent_dRBsToBeReleased;

} SI_XNAP_DT_PDUSessionResourceModRqdInfo_MNterminated;


// DRBsToBeModified-List-ModRqd-MNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRBsToBeModified_List_ModRqd_MNterminated_Item
{
	unsigned long long int drb_ID;

	SI_XNAP_DT_UPTransportLayerInformation * sN_DL_SCG_UP_TNLInfo;

	SI_XNAP_DT_UPTransportLayerInformation * secondary_SN_DL_SCG_UP_TNLInfo;
	int isPresent_secondary_SN_DL_SCG_UP_TNLInfo;

	unsigned long long int lCID;
	int isPresent_lCID;

	SI_XNAP_DT_RLC_Status * rlc_status;
	int isPresent_rlc_status;

} SI_XNAP_DT_DRBsToBeModified_List_ModRqd_MNterminated_Item;


// PDUSessionResourceModConfirmInfo-MNterminated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceModConfirmInfo_MNterminated
{
} SI_XNAP_DT_PDUSessionResourceModConfirmInfo_MNterminated;


// DRBsToBeSetupList-BearerSetupComplete-SNterminated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item
{
	unsigned long long int dRB_ID;

	SI_XNAP_DT_UPTransportLayerInformation * mN_Xn_U_TNLInfoatM;

} SI_XNAP_DT_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item;


// PDUSessionResourceSecondaryRATUsageList
//SEQUENCE OF PDUSessionResourceSecondaryRATUsageItem, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSessionResourceSecondaryRATUsageList
{
	SI_LinkedList * PDUSessionResourceSecondaryRATUsageItem;
} SI_XNAP_DT_PDUSessionResourceSecondaryRATUsageList;


// PDUSessionUsageReport_rATType
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PDUSessionUsageReport_rATType
{
	__si_xnap__PDUSessionUsageReport_rATType_nr_val,
	__si_xnap__PDUSessionUsageReport_rATType_eutra_val,
	__si_xnap__PDUSessionUsageReport_rATType_nr_unlicensed_val_ext,
	__si_xnap__PDUSessionUsageReport_rATType_e_utra_unlicensed_val_ext
} SI_XNAP_DT_PDUSessionUsageReport_rATType;


// L:2561
typedef enum __si_xnap_dt_PDUSessionUsageReport_rATType2
{
	PDUSessionUsageReport_rATType_nr_val,
	PDUSessionUsageReport_rATType_eutra_val,
	PDUSessionUsageReport_rATType_nr_unlicensed_val_ext,
	PDUSessionUsageReport_rATType_e_utra_unlicensed_val_ext
} SI_XNAP_DT_PDUSessionUsageReport_rATType2;


// L:2588
typedef struct __si_xnap_dt_PDUSessionUsageReport_rATType_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PDUSessionUsageReport_rATType_EnumProxy;


// VolumeTimedReportList
//SEQUENCE OF VolumeTimedReport-Item, MIN=1, MAX=maxnooftimeperiods  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_VolumeTimedReportList
{
	SI_LinkedList * VolumeTimedReport_Item;
} SI_XNAP_DT_VolumeTimedReportList;


// PDUSessionUsageReport
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionUsageReport
{
	uint8_t selected_erATType;
	int extSelected_erATType;

	SI_XNAP_DT_VolumeTimedReportList * pDUSessionTimedReportList;

} SI_XNAP_DT_PDUSessionUsageReport;


// QoSFlowsUsageReportList
//SEQUENCE OF QoSFlowsUsageReport-Item, MIN=1, MAX=maxnoofQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_QoSFlowsUsageReportList
{
	SI_LinkedList * QoSFlowsUsageReport_Item;
} SI_XNAP_DT_QoSFlowsUsageReportList;


// SecondaryRATUsageInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SecondaryRATUsageInformation
{
	SI_XNAP_DT_PDUSessionUsageReport * pDUSessionUsageReport;
	int isPresent_pDUSessionUsageReport;

	SI_XNAP_DT_QoSFlowsUsageReportList * qosFlowsUsageReportList;
	int isPresent_qosFlowsUsageReportList;

} SI_XNAP_DT_SecondaryRATUsageInformation;


// PDUSessionResourceSecondaryRATUsageItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourceSecondaryRATUsageItem
{
	unsigned long long int pDUSessionID;

	SI_XNAP_DT_SecondaryRATUsageInformation * secondaryRATUsageInformation;

} SI_XNAP_DT_PDUSessionResourceSecondaryRATUsageItem;


// PDUSessionCommonNetworkInstance
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_PDUSessionCommonNetworkInstance
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_PDUSessionCommonNetworkInstance;

// PDUSession-PairID
// INTEGER,INTEGER(0..255,...),MIN=0,MAX=255  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_PDUSession_PairID
{
	unsigned long long int data;
} SI_XNAP_DT_PDUSession_PairID;

// PosPartialUEContextInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PosPartialUEContextInfo
{
	SI_XNAP_DT_RequestedSRSTransmissionCharacteristics * requestedSRSTransmissionCharacteristics;
	int isPresent_requestedSRSTransmissionCharacteristics;

} SI_XNAP_DT_PosPartialUEContextInfo;


// PredictedTrajectoryNGRANCellInfo_predictedTimeUEStaysInCell
// INTEGER,INTEGER(0..4095),MIN=0,MAX=4095  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_PredictedTrajectoryNGRANCellInfo_predictedTimeUEStaysInCell
{
	unsigned long long int data;
} SI_XNAP_DT_PredictedTrajectoryNGRANCellInfo_predictedTimeUEStaysInCell;

// PredictedTrajectoryNGRANCellInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PredictedTrajectoryNGRANCellInfo
{
	SI_XNAP_DT_GlobalNG_RANCell_ID * globalNG_RANCell_ID;

	unsigned long long int predictedTimeUEStaysInCell;
	int isPresent_predictedTimeUEStaysInCell;

} SI_XNAP_DT_PredictedTrajectoryNGRANCellInfo;


// PredictedTrajectoryCellInfo
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_PredictedTrajectoryCellInfo
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_PredictedTrajectoryNGRANCellInfo * nG_RAN_Cell_Predicted;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_PredictedTrajectoryCellInfo_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_PredictedTrajectoryCellInfo;


// PredictedUETrajectory-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PredictedUETrajectory_Item
{
	SI_XNAP_DT_PredictedTrajectoryCellInfo * predictedtrajectoryCellInfo;

} SI_XNAP_DT_PredictedUETrajectory_Item;


// ProtectedEUTRAResourceIndication_pDCCHRegionLength
// INTEGER,INTEGER(1..3),MIN=1,MAX=3  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_ProtectedEUTRAResourceIndication_pDCCHRegionLength
{
	unsigned long long int data;
} SI_XNAP_DT_ProtectedEUTRAResourceIndication_pDCCHRegionLength;

// ProtectedE-UTRAResourceList
//SEQUENCE OF ProtectedE-UTRAResource-Item, MIN=1, MAX= maxnoofProtectedResourcePatterns  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ProtectedE_UTRAResourceList
{
	SI_LinkedList * ProtectedE_UTRAResource_Item;
} SI_XNAP_DT_ProtectedE_UTRAResourceList;


// ProtectedE-UTRAResourceIndication
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ProtectedE_UTRAResourceIndication
{
	unsigned long long int activationSFN;

	SI_XNAP_DT_ProtectedE_UTRAResourceList * protectedResourceList;

	unsigned long long int mbsfnControlRegionLength;
	int isPresent_mbsfnControlRegionLength;

	unsigned long long int pDCCHRegionLength;

} SI_XNAP_DT_ProtectedE_UTRAResourceIndication;


// ProtectedEUTRAResourceItem_resourceType
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ProtectedEUTRAResourceItem_resourceType
{
	__si_xnap__ProtectedEUTRAResourceItem_resourceType_downlinknonCRS_val,
	__si_xnap__ProtectedEUTRAResourceItem_resourceType_cRS_val,
	__si_xnap__ProtectedEUTRAResourceItem_resourceType_uplink_val
} SI_XNAP_DT_ProtectedEUTRAResourceItem_resourceType;


// L:2561
typedef enum __si_xnap_dt_ProtectedEUTRAResourceItem_resourceType2
{
	ProtectedEUTRAResourceItem_resourceType_downlinknonCRS_val,
	ProtectedEUTRAResourceItem_resourceType_cRS_val,
	ProtectedEUTRAResourceItem_resourceType_uplink_val
} SI_XNAP_DT_ProtectedEUTRAResourceItem_resourceType2;


// L:2588
typedef struct __si_xnap_dt_ProtectedEUTRAResourceItem_resourceType_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ProtectedEUTRAResourceItem_resourceType_EnumProxy;


// ProtectedEUTRAResourceItem_intra-PRBProtectedResourceFootprint
// BITSTRING,BIT STRING(SIZE(84,...))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_ProtectedEUTRAResourceItem_intra_PRBProtectedResourceFootprint
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_ProtectedEUTRAResourceItem_intra_PRBProtectedResourceFootprint;

// ProtectedEUTRAResourceItem_protectedFootprintFrequencyPattern
// BITSTRING,BIT STRING(SIZE(6..110,...))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_ProtectedEUTRAResourceItem_protectedFootprintFrequencyPattern
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_ProtectedEUTRAResourceItem_protectedFootprintFrequencyPattern;

// ProtectedEUTRAFootprintTimePattern_protectedFootprintTimeperiodicity
// INTEGER,INTEGER(1..320,...),MIN=1,MAX=320  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_ProtectedEUTRAFootprintTimePattern_protectedFootprintTimeperiodicity
{
	unsigned long long int data;
} SI_XNAP_DT_ProtectedEUTRAFootprintTimePattern_protectedFootprintTimeperiodicity;

// ProtectedEUTRAFootprintTimePattern_protectedFootrpintStartTime
// INTEGER,INTEGER(1..20,...),MIN=1,MAX=20  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_ProtectedEUTRAFootprintTimePattern_protectedFootrpintStartTime
{
	unsigned long long int data;
} SI_XNAP_DT_ProtectedEUTRAFootprintTimePattern_protectedFootrpintStartTime;

// ProtectedE-UTRAFootprintTimePattern
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ProtectedE_UTRAFootprintTimePattern
{
	unsigned long long int protectedFootprintTimeperiodicity;

	unsigned long long int protectedFootrpintStartTime;

} SI_XNAP_DT_ProtectedE_UTRAFootprintTimePattern;


// ProtectedE-UTRAResource-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ProtectedE_UTRAResource_Item
{
	uint8_t selected_eresourceType;
	int extSelected_eresourceType;

	SI_XNAP_DT_ProtectedEUTRAResourceItem_intra_PRBProtectedResourceFootprint * intra_PRBProtectedResourceFootprint;

	SI_XNAP_DT_ProtectedEUTRAResourceItem_protectedFootprintFrequencyPattern * protectedFootprintFrequencyPattern;

	SI_XNAP_DT_ProtectedE_UTRAFootprintTimePattern * protectedFootprintTimePattern;

} SI_XNAP_DT_ProtectedE_UTRAResource_Item;


// PrivacyIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PrivacyIndicator
{
	__si_xnap__PrivacyIndicator_immediate_MDT_val,
	__si_xnap__PrivacyIndicator_logged_MDT_val
} SI_XNAP_DT_PrivacyIndicator;


// L:2561
typedef enum __si_xnap_dt_PrivacyIndicator2
{
	PrivacyIndicator_immediate_MDT_val,
	PrivacyIndicator_logged_MDT_val
} SI_XNAP_DT_PrivacyIndicator2;


// L:2588
typedef struct __si_xnap_dt_PrivacyIndicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PrivacyIndicator_EnumProxy;


// PSCellChangeHistory
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PSCellChangeHistory
{
	__si_xnap__PSCellChangeHistory_reporting_full_history_val
} SI_XNAP_DT_PSCellChangeHistory;


// L:2561
typedef enum __si_xnap_dt_PSCellChangeHistory2
{
	PSCellChangeHistory_reporting_full_history_val
} SI_XNAP_DT_PSCellChangeHistory2;


// L:2588
typedef struct __si_xnap_dt_PSCellChangeHistory_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PSCellChangeHistory_EnumProxy;


// PSCellHistoryInformationRetrieve
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_PSCellHistoryInformationRetrieve
{
	__si_xnap__PSCellHistoryInformationRetrieve_query_val
} SI_XNAP_DT_PSCellHistoryInformationRetrieve;


// L:2561
typedef enum __si_xnap_dt_PSCellHistoryInformationRetrieve2
{
	PSCellHistoryInformationRetrieve_query_val
} SI_XNAP_DT_PSCellHistoryInformationRetrieve2;


// L:2588
typedef struct __si_xnap_dt_PSCellHistoryInformationRetrieve_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_PSCellHistoryInformationRetrieve_EnumProxy;


// PSCellListContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_PSCellListContainer
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_PSCellListContainer;

// PNI-NPN-AreaScopeofMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PNI_NPN_AreaScopeofMDT
{
	SI_XNAP_DT_CAGListforMDT * cAGListforMDT;

} SI_XNAP_DT_PNI_NPN_AreaScopeofMDT;


// PNI-NPNBasedMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PNI_NPNBasedMDT
{
	SI_XNAP_DT_CAGListforMDT * cAGListforMDT;

} SI_XNAP_DT_PNI_NPNBasedMDT;


// UEAppLayerMeasInfoList
//SEQUENCE OF UEAppLayerMeasInfo-Item, MIN=1, MAX=maxnoofUEAppLayerMeas  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_UEAppLayerMeasInfoList
{
	SI_LinkedList * UEAppLayerMeasInfo_Item;
} SI_XNAP_DT_UEAppLayerMeasInfoList;


// QMCConfigInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QMCConfigInfo
{
	SI_XNAP_DT_UEAppLayerMeasInfoList * uEAppLayerMeasInfoList;

} SI_XNAP_DT_QMCConfigInfo;


// QOEReference
// OCTETSTRING,OCTET STRING(SIZE(6))
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_QOEReference
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_QOEReference;

// QOEMeasConfAppLayerID
// INTEGER,INTEGER(0..15,...),MIN=0,MAX=15  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_QOEMeasConfAppLayerID
{
	unsigned long long int data;
} SI_XNAP_DT_QOEMeasConfAppLayerID;

// ServiceType
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ServiceType
{
	__si_xnap__ServiceType_qMC_for_streaming_service_val,
	__si_xnap__ServiceType_qMC_for_MTSI_service_val,
	__si_xnap__ServiceType_qMC_for_VR_service_val
} SI_XNAP_DT_ServiceType;


// L:2561
typedef enum __si_xnap_dt_ServiceType2
{
	ServiceType_qMC_for_streaming_service_val,
	ServiceType_qMC_for_MTSI_service_val,
	ServiceType_qMC_for_VR_service_val
} SI_XNAP_DT_ServiceType2;


// L:2588
typedef struct __si_xnap_dt_ServiceType_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ServiceType_EnumProxy;


// QOEMeasStatus
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_QOEMeasStatus
{
	__si_xnap__QOEMeasStatus_ongoing_val
} SI_XNAP_DT_QOEMeasStatus;


// L:2561
typedef enum __si_xnap_dt_QOEMeasStatus2
{
	QOEMeasStatus_ongoing_val
} SI_XNAP_DT_QOEMeasStatus2;


// L:2588
typedef struct __si_xnap_dt_QOEMeasStatus_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_QOEMeasStatus_EnumProxy;


// S-NSSAIListQoE
//SEQUENCE OF S-NSSAI, MIN=1, MAX=maxnoofSNSSAIforQMC  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_S_NSSAIListQoE
{
	SI_LinkedList * S_NSSAI;
} SI_XNAP_DT_S_NSSAIListQoE;


// UEAppLayerMeasConfigInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UEAppLayerMeasConfigInfo
{
	SI_XNAP_DT_QOEReference * qOEReference;

	unsigned long long int qOEMeasConfigAppLayerID;
	int isPresent_qOEMeasConfigAppLayerID;

	uint8_t selected_eserviceType;
	int extSelected_eserviceType;

	uint8_t selected_eqOEMeasStatus;
	int extSelected_eqOEMeasStatus;
	int isPresent_qOEMeasStatus;

	SI_XNAP_DT_ContainerAppLayerMeasConfig * containerAppLayerMeasConfig;
	int isPresent_containerAppLayerMeasConfig;

	SI_XNAP_DT_MDTAlignmentInfo * mDTAlignmentInfo;
	int isPresent_mDTAlignmentInfo;

	SI_XNAP_DT_MeasCollectionEntityIPAddress * measCollectionEntityIPAddress;
	int isPresent_measCollectionEntityIPAddress;

	SI_XNAP_DT_AreaScopeOfQMC * areaScopeOfQMC;
	int isPresent_areaScopeOfQMC;

	SI_XNAP_DT_S_NSSAIListQoE * s_NSSAIListQoE;
	int isPresent_s_NSSAIListQoE;

	SI_XNAP_DT_AvailableRVQoEMetrics * availableRVQoEMetrics;
	int isPresent_availableRVQoEMetrics;

} SI_XNAP_DT_UEAppLayerMeasConfigInfo;


// UEAppLayerMeasInfo-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UEAppLayerMeasInfo_Item
{
	SI_XNAP_DT_UEAppLayerMeasConfigInfo * uEAppLayerMeasConfigInfo;

} SI_XNAP_DT_UEAppLayerMeasInfo_Item;


// MN-to-SN-QMCCoordRequestList
//SEQUENCE OF MN-to-SN-QMCCoordRequestList-Item, MIN=1, MAX=maxnoofUEAppLayerMeas  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_MN_to_SN_QMCCoordRequestList
{
	SI_LinkedList * MN_to_SN_QMCCoordRequestList_Item;
} SI_XNAP_DT_MN_to_SN_QMCCoordRequestList;


// SN-to-MN-QMCCoordRequestList
//SEQUENCE OF SN-to-MN-QMCCoordRequestList-Item, MIN=1, MAX=maxnoofUEAppLayerMeas  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SN_to_MN_QMCCoordRequestList
{
	SI_LinkedList * SN_to_MN_QMCCoordRequestList_Item;
} SI_XNAP_DT_SN_to_MN_QMCCoordRequestList;


// QMCCoordinationRequest
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QMCCoordinationRequest
{
	SI_XNAP_DT_MN_to_SN_QMCCoordRequestList * mN_to_SN_QMCCoordRequestList;
	int isPresent_mN_to_SN_QMCCoordRequestList;

	SI_XNAP_DT_SN_to_MN_QMCCoordRequestList * sN_to_MN_QMCCoordRequestList;
	int isPresent_sN_to_MN_QMCCoordRequestList;

} SI_XNAP_DT_QMCCoordinationRequest;


// MNtoSNQMCCoordRequestListItem_qoEReportingPathRequest
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MNtoSNQMCCoordRequestListItem_qoEReportingPathRequest
{
	__si_xnap__MNtoSNQMCCoordRequestListItem_qoEReportingPathRequest_srb4_val,
	__si_xnap__MNtoSNQMCCoordRequestListItem_qoEReportingPathRequest_srb5_val
} SI_XNAP_DT_MNtoSNQMCCoordRequestListItem_qoEReportingPathRequest;


// L:2561
typedef enum __si_xnap_dt_MNtoSNQMCCoordRequestListItem_qoEReportingPathRequest2
{
	MNtoSNQMCCoordRequestListItem_qoEReportingPathRequest_srb4_val,
	MNtoSNQMCCoordRequestListItem_qoEReportingPathRequest_srb5_val
} SI_XNAP_DT_MNtoSNQMCCoordRequestListItem_qoEReportingPathRequest2;


// L:2588
typedef struct __si_xnap_dt_MNtoSNQMCCoordRequestListItem_qoEReportingPathRequest_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MNtoSNQMCCoordRequestListItem_qoEReportingPathRequest_EnumProxy;


// MNtoSNQMCCoordRequestListItem_rVQoEReportingPathRequest
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MNtoSNQMCCoordRequestListItem_rVQoEReportingPathRequest
{
	__si_xnap__MNtoSNQMCCoordRequestListItem_rVQoEReportingPathRequest_srb4_val,
	__si_xnap__MNtoSNQMCCoordRequestListItem_rVQoEReportingPathRequest_srb5_val
} SI_XNAP_DT_MNtoSNQMCCoordRequestListItem_rVQoEReportingPathRequest;


// L:2561
typedef enum __si_xnap_dt_MNtoSNQMCCoordRequestListItem_rVQoEReportingPathRequest2
{
	MNtoSNQMCCoordRequestListItem_rVQoEReportingPathRequest_srb4_val,
	MNtoSNQMCCoordRequestListItem_rVQoEReportingPathRequest_srb5_val
} SI_XNAP_DT_MNtoSNQMCCoordRequestListItem_rVQoEReportingPathRequest2;


// L:2588
typedef struct __si_xnap_dt_MNtoSNQMCCoordRequestListItem_rVQoEReportingPathRequest_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MNtoSNQMCCoordRequestListItem_rVQoEReportingPathRequest_EnumProxy;


// MNtoSNQMCCoordRequestListItem_furtherRVQoEInterestInquiry
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MNtoSNQMCCoordRequestListItem_furtherRVQoEInterestInquiry
{
	__si_xnap__MNtoSNQMCCoordRequestListItem_furtherRVQoEInterestInquiry_true_val
} SI_XNAP_DT_MNtoSNQMCCoordRequestListItem_furtherRVQoEInterestInquiry;


// L:2561
typedef enum __si_xnap_dt_MNtoSNQMCCoordRequestListItem_furtherRVQoEInterestInquiry2
{
	MNtoSNQMCCoordRequestListItem_furtherRVQoEInterestInquiry_true_val
} SI_XNAP_DT_MNtoSNQMCCoordRequestListItem_furtherRVQoEInterestInquiry2;


// L:2588
typedef struct __si_xnap_dt_MNtoSNQMCCoordRequestListItem_furtherRVQoEInterestInquiry_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MNtoSNQMCCoordRequestListItem_furtherRVQoEInterestInquiry_EnumProxy;


// MNtoSNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MNtoSNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry
{
	__si_xnap__MNtoSNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry_true_val
} SI_XNAP_DT_MNtoSNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry;


// L:2561
typedef enum __si_xnap_dt_MNtoSNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry2
{
	MNtoSNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry_true_val
} SI_XNAP_DT_MNtoSNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry2;


// L:2588
typedef struct __si_xnap_dt_MNtoSNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MNtoSNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry_EnumProxy;


// MNtoSNQMCCoordRequestListItem_configReleaseIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MNtoSNQMCCoordRequestListItem_configReleaseIndication
{
	__si_xnap__MNtoSNQMCCoordRequestListItem_configReleaseIndication_rvqoe_val,
	__si_xnap__MNtoSNQMCCoordRequestListItem_configReleaseIndication_qoe_and_rvqoe_val
} SI_XNAP_DT_MNtoSNQMCCoordRequestListItem_configReleaseIndication;


// L:2561
typedef enum __si_xnap_dt_MNtoSNQMCCoordRequestListItem_configReleaseIndication2
{
	MNtoSNQMCCoordRequestListItem_configReleaseIndication_rvqoe_val,
	MNtoSNQMCCoordRequestListItem_configReleaseIndication_qoe_and_rvqoe_val
} SI_XNAP_DT_MNtoSNQMCCoordRequestListItem_configReleaseIndication2;


// L:2588
typedef struct __si_xnap_dt_MNtoSNQMCCoordRequestListItem_configReleaseIndication_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MNtoSNQMCCoordRequestListItem_configReleaseIndication_EnumProxy;


// RVQoEReportingPeriodicity
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_RVQoEReportingPeriodicity
{
	__si_xnap__RVQoEReportingPeriodicity_ms120_val,
	__si_xnap__RVQoEReportingPeriodicity_ms240_val,
	__si_xnap__RVQoEReportingPeriodicity_ms480_val,
	__si_xnap__RVQoEReportingPeriodicity_ms640_val,
	__si_xnap__RVQoEReportingPeriodicity_ms1024_val
} SI_XNAP_DT_RVQoEReportingPeriodicity;


// L:2561
typedef enum __si_xnap_dt_RVQoEReportingPeriodicity2
{
	RVQoEReportingPeriodicity_ms120_val,
	RVQoEReportingPeriodicity_ms240_val,
	RVQoEReportingPeriodicity_ms480_val,
	RVQoEReportingPeriodicity_ms640_val,
	RVQoEReportingPeriodicity_ms1024_val
} SI_XNAP_DT_RVQoEReportingPeriodicity2;


// L:2588
typedef struct __si_xnap_dt_RVQoEReportingPeriodicity_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_RVQoEReportingPeriodicity_EnumProxy;


// RVQoEConfig
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RVQoEConfig
{
	SI_XNAP_DT_AvailableRVQoEMetrics * availableRANVisibleQoEMetrics;
	int isPresent_availableRANVisibleQoEMetrics;

	uint8_t selected_ereportingPeriodicity;
	int extSelected_ereportingPeriodicity;
	int isPresent_reportingPeriodicity;

} SI_XNAP_DT_RVQoEConfig;


// MN-to-SN-QMCCoordRequestList-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MN_to_SN_QMCCoordRequestList_Item
{
	SI_XNAP_DT_QOEReference * qOEReference;

	unsigned long long int qOEMeasConfigAppLayerID;
	int isPresent_qOEMeasConfigAppLayerID;

	SI_XNAP_DT_MeasCollectionEntityIPAddress * measCollectionEntityIPAddress;
	int isPresent_measCollectionEntityIPAddress;

	uint8_t selected_eqoEReportingPathRequest;
	int extSelected_eqoEReportingPathRequest;
	int isPresent_qoEReportingPathRequest;

	uint8_t selected_erVQoEReportingPathRequest;
	int extSelected_erVQoEReportingPathRequest;
	int isPresent_rVQoEReportingPathRequest;

	uint8_t selected_efurtherRVQoEInterestInquiry;
	int extSelected_efurtherRVQoEInterestInquiry;
	int isPresent_furtherRVQoEInterestInquiry;

	uint8_t selected_efurtherRVQoEReportingPathInquiry;
	int extSelected_efurtherRVQoEReportingPathInquiry;
	int isPresent_furtherRVQoEReportingPathInquiry;

	SI_XNAP_DT_RVQoEConfig * currentRVQoEConfig;
	int isPresent_currentRVQoEConfig;

	SI_XNAP_DT_AvailableRVQoEMetrics * availableRVQoEMetrics;
	int isPresent_availableRVQoEMetrics;

	uint8_t selected_econfigReleaseIndication;
	int extSelected_econfigReleaseIndication;
	int isPresent_configReleaseIndication;

} SI_XNAP_DT_MN_to_SN_QMCCoordRequestList_Item;


// SNtoMNQMCCoordRequestListItem_qoEReportingPathRequest
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SNtoMNQMCCoordRequestListItem_qoEReportingPathRequest
{
	__si_xnap__SNtoMNQMCCoordRequestListItem_qoEReportingPathRequest_srb4_val,
	__si_xnap__SNtoMNQMCCoordRequestListItem_qoEReportingPathRequest_srb5_val
} SI_XNAP_DT_SNtoMNQMCCoordRequestListItem_qoEReportingPathRequest;


// L:2561
typedef enum __si_xnap_dt_SNtoMNQMCCoordRequestListItem_qoEReportingPathRequest2
{
	SNtoMNQMCCoordRequestListItem_qoEReportingPathRequest_srb4_val,
	SNtoMNQMCCoordRequestListItem_qoEReportingPathRequest_srb5_val
} SI_XNAP_DT_SNtoMNQMCCoordRequestListItem_qoEReportingPathRequest2;


// L:2588
typedef struct __si_xnap_dt_SNtoMNQMCCoordRequestListItem_qoEReportingPathRequest_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SNtoMNQMCCoordRequestListItem_qoEReportingPathRequest_EnumProxy;


// SNtoMNQMCCoordRequestListItem_rVQoEReportingPathRequest
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SNtoMNQMCCoordRequestListItem_rVQoEReportingPathRequest
{
	__si_xnap__SNtoMNQMCCoordRequestListItem_rVQoEReportingPathRequest_srb4_val,
	__si_xnap__SNtoMNQMCCoordRequestListItem_rVQoEReportingPathRequest_srb5_val
} SI_XNAP_DT_SNtoMNQMCCoordRequestListItem_rVQoEReportingPathRequest;


// L:2561
typedef enum __si_xnap_dt_SNtoMNQMCCoordRequestListItem_rVQoEReportingPathRequest2
{
	SNtoMNQMCCoordRequestListItem_rVQoEReportingPathRequest_srb4_val,
	SNtoMNQMCCoordRequestListItem_rVQoEReportingPathRequest_srb5_val
} SI_XNAP_DT_SNtoMNQMCCoordRequestListItem_rVQoEReportingPathRequest2;


// L:2588
typedef struct __si_xnap_dt_SNtoMNQMCCoordRequestListItem_rVQoEReportingPathRequest_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SNtoMNQMCCoordRequestListItem_rVQoEReportingPathRequest_EnumProxy;


// SNtoMNQMCCoordRequestListItem_furtherRVQoEInterestInquiry
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SNtoMNQMCCoordRequestListItem_furtherRVQoEInterestInquiry
{
	__si_xnap__SNtoMNQMCCoordRequestListItem_furtherRVQoEInterestInquiry_true_val
} SI_XNAP_DT_SNtoMNQMCCoordRequestListItem_furtherRVQoEInterestInquiry;


// L:2561
typedef enum __si_xnap_dt_SNtoMNQMCCoordRequestListItem_furtherRVQoEInterestInquiry2
{
	SNtoMNQMCCoordRequestListItem_furtherRVQoEInterestInquiry_true_val
} SI_XNAP_DT_SNtoMNQMCCoordRequestListItem_furtherRVQoEInterestInquiry2;


// L:2588
typedef struct __si_xnap_dt_SNtoMNQMCCoordRequestListItem_furtherRVQoEInterestInquiry_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SNtoMNQMCCoordRequestListItem_furtherRVQoEInterestInquiry_EnumProxy;


// SNtoMNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SNtoMNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry
{
	__si_xnap__SNtoMNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry_true_val
} SI_XNAP_DT_SNtoMNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry;


// L:2561
typedef enum __si_xnap_dt_SNtoMNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry2
{
	SNtoMNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry_true_val
} SI_XNAP_DT_SNtoMNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry2;


// L:2588
typedef struct __si_xnap_dt_SNtoMNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SNtoMNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry_EnumProxy;


// SNtoMNQMCCoordRequestListItem_configReleaseIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SNtoMNQMCCoordRequestListItem_configReleaseIndication
{
	__si_xnap__SNtoMNQMCCoordRequestListItem_configReleaseIndication_rvqoe_val,
	__si_xnap__SNtoMNQMCCoordRequestListItem_configReleaseIndication_qoe_and_rvqoe_val
} SI_XNAP_DT_SNtoMNQMCCoordRequestListItem_configReleaseIndication;


// L:2561
typedef enum __si_xnap_dt_SNtoMNQMCCoordRequestListItem_configReleaseIndication2
{
	SNtoMNQMCCoordRequestListItem_configReleaseIndication_rvqoe_val,
	SNtoMNQMCCoordRequestListItem_configReleaseIndication_qoe_and_rvqoe_val
} SI_XNAP_DT_SNtoMNQMCCoordRequestListItem_configReleaseIndication2;


// L:2588
typedef struct __si_xnap_dt_SNtoMNQMCCoordRequestListItem_configReleaseIndication_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SNtoMNQMCCoordRequestListItem_configReleaseIndication_EnumProxy;


// SN-to-MN-QMCCoordRequestList-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SN_to_MN_QMCCoordRequestList_Item
{
	SI_XNAP_DT_QOEReference * qOEReference;

	SI_XNAP_DT_MeasCollectionEntityIPAddress * measCollectionEntityIPAddress;
	int isPresent_measCollectionEntityIPAddress;

	uint8_t selected_eqoEReportingPathRequest;
	int extSelected_eqoEReportingPathRequest;
	int isPresent_qoEReportingPathRequest;

	uint8_t selected_erVQoEReportingPathRequest;
	int extSelected_erVQoEReportingPathRequest;
	int isPresent_rVQoEReportingPathRequest;

	uint8_t selected_efurtherRVQoEInterestInquiry;
	int extSelected_efurtherRVQoEInterestInquiry;
	int isPresent_furtherRVQoEInterestInquiry;

	uint8_t selected_efurtherRVQoEReportingPathInquiry;
	int extSelected_efurtherRVQoEReportingPathInquiry;
	int isPresent_furtherRVQoEReportingPathInquiry;

	SI_XNAP_DT_RVQoEConfig * currentRVQoEConfig;
	int isPresent_currentRVQoEConfig;

	SI_XNAP_DT_AvailableRVQoEMetrics * availableRVQoEMetrics;
	int isPresent_availableRVQoEMetrics;

	uint8_t selected_econfigReleaseIndication;
	int extSelected_econfigReleaseIndication;
	int isPresent_configReleaseIndication;

} SI_XNAP_DT_SN_to_MN_QMCCoordRequestList_Item;


// MN-to-SN-QMCCoordResponseList
//SEQUENCE OF MN-to-SN-QMCCoordResponseList-Item, MIN=1, MAX=maxnoofUEAppLayerMeas  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_MN_to_SN_QMCCoordResponseList
{
	SI_LinkedList * MN_to_SN_QMCCoordResponseList_Item;
} SI_XNAP_DT_MN_to_SN_QMCCoordResponseList;


// SN-to-MN-QMCCoordResponseList
//SEQUENCE OF SN-to-MN-QMCCoordResponseList-Item, MIN=1, MAX=maxnoofUEAppLayerMeas  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SN_to_MN_QMCCoordResponseList
{
	SI_LinkedList * SN_to_MN_QMCCoordResponseList_Item;
} SI_XNAP_DT_SN_to_MN_QMCCoordResponseList;


// QMCCoordinationResponse
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QMCCoordinationResponse
{
	SI_XNAP_DT_MN_to_SN_QMCCoordResponseList * mN_to_SN_QMCCoordResponseList;
	int isPresent_mN_to_SN_QMCCoordResponseList;

	SI_XNAP_DT_SN_to_MN_QMCCoordResponseList * sN_to_MN_QMCCoordResponseList;
	int isPresent_sN_to_MN_QMCCoordResponseList;

} SI_XNAP_DT_QMCCoordinationResponse;


// MNtoSNQMCCoordResponseListItem_qoEConfigSendingPath
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MNtoSNQMCCoordResponseListItem_qoEConfigSendingPath
{
	__si_xnap__MNtoSNQMCCoordResponseListItem_qoEConfigSendingPath_mn_val,
	__si_xnap__MNtoSNQMCCoordResponseListItem_qoEConfigSendingPath_sn_val
} SI_XNAP_DT_MNtoSNQMCCoordResponseListItem_qoEConfigSendingPath;


// L:2561
typedef enum __si_xnap_dt_MNtoSNQMCCoordResponseListItem_qoEConfigSendingPath2
{
	MNtoSNQMCCoordResponseListItem_qoEConfigSendingPath_mn_val,
	MNtoSNQMCCoordResponseListItem_qoEConfigSendingPath_sn_val
} SI_XNAP_DT_MNtoSNQMCCoordResponseListItem_qoEConfigSendingPath2;


// L:2588
typedef struct __si_xnap_dt_MNtoSNQMCCoordResponseListItem_qoEConfigSendingPath_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MNtoSNQMCCoordResponseListItem_qoEConfigSendingPath_EnumProxy;


// MNtoSNQMCCoordResponseListItem_qoEReportingPathResponse
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MNtoSNQMCCoordResponseListItem_qoEReportingPathResponse
{
	__si_xnap__MNtoSNQMCCoordResponseListItem_qoEReportingPathResponse_accepted_val,
	__si_xnap__MNtoSNQMCCoordResponseListItem_qoEReportingPathResponse_rejected_val
} SI_XNAP_DT_MNtoSNQMCCoordResponseListItem_qoEReportingPathResponse;


// L:2561
typedef enum __si_xnap_dt_MNtoSNQMCCoordResponseListItem_qoEReportingPathResponse2
{
	MNtoSNQMCCoordResponseListItem_qoEReportingPathResponse_accepted_val,
	MNtoSNQMCCoordResponseListItem_qoEReportingPathResponse_rejected_val
} SI_XNAP_DT_MNtoSNQMCCoordResponseListItem_qoEReportingPathResponse2;


// L:2588
typedef struct __si_xnap_dt_MNtoSNQMCCoordResponseListItem_qoEReportingPathResponse_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MNtoSNQMCCoordResponseListItem_qoEReportingPathResponse_EnumProxy;


// MNtoSNQMCCoordResponseListItem_rVQoEReportingPathResponse
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MNtoSNQMCCoordResponseListItem_rVQoEReportingPathResponse
{
	__si_xnap__MNtoSNQMCCoordResponseListItem_rVQoEReportingPathResponse_accepted_val,
	__si_xnap__MNtoSNQMCCoordResponseListItem_rVQoEReportingPathResponse_rejected_val
} SI_XNAP_DT_MNtoSNQMCCoordResponseListItem_rVQoEReportingPathResponse;


// L:2561
typedef enum __si_xnap_dt_MNtoSNQMCCoordResponseListItem_rVQoEReportingPathResponse2
{
	MNtoSNQMCCoordResponseListItem_rVQoEReportingPathResponse_accepted_val,
	MNtoSNQMCCoordResponseListItem_rVQoEReportingPathResponse_rejected_val
} SI_XNAP_DT_MNtoSNQMCCoordResponseListItem_rVQoEReportingPathResponse2;


// L:2588
typedef struct __si_xnap_dt_MNtoSNQMCCoordResponseListItem_rVQoEReportingPathResponse_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MNtoSNQMCCoordResponseListItem_rVQoEReportingPathResponse_EnumProxy;


// MNtoSNQMCCoordResponseListItem_furtherRVQoEInterestResponse
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MNtoSNQMCCoordResponseListItem_furtherRVQoEInterestResponse
{
	__si_xnap__MNtoSNQMCCoordResponseListItem_furtherRVQoEInterestResponse_interested_val,
	__si_xnap__MNtoSNQMCCoordResponseListItem_furtherRVQoEInterestResponse_not_interested_val
} SI_XNAP_DT_MNtoSNQMCCoordResponseListItem_furtherRVQoEInterestResponse;


// L:2561
typedef enum __si_xnap_dt_MNtoSNQMCCoordResponseListItem_furtherRVQoEInterestResponse2
{
	MNtoSNQMCCoordResponseListItem_furtherRVQoEInterestResponse_interested_val,
	MNtoSNQMCCoordResponseListItem_furtherRVQoEInterestResponse_not_interested_val
} SI_XNAP_DT_MNtoSNQMCCoordResponseListItem_furtherRVQoEInterestResponse2;


// L:2588
typedef struct __si_xnap_dt_MNtoSNQMCCoordResponseListItem_furtherRVQoEInterestResponse_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MNtoSNQMCCoordResponseListItem_furtherRVQoEInterestResponse_EnumProxy;


// MNtoSNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_MNtoSNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse
{
	__si_xnap__MNtoSNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse_srb4_val,
	__si_xnap__MNtoSNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse_srb5_val
} SI_XNAP_DT_MNtoSNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse;


// L:2561
typedef enum __si_xnap_dt_MNtoSNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse2
{
	MNtoSNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse_srb4_val,
	MNtoSNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse_srb5_val
} SI_XNAP_DT_MNtoSNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse2;


// L:2588
typedef struct __si_xnap_dt_MNtoSNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_MNtoSNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse_EnumProxy;


// MN-to-SN-QMCCoordResponseList-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_MN_to_SN_QMCCoordResponseList_Item
{
	SI_XNAP_DT_QOEReference * qOEReference;

	unsigned long long int qOEMeasConfigAppLayerID;
	int isPresent_qOEMeasConfigAppLayerID;

	uint8_t selected_eqoEConfigSendingPath;
	int extSelected_eqoEConfigSendingPath;
	int isPresent_qoEConfigSendingPath;

	uint8_t selected_eqoEReportingPathResponse;
	int extSelected_eqoEReportingPathResponse;
	int isPresent_qoEReportingPathResponse;

	uint8_t selected_erVQoEReportingPathResponse;
	int extSelected_erVQoEReportingPathResponse;
	int isPresent_rVQoEReportingPathResponse;

	uint8_t selected_efurtherRVQoEInterestResponse;
	int extSelected_efurtherRVQoEInterestResponse;
	int isPresent_furtherRVQoEInterestResponse;

	uint8_t selected_efurtherRVQoEReportingPathResponse;
	int extSelected_efurtherRVQoEReportingPathResponse;
	int isPresent_furtherRVQoEReportingPathResponse;

	SI_XNAP_DT_RVQoEConfig * preferredRVQoEConfig;
	int isPresent_preferredRVQoEConfig;

} SI_XNAP_DT_MN_to_SN_QMCCoordResponseList_Item;


// SNtoMNQMCCoordResponseListItem_qoEReportingPathResponse
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SNtoMNQMCCoordResponseListItem_qoEReportingPathResponse
{
	__si_xnap__SNtoMNQMCCoordResponseListItem_qoEReportingPathResponse_accepted_val,
	__si_xnap__SNtoMNQMCCoordResponseListItem_qoEReportingPathResponse_rejected_val
} SI_XNAP_DT_SNtoMNQMCCoordResponseListItem_qoEReportingPathResponse;


// L:2561
typedef enum __si_xnap_dt_SNtoMNQMCCoordResponseListItem_qoEReportingPathResponse2
{
	SNtoMNQMCCoordResponseListItem_qoEReportingPathResponse_accepted_val,
	SNtoMNQMCCoordResponseListItem_qoEReportingPathResponse_rejected_val
} SI_XNAP_DT_SNtoMNQMCCoordResponseListItem_qoEReportingPathResponse2;


// L:2588
typedef struct __si_xnap_dt_SNtoMNQMCCoordResponseListItem_qoEReportingPathResponse_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SNtoMNQMCCoordResponseListItem_qoEReportingPathResponse_EnumProxy;


// SNtoMNQMCCoordResponseListItem_rVQoEReportingPathResponse
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SNtoMNQMCCoordResponseListItem_rVQoEReportingPathResponse
{
	__si_xnap__SNtoMNQMCCoordResponseListItem_rVQoEReportingPathResponse_accepted_val,
	__si_xnap__SNtoMNQMCCoordResponseListItem_rVQoEReportingPathResponse_rejected_val
} SI_XNAP_DT_SNtoMNQMCCoordResponseListItem_rVQoEReportingPathResponse;


// L:2561
typedef enum __si_xnap_dt_SNtoMNQMCCoordResponseListItem_rVQoEReportingPathResponse2
{
	SNtoMNQMCCoordResponseListItem_rVQoEReportingPathResponse_accepted_val,
	SNtoMNQMCCoordResponseListItem_rVQoEReportingPathResponse_rejected_val
} SI_XNAP_DT_SNtoMNQMCCoordResponseListItem_rVQoEReportingPathResponse2;


// L:2588
typedef struct __si_xnap_dt_SNtoMNQMCCoordResponseListItem_rVQoEReportingPathResponse_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SNtoMNQMCCoordResponseListItem_rVQoEReportingPathResponse_EnumProxy;


// SNtoMNQMCCoordResponseListItem_furtherRVQoEInterestResponse
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SNtoMNQMCCoordResponseListItem_furtherRVQoEInterestResponse
{
	__si_xnap__SNtoMNQMCCoordResponseListItem_furtherRVQoEInterestResponse_interested_val,
	__si_xnap__SNtoMNQMCCoordResponseListItem_furtherRVQoEInterestResponse_not_interested_val
} SI_XNAP_DT_SNtoMNQMCCoordResponseListItem_furtherRVQoEInterestResponse;


// L:2561
typedef enum __si_xnap_dt_SNtoMNQMCCoordResponseListItem_furtherRVQoEInterestResponse2
{
	SNtoMNQMCCoordResponseListItem_furtherRVQoEInterestResponse_interested_val,
	SNtoMNQMCCoordResponseListItem_furtherRVQoEInterestResponse_not_interested_val
} SI_XNAP_DT_SNtoMNQMCCoordResponseListItem_furtherRVQoEInterestResponse2;


// L:2588
typedef struct __si_xnap_dt_SNtoMNQMCCoordResponseListItem_furtherRVQoEInterestResponse_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SNtoMNQMCCoordResponseListItem_furtherRVQoEInterestResponse_EnumProxy;


// SNtoMNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SNtoMNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse
{
	__si_xnap__SNtoMNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse_srb4_val,
	__si_xnap__SNtoMNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse_srb5_val
} SI_XNAP_DT_SNtoMNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse;


// L:2561
typedef enum __si_xnap_dt_SNtoMNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse2
{
	SNtoMNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse_srb4_val,
	SNtoMNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse_srb5_val
} SI_XNAP_DT_SNtoMNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse2;


// L:2588
typedef struct __si_xnap_dt_SNtoMNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SNtoMNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse_EnumProxy;


// SN-to-MN-QMCCoordResponseList-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SN_to_MN_QMCCoordResponseList_Item
{
	SI_XNAP_DT_QOEReference * qOEReference;

	uint8_t selected_eqoEReportingPathResponse;
	int extSelected_eqoEReportingPathResponse;
	int isPresent_qoEReportingPathResponse;

	uint8_t selected_erVQoEReportingPathResponse;
	int extSelected_erVQoEReportingPathResponse;
	int isPresent_rVQoEReportingPathResponse;

	uint8_t selected_efurtherRVQoEInterestResponse;
	int extSelected_efurtherRVQoEInterestResponse;
	int isPresent_furtherRVQoEInterestResponse;

	uint8_t selected_efurtherRVQoEReportingPathResponse;
	int extSelected_efurtherRVQoEReportingPathResponse;
	int isPresent_furtherRVQoEReportingPathResponse;

	SI_XNAP_DT_RVQoEConfig * preferredRVQoEConfig;
	int isPresent_preferredRVQoEConfig;

} SI_XNAP_DT_SN_to_MN_QMCCoordResponseList_Item;


// QoERVQoEReportingPaths_qoEReportingPath
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_QoERVQoEReportingPaths_qoEReportingPath
{
	__si_xnap__QoERVQoEReportingPaths_qoEReportingPath_srb4_val,
	__si_xnap__QoERVQoEReportingPaths_qoEReportingPath_srb5_val
} SI_XNAP_DT_QoERVQoEReportingPaths_qoEReportingPath;


// L:2561
typedef enum __si_xnap_dt_QoERVQoEReportingPaths_qoEReportingPath2
{
	QoERVQoEReportingPaths_qoEReportingPath_srb4_val,
	QoERVQoEReportingPaths_qoEReportingPath_srb5_val
} SI_XNAP_DT_QoERVQoEReportingPaths_qoEReportingPath2;


// L:2588
typedef struct __si_xnap_dt_QoERVQoEReportingPaths_qoEReportingPath_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_QoERVQoEReportingPaths_qoEReportingPath_EnumProxy;


// QoERVQoEReportingPaths_rVQoEReportingPath
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_QoERVQoEReportingPaths_rVQoEReportingPath
{
	__si_xnap__QoERVQoEReportingPaths_rVQoEReportingPath_srb4_val,
	__si_xnap__QoERVQoEReportingPaths_rVQoEReportingPath_srb5_val
} SI_XNAP_DT_QoERVQoEReportingPaths_rVQoEReportingPath;


// L:2561
typedef enum __si_xnap_dt_QoERVQoEReportingPaths_rVQoEReportingPath2
{
	QoERVQoEReportingPaths_rVQoEReportingPath_srb4_val,
	QoERVQoEReportingPaths_rVQoEReportingPath_srb5_val
} SI_XNAP_DT_QoERVQoEReportingPaths_rVQoEReportingPath2;


// L:2588
typedef struct __si_xnap_dt_QoERVQoEReportingPaths_rVQoEReportingPath_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_QoERVQoEReportingPaths_rVQoEReportingPath_EnumProxy;


// QoERVQoEReportingPaths
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoERVQoEReportingPaths
{
	uint8_t selected_eqoEReportingPath;
	int extSelected_eqoEReportingPath;
	int isPresent_qoEReportingPath;

	uint8_t selected_erVQoEReportingPath;
	int extSelected_erVQoEReportingPath;
	int isPresent_rVQoEReportingPath;

} SI_XNAP_DT_QoERVQoEReportingPaths;


// QoSFlowNotificationControlIndicationInfo
//SEQUENCE OF QoSFlowNotify-Item, MIN=1, MAX=maxnoofQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_QoSFlowNotificationControlIndicationInfo
{
	SI_LinkedList * QoSFlowNotify_Item;
} SI_XNAP_DT_QoSFlowNotificationControlIndicationInfo;


// QoSFlowNotifyItem_notificationInformation
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_QoSFlowNotifyItem_notificationInformation
{
	__si_xnap__QoSFlowNotifyItem_notificationInformation_fulfilled_val,
	__si_xnap__QoSFlowNotifyItem_notificationInformation_not_fulfilled_val
} SI_XNAP_DT_QoSFlowNotifyItem_notificationInformation;


// L:2561
typedef enum __si_xnap_dt_QoSFlowNotifyItem_notificationInformation2
{
	QoSFlowNotifyItem_notificationInformation_fulfilled_val,
	QoSFlowNotifyItem_notificationInformation_not_fulfilled_val
} SI_XNAP_DT_QoSFlowNotifyItem_notificationInformation2;


// L:2588
typedef struct __si_xnap_dt_QoSFlowNotifyItem_notificationInformation_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_QoSFlowNotifyItem_notificationInformation_EnumProxy;


// QoSFlowNotify-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoSFlowNotify_Item
{
	unsigned long long int qosFlowIdentifier;

	uint8_t selected_enotificationInformation;
	int extSelected_enotificationInformation;

} SI_XNAP_DT_QoSFlowNotify_Item;


// QoSFlow-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoSFlow_Item
{
	unsigned long long int qfi;

	uint8_t selected_eqosFlowMappingIndication;
	int extSelected_eqosFlowMappingIndication;
	int isPresent_qosFlowMappingIndication;

} SI_XNAP_DT_QoSFlow_Item;


// QoSFlowwithCause-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoSFlowwithCause_Item
{
	unsigned long long int qfi;

	SI_XNAP_DT_Cause * cause;
	int isPresent_cause;

} SI_XNAP_DT_QoSFlowwithCause_Item;


// QoSMappingInformation_dscp
// BITSTRING,BIT STRING(SIZE(6))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_QoSMappingInformation_dscp
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_QoSMappingInformation_dscp;

// QoSMappingInformation_flow-label
// BITSTRING,BIT STRING(SIZE(20))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_QoSMappingInformation_flow_label
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_QoSMappingInformation_flow_label;

// QoS-Mapping-Information
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoS_Mapping_Information
{
	SI_XNAP_DT_QoSMappingInformation_dscp * dscp;
	int isPresent_dscp;

	SI_XNAP_DT_QoSMappingInformation_flow_label * flow_label;
	int isPresent_flow_label;

} SI_XNAP_DT_QoS_Mapping_Information;


// QoSParaSetNotifyIndex
// INTEGER,INTEGER(0..8,...),MIN=0,MAX=8  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_QoSParaSetNotifyIndex
{
	unsigned long long int data;
} SI_XNAP_DT_QoSParaSetNotifyIndex;

// QoSFlowsAdmitted-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoSFlowsAdmitted_Item
{
	unsigned long long int qfi;

} SI_XNAP_DT_QoSFlowsAdmitted_Item;


// QoSFlowsToBeSetup-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoSFlowsToBeSetup_Item
{
	unsigned long long int qfi;

	SI_XNAP_DT_QoSFlowLevelQoSParameters * qosFlowLevelQoSParameters;

	unsigned long long int e_RAB_ID;
	int isPresent_e_RAB_ID;

} SI_XNAP_DT_QoSFlowsToBeSetup_Item;


// QoSFlowsUsageReportItem_rATType
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_QoSFlowsUsageReportItem_rATType
{
	__si_xnap__QoSFlowsUsageReportItem_rATType_nr_val,
	__si_xnap__QoSFlowsUsageReportItem_rATType_eutra_val,
	__si_xnap__QoSFlowsUsageReportItem_rATType_nr_unlicensed_val_ext,
	__si_xnap__QoSFlowsUsageReportItem_rATType_e_utra_unlicensed_val_ext
} SI_XNAP_DT_QoSFlowsUsageReportItem_rATType;


// L:2561
typedef enum __si_xnap_dt_QoSFlowsUsageReportItem_rATType2
{
	QoSFlowsUsageReportItem_rATType_nr_val,
	QoSFlowsUsageReportItem_rATType_eutra_val,
	QoSFlowsUsageReportItem_rATType_nr_unlicensed_val_ext,
	QoSFlowsUsageReportItem_rATType_e_utra_unlicensed_val_ext
} SI_XNAP_DT_QoSFlowsUsageReportItem_rATType2;


// L:2588
typedef struct __si_xnap_dt_QoSFlowsUsageReportItem_rATType_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_QoSFlowsUsageReportItem_rATType_EnumProxy;


// QoSFlowsUsageReport-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoSFlowsUsageReport_Item
{
	unsigned long long int qosFlowIdentifier;

	uint8_t selected_erATType;
	int extSelected_erATType;

	SI_XNAP_DT_VolumeTimedReportList * qoSFlowsTimedReportList;

} SI_XNAP_DT_QoSFlowsUsageReport_Item;


// QosMonitoringRequest
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_QosMonitoringRequest
{
	__si_xnap__QosMonitoringRequest_ul_val,
	__si_xnap__QosMonitoringRequest_dl_val,
	__si_xnap__QosMonitoringRequest_both_val
} SI_XNAP_DT_QosMonitoringRequest;


// L:2561
typedef enum __si_xnap_dt_QosMonitoringRequest2
{
	QosMonitoringRequest_ul_val,
	QosMonitoringRequest_dl_val,
	QosMonitoringRequest_both_val
} SI_XNAP_DT_QosMonitoringRequest2;


// L:2588
typedef struct __si_xnap_dt_QosMonitoringRequest_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_QosMonitoringRequest_EnumProxy;


// QoSMonitoringDisabled
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_QoSMonitoringDisabled
{
	__si_xnap__QoSMonitoringDisabled_true_val
} SI_XNAP_DT_QoSMonitoringDisabled;


// L:2561
typedef enum __si_xnap_dt_QoSMonitoringDisabled2
{
	QoSMonitoringDisabled_true_val
} SI_XNAP_DT_QoSMonitoringDisabled2;


// L:2588
typedef struct __si_xnap_dt_QoSMonitoringDisabled_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_QoSMonitoringDisabled_EnumProxy;


// QosMonitoringReportingFrequency
// INTEGER,INTEGER(1..1800,...),MIN=1,MAX=1800  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_QosMonitoringReportingFrequency
{
	unsigned long long int data;
} SI_XNAP_DT_QosMonitoringReportingFrequency;

// RAReport
//SEQUENCE OF RAReportList-Item, MIN=1, MAX= maxnoofRAReports  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_RAReport
{
	SI_LinkedList * RAReportList_Item;
} SI_XNAP_DT_RAReport;


// RAReportContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_RAReportContainer
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_RAReportContainer;

// RAReportList-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RAReportList_Item
{
	SI_XNAP_DT_RAReportContainer * rAReport;

} SI_XNAP_DT_RAReportList_Item;


// RANAreaID
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RANAreaID
{
	SI_XNAP_DT_TAC * tAC;

	unsigned long long int rANAC;
	int isPresent_rANAC;

} SI_XNAP_DT_RANAreaID;


// RANAreaID-List
//SEQUENCE OF RANAreaID, MIN=1, MAX=maxnoofRANAreasinRNA  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_RANAreaID_List
{
	SI_LinkedList * RANAreaID;
} SI_XNAP_DT_RANAreaID_List;


// RANPagingAreaChoice
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_RANPagingAreaChoice
{
	union 
	{
		// ParserName = SEQUENCE_OF - NonEP false;
		SI_XNAP_DT_NG_RAN_Cell_Identity_ListinRANPagingArea * cell_List;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_XNAP_DT_RANAreaID_List * rANAreaID_List;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_RANPagingAreaChoice_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_RANPagingAreaChoice;


// RANPagingArea
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RANPagingArea
{
	SI_XNAP_DT_PLMN_Identity * pLMN_Identity;

	SI_XNAP_DT_RANPagingAreaChoice * rANPagingAreaChoice;

} SI_XNAP_DT_RANPagingArea;


// RANPagingFailure
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_RANPagingFailure
{
	__si_xnap__RANPagingFailure_true_val
} SI_XNAP_DT_RANPagingFailure;


// L:2561
typedef enum __si_xnap_dt_RANPagingFailure2
{
	RANPagingFailure_true_val
} SI_XNAP_DT_RANPagingFailure2;


// L:2588
typedef struct __si_xnap_dt_RANPagingFailure_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_RANPagingFailure_EnumProxy;


// Redcap-Bcast-Information
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_Redcap_Bcast_Information
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_Redcap_Bcast_Information;

// RedundantQoSFlowIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_RedundantQoSFlowIndicator
{
	__si_xnap__RedundantQoSFlowIndicator_true_val,
	__si_xnap__RedundantQoSFlowIndicator_false_val
} SI_XNAP_DT_RedundantQoSFlowIndicator;


// L:2561
typedef enum __si_xnap_dt_RedundantQoSFlowIndicator2
{
	RedundantQoSFlowIndicator_true_val,
	RedundantQoSFlowIndicator_false_val
} SI_XNAP_DT_RedundantQoSFlowIndicator2;


// L:2588
typedef struct __si_xnap_dt_RedundantQoSFlowIndicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_RedundantQoSFlowIndicator_EnumProxy;


// RSN
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_RSN
{
	__si_xnap__RSN_v1_val,
	__si_xnap__RSN_v2_val
} SI_XNAP_DT_RSN;


// L:2561
typedef enum __si_xnap_dt_RSN2
{
	RSN_v1_val,
	RSN_v2_val
} SI_XNAP_DT_RSN2;


// L:2588
typedef struct __si_xnap_dt_RSN_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_RSN_EnumProxy;


// RedundantPDUSessionInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RedundantPDUSessionInformation
{
	uint8_t selected_erSN;
	int extSelected_erSN;

} SI_XNAP_DT_RedundantPDUSessionInformation;


// ReplacingCells-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ReplacingCells_Item
{
	SI_XNAP_DT_GlobalCell_ID * globalNG_RANCell_ID;

} SI_XNAP_DT_ReplacingCells_Item;


// ExtendedReportIntervalMDT
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ExtendedReportIntervalMDT
{
	__si_xnap__ExtendedReportIntervalMDT_ms20480_val,
	__si_xnap__ExtendedReportIntervalMDT_ms40960_val
} SI_XNAP_DT_ExtendedReportIntervalMDT;


// L:2561
typedef enum __si_xnap_dt_ExtendedReportIntervalMDT2
{
	ExtendedReportIntervalMDT_ms20480_val,
	ExtendedReportIntervalMDT_ms40960_val
} SI_XNAP_DT_ExtendedReportIntervalMDT2;


// L:2588
typedef struct __si_xnap_dt_ExtendedReportIntervalMDT_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ExtendedReportIntervalMDT_EnumProxy;


// ReportCharacteristics
// BITSTRING,BIT STRING(SIZE(32))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_ReportCharacteristics
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_ReportCharacteristics;

// ReportCharacteristicsForDataCollection
// BITSTRING,BIT STRING(SIZE(32))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_ReportCharacteristicsForDataCollection
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_ReportCharacteristicsForDataCollection;

// ReportingPeriodicity
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ReportingPeriodicity
{
	__si_xnap__ReportingPeriodicity_half_thousand_ms_val,
	__si_xnap__ReportingPeriodicity_one_thousand_ms_val,
	__si_xnap__ReportingPeriodicity_two_thousand_ms_val,
	__si_xnap__ReportingPeriodicity_five_thousand_ms_val,
	__si_xnap__ReportingPeriodicity_ten_thousand_ms_val
} SI_XNAP_DT_ReportingPeriodicity;


// L:2561
typedef enum __si_xnap_dt_ReportingPeriodicity2
{
	ReportingPeriodicity_half_thousand_ms_val,
	ReportingPeriodicity_one_thousand_ms_val,
	ReportingPeriodicity_two_thousand_ms_val,
	ReportingPeriodicity_five_thousand_ms_val,
	ReportingPeriodicity_ten_thousand_ms_val
} SI_XNAP_DT_ReportingPeriodicity2;


// L:2588
typedef struct __si_xnap_dt_ReportingPeriodicity_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ReportingPeriodicity_EnumProxy;


// ReportingPeriodicityForDataCollection
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ReportingPeriodicityForDataCollection
{
	__si_xnap__ReportingPeriodicityForDataCollection_half_thousand_ms_val,
	__si_xnap__ReportingPeriodicityForDataCollection_one_thousand_ms_val,
	__si_xnap__ReportingPeriodicityForDataCollection_two_thousand_ms_val,
	__si_xnap__ReportingPeriodicityForDataCollection_five_thousand_ms_val,
	__si_xnap__ReportingPeriodicityForDataCollection_ten_thousand_ms_val
} SI_XNAP_DT_ReportingPeriodicityForDataCollection;


// L:2561
typedef enum __si_xnap_dt_ReportingPeriodicityForDataCollection2
{
	ReportingPeriodicityForDataCollection_half_thousand_ms_val,
	ReportingPeriodicityForDataCollection_one_thousand_ms_val,
	ReportingPeriodicityForDataCollection_two_thousand_ms_val,
	ReportingPeriodicityForDataCollection_five_thousand_ms_val,
	ReportingPeriodicityForDataCollection_ten_thousand_ms_val
} SI_XNAP_DT_ReportingPeriodicityForDataCollection2;


// L:2588
typedef struct __si_xnap_dt_ReportingPeriodicityForDataCollection_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ReportingPeriodicityForDataCollection_EnumProxy;


// RequestedPredictionTime
// INTEGER,INTEGER(1..60,...),MIN=1,MAX=60  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_RequestedPredictionTime
{
	unsigned long long int data;
} SI_XNAP_DT_RequestedPredictionTime;

// RegistrationRequest
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_RegistrationRequest
{
	__si_xnap__RegistrationRequest_start_val,
	__si_xnap__RegistrationRequest_stop_val,
	__si_xnap__RegistrationRequest_add_val
} SI_XNAP_DT_RegistrationRequest;


// L:2561
typedef enum __si_xnap_dt_RegistrationRequest2
{
	RegistrationRequest_start_val,
	RegistrationRequest_stop_val,
	RegistrationRequest_add_val
} SI_XNAP_DT_RegistrationRequest2;


// L:2588
typedef struct __si_xnap_dt_RegistrationRequest_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_RegistrationRequest_EnumProxy;


// RegistrationRequestForDataCollection
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_RegistrationRequestForDataCollection
{
	__si_xnap__RegistrationRequestForDataCollection_start_val,
	__si_xnap__RegistrationRequestForDataCollection_stop_val
} SI_XNAP_DT_RegistrationRequestForDataCollection;


// L:2561
typedef enum __si_xnap_dt_RegistrationRequestForDataCollection2
{
	RegistrationRequestForDataCollection_start_val,
	RegistrationRequestForDataCollection_stop_val
} SI_XNAP_DT_RegistrationRequestForDataCollection2;


// L:2588
typedef struct __si_xnap_dt_RegistrationRequestForDataCollection_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_RegistrationRequestForDataCollection_EnumProxy;


// ResetRequestTypeInfo-Full
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ResetRequestTypeInfo_Full
{
} SI_XNAP_DT_ResetRequestTypeInfo_Full;


// ResetRequestPartialReleaseList
//SEQUENCE OF ResetRequestPartialReleaseItem, MIN=1, MAX=maxnoofUEContexts  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ResetRequestPartialReleaseList
{
	SI_LinkedList * ResetRequestPartialReleaseItem;
} SI_XNAP_DT_ResetRequestPartialReleaseList;


// ResetRequestTypeInfo-Partial
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ResetRequestTypeInfo_Partial
{
	SI_XNAP_DT_ResetRequestPartialReleaseList * ue_contexts_ToBeReleasedList;

} SI_XNAP_DT_ResetRequestTypeInfo_Partial;


// ResetRequestTypeInfo
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_ResetRequestTypeInfo
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_ResetRequestTypeInfo_Full * fullReset;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_ResetRequestTypeInfo_Partial * partialReset;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_ResetRequestTypeInfo_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_ResetRequestTypeInfo;


// ResetRequestPartialReleaseItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ResetRequestPartialReleaseItem
{
	unsigned long long int ng_ran_node1UEXnAPID;
	int isPresent_ng_ran_node1UEXnAPID;

	unsigned long long int ng_ran_node2UEXnAPID;
	int isPresent_ng_ran_node2UEXnAPID;

} SI_XNAP_DT_ResetRequestPartialReleaseItem;


// ResetResponseTypeInfo-Full
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ResetResponseTypeInfo_Full
{
} SI_XNAP_DT_ResetResponseTypeInfo_Full;


// ResetResponsePartialReleaseList
//SEQUENCE OF ResetResponsePartialReleaseItem, MIN=1, MAX=maxnoofUEContexts  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ResetResponsePartialReleaseList
{
	SI_LinkedList * ResetResponsePartialReleaseItem;
} SI_XNAP_DT_ResetResponsePartialReleaseList;


// ResetResponseTypeInfo-Partial
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ResetResponseTypeInfo_Partial
{
	SI_XNAP_DT_ResetResponsePartialReleaseList * ue_contexts_AdmittedToBeReleasedList;

} SI_XNAP_DT_ResetResponseTypeInfo_Partial;


// ResetResponseTypeInfo
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_ResetResponseTypeInfo
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_ResetResponseTypeInfo_Full * fullReset;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_ResetResponseTypeInfo_Partial * partialReset;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_ResetResponseTypeInfo_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_ResetResponseTypeInfo;


// ResetResponsePartialReleaseItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ResetResponsePartialReleaseItem
{
	unsigned long long int ng_ran_node1UEXnAPID;
	int isPresent_ng_ran_node1UEXnAPID;

	unsigned long long int ng_ran_node2UEXnAPID;
	int isPresent_ng_ran_node2UEXnAPID;

} SI_XNAP_DT_ResetResponsePartialReleaseItem;


// RLCDuplicationInformation_rLC-PrimaryIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_RLCDuplicationInformation_rLC_PrimaryIndicator
{
	__si_xnap__RLCDuplicationInformation_rLC_PrimaryIndicator_true_val,
	__si_xnap__RLCDuplicationInformation_rLC_PrimaryIndicator_false_val
} SI_XNAP_DT_RLCDuplicationInformation_rLC_PrimaryIndicator;


// L:2561
typedef enum __si_xnap_dt_RLCDuplicationInformation_rLC_PrimaryIndicator2
{
	RLCDuplicationInformation_rLC_PrimaryIndicator_true_val,
	RLCDuplicationInformation_rLC_PrimaryIndicator_false_val
} SI_XNAP_DT_RLCDuplicationInformation_rLC_PrimaryIndicator2;


// L:2588
typedef struct __si_xnap_dt_RLCDuplicationInformation_rLC_PrimaryIndicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_RLCDuplicationInformation_rLC_PrimaryIndicator_EnumProxy;


// RLCDuplicationStateList
//SEQUENCE OF RLCDuplicationState-Item, MIN=1, MAX=maxnoofRLCDuplicationstate  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_RLCDuplicationStateList
{
	SI_LinkedList * RLCDuplicationState_Item;
} SI_XNAP_DT_RLCDuplicationStateList;


//TODO: DataType ->ProtocolExtensionContainer{{RLCDuplicationInformation-ItemExtIEs}}<- Got NULL  L:7884

// RLCDuplicationInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RLCDuplicationInformation
{
	SI_XNAP_DT_RLCDuplicationStateList * rLCDuplicationStateList;

	uint8_t selected_erLC_PrimaryIndicator;
	int extSelected_erLC_PrimaryIndicator;
	int isPresent_rLC_PrimaryIndicator;

} SI_XNAP_DT_RLCDuplicationInformation;


// RLCDuplicationStateItem_duplicationState
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_RLCDuplicationStateItem_duplicationState
{
	__si_xnap__RLCDuplicationStateItem_duplicationState_active_val,
	__si_xnap__RLCDuplicationStateItem_duplicationState_inactive_val
} SI_XNAP_DT_RLCDuplicationStateItem_duplicationState;


// L:2561
typedef enum __si_xnap_dt_RLCDuplicationStateItem_duplicationState2
{
	RLCDuplicationStateItem_duplicationState_active_val,
	RLCDuplicationStateItem_duplicationState_inactive_val
} SI_XNAP_DT_RLCDuplicationStateItem_duplicationState2;


// L:2588
typedef struct __si_xnap_dt_RLCDuplicationStateItem_duplicationState_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_RLCDuplicationStateItem_duplicationState_EnumProxy;


//TODO: DataType ->ProtocolExtensionContainer{{RLCDuplicationState-ItemExtIEs}}<- Got NULL  L:7884

// RLCDuplicationState-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RLCDuplicationState_Item
{
	uint8_t selected_eduplicationState;
	int extSelected_eduplicationState;

} SI_XNAP_DT_RLCDuplicationState_Item;


// RFSP-Index
// INTEGER,INTEGER(1..256),MIN=1,MAX=256  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_RFSP_Index
{
	unsigned long long int data;
} SI_XNAP_DT_RFSP_Index;

// RRCConfigIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_RRCConfigIndication
{
	__si_xnap__RRCConfigIndication_full_config_val,
	__si_xnap__RRCConfigIndication_delta_config_val
} SI_XNAP_DT_RRCConfigIndication;


// L:2561
typedef enum __si_xnap_dt_RRCConfigIndication2
{
	RRCConfigIndication_full_config_val,
	RRCConfigIndication_delta_config_val
} SI_XNAP_DT_RRCConfigIndication2;


// L:2588
typedef struct __si_xnap_dt_RRCConfigIndication_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_RRCConfigIndication_EnumProxy;


// RRCConnReestab-Indicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_RRCConnReestab_Indicator
{
	__si_xnap__RRCConnReestab_Indicator_reconfigurationFailure_val,
	__si_xnap__RRCConnReestab_Indicator_handoverFailure_val,
	__si_xnap__RRCConnReestab_Indicator_otherFailure_val
} SI_XNAP_DT_RRCConnReestab_Indicator;


// L:2561
typedef enum __si_xnap_dt_RRCConnReestab_Indicator2
{
	RRCConnReestab_Indicator_reconfigurationFailure_val,
	RRCConnReestab_Indicator_handoverFailure_val,
	RRCConnReestab_Indicator_otherFailure_val
} SI_XNAP_DT_RRCConnReestab_Indicator2;


// L:2588
typedef struct __si_xnap_dt_RRCConnReestab_Indicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_RRCConnReestab_Indicator_EnumProxy;


// RRCResumeCause
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_RRCResumeCause
{
	__si_xnap__RRCResumeCause_rna_Update_val
} SI_XNAP_DT_RRCResumeCause;


// L:2561
typedef enum __si_xnap_dt_RRCResumeCause2
{
	RRCResumeCause_rna_Update_val
} SI_XNAP_DT_RRCResumeCause2;


// L:2588
typedef struct __si_xnap_dt_RRCResumeCause_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_RRCResumeCause_EnumProxy;


// RaReportIndicationList
//SEQUENCE OF RaReportIndicationList-Item, MIN=1, MAX=maxnoofUEsforRAReportIndications  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_RaReportIndicationList
{
	SI_LinkedList * RaReportIndicationList_Item;
} SI_XNAP_DT_RaReportIndicationList;


// RaReportIndicationList-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RaReportIndicationList_Item
{
	unsigned long long int m_NG_RAN_node_UE_XnAP_ID;

} SI_XNAP_DT_RaReportIndicationList_Item;


// RadioResourceStatusNRU_dL-Total-PRB-usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_RadioResourceStatusNRU_dL_Total_PRB_usage
{
	unsigned long long int data;
} SI_XNAP_DT_RadioResourceStatusNRU_dL_Total_PRB_usage;

// RadioResourceStatusNRU_uL-Total-PRB-usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_RadioResourceStatusNRU_uL_Total_PRB_usage
{
	unsigned long long int data;
} SI_XNAP_DT_RadioResourceStatusNRU_uL_Total_PRB_usage;

// RadioResourceStatusNR-U
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RadioResourceStatusNR_U
{
	unsigned long long int dL_Total_PRB_usage;

	unsigned long long int uL_Total_PRB_usage;

} SI_XNAP_DT_RadioResourceStatusNR_U;


// SCGreconfigNotification
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SCGreconfigNotification
{
	__si_xnap__SCGreconfigNotification_executed_val,
	__si_xnap__SCGreconfigNotification_executed_deleted_val_ext,
	__si_xnap__SCGreconfigNotification_deleted_val_ext
} SI_XNAP_DT_SCGreconfigNotification;


// L:2561
typedef enum __si_xnap_dt_SCGreconfigNotification2
{
	SCGreconfigNotification_executed_val,
	SCGreconfigNotification_executed_deleted_val_ext,
	SCGreconfigNotification_deleted_val_ext
} SI_XNAP_DT_SCGreconfigNotification2;


// L:2588
typedef struct __si_xnap_dt_SCGreconfigNotification_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SCGreconfigNotification_EnumProxy;


// S-CPAC-Request
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_S_CPAC_Request
{
	__si_xnap__S_CPAC_Request_initiation_val
} SI_XNAP_DT_S_CPAC_Request;


// L:2561
typedef enum __si_xnap_dt_S_CPAC_Request2
{
	S_CPAC_Request_initiation_val
} SI_XNAP_DT_S_CPAC_Request2;


// L:2588
typedef struct __si_xnap_dt_S_CPAC_Request_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_S_CPAC_Request_EnumProxy;


// S-CPAC-SecurityConfig-List
//SEQUENCE OF S-CPAC-SecurityConfig-Item, MIN=1, MAX=maxnoofSecurityConfigurations  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_S_CPAC_SecurityConfig_List
{
	SI_LinkedList * S_CPAC_SecurityConfig_Item;
} SI_XNAP_DT_S_CPAC_SecurityConfig_List;


// S-CPAC-MultiTargetSN-List
//SEQUENCE OF S-CPAC-MultiTargetSN-Item, MIN=1, MAX=maxnoofTargetSNsMinusOne  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_S_CPAC_MultiTargetSN_List
{
	SI_LinkedList * S_CPAC_MultiTargetSN_Item;
} SI_XNAP_DT_S_CPAC_MultiTargetSN_List;


// S-CPAC-Request-Info
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_S_CPAC_Request_Info
{
	SI_XNAP_DT_S_CPAC_SecurityConfig_List * s_CPAC_Security_Config_List;

	SI_XNAP_DT_S_CPAC_MultiTargetSN_List * s_CPAC_MultiTargetSN_List;
	int isPresent_s_CPAC_MultiTargetSN_List;

} SI_XNAP_DT_S_CPAC_Request_Info;


// S-CPAC-ReferenceConfig-Request
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_S_CPAC_ReferenceConfig_Request
{
	__si_xnap__S_CPAC_ReferenceConfig_Request_request_val
} SI_XNAP_DT_S_CPAC_ReferenceConfig_Request;


// L:2561
typedef enum __si_xnap_dt_S_CPAC_ReferenceConfig_Request2
{
	S_CPAC_ReferenceConfig_Request_request_val
} SI_XNAP_DT_S_CPAC_ReferenceConfig_Request2;


// L:2588
typedef struct __si_xnap_dt_S_CPAC_ReferenceConfig_Request_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_S_CPAC_ReferenceConfig_Request_EnumProxy;


// S-NG-RANnode-SecurityKey
// BITSTRING,BIT STRING(SIZE(256))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_S_NG_RANnode_SecurityKey
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_S_NG_RANnode_SecurityKey;

// SK-COUNTER
// INTEGER,INTEGER(0..65535),MIN=0,MAX=65535  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SK_COUNTER
{
	unsigned long long int data;
} SI_XNAP_DT_SK_COUNTER;

// S-CPAC-SecurityConfig-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_S_CPAC_SecurityConfig_Item
{
	SI_XNAP_DT_S_NG_RANnode_SecurityKey * s_ng_RANnode_SecurityKey;

	unsigned long long int sk_counter;

} SI_XNAP_DT_S_CPAC_SecurityConfig_Item;


// SCPACMultiTargetSNItem_recommendedCandidatePSCells
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_SCPACMultiTargetSNItem_recommendedCandidatePSCells
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_SCPACMultiTargetSNItem_recommendedCandidatePSCells;

// S-CPAC-MultiTargetSN-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_S_CPAC_MultiTargetSN_Item
{
	SI_XNAP_DT_GlobalNG_RANNode_ID * target_S_NG_RANnodeID;

	SI_XNAP_DT_SCPACMultiTargetSNItem_recommendedCandidatePSCells * recommendedCandidatePSCells;

} SI_XNAP_DT_S_CPAC_MultiTargetSN_Item;


// S-CPAC-InterSN-ExecutionNotify
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_S_CPAC_InterSN_ExecutionNotify
{
	__si_xnap__S_CPAC_InterSN_ExecutionNotify_executed_val
} SI_XNAP_DT_S_CPAC_InterSN_ExecutionNotify;


// L:2561
typedef enum __si_xnap_dt_S_CPAC_InterSN_ExecutionNotify2
{
	S_CPAC_InterSN_ExecutionNotify_executed_val
} SI_XNAP_DT_S_CPAC_InterSN_ExecutionNotify2;


// L:2588
typedef struct __si_xnap_dt_S_CPAC_InterSN_ExecutionNotify_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_S_CPAC_InterSN_ExecutionNotify_EnumProxy;


// SecondarydataForwardingInfoFromTarget-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SecondarydataForwardingInfoFromTarget_Item
{
	SI_XNAP_DT_DataForwardingInfoFromTargetNGRANnode * secondarydataForwardingInfoFromTarget;

} SI_XNAP_DT_SecondarydataForwardingInfoFromTarget_Item;


// SecondarydataForwardingInfoFromTarget-List
//SEQUENCE OF SecondarydataForwardingInfoFromTarget-Item, MIN=1, MAX=maxnoofMultiConnectivityMinusOne  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SecondarydataForwardingInfoFromTarget_List
{
	SI_LinkedList * SecondarydataForwardingInfoFromTarget_Item;
} SI_XNAP_DT_SecondarydataForwardingInfoFromTarget_List;


// SCGActivationRequest
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SCGActivationRequest
{
	__si_xnap__SCGActivationRequest_activate_scg_val,
	__si_xnap__SCGActivationRequest_deactivate_scg_val
} SI_XNAP_DT_SCGActivationRequest;


// L:2561
typedef enum __si_xnap_dt_SCGActivationRequest2
{
	SCGActivationRequest_activate_scg_val,
	SCGActivationRequest_deactivate_scg_val
} SI_XNAP_DT_SCGActivationRequest2;


// L:2588
typedef struct __si_xnap_dt_SCGActivationRequest_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SCGActivationRequest_EnumProxy;


// SCGActivationStatus
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SCGActivationStatus
{
	__si_xnap__SCGActivationStatus_scg_activated_val,
	__si_xnap__SCGActivationStatus_scg_deactivated_val
} SI_XNAP_DT_SCGActivationStatus;


// L:2561
typedef enum __si_xnap_dt_SCGActivationStatus2
{
	SCGActivationStatus_scg_activated_val,
	SCGActivationStatus_scg_deactivated_val
} SI_XNAP_DT_SCGActivationStatus2;


// L:2588
typedef struct __si_xnap_dt_SCGActivationStatus_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SCGActivationStatus_EnumProxy;


// SCGConfigurationQuery
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SCGConfigurationQuery
{
	__si_xnap__SCGConfigurationQuery_true_val
} SI_XNAP_DT_SCGConfigurationQuery;


// L:2561
typedef enum __si_xnap_dt_SCGConfigurationQuery2
{
	SCGConfigurationQuery_true_val
} SI_XNAP_DT_SCGConfigurationQuery2;


// L:2588
typedef struct __si_xnap_dt_SCGConfigurationQuery_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SCGConfigurationQuery_EnumProxy;


// SCGIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SCGIndicator
{
	__si_xnap__SCGIndicator_released_val
} SI_XNAP_DT_SCGIndicator;


// L:2561
typedef enum __si_xnap_dt_SCGIndicator2
{
	SCGIndicator_released_val
} SI_XNAP_DT_SCGIndicator2;


// L:2588
typedef struct __si_xnap_dt_SCGIndicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SCGIndicator_EnumProxy;


// SCGFailureReportContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_SCGFailureReportContainer
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_SCGFailureReportContainer;

// SDTIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SDTIndicator
{
	__si_xnap__SDTIndicator_true_val
} SI_XNAP_DT_SDTIndicator;


// L:2561
typedef enum __si_xnap_dt_SDTIndicator2
{
	SDTIndicator_true_val
} SI_XNAP_DT_SDTIndicator2;


// L:2588
typedef struct __si_xnap_dt_SDTIndicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SDTIndicator_EnumProxy;


// SDTAssistantInfo
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SDTAssistantInfo
{
	__si_xnap__SDTAssistantInfo_single_packet_val,
	__si_xnap__SDTAssistantInfo_multiple_packets_val
} SI_XNAP_DT_SDTAssistantInfo;


// L:2561
typedef enum __si_xnap_dt_SDTAssistantInfo2
{
	SDTAssistantInfo_single_packet_val,
	SDTAssistantInfo_multiple_packets_val
} SI_XNAP_DT_SDTAssistantInfo2;


// L:2588
typedef struct __si_xnap_dt_SDTAssistantInfo_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SDTAssistantInfo_EnumProxy;


// SDTSupportRequest
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SDTSupportRequest
{
	uint8_t selected_esdtindicator;
	int extSelected_esdtindicator;

	uint8_t selected_esdtAssistantInfo;
	int extSelected_esdtAssistantInfo;
	int isPresent_sdtAssistantInfo;

} SI_XNAP_DT_SDTSupportRequest;


// SDT-Termination-Request
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SDT_Termination_Request
{
	__si_xnap__SDT_Termination_Request_radio_link_problem_val,
	__si_xnap__SDT_Termination_Request_normal_val,
	__si_xnap__SDT_Termination_Request_large_sdt_volume_from_BSR_val_ext
} SI_XNAP_DT_SDT_Termination_Request;


// L:2561
typedef enum __si_xnap_dt_SDT_Termination_Request2
{
	SDT_Termination_Request_radio_link_problem_val,
	SDT_Termination_Request_normal_val,
	SDT_Termination_Request_large_sdt_volume_from_BSR_val_ext
} SI_XNAP_DT_SDT_Termination_Request2;


// L:2588
typedef struct __si_xnap_dt_SDT_Termination_Request_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SDT_Termination_Request_EnumProxy;


// SDT-DRBsToBeSetupList
//SEQUENCE OF SDT-DRBsToBeSetupList-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SDT_DRBsToBeSetupList
{
	SI_LinkedList * SDT_DRBsToBeSetupList_Item;
} SI_XNAP_DT_SDT_DRBsToBeSetupList;


// SDT-SRBsToBeSetupList
//SEQUENCE OF SDT-SRBsToBeSetupList-Item, MIN=1, MAX=maxnoofSRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SDT_SRBsToBeSetupList
{
	SI_LinkedList * SDT_SRBsToBeSetupList_Item;
} SI_XNAP_DT_SDT_SRBsToBeSetupList;


// SDTPartialUEContextInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SDTPartialUEContextInfo
{
	SI_XNAP_DT_SDT_DRBsToBeSetupList * dRBsToBeSetup;
	int isPresent_dRBsToBeSetup;

	SI_XNAP_DT_SDT_SRBsToBeSetupList * sRBsToBeSetup;

} SI_XNAP_DT_SDTPartialUEContextInfo;


// SDTDRBsToBeSetupListItem_dRB-RLC-Bearer-Configuration
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_SDTDRBsToBeSetupListItem_dRB_RLC_Bearer_Configuration
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_SDTDRBsToBeSetupListItem_dRB_RLC_Bearer_Configuration;

// SDT-DRBsToBeSetupList-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SDT_DRBsToBeSetupList_Item
{
	unsigned long long int drb_ID;

	SI_XNAP_DT_UPTransportLayerInformation * uL_TNLInfo;

	SI_XNAP_DT_SDTDRBsToBeSetupListItem_dRB_RLC_Bearer_Configuration * dRB_RLC_Bearer_Configuration;

	SI_XNAP_DT_QoSFlowLevelQoSParameters * dRB_QoS;

	uint8_t selected_erLC_Mode;
	int extSelected_erLC_Mode;

	SI_XNAP_DT_S_NSSAI * s_nssai;

	SI_XNAP_DT_PDCPSNLength * pDCP_SNLength;

	SI_XNAP_DT_Flows_Mapped_To_DRB_List * flows_Mapped_To_DRB_List;

} SI_XNAP_DT_SDT_DRBsToBeSetupList_Item;


// SDTSRBsToBeSetupListItem_sRB-RLC-Bearer-Configuration
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_SDTSRBsToBeSetupListItem_sRB_RLC_Bearer_Configuration
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_SDTSRBsToBeSetupListItem_sRB_RLC_Bearer_Configuration;

// SRB-ID
// INTEGER,INTEGER(0..4,...),MIN=0,MAX=4  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SRB_ID
{
	unsigned long long int data;
} SI_XNAP_DT_SRB_ID;

// SDT-SRBsToBeSetupList-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SDT_SRBsToBeSetupList_Item
{
	unsigned long long int srb_ID;

	SI_XNAP_DT_SDTSRBsToBeSetupListItem_sRB_RLC_Bearer_Configuration * sRB_RLC_Bearer_Configuration;

} SI_XNAP_DT_SDT_SRBsToBeSetupList_Item;


// SDTDataForwardingDRBList
//SEQUENCE OF SDTDataForwardingDRBList-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SDTDataForwardingDRBList
{
	SI_LinkedList * SDTDataForwardingDRBList_Item;
} SI_XNAP_DT_SDTDataForwardingDRBList;


// SDTDataForwardingDRBList-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SDTDataForwardingDRBList_Item
{
	unsigned long long int drb_ID;

	SI_XNAP_DT_UPTransportLayerInformation * dL_TNLInfo;
	int isPresent_dL_TNLInfo;

} SI_XNAP_DT_SDTDataForwardingDRBList_Item;


// SensorName_uncompensatedBarometricConfig
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SensorName_uncompensatedBarometricConfig
{
	__si_xnap__SensorName_uncompensatedBarometricConfig_true_val
} SI_XNAP_DT_SensorName_uncompensatedBarometricConfig;


// L:2561
typedef enum __si_xnap_dt_SensorName_uncompensatedBarometricConfig2
{
	SensorName_uncompensatedBarometricConfig_true_val
} SI_XNAP_DT_SensorName_uncompensatedBarometricConfig2;


// L:2588
typedef struct __si_xnap_dt_SensorName_uncompensatedBarometricConfig_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SensorName_uncompensatedBarometricConfig_EnumProxy;


// SensorName_ueSpeedConfig
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SensorName_ueSpeedConfig
{
	__si_xnap__SensorName_ueSpeedConfig_true_val
} SI_XNAP_DT_SensorName_ueSpeedConfig;


// L:2561
typedef enum __si_xnap_dt_SensorName_ueSpeedConfig2
{
	SensorName_ueSpeedConfig_true_val
} SI_XNAP_DT_SensorName_ueSpeedConfig2;


// L:2588
typedef struct __si_xnap_dt_SensorName_ueSpeedConfig_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SensorName_ueSpeedConfig_EnumProxy;


// SensorName_ueOrientationConfig
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SensorName_ueOrientationConfig
{
	__si_xnap__SensorName_ueOrientationConfig_true_val
} SI_XNAP_DT_SensorName_ueOrientationConfig;


// L:2561
typedef enum __si_xnap_dt_SensorName_ueOrientationConfig2
{
	SensorName_ueOrientationConfig_true_val
} SI_XNAP_DT_SensorName_ueOrientationConfig2;


// L:2588
typedef struct __si_xnap_dt_SensorName_ueOrientationConfig_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SensorName_ueOrientationConfig_EnumProxy;


// SensorName
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SensorName
{
	uint8_t selected_euncompensatedBarometricConfig;
	int extSelected_euncompensatedBarometricConfig;
	int isPresent_uncompensatedBarometricConfig;

	uint8_t selected_eueSpeedConfig;
	int extSelected_eueSpeedConfig;
	int isPresent_ueSpeedConfig;

	uint8_t selected_eueOrientationConfig;
	int extSelected_eueOrientationConfig;
	int isPresent_ueOrientationConfig;

} SI_XNAP_DT_SensorName;


// ServedCellInformationEUTRA_broadcastPLMNs
//SEQUENCE OF ServedCellInformation-E-UTRA-perBPLMN, MIN=1, MAX=maxnoofBPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ServedCellInformationEUTRA_broadcastPLMNs
{
	SI_LinkedList * ServedCellInformation_E_UTRA_perBPLMN;
} SI_XNAP_DT_ServedCellInformationEUTRA_broadcastPLMNs;


// ServedCellInformationEUTRA_freqBandIndicatorPriority
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ServedCellInformationEUTRA_freqBandIndicatorPriority
{
	__si_xnap__ServedCellInformationEUTRA_freqBandIndicatorPriority_not_broadcast_val,
	__si_xnap__ServedCellInformationEUTRA_freqBandIndicatorPriority_broadcast_val
} SI_XNAP_DT_ServedCellInformationEUTRA_freqBandIndicatorPriority;


// L:2561
typedef enum __si_xnap_dt_ServedCellInformationEUTRA_freqBandIndicatorPriority2
{
	ServedCellInformationEUTRA_freqBandIndicatorPriority_not_broadcast_val,
	ServedCellInformationEUTRA_freqBandIndicatorPriority_broadcast_val
} SI_XNAP_DT_ServedCellInformationEUTRA_freqBandIndicatorPriority2;


// L:2588
typedef struct __si_xnap_dt_ServedCellInformationEUTRA_freqBandIndicatorPriority_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ServedCellInformationEUTRA_freqBandIndicatorPriority_EnumProxy;


// ServedCellInformationEUTRA_bandwidthReducedSI
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ServedCellInformationEUTRA_bandwidthReducedSI
{
	__si_xnap__ServedCellInformationEUTRA_bandwidthReducedSI_scheduled_val
} SI_XNAP_DT_ServedCellInformationEUTRA_bandwidthReducedSI;


// L:2561
typedef enum __si_xnap_dt_ServedCellInformationEUTRA_bandwidthReducedSI2
{
	ServedCellInformationEUTRA_bandwidthReducedSI_scheduled_val
} SI_XNAP_DT_ServedCellInformationEUTRA_bandwidthReducedSI2;


// L:2588
typedef struct __si_xnap_dt_ServedCellInformationEUTRA_bandwidthReducedSI_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ServedCellInformationEUTRA_bandwidthReducedSI_EnumProxy;


// ServedCellInformation-E-UTRA-FDDInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA_FDDInfo
{
	unsigned long long int ul_earfcn;

	unsigned long long int dl_earfcn;

	uint8_t selected_eul_e_utraTxBW;
	int extSelected_eul_e_utraTxBW;

	uint8_t selected_edl_e_utraTxBW;
	int extSelected_edl_e_utraTxBW;

} SI_XNAP_DT_ServedCellInformation_E_UTRA_FDDInfo;


// ServedCellInformationEUTRATDDInfo_subframeAssignmnet
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ServedCellInformationEUTRATDDInfo_subframeAssignmnet
{
	__si_xnap__ServedCellInformationEUTRATDDInfo_subframeAssignmnet_sa0_val,
	__si_xnap__ServedCellInformationEUTRATDDInfo_subframeAssignmnet_sa1_val,
	__si_xnap__ServedCellInformationEUTRATDDInfo_subframeAssignmnet_sa2_val,
	__si_xnap__ServedCellInformationEUTRATDDInfo_subframeAssignmnet_sa3_val,
	__si_xnap__ServedCellInformationEUTRATDDInfo_subframeAssignmnet_sa4_val,
	__si_xnap__ServedCellInformationEUTRATDDInfo_subframeAssignmnet_sa5_val,
	__si_xnap__ServedCellInformationEUTRATDDInfo_subframeAssignmnet_sa6_val
} SI_XNAP_DT_ServedCellInformationEUTRATDDInfo_subframeAssignmnet;


// L:2561
typedef enum __si_xnap_dt_ServedCellInformationEUTRATDDInfo_subframeAssignmnet2
{
	ServedCellInformationEUTRATDDInfo_subframeAssignmnet_sa0_val,
	ServedCellInformationEUTRATDDInfo_subframeAssignmnet_sa1_val,
	ServedCellInformationEUTRATDDInfo_subframeAssignmnet_sa2_val,
	ServedCellInformationEUTRATDDInfo_subframeAssignmnet_sa3_val,
	ServedCellInformationEUTRATDDInfo_subframeAssignmnet_sa4_val,
	ServedCellInformationEUTRATDDInfo_subframeAssignmnet_sa5_val,
	ServedCellInformationEUTRATDDInfo_subframeAssignmnet_sa6_val
} SI_XNAP_DT_ServedCellInformationEUTRATDDInfo_subframeAssignmnet2;


// L:2588
typedef struct __si_xnap_dt_ServedCellInformationEUTRATDDInfo_subframeAssignmnet_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ServedCellInformationEUTRATDDInfo_subframeAssignmnet_EnumProxy;


// SpecialSubframePatterns-E-UTRA
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SpecialSubframePatterns_E_UTRA
{
	__si_xnap__SpecialSubframePatterns_E_UTRA_ssp0_val,
	__si_xnap__SpecialSubframePatterns_E_UTRA_ssp1_val,
	__si_xnap__SpecialSubframePatterns_E_UTRA_ssp2_val,
	__si_xnap__SpecialSubframePatterns_E_UTRA_ssp3_val,
	__si_xnap__SpecialSubframePatterns_E_UTRA_ssp4_val,
	__si_xnap__SpecialSubframePatterns_E_UTRA_ssp5_val,
	__si_xnap__SpecialSubframePatterns_E_UTRA_ssp6_val,
	__si_xnap__SpecialSubframePatterns_E_UTRA_ssp7_val,
	__si_xnap__SpecialSubframePatterns_E_UTRA_ssp8_val,
	__si_xnap__SpecialSubframePatterns_E_UTRA_ssp9_val,
	__si_xnap__SpecialSubframePatterns_E_UTRA_ssp10_val
} SI_XNAP_DT_SpecialSubframePatterns_E_UTRA;


// L:2561
typedef enum __si_xnap_dt_SpecialSubframePatterns_E_UTRA2
{
	SpecialSubframePatterns_E_UTRA_ssp0_val,
	SpecialSubframePatterns_E_UTRA_ssp1_val,
	SpecialSubframePatterns_E_UTRA_ssp2_val,
	SpecialSubframePatterns_E_UTRA_ssp3_val,
	SpecialSubframePatterns_E_UTRA_ssp4_val,
	SpecialSubframePatterns_E_UTRA_ssp5_val,
	SpecialSubframePatterns_E_UTRA_ssp6_val,
	SpecialSubframePatterns_E_UTRA_ssp7_val,
	SpecialSubframePatterns_E_UTRA_ssp8_val,
	SpecialSubframePatterns_E_UTRA_ssp9_val,
	SpecialSubframePatterns_E_UTRA_ssp10_val
} SI_XNAP_DT_SpecialSubframePatterns_E_UTRA2;


// L:2588
typedef struct __si_xnap_dt_SpecialSubframePatterns_E_UTRA_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SpecialSubframePatterns_E_UTRA_EnumProxy;


// SpecialSubframeInfo-E-UTRA
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SpecialSubframeInfo_E_UTRA
{
	uint8_t selected_especialSubframePattern;
	int extSelected_especialSubframePattern;

	uint8_t selected_ecyclicPrefixDL;
	int extSelected_ecyclicPrefixDL;

	uint8_t selected_ecyclicPrefixUL;
	int extSelected_ecyclicPrefixUL;

} SI_XNAP_DT_SpecialSubframeInfo_E_UTRA;


// ServedCellInformation-E-UTRA-TDDInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA_TDDInfo
{
	unsigned long long int earfcn;

	uint8_t selected_ee_utraTxBW;
	int extSelected_ee_utraTxBW;

	uint8_t selected_esubframeAssignmnet;
	int extSelected_esubframeAssignmnet;

	SI_XNAP_DT_SpecialSubframeInfo_E_UTRA * specialSubframeInfo;

} SI_XNAP_DT_ServedCellInformation_E_UTRA_TDDInfo;


// ServedCellInformation-E-UTRA-ModeInfo
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA_ModeInfo
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_ServedCellInformation_E_UTRA_FDDInfo * fdd;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_ServedCellInformation_E_UTRA_TDDInfo * tdd;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_ModeInfo_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_ServedCellInformation_E_UTRA_ModeInfo;


// ServedCellInformation-E-UTRA
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA
{
	unsigned long long int e_utra_pci;

	SI_XNAP_DT_E_UTRA_CGI * e_utra_cgi;

	SI_XNAP_DT_TAC * tac;

	unsigned long long int ranac;
	int isPresent_ranac;

	SI_XNAP_DT_ServedCellInformationEUTRA_broadcastPLMNs * broadcastPLMNs;

	SI_XNAP_DT_ServedCellInformation_E_UTRA_ModeInfo * e_utra_mode_info;

	uint8_t selected_enumberofAntennaPorts;
	int extSelected_enumberofAntennaPorts;
	int isPresent_numberofAntennaPorts;

	SI_XNAP_DT_E_UTRAPRACHConfiguration * prach_configuration;
	int isPresent_prach_configuration;

	SI_XNAP_DT_MBSFNSubframeInfo_E_UTRA * mBSFNsubframeInfo;
	int isPresent_mBSFNsubframeInfo;

	SI_XNAP_DT_E_UTRAMultibandInfoList * multibandInfo;
	int isPresent_multibandInfo;

	uint8_t selected_efreqBandIndicatorPriority;
	int extSelected_efreqBandIndicatorPriority;
	int isPresent_freqBandIndicatorPriority;

	uint8_t selected_ebandwidthReducedSI;
	int extSelected_ebandwidthReducedSI;
	int isPresent_bandwidthReducedSI;

	SI_XNAP_DT_ProtectedE_UTRAResourceIndication * protectedE_UTRAResourceIndication;
	int isPresent_protectedE_UTRAResourceIndication;

} SI_XNAP_DT_ServedCellInformation_E_UTRA;


// ServedCellInformation-E-UTRA-perBPLMN
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA_perBPLMN
{
	SI_XNAP_DT_PLMN_Identity * plmn_id;

} SI_XNAP_DT_ServedCellInformation_E_UTRA_perBPLMN;


// ServedCells-E-UTRA
//SEQUENCE OF ServedCells-E-UTRA-Item, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ServedCells_E_UTRA
{
	SI_LinkedList * ServedCells_E_UTRA_Item;
} SI_XNAP_DT_ServedCells_E_UTRA;


// ServedCells-E-UTRA-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ServedCells_E_UTRA_Item
{
	SI_XNAP_DT_ServedCellInformation_E_UTRA * served_cell_info_E_UTRA;

	SI_XNAP_DT_NeighbourInformation_NR * neighbour_info_NR;
	int isPresent_neighbour_info_NR;

	SI_XNAP_DT_NeighbourInformation_E_UTRA * neighbour_info_E_UTRA;
	int isPresent_neighbour_info_E_UTRA;

} SI_XNAP_DT_ServedCells_E_UTRA_Item;


// ServedCellsToUpdateEUTRA_served_Cells_ToDelete_E_UTRA
//SEQUENCE OF E-UTRA-CGI, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ServedCellsToUpdateEUTRA_served_Cells_ToDelete_E_UTRA
{
	SI_LinkedList * E_UTRA_CGI;
} SI_XNAP_DT_ServedCellsToUpdateEUTRA_served_Cells_ToDelete_E_UTRA;


// ServedCells-ToModify-E-UTRA
//SEQUENCE OF ServedCells-ToModify-E-UTRA-Item, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ServedCells_ToModify_E_UTRA
{
	SI_LinkedList * ServedCells_ToModify_E_UTRA_Item;
} SI_XNAP_DT_ServedCells_ToModify_E_UTRA;


// ServedCellsToUpdate-E-UTRA
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ServedCellsToUpdate_E_UTRA
{
	SI_XNAP_DT_ServedCells_E_UTRA * served_Cells_ToAdd_E_UTRA;
	int isPresent_served_Cells_ToAdd_E_UTRA;

	SI_XNAP_DT_ServedCells_ToModify_E_UTRA * served_Cells_ToModify_E_UTRA;
	int isPresent_served_Cells_ToModify_E_UTRA;

	SI_XNAP_DT_ServedCellsToUpdateEUTRA_served_Cells_ToDelete_E_UTRA * served_Cells_ToDelete_E_UTRA;
	int isPresent_served_Cells_ToDelete_E_UTRA;

} SI_XNAP_DT_ServedCellsToUpdate_E_UTRA;


// ServedCellsToModifyEUTRAItem_deactivation-indication
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ServedCellsToModifyEUTRAItem_deactivation_indication
{
	__si_xnap__ServedCellsToModifyEUTRAItem_deactivation_indication_deactivated_val
} SI_XNAP_DT_ServedCellsToModifyEUTRAItem_deactivation_indication;


// L:2561
typedef enum __si_xnap_dt_ServedCellsToModifyEUTRAItem_deactivation_indication2
{
	ServedCellsToModifyEUTRAItem_deactivation_indication_deactivated_val
} SI_XNAP_DT_ServedCellsToModifyEUTRAItem_deactivation_indication2;


// L:2588
typedef struct __si_xnap_dt_ServedCellsToModifyEUTRAItem_deactivation_indication_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ServedCellsToModifyEUTRAItem_deactivation_indication_EnumProxy;


// ServedCells-ToModify-E-UTRA-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ServedCells_ToModify_E_UTRA_Item
{
	SI_XNAP_DT_E_UTRA_CGI * old_ECGI;

	SI_XNAP_DT_ServedCellInformation_E_UTRA * served_cell_info_E_UTRA;

	SI_XNAP_DT_NeighbourInformation_NR * neighbour_info_NR;
	int isPresent_neighbour_info_NR;

	SI_XNAP_DT_NeighbourInformation_E_UTRA * neighbour_info_E_UTRA;
	int isPresent_neighbour_info_E_UTRA;

	uint8_t selected_edeactivation_indication;
	int extSelected_edeactivation_indication;
	int isPresent_deactivation_indication;

} SI_XNAP_DT_ServedCells_ToModify_E_UTRA_Item;


// ServedCellInformationNR_measurementTimingConfiguration
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_ServedCellInformationNR_measurementTimingConfiguration
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_ServedCellInformationNR_measurementTimingConfiguration;

// ServedCellInformation-NR
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ServedCellInformation_NR
{
	unsigned long long int nrPCI;

	SI_XNAP_DT_NR_CGI * cellID;

	SI_XNAP_DT_TAC * tac;

	unsigned long long int ranac;
	int isPresent_ranac;

	SI_XNAP_DT_BroadcastPLMNs * broadcastPLMN;

	SI_XNAP_DT_NRModeInfo * nrModeInfo;

	SI_XNAP_DT_ServedCellInformationNR_measurementTimingConfiguration * measurementTimingConfiguration;

	SI_XNAP_DT_Connectivity_Support * connectivitySupport;

} SI_XNAP_DT_ServedCellInformation_NR;


// SFNOffset_sFN-Time-Offset
// BITSTRING,BIT STRING(SIZE(24))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_SFNOffset_sFN_Time_Offset
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_SFNOffset_sFN_Time_Offset;

// SFN-Offset
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SFN_Offset
{
	SI_XNAP_DT_SFNOffset_sFN_Time_Offset * sFN_Time_Offset;

} SI_XNAP_DT_SFN_Offset;


// ServedCells-NR
//SEQUENCE OF ServedCells-NR-Item, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ServedCells_NR
{
	SI_LinkedList * ServedCells_NR_Item;
} SI_XNAP_DT_ServedCells_NR;


// ServedCells-NR-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ServedCells_NR_Item
{
	SI_XNAP_DT_ServedCellInformation_NR * served_cell_info_NR;

	SI_XNAP_DT_NeighbourInformation_NR * neighbour_info_NR;
	int isPresent_neighbour_info_NR;

	SI_XNAP_DT_NeighbourInformation_E_UTRA * neighbour_info_E_UTRA;
	int isPresent_neighbour_info_E_UTRA;

} SI_XNAP_DT_ServedCells_NR_Item;


// ServedCells-ToModify-NR
//SEQUENCE OF ServedCells-ToModify-NR-Item, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ServedCells_ToModify_NR
{
	SI_LinkedList * ServedCells_ToModify_NR_Item;
} SI_XNAP_DT_ServedCells_ToModify_NR;


// ServedCellsToModifyNRItem_deactivation-indication
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ServedCellsToModifyNRItem_deactivation_indication
{
	__si_xnap__ServedCellsToModifyNRItem_deactivation_indication_deactivated_val
} SI_XNAP_DT_ServedCellsToModifyNRItem_deactivation_indication;


// L:2561
typedef enum __si_xnap_dt_ServedCellsToModifyNRItem_deactivation_indication2
{
	ServedCellsToModifyNRItem_deactivation_indication_deactivated_val
} SI_XNAP_DT_ServedCellsToModifyNRItem_deactivation_indication2;


// L:2588
typedef struct __si_xnap_dt_ServedCellsToModifyNRItem_deactivation_indication_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ServedCellsToModifyNRItem_deactivation_indication_EnumProxy;


// ServedCells-ToModify-NR-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ServedCells_ToModify_NR_Item
{
	SI_XNAP_DT_NR_CGI * old_NR_CGI;

	SI_XNAP_DT_ServedCellInformation_NR * served_cell_info_NR;

	SI_XNAP_DT_NeighbourInformation_NR * neighbour_info_NR;
	int isPresent_neighbour_info_NR;

	SI_XNAP_DT_NeighbourInformation_E_UTRA * neighbour_info_E_UTRA;
	int isPresent_neighbour_info_E_UTRA;

	uint8_t selected_edeactivation_indication;
	int extSelected_edeactivation_indication;
	int isPresent_deactivation_indication;

} SI_XNAP_DT_ServedCells_ToModify_NR_Item;


// ServedCellSpecificInfoReq-NR
//SEQUENCE OF ServedCellSpecificInfoReq-NR-Item, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ServedCellSpecificInfoReq_NR
{
	SI_LinkedList * ServedCellSpecificInfoReq_NR_Item;
} SI_XNAP_DT_ServedCellSpecificInfoReq_NR;


// ServedCellSpecificInfoReqNRItem_additionalMTCListRequestIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ServedCellSpecificInfoReqNRItem_additionalMTCListRequestIndicator
{
	__si_xnap__ServedCellSpecificInfoReqNRItem_additionalMTCListRequestIndicator_additionalMTCListRequested_val
} SI_XNAP_DT_ServedCellSpecificInfoReqNRItem_additionalMTCListRequestIndicator;


// L:2561
typedef enum __si_xnap_dt_ServedCellSpecificInfoReqNRItem_additionalMTCListRequestIndicator2
{
	ServedCellSpecificInfoReqNRItem_additionalMTCListRequestIndicator_additionalMTCListRequested_val
} SI_XNAP_DT_ServedCellSpecificInfoReqNRItem_additionalMTCListRequestIndicator2;


// L:2588
typedef struct __si_xnap_dt_ServedCellSpecificInfoReqNRItem_additionalMTCListRequestIndicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ServedCellSpecificInfoReqNRItem_additionalMTCListRequestIndicator_EnumProxy;


// ServedCellSpecificInfoReq-NR-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ServedCellSpecificInfoReq_NR_Item
{
	SI_XNAP_DT_NR_CGI * nRCGI;

	uint8_t selected_eadditionalMTCListRequestIndicator;
	int extSelected_eadditionalMTCListRequestIndicator;
	int isPresent_additionalMTCListRequestIndicator;

} SI_XNAP_DT_ServedCellSpecificInfoReq_NR_Item;


// ServedCellsToUpdateNR_served_Cells_ToDelete_NR
//SEQUENCE OF NR-CGI, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ServedCellsToUpdateNR_served_Cells_ToDelete_NR
{
	SI_LinkedList * NR_CGI;
} SI_XNAP_DT_ServedCellsToUpdateNR_served_Cells_ToDelete_NR;


// ServedCellsToUpdate-NR
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ServedCellsToUpdate_NR
{
	SI_XNAP_DT_ServedCells_NR * served_Cells_ToAdd_NR;
	int isPresent_served_Cells_ToAdd_NR;

	SI_XNAP_DT_ServedCells_ToModify_NR * served_Cells_ToModify_NR;
	int isPresent_served_Cells_ToModify_NR;

	SI_XNAP_DT_ServedCellsToUpdateNR_served_Cells_ToDelete_NR * served_Cells_ToDelete_NR;
	int isPresent_served_Cells_ToDelete_NR;

} SI_XNAP_DT_ServedCellsToUpdate_NR;


// SNSSAIAvailableCapacity-List
//SEQUENCE OF SNSSAIAvailableCapacity-Item, MIN=1, MAX= maxnoofSliceItems  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SNSSAIAvailableCapacity_List
{
	SI_LinkedList * SNSSAIAvailableCapacity_Item;
} SI_XNAP_DT_SNSSAIAvailableCapacity_List;


// SliceAvailableCapacity-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SliceAvailableCapacity_Item
{
	SI_XNAP_DT_PLMN_Identity * pLMNIdentity;

	SI_XNAP_DT_SNSSAIAvailableCapacity_List * sNSSAIAvailableCapacity_List;

} SI_XNAP_DT_SliceAvailableCapacity_Item;


// SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueDownlink
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueDownlink
{
	unsigned long long int data;
} SI_XNAP_DT_SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueDownlink;

// SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueUplink
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueUplink
{
	unsigned long long int data;
} SI_XNAP_DT_SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueUplink;

// SNSSAIAvailableCapacity-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SNSSAIAvailableCapacity_Item
{
	SI_XNAP_DT_S_NSSAI * sNSSAI;

	unsigned long long int sliceAvailableCapacityValueDownlink;

	unsigned long long int sliceAvailableCapacityValueUplink;

} SI_XNAP_DT_SNSSAIAvailableCapacity_Item;


// SliceRadioResourceStatus-List
//SEQUENCE OF SliceRadioResourceStatus-Item, MIN=1, MAX=maxnoofBPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SliceRadioResourceStatus_List
{
	SI_LinkedList * SliceRadioResourceStatus_Item;
} SI_XNAP_DT_SliceRadioResourceStatus_List;


// SNSSAIRadioResourceStatus-List
//SEQUENCE OF SNSSAIRadioResourceStatus-Item, MIN=1, MAX=maxnoofSliceItems  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SNSSAIRadioResourceStatus_List
{
	SI_LinkedList * SNSSAIRadioResourceStatus_Item;
} SI_XNAP_DT_SNSSAIRadioResourceStatus_List;


// SliceRadioResourceStatus-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SliceRadioResourceStatus_Item
{
	SI_XNAP_DT_PLMN_Identity * plmn_Identity;

	SI_XNAP_DT_SNSSAIRadioResourceStatus_List * sNSSAIRadioResourceStatus_List;

} SI_XNAP_DT_SliceRadioResourceStatus_Item;


// SLPositioning-Ranging-Authorized
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SLPositioning_Ranging_Authorized
{
	__si_xnap__SLPositioning_Ranging_Authorized_authorized_val,
	__si_xnap__SLPositioning_Ranging_Authorized_not_authorized_val
} SI_XNAP_DT_SLPositioning_Ranging_Authorized;


// L:2561
typedef enum __si_xnap_dt_SLPositioning_Ranging_Authorized2
{
	SLPositioning_Ranging_Authorized_authorized_val,
	SLPositioning_Ranging_Authorized_not_authorized_val
} SI_XNAP_DT_SLPositioning_Ranging_Authorized2;


// L:2588
typedef struct __si_xnap_dt_SLPositioning_Ranging_Authorized_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SLPositioning_Ranging_Authorized_EnumProxy;


// RSPPQoSFlowList
//SEQUENCE OF RSPPQoSFlowItem, MIN=1, MAX=maxnoofRSPPQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_RSPPQoSFlowList
{
	SI_LinkedList * RSPPQoSFlowItem;
} SI_XNAP_DT_RSPPQoSFlowList;


// RSPP-transport-QoS-parameters
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RSPP_transport_QoS_parameters
{
	SI_XNAP_DT_RSPPQoSFlowList * rSPPQoSFlowList;

	unsigned long long int rSPPLinkAggregateBitRates;
	int isPresent_rSPPLinkAggregateBitRates;

} SI_XNAP_DT_RSPP_transport_QoS_parameters;


// SLPositioning-Ranging-Services-Info
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SLPositioning_Ranging_Services_Info
{
	uint8_t selected_esLPositioning_Ranging_Authorized;
	int extSelected_esLPositioning_Ranging_Authorized;

	SI_XNAP_DT_RSPP_transport_QoS_parameters * rSPP_transport_QoS_parameters;
	int isPresent_rSPP_transport_QoS_parameters;

} SI_XNAP_DT_SLPositioning_Ranging_Services_Info;


// RSPPFlowBitRates
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RSPPFlowBitRates
{
	unsigned long long int guaranteedFlowBitRate;

	unsigned long long int maximumFlowBitRate;

} SI_XNAP_DT_RSPPFlowBitRates;


// RSPPQoSFlowItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RSPPQoSFlowItem
{
	unsigned long long int pQI;

	SI_XNAP_DT_RSPPFlowBitRates * rSPPFlowBitRates;
	int isPresent_rSPPFlowBitRates;

	uint8_t selected_erange;
	int extSelected_erange;
	int isPresent_range;

} SI_XNAP_DT_RSPPQoSFlowItem;


// Slice-DL-GBR-PRB-Usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_Slice_DL_GBR_PRB_Usage
{
	unsigned long long int data;
} SI_XNAP_DT_Slice_DL_GBR_PRB_Usage;

// Slice-UL-GBR-PRB-Usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_Slice_UL_GBR_PRB_Usage
{
	unsigned long long int data;
} SI_XNAP_DT_Slice_UL_GBR_PRB_Usage;

// Slice-DL-non-GBR-PRB-Usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_Slice_DL_non_GBR_PRB_Usage
{
	unsigned long long int data;
} SI_XNAP_DT_Slice_DL_non_GBR_PRB_Usage;

// Slice-UL-non-GBR-PRB-Usage
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_Slice_UL_non_GBR_PRB_Usage
{
	unsigned long long int data;
} SI_XNAP_DT_Slice_UL_non_GBR_PRB_Usage;

// Slice-DL-Total-PRB-Allocation
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_Slice_DL_Total_PRB_Allocation
{
	unsigned long long int data;
} SI_XNAP_DT_Slice_DL_Total_PRB_Allocation;

// Slice-UL-Total-PRB-Allocation
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_Slice_UL_Total_PRB_Allocation
{
	unsigned long long int data;
} SI_XNAP_DT_Slice_UL_Total_PRB_Allocation;

// SNSSAIRadioResourceStatus-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SNSSAIRadioResourceStatus_Item
{
	SI_XNAP_DT_S_NSSAI * sNSSAI;

	unsigned long long int slice_DL_GBR_PRB_Usage;

	unsigned long long int slice_UL_GBR_PRB_Usage;

	unsigned long long int slice_DL_non_GBR_PRB_Usage;

	unsigned long long int slice_UL_non_GBR_PRB_Usage;

	unsigned long long int slice_DL_Total_PRB_Allocation;

	unsigned long long int slice_UL_Total_PRB_Allocation;

} SI_XNAP_DT_SNSSAIRadioResourceStatus_Item;


// SNSSAI-list
//SEQUENCE OF SNSSAI-Item, MIN=1, MAX= maxnoofSliceItems  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SNSSAI_list
{
	SI_LinkedList * SNSSAI_Item;
} SI_XNAP_DT_SNSSAI_list;


// SliceToReport-List-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SliceToReport_List_Item
{
	SI_XNAP_DT_PLMN_Identity * pLMNIdentity;

	SI_XNAP_DT_SNSSAI_list * sNSSAIlist;

} SI_XNAP_DT_SliceToReport_List_Item;


// SNSSAI-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SNSSAI_Item
{
	SI_XNAP_DT_S_NSSAI * sNSSAI;

} SI_XNAP_DT_SNSSAI_Item;


// SlotConfigurationListItem_slotIndex
// INTEGER,INTEGER(0..5119),MIN=0,MAX=5119  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SlotConfigurationListItem_slotIndex
{
	unsigned long long int data;
} SI_XNAP_DT_SlotConfigurationListItem_slotIndex;

// SymbolAllocation-in-Slot-AllDL
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SymbolAllocation_in_Slot_AllDL
{
} SI_XNAP_DT_SymbolAllocation_in_Slot_AllDL;


// SymbolAllocation-in-Slot-AllUL
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SymbolAllocation_in_Slot_AllUL
{
} SI_XNAP_DT_SymbolAllocation_in_Slot_AllUL;


// SymbolAllocationinSlotBothDLandUL_numberofDLSymbols
// INTEGER,INTEGER(0..13),MIN=0,MAX=13  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SymbolAllocationinSlotBothDLandUL_numberofDLSymbols
{
	unsigned long long int data;
} SI_XNAP_DT_SymbolAllocationinSlotBothDLandUL_numberofDLSymbols;

// SymbolAllocationinSlotBothDLandUL_numberofULSymbols
// INTEGER,INTEGER(0..13),MIN=0,MAX=13  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SymbolAllocationinSlotBothDLandUL_numberofULSymbols
{
	unsigned long long int data;
} SI_XNAP_DT_SymbolAllocationinSlotBothDLandUL_numberofULSymbols;

// SymbolAllocation-in-Slot-BothDLandUL
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SymbolAllocation_in_Slot_BothDLandUL
{
	unsigned long long int numberofDLSymbols;

	unsigned long long int numberofULSymbols;

} SI_XNAP_DT_SymbolAllocation_in_Slot_BothDLandUL;


// SymbolAllocation-in-Slot
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_SymbolAllocation_in_Slot
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_SymbolAllocation_in_Slot_AllDL * allDL;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_SymbolAllocation_in_Slot_AllUL * allUL;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_SymbolAllocation_in_Slot_BothDLandUL * bothDLandUL;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_SymbolAllocation_in_Slot;


// SlotConfiguration-List-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SlotConfiguration_List_Item
{
	unsigned long long int slotIndex;

	SI_XNAP_DT_SymbolAllocation_in_Slot * symbolAllocation_in_Slot;

} SI_XNAP_DT_SlotConfiguration_List_Item;


// S-NG-RANnode-Addition-Trigger-Ind
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_S_NG_RANnode_Addition_Trigger_Ind
{
	__si_xnap__S_NG_RANnode_Addition_Trigger_Ind_sn_change_val,
	__si_xnap__S_NG_RANnode_Addition_Trigger_Ind_inter_MN_HO_val,
	__si_xnap__S_NG_RANnode_Addition_Trigger_Ind_intra_MN_HO_val
} SI_XNAP_DT_S_NG_RANnode_Addition_Trigger_Ind;


// L:2561
typedef enum __si_xnap_dt_S_NG_RANnode_Addition_Trigger_Ind2
{
	S_NG_RANnode_Addition_Trigger_Ind_sn_change_val,
	S_NG_RANnode_Addition_Trigger_Ind_inter_MN_HO_val,
	S_NG_RANnode_Addition_Trigger_Ind_intra_MN_HO_val
} SI_XNAP_DT_S_NG_RANnode_Addition_Trigger_Ind2;


// L:2588
typedef struct __si_xnap_dt_S_NG_RANnode_Addition_Trigger_Ind_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_S_NG_RANnode_Addition_Trigger_Ind_EnumProxy;


// SNMobilityInformation
// BITSTRING,BIT STRING(SIZE(32))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_SNMobilityInformation
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_SNMobilityInformation;

// SNPNIdentity
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SNPNIdentity
{
	SI_XNAP_DT_PLMN_Identity * plmnID;

	SI_XNAP_DT_NID * nid;

} SI_XNAP_DT_SNPNIdentity;


// SNTriggered
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SNTriggered
{
	__si_xnap__SNTriggered_true_val
} SI_XNAP_DT_SNTriggered;


// L:2561
typedef enum __si_xnap_dt_SNTriggered2
{
	SNTriggered_true_val
} SI_XNAP_DT_SNTriggered2;


// L:2588
typedef struct __si_xnap_dt_SNTriggered_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SNTriggered_EnumProxy;


// SpectrumSharingGroupID
// INTEGER,INTEGER(1..maxnoofCellsinNG-RANnode),MIN=1,MAX=NaN  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SpectrumSharingGroupID
{
	unsigned long long int data;
} SI_XNAP_DT_SpectrumSharingGroupID;

// SplitSessionIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SplitSessionIndicator
{
	__si_xnap__SplitSessionIndicator_split_val
} SI_XNAP_DT_SplitSessionIndicator;


// L:2561
typedef enum __si_xnap_dt_SplitSessionIndicator2
{
	SplitSessionIndicator_split_val
} SI_XNAP_DT_SplitSessionIndicator2;


// L:2588
typedef struct __si_xnap_dt_SplitSessionIndicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SplitSessionIndicator_EnumProxy;


// SplitSRBsTypes
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SplitSRBsTypes
{
	__si_xnap__SplitSRBsTypes_srb1_val,
	__si_xnap__SplitSRBsTypes_srb2_val,
	__si_xnap__SplitSRBsTypes_srb1and2_val
} SI_XNAP_DT_SplitSRBsTypes;


// L:2561
typedef enum __si_xnap_dt_SplitSRBsTypes2
{
	SplitSRBsTypes_srb1_val,
	SplitSRBsTypes_srb2_val,
	SplitSRBsTypes_srb1and2_val
} SI_XNAP_DT_SplitSRBsTypes2;


// L:2588
typedef struct __si_xnap_dt_SplitSRBsTypes_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SplitSRBsTypes_EnumProxy;


// SPRAvailability
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SPRAvailability
{
	__si_xnap__SPRAvailability_spr_available_val
} SI_XNAP_DT_SPRAvailability;


// L:2561
typedef enum __si_xnap_dt_SPRAvailability2
{
	SPRAvailability_spr_available_val
} SI_XNAP_DT_SPRAvailability2;


// L:2588
typedef struct __si_xnap_dt_SPRAvailability_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SPRAvailability_EnumProxy;


// SRSPositioningConfigOrActivationRequest
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SRSPositioningConfigOrActivationRequest
{
	__si_xnap__SRSPositioningConfigOrActivationRequest_true_val
} SI_XNAP_DT_SRSPositioningConfigOrActivationRequest;


// L:2561
typedef enum __si_xnap_dt_SRSPositioningConfigOrActivationRequest2
{
	SRSPositioningConfigOrActivationRequest_true_val
} SI_XNAP_DT_SRSPositioningConfigOrActivationRequest2;


// L:2588
typedef struct __si_xnap_dt_SRSPositioningConfigOrActivationRequest_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SRSPositioningConfigOrActivationRequest_EnumProxy;


// SRSConfiguration
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_SRSConfiguration
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_SRSConfiguration;

// SSBAreaCapacityValueListItem_sSBIndex
// INTEGER,INTEGER(0..63),MIN=0,MAX=63  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SSBAreaCapacityValueListItem_sSBIndex
{
	unsigned long long int data;
} SI_XNAP_DT_SSBAreaCapacityValueListItem_sSBIndex;

// SSBAreaCapacityValueListItem_ssbAreaCapacityValue
// INTEGER,INTEGER(0..100),MIN=0,MAX=100  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SSBAreaCapacityValueListItem_ssbAreaCapacityValue
{
	unsigned long long int data;
} SI_XNAP_DT_SSBAreaCapacityValueListItem_ssbAreaCapacityValue;

// SSBAreaCapacityValue-List-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SSBAreaCapacityValue_List_Item
{
	unsigned long long int sSBIndex;

	unsigned long long int ssbAreaCapacityValue;

} SI_XNAP_DT_SSBAreaCapacityValue_List_Item;


// SSBAreaRadioResourceStatusListItem_sSBIndex
// INTEGER,INTEGER(0..63),MIN=0,MAX=63  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SSBAreaRadioResourceStatusListItem_sSBIndex
{
	unsigned long long int data;
} SI_XNAP_DT_SSBAreaRadioResourceStatusListItem_sSBIndex;

// SSBAreaRadioResourceStatus-List-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SSBAreaRadioResourceStatus_List_Item
{
	unsigned long long int sSBIndex;

	unsigned long long int ssb_Area_DL_GBR_PRB_usage;

	unsigned long long int ssb_Area_UL_GBR_PRB_usage;

	unsigned long long int ssb_Area_dL_non_GBR_PRB_usage;

	unsigned long long int ssb_Area_uL_non_GBR_PRB_usage;

	unsigned long long int ssb_Area_dL_Total_PRB_usage;

	unsigned long long int ssb_Area_uL_Total_PRB_usage;

} SI_XNAP_DT_SSBAreaRadioResourceStatus_List_Item;


// SSBCoverageModificationListItem_sSBIndex
// INTEGER,INTEGER(0..63),MIN=0,MAX=63  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SSBCoverageModificationListItem_sSBIndex
{
	unsigned long long int data;
} SI_XNAP_DT_SSBCoverageModificationListItem_sSBIndex;

// SSBCoverageModificationListItem_sSBCoverageState
// INTEGER,INTEGER(0..15,...),MIN=0,MAX=15  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SSBCoverageModificationListItem_sSBCoverageState
{
	unsigned long long int data;
} SI_XNAP_DT_SSBCoverageModificationListItem_sSBCoverageState;

// SSB-Coverage-Modification-List-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SSB_Coverage_Modification_List_Item
{
	unsigned long long int sSBIndex;

	unsigned long long int sSBCoverageState;

} SI_XNAP_DT_SSB_Coverage_Modification_List_Item;


// SSBPositionsInBurst_shortBitmap
// BITSTRING,BIT STRING(SIZE(4))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_SSBPositionsInBurst_shortBitmap
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_SSBPositionsInBurst_shortBitmap;

// SSBPositionsInBurst_mediumBitmap
// BITSTRING,BIT STRING(SIZE(8))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_SSBPositionsInBurst_mediumBitmap
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_SSBPositionsInBurst_mediumBitmap;

// SSBPositionsInBurst_longBitmap
// BITSTRING,BIT STRING(SIZE(64))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_SSBPositionsInBurst_longBitmap
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_SSBPositionsInBurst_longBitmap;

// SSB-PositionsInBurst
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_SSB_PositionsInBurst
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_SSBPositionsInBurst_shortBitmap * shortBitmap;

		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_SSBPositionsInBurst_mediumBitmap * mediumBitmap;

		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_SSBPositionsInBurst_longBitmap * longBitmap;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_SSB_PositionsInBurst_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_SSB_PositionsInBurst;


// SSBOffsets-List
//SEQUENCE OF SSBOffsets-Item, MIN=1, MAX=maxnoofSSBAreas  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SSBOffsets_List
{
	SI_LinkedList * SSBOffsets_Item;
} SI_XNAP_DT_SSBOffsets_List;


// SSBOffsetInformation_sSBIndex
// INTEGER,INTEGER(0..63),MIN=0,MAX=63  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SSBOffsetInformation_sSBIndex
{
	unsigned long long int data;
} SI_XNAP_DT_SSBOffsetInformation_sSBIndex;

// SSBOffsetInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SSBOffsetInformation
{
	unsigned long long int sSBIndex;

	SI_XNAP_DT_MobilityParametersInformation * sSBTriggeringOffset;

} SI_XNAP_DT_SSBOffsetInformation;


// SSBOffsets-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SSBOffsets_Item
{
	SI_XNAP_DT_SSBOffsetInformation * nG_RANnode1SSBOffsets;
	int isPresent_nG_RANnode1SSBOffsets;

	SI_XNAP_DT_SSBOffsetInformation * nG_RANnode2ProposedSSBOffsets;

} SI_XNAP_DT_SSBOffsets_Item;


// SSBOffsetModificationRange_sSBIndex
// INTEGER,INTEGER(0..63),MIN=0,MAX=63  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SSBOffsetModificationRange_sSBIndex
{
	unsigned long long int data;
} SI_XNAP_DT_SSBOffsetModificationRange_sSBIndex;

// SSBOffsetModificationRange
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SSBOffsetModificationRange
{
	unsigned long long int sSBIndex;

	SI_XNAP_DT_MobilityParametersModificationRange * sSBobilityParametersModificationRange;

} SI_XNAP_DT_SSBOffsetModificationRange;


// SSBToReportListItem_sSBIndex
// INTEGER,INTEGER(0..63),MIN=0,MAX=63  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SSBToReportListItem_sSBIndex
{
	unsigned long long int data;
} SI_XNAP_DT_SSBToReportListItem_sSBIndex;

// SSBToReport-List-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SSBToReport_List_Item
{
	unsigned long long int sSBIndex;

} SI_XNAP_DT_SSBToReport_List_Item;


// SuccessfulHOReportInformation
//SEQUENCE OF SuccessfulHOReportList-Item, MIN=1, MAX= maxnoofSuccessfulHOReports  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SuccessfulHOReportInformation
{
	SI_LinkedList * SuccessfulHOReportList_Item;
} SI_XNAP_DT_SuccessfulHOReportInformation;


// SuccessfulHOReportContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_SuccessfulHOReportContainer
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_SuccessfulHOReportContainer;

// SuccessfulHOReportList-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SuccessfulHOReportList_Item
{
	SI_XNAP_DT_SuccessfulHOReportContainer * successfulHOReport;

} SI_XNAP_DT_SuccessfulHOReportList_Item;


// SuccessfulPSCellChangeReportInformation
//SEQUENCE OF SuccessfulPSCellChangeReportList-Item, MIN=1, MAX= maxnoofSuccessfulPSCellChangeReports  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SuccessfulPSCellChangeReportInformation
{
	SI_LinkedList * SuccessfulPSCellChangeReportList_Item;
} SI_XNAP_DT_SuccessfulPSCellChangeReportInformation;


// SuccessfulPSCellChangeReportContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_SuccessfulPSCellChangeReportContainer
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_SuccessfulPSCellChangeReportContainer;

// SuccessfulPSCellChangeReportList-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SuccessfulPSCellChangeReportList_Item
{
	SI_XNAP_DT_SuccessfulPSCellChangeReportContainer * successfulPSCellChangeReport;

	SI_XNAP_DT_SNMobilityInformation * sNMobilityInformation;
	int isPresent_sNMobilityInformation;

} SI_XNAP_DT_SuccessfulPSCellChangeReportList_Item;


// SUL-FrequencyBand
// INTEGER,INTEGER(1..1024),MIN=1,MAX=1024  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SUL_FrequencyBand
{
	unsigned long long int data;
} SI_XNAP_DT_SUL_FrequencyBand;

// Supported-MBS-FSA-ID-List
//SEQUENCE OF MBS-FrequencySelectionArea-Identity, MIN=1, MAX=maxnoofMBSFSAs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_Supported_MBS_FSA_ID_List
{
	SI_LinkedList * MBS_FrequencySelectionArea_Identity;
} SI_XNAP_DT_Supported_MBS_FSA_ID_List;


// SupportedSULBandItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SupportedSULBandItem
{
	unsigned long long int sulBandItem;

} SI_XNAP_DT_SupportedSULBandItem;


// SurvivalTime
// INTEGER,INTEGER(0..1920000,...),MIN=0,MAX=1920000  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SurvivalTime
{
	unsigned long long int data;
} SI_XNAP_DT_SurvivalTime;

// SNPN-CellIdListforMDT
//SEQUENCE OF SNPN-CellIdforMDT-Item, MIN=1, MAX=maxnoofCellIDforMDT  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SNPN_CellIdListforMDT
{
	SI_LinkedList * SNPN_CellIdforMDT_Item;
} SI_XNAP_DT_SNPN_CellIdListforMDT;


// SNPN-CellBasedMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SNPN_CellBasedMDT
{
	SI_XNAP_DT_SNPN_CellIdListforMDT * sNPN_CellIdListforMDT;

} SI_XNAP_DT_SNPN_CellBasedMDT;


// SNPN-CellIdforMDT-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SNPN_CellIdforMDT_Item
{
	SI_XNAP_DT_NR_CGI * nRCGI;

	SI_XNAP_DT_NID * nID;

} SI_XNAP_DT_SNPN_CellIdforMDT_Item;


// SNPN-TAIListforMDT
//SEQUENCE OF SNPN-TAIforMDT-Item, MIN=1, MAX=maxnoofTAforMDT  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SNPN_TAIListforMDT
{
	SI_LinkedList * SNPN_TAIforMDT_Item;
} SI_XNAP_DT_SNPN_TAIListforMDT;


// SNPN-TAIBasedMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SNPN_TAIBasedMDT
{
	SI_XNAP_DT_SNPN_TAIListforMDT * sNPN_TAIListforMDT;

} SI_XNAP_DT_SNPN_TAIBasedMDT;


// SNPN-TAIforMDT-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SNPN_TAIforMDT_Item
{
	SI_XNAP_DT_PLMN_Identity * plmn_ID;

	SI_XNAP_DT_TAC * tAC;

	SI_XNAP_DT_NID * nID;

} SI_XNAP_DT_SNPN_TAIforMDT_Item;


// SNPNListforMDT
//SEQUENCE OF SNPNforMDT-Item, MIN=1, MAX= maxnoofMDTSNPNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_SNPNListforMDT
{
	SI_LinkedList * SNPNforMDT_Item;
} SI_XNAP_DT_SNPNListforMDT;


// SNPN-BasedMDT
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SNPN_BasedMDT
{
	SI_XNAP_DT_SNPNListforMDT * sNPNListforMDT;

} SI_XNAP_DT_SNPN_BasedMDT;


// SNPNforMDT-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SNPNforMDT_Item
{
	SI_XNAP_DT_PLMN_Identity * plmn_ID;

	SI_XNAP_DT_NID * nID;

} SI_XNAP_DT_SNPNforMDT_Item;


// TAIforMDT-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TAIforMDT_Item
{
	SI_XNAP_DT_PLMN_Identity * plmn_ID;

	SI_XNAP_DT_TAC * tAC;

} SI_XNAP_DT_TAIforMDT_Item;


// TAINSAGSupportList
//SEQUENCE OF TAINSAGSupportItem, MIN=1, MAX=maxnoofNSAGs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TAINSAGSupportList
{
	SI_LinkedList * TAINSAGSupportItem;
} SI_XNAP_DT_TAINSAGSupportList;


// TAINSAGSupportItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TAINSAGSupportItem
{
	unsigned long long int nSAG_ID;

	SI_XNAP_DT_ExtendedSliceSupportList * nSAGSliceSupportList;

} SI_XNAP_DT_TAINSAGSupportItem;


// TAISliceUnavailableCellList
//SEQUENCE OF TAISliceUnavailableCellItem, MIN=1, MAX=maxnoofExtSliceItems  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TAISliceUnavailableCellList
{
	SI_LinkedList * TAISliceUnavailableCellItem;
} SI_XNAP_DT_TAISliceUnavailableCellList;


// UnavailableNRCellList
//SEQUENCE OF NR-CGI, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_UnavailableNRCellList
{
	SI_LinkedList * NR_CGI;
} SI_XNAP_DT_UnavailableNRCellList;


// UnavailableCellList
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UnavailableCellList
{
	SI_XNAP_DT_UnavailableNRCellList * unavailableNRCellList;

} SI_XNAP_DT_UnavailableCellList;


// AvailableNRCellList
//SEQUENCE OF NR-CGI, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_AvailableNRCellList
{
	SI_LinkedList * NR_CGI;
} SI_XNAP_DT_AvailableNRCellList;


// AvailableCellList
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_AvailableCellList
{
	SI_XNAP_DT_AvailableNRCellList * availableNRCellList;

} SI_XNAP_DT_AvailableCellList;


// SliceAvailabilityList
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_SliceAvailabilityList
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_UnavailableCellList * unavailableCellList;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_AvailableCellList * availableCellList;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_SliceAvailabilityList_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_SliceAvailabilityList;


// TAISliceUnavailableCellItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TAISliceUnavailableCellItem
{
	SI_XNAP_DT_S_NSSAI * sNSSAI;

	SI_XNAP_DT_SliceAvailabilityList * sliceAvailabilityList;

} SI_XNAP_DT_TAISliceUnavailableCellItem;


// TAISupport-List
//SEQUENCE OF TAISupport-Item, MIN=1, MAX=maxnoofsupportedTACs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TAISupport_List
{
	SI_LinkedList * TAISupport_Item;
} SI_XNAP_DT_TAISupport_List;


// TAISupportItem_broadcastPLMNs
//SEQUENCE OF BroadcastPLMNinTAISupport-Item, MIN=1, MAX=maxnoofsupportedPLMNs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TAISupportItem_broadcastPLMNs
{
	SI_LinkedList * BroadcastPLMNinTAISupport_Item;
} SI_XNAP_DT_TAISupportItem_broadcastPLMNs;


// TAISupport-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TAISupport_Item
{
	SI_XNAP_DT_TAC * tac;

	SI_XNAP_DT_TAISupportItem_broadcastPLMNs * broadcastPLMNs;

} SI_XNAP_DT_TAISupport_Item;


// TAI-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TAI_Item
{
	SI_XNAP_DT_TAC * tAC;

	SI_XNAP_DT_PLMN_Identity * pLMN_Identity;

} SI_XNAP_DT_TAI_Item;


// TargetCellinEUTRAN
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_TargetCellinEUTRAN
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_TargetCellinEUTRAN;

// TDDULDLConfigurationCommonNR
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_TDDULDLConfigurationCommonNR
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_TDDULDLConfigurationCommonNR;

// TargetCellList
//SEQUENCE OF TargetCellList-Item, MIN=1, MAX=maxnoofCHOcells  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TargetCellList
{
	SI_LinkedList * TargetCellList_Item;
} SI_XNAP_DT_TargetCellList;


// TargetCellList-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TargetCellList_Item
{
	SI_XNAP_DT_Target_CGI * target_cell;

} SI_XNAP_DT_TargetCellList_Item;


// TimeSinceFailure
// INTEGER,INTEGER(0..172800,...),MIN=0,MAX=172800  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_TimeSinceFailure
{
	unsigned long long int data;
} SI_XNAP_DT_TimeSinceFailure;

// TimeSynchronizationAssistanceInformation_timeDistributionIndication
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_TimeSynchronizationAssistanceInformation_timeDistributionIndication
{
	__si_xnap__TimeSynchronizationAssistanceInformation_timeDistributionIndication_enabled_val,
	__si_xnap__TimeSynchronizationAssistanceInformation_timeDistributionIndication_disabled_val
} SI_XNAP_DT_TimeSynchronizationAssistanceInformation_timeDistributionIndication;


// L:2561
typedef enum __si_xnap_dt_TimeSynchronizationAssistanceInformation_timeDistributionIndication2
{
	TimeSynchronizationAssistanceInformation_timeDistributionIndication_enabled_val,
	TimeSynchronizationAssistanceInformation_timeDistributionIndication_disabled_val
} SI_XNAP_DT_TimeSynchronizationAssistanceInformation_timeDistributionIndication2;


// L:2588
typedef struct __si_xnap_dt_TimeSynchronizationAssistanceInformation_timeDistributionIndication_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_TimeSynchronizationAssistanceInformation_timeDistributionIndication_EnumProxy;


// TimeSynchronizationAssistanceInformation_uuTimeSynchronizationErrorBudget
// INTEGER,INTEGER(0..1000000,...),MIN=0,MAX=1000000  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_TimeSynchronizationAssistanceInformation_uuTimeSynchronizationErrorBudget
{
	unsigned long long int data;
} SI_XNAP_DT_TimeSynchronizationAssistanceInformation_uuTimeSynchronizationErrorBudget;

// TimeSynchronizationAssistanceInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TimeSynchronizationAssistanceInformation
{
	uint8_t selected_etimeDistributionIndication;
	int extSelected_etimeDistributionIndication;

	unsigned long long int uuTimeSynchronizationErrorBudget;
	int isPresent_uuTimeSynchronizationErrorBudget;

} SI_XNAP_DT_TimeSynchronizationAssistanceInformation;


// TimeToWait
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_TimeToWait
{
	__si_xnap__TimeToWait_v1s_val,
	__si_xnap__TimeToWait_v2s_val,
	__si_xnap__TimeToWait_v5s_val,
	__si_xnap__TimeToWait_v10s_val,
	__si_xnap__TimeToWait_v20s_val,
	__si_xnap__TimeToWait_v60s_val
} SI_XNAP_DT_TimeToWait;


// L:2561
typedef enum __si_xnap_dt_TimeToWait2
{
	TimeToWait_v1s_val,
	TimeToWait_v2s_val,
	TimeToWait_v5s_val,
	TimeToWait_v10s_val,
	TimeToWait_v20s_val,
	TimeToWait_v60s_val
} SI_XNAP_DT_TimeToWait2;


// L:2588
typedef struct __si_xnap_dt_TimeToWait_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_TimeToWait_EnumProxy;


// TNLConfigurationInfo
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TNLConfigurationInfo
{
	SI_XNAP_DT_ExtTLAs * extendedUPTransportLayerAddressesToAdd;
	int isPresent_extendedUPTransportLayerAddressesToAdd;

	SI_XNAP_DT_ExtTLAs * extendedUPTransportLayerAddressesToRemove;
	int isPresent_extendedUPTransportLayerAddressesToRemove;

} SI_XNAP_DT_TNLConfigurationInfo;


// TNLA-To-Add-List
//SEQUENCE OF TNLA-To-Add-Item, MIN=1, MAX=maxnoofTNLAssociations  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TNLA_To_Add_List
{
	SI_LinkedList * TNLA_To_Add_Item;
} SI_XNAP_DT_TNLA_To_Add_List;


// TNLAssociationUsage
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_TNLAssociationUsage
{
	__si_xnap__TNLAssociationUsage_ue_val,
	__si_xnap__TNLAssociationUsage_non_ue_val,
	__si_xnap__TNLAssociationUsage_both_val
} SI_XNAP_DT_TNLAssociationUsage;


// L:2561
typedef enum __si_xnap_dt_TNLAssociationUsage2
{
	TNLAssociationUsage_ue_val,
	TNLAssociationUsage_non_ue_val,
	TNLAssociationUsage_both_val
} SI_XNAP_DT_TNLAssociationUsage2;


// L:2588
typedef struct __si_xnap_dt_TNLAssociationUsage_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_TNLAssociationUsage_EnumProxy;


// TNLA-To-Add-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TNLA_To_Add_Item
{
	SI_XNAP_DT_CPTransportLayerInformation * tNLAssociationTransportLayerAddress;

	uint8_t selected_etNLAssociationUsage;
	int extSelected_etNLAssociationUsage;

} SI_XNAP_DT_TNLA_To_Add_Item;


// TNLA-To-Update-List
//SEQUENCE OF TNLA-To-Update-Item, MIN=1, MAX=maxnoofTNLAssociations  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TNLA_To_Update_List
{
	SI_LinkedList * TNLA_To_Update_Item;
} SI_XNAP_DT_TNLA_To_Update_List;


// TNLA-To-Update-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TNLA_To_Update_Item
{
	SI_XNAP_DT_CPTransportLayerInformation * tNLAssociationTransportLayerAddress;

	uint8_t selected_etNLAssociationUsage;
	int extSelected_etNLAssociationUsage;
	int isPresent_tNLAssociationUsage;

} SI_XNAP_DT_TNLA_To_Update_Item;


// TNLA-To-Remove-List
//SEQUENCE OF TNLA-To-Remove-Item, MIN=1, MAX=maxnoofTNLAssociations  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TNLA_To_Remove_List
{
	SI_LinkedList * TNLA_To_Remove_Item;
} SI_XNAP_DT_TNLA_To_Remove_List;


// TNLA-To-Remove-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TNLA_To_Remove_Item
{
	SI_XNAP_DT_CPTransportLayerInformation * tNLAssociationTransportLayerAddress;

} SI_XNAP_DT_TNLA_To_Remove_Item;


// TNLA-Setup-List
//SEQUENCE OF TNLA-Setup-Item, MIN=1, MAX=maxnoofTNLAssociations  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TNLA_Setup_List
{
	SI_LinkedList * TNLA_Setup_Item;
} SI_XNAP_DT_TNLA_Setup_List;


// TNLA-Setup-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TNLA_Setup_Item
{
	SI_XNAP_DT_CPTransportLayerInformation * tNLAssociationTransportLayerAddress;

} SI_XNAP_DT_TNLA_Setup_Item;


// TNLA-Failed-To-Setup-List
//SEQUENCE OF TNLA-Failed-To-Setup-Item, MIN=1, MAX=maxnoofTNLAssociations  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TNLA_Failed_To_Setup_List
{
	SI_LinkedList * TNLA_Failed_To_Setup_Item;
} SI_XNAP_DT_TNLA_Failed_To_Setup_List;


// TNLA-Failed-To-Setup-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TNLA_Failed_To_Setup_Item
{
	SI_XNAP_DT_CPTransportLayerInformation * tNLAssociationTransportLayerAddress;

	SI_XNAP_DT_Cause * cause;

} SI_XNAP_DT_TNLA_Failed_To_Setup_Item;


// TraceActivation_interfaces-to-trace
// BITSTRING,BIT STRING{ng-c(0), x-nc(1), uu(2), f1-c(3), e1(4)}(SIZE(8))
// ADT=0  DT=1
// L:5330
typedef struct __si_xnap_dt_TraceActivation_interfaces_to_trace
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_TraceActivation_interfaces_to_trace;

// Trace-Depth
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_Trace_Depth
{
	__si_xnap__Trace_Depth_minimum_val,
	__si_xnap__Trace_Depth_medium_val,
	__si_xnap__Trace_Depth_maximum_val,
	__si_xnap__Trace_Depth_minimumWithoutVendorSpecificExtension_val,
	__si_xnap__Trace_Depth_mediumWithoutVendorSpecificExtension_val,
	__si_xnap__Trace_Depth_maximumWithoutVendorSpecificExtension_val
} SI_XNAP_DT_Trace_Depth;


// L:2561
typedef enum __si_xnap_dt_Trace_Depth2
{
	Trace_Depth_minimum_val,
	Trace_Depth_medium_val,
	Trace_Depth_maximum_val,
	Trace_Depth_minimumWithoutVendorSpecificExtension_val,
	Trace_Depth_mediumWithoutVendorSpecificExtension_val,
	Trace_Depth_maximumWithoutVendorSpecificExtension_val
} SI_XNAP_DT_Trace_Depth2;


// L:2588
typedef struct __si_xnap_dt_Trace_Depth_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_Trace_Depth_EnumProxy;


// TraceActivation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TraceActivation
{
	SI_XNAP_DT_NG_RANTraceID * ng_ran_TraceID;

	SI_XNAP_DT_TraceActivation_interfaces_to_trace * interfaces_to_trace;

	uint8_t selected_etrace_depth;
	int extSelected_etrace_depth;

	SI_XNAP_DT_TransportLayerAddress * trace_coll_address;

} SI_XNAP_DT_TraceActivation;


// TrafficIndex
// INTEGER,INTEGER(1..1024,...),MIN=1,MAX=1024  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_TrafficIndex
{
	unsigned long long int data;
} SI_XNAP_DT_TrafficIndex;

// TrafficProfile
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_TrafficProfile
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_QoSFlowLevelQoSParameters * uPTraffic;

		// ParserName = CHOICE - NonEP false;
		SI_XNAP_DT_NonUPTraffic * nonUPTraffic;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_TrafficProfile_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_TrafficProfile;


// TrafficToBeRelease-List
//SEQUENCE OF TrafficToBeRelease-Item, MIN=1, MAX=maxnoofTrafficIndexEntries  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TrafficToBeRelease_List
{
	SI_LinkedList * TrafficToBeRelease_Item;
} SI_XNAP_DT_TrafficToBeRelease_List;


// TrafficReleaseType
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_TrafficReleaseType
{
	union 
	{
		// ParserName = ENUMERATED - NonEP false;
		uint8_t fullRelease;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_XNAP_DT_TrafficToBeRelease_List * partialRelease;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_TrafficReleaseType_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_TrafficReleaseType;


// TrafficToBeReleaseInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TrafficToBeReleaseInformation
{
	SI_XNAP_DT_TrafficReleaseType * releaseType;

} SI_XNAP_DT_TrafficToBeReleaseInformation;


// TrafficToBeRelease-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TrafficToBeRelease_Item
{
	unsigned long long int trafficIndex;

	SI_XNAP_DT_BHInfoList * bHInfoList;
	int isPresent_bHInfoList;

} SI_XNAP_DT_TrafficToBeRelease_Item;


// TSCAssistanceInformation_periodicity
// INTEGER,INTEGER(0.. 640000,...),MIN=0,MAX=640000  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_TSCAssistanceInformation_periodicity
{
	unsigned long long int data;
} SI_XNAP_DT_TSCAssistanceInformation_periodicity;

// TSCAssistanceInformation_burstArrivalTime
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_TSCAssistanceInformation_burstArrivalTime
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_TSCAssistanceInformation_burstArrivalTime;

// TSCAssistanceInformation
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TSCAssistanceInformation
{
	unsigned long long int periodicity;

	SI_XNAP_DT_TSCAssistanceInformation_burstArrivalTime * burstArrivalTime;
	int isPresent_burstArrivalTime;

} SI_XNAP_DT_TSCAssistanceInformation;


// TSCTrafficCharacteristics
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TSCTrafficCharacteristics
{
	SI_XNAP_DT_TSCAssistanceInformation * tSCAssistanceInformationDownlink;
	int isPresent_tSCAssistanceInformationDownlink;

	SI_XNAP_DT_TSCAssistanceInformation * tSCAssistanceInformationUplink;
	int isPresent_tSCAssistanceInformationUplink;

} SI_XNAP_DT_TSCTrafficCharacteristics;


// UEAggregateMaximumBitRate
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UEAggregateMaximumBitRate
{
	unsigned long long int dl_UE_AMBR;

	unsigned long long int ul_UE_AMBR;

} SI_XNAP_DT_UEAggregateMaximumBitRate;


// UEContextKeptIndicator
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_UEContextKeptIndicator
{
	__si_xnap__UEContextKeptIndicator_true_val
} SI_XNAP_DT_UEContextKeptIndicator;


// L:2561
typedef enum __si_xnap_dt_UEContextKeptIndicator2
{
	UEContextKeptIndicator_true_val
} SI_XNAP_DT_UEContextKeptIndicator2;


// L:2588
typedef struct __si_xnap_dt_UEContextKeptIndicator_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_UEContextKeptIndicator_EnumProxy;


// UEContextIDforRRCResume
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UEContextIDforRRCResume
{
	SI_XNAP_DT_I_RNTI * i_rnti;

	SI_XNAP_DT_C_RNTI * allocated_c_rnti;

	SI_XNAP_DT_NG_RAN_CellPCI * accessPCI;

} SI_XNAP_DT_UEContextIDforRRCResume;


// UEContextIDforRRCReestablishment
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UEContextIDforRRCReestablishment
{
	SI_XNAP_DT_C_RNTI * c_rnti;

	SI_XNAP_DT_NG_RAN_CellPCI * failureCellPCI;

} SI_XNAP_DT_UEContextIDforRRCReestablishment;


// UEContextID
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_UEContextID
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_UEContextIDforRRCResume * rRCResume;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_UEContextIDforRRCReestablishment * rRRCReestablishment;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_UEContextID_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_UEContextID;


// UEContextInfoRetrUECtxtResp_rrc-Context
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_UEContextInfoRetrUECtxtResp_rrc_Context
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_UEContextInfoRetrUECtxtResp_rrc_Context;

// UESecurityCapabilities_nr-EncyptionAlgorithms
// BITSTRING,BIT STRING{nea1-128(1), nea2-128(2), nea3-128(3)}(SIZE(16,...))
// ADT=0  DT=1
// L:5330
typedef struct __si_xnap_dt_UESecurityCapabilities_nr_EncyptionAlgorithms
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_UESecurityCapabilities_nr_EncyptionAlgorithms;

// UESecurityCapabilities_nr-IntegrityProtectionAlgorithms
// BITSTRING,BIT STRING{nia1-128(1), nia2-128(2), nia3-128(3)}(SIZE(16,...))
// ADT=0  DT=1
// L:5330
typedef struct __si_xnap_dt_UESecurityCapabilities_nr_IntegrityProtectionAlgorithms
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_UESecurityCapabilities_nr_IntegrityProtectionAlgorithms;

// UESecurityCapabilities_e-utra-EncyptionAlgorithms
// BITSTRING,BIT STRING{eea1-128(1), eea2-128(2), eea3-128(3)}(SIZE(16,...))
// ADT=0  DT=1
// L:5330
typedef struct __si_xnap_dt_UESecurityCapabilities_e_utra_EncyptionAlgorithms
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_UESecurityCapabilities_e_utra_EncyptionAlgorithms;

// UESecurityCapabilities_e-utra-IntegrityProtectionAlgorithms
// BITSTRING,BIT STRING{eia1-128(1), eia2-128(2), eia3-128(3)}(SIZE(16,...))
// ADT=0  DT=1
// L:5330
typedef struct __si_xnap_dt_UESecurityCapabilities_e_utra_IntegrityProtectionAlgorithms
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_UESecurityCapabilities_e_utra_IntegrityProtectionAlgorithms;

// UESecurityCapabilities
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UESecurityCapabilities
{
	SI_XNAP_DT_UESecurityCapabilities_nr_EncyptionAlgorithms * nr_EncyptionAlgorithms;

	SI_XNAP_DT_UESecurityCapabilities_nr_IntegrityProtectionAlgorithms * nr_IntegrityProtectionAlgorithms;

	SI_XNAP_DT_UESecurityCapabilities_e_utra_EncyptionAlgorithms * e_utra_EncyptionAlgorithms;

	SI_XNAP_DT_UESecurityCapabilities_e_utra_IntegrityProtectionAlgorithms * e_utra_IntegrityProtectionAlgorithms;

} SI_XNAP_DT_UESecurityCapabilities;


// UEContextInfoRetrUECtxtResp
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UEContextInfoRetrUECtxtResp
{
	unsigned long long int ng_c_UE_signalling_ref;

	SI_XNAP_DT_CPTransportLayerInformation * signalling_TNL_at_source;

	SI_XNAP_DT_UESecurityCapabilities * ueSecurityCapabilities;

	SI_XNAP_DT_AS_SecurityInformation * securityInformation;

	SI_XNAP_DT_UEAggregateMaximumBitRate * ue_AMBR;

	SI_XNAP_DT_PDUSessionResourcesToBeSetup_List * pduSessionResourcesToBeSetup_List;

	SI_XNAP_DT_UEContextInfoRetrUECtxtResp_rrc_Context * rrc_Context;

	SI_XNAP_DT_MobilityRestrictionList * mobilityRestrictionList;
	int isPresent_mobilityRestrictionList;

	unsigned long long int indexToRatFrequencySelectionPriority;
	int isPresent_indexToRatFrequencySelectionPriority;

} SI_XNAP_DT_UEContextInfoRetrUECtxtResp;


// UEHistoryInformation
//SEQUENCE OF LastVisitedCell-Item, MIN=1, MAX=maxnoofCellsinUEHistoryInfo  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_UEHistoryInformation
{
	SI_LinkedList * LastVisitedCell_Item;
} SI_XNAP_DT_UEHistoryInformation;


// UEHistoryInformationFromTheUE
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_UEHistoryInformationFromTheUE
{
	union 
	{
		// ParserName = OCTETSTRING - NonEP false;
		SI_XNAP_DT_NRMobilityHistoryReport * nR;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_UEHistoryInformationFromTheUE_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_UEHistoryInformationFromTheUE;


// UEIdentityIndexValue_indexLength10
// BITSTRING,BIT STRING(SIZE(10))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_UEIdentityIndexValue_indexLength10
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_UEIdentityIndexValue_indexLength10;

// UEIdentityIndexValue
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_UEIdentityIndexValue
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_UEIdentityIndexValue_indexLength10 * indexLength10;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_UEIdentityIndexValue_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_UEIdentityIndexValue;


// UEIdentityIndexList-MBSGroupPaging
//SEQUENCE OF UEIdentityIndexList-MBSGroupPaging-Item, MIN=1, MAX=maxnoofUEIDIndicesforMBSPaging  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_UEIdentityIndexList_MBSGroupPaging
{
	SI_LinkedList * UEIdentityIndexList_MBSGroupPaging_Item;
} SI_XNAP_DT_UEIdentityIndexList_MBSGroupPaging;


// UEIdentityIndexListMBSGroupPagingValue_uEIdentityIndexValueMBSGroupPaging
// BITSTRING,BIT STRING(SIZE(10))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_UEIdentityIndexListMBSGroupPagingValue_uEIdentityIndexValueMBSGroupPaging
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_UEIdentityIndexListMBSGroupPagingValue_uEIdentityIndexValueMBSGroupPaging;

// UEIdentityIndexList-MBSGroupPagingValue
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_UEIdentityIndexList_MBSGroupPagingValue
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_UEIdentityIndexListMBSGroupPagingValue_uEIdentityIndexValueMBSGroupPaging * uEIdentityIndexValueMBSGroupPaging;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_UEIdentityIndexValueMBSGroupPaging_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_UEIdentityIndexList_MBSGroupPagingValue;


// UESpecificDRX
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_UESpecificDRX
{
	__si_xnap__UESpecificDRX_v32_val,
	__si_xnap__UESpecificDRX_v64_val,
	__si_xnap__UESpecificDRX_v128_val,
	__si_xnap__UESpecificDRX_v256_val
} SI_XNAP_DT_UESpecificDRX;


// L:2561
typedef enum __si_xnap_dt_UESpecificDRX2
{
	UESpecificDRX_v32_val,
	UESpecificDRX_v64_val,
	UESpecificDRX_v128_val,
	UESpecificDRX_v256_val
} SI_XNAP_DT_UESpecificDRX2;


// L:2588
typedef struct __si_xnap_dt_UESpecificDRX_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_UESpecificDRX_EnumProxy;


// UEIdentityIndexList-MBSGroupPaging-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UEIdentityIndexList_MBSGroupPaging_Item
{
	SI_XNAP_DT_UEIdentityIndexList_MBSGroupPagingValue * ueIdentityIndexList_MBSGroupPagingValue;

	uint8_t selected_epagingDRX;
	int extSelected_epagingDRX;
	int isPresent_pagingDRX;

} SI_XNAP_DT_UEIdentityIndexList_MBSGroupPaging_Item;


// UERadioCapabilityForPagingOfNR
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_UERadioCapabilityForPagingOfNR
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_UERadioCapabilityForPagingOfNR;

// UERadioCapabilityForPagingOfEUTRA
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_UERadioCapabilityForPagingOfEUTRA
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_UERadioCapabilityForPagingOfEUTRA;

// UERadioCapabilityForPaging
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UERadioCapabilityForPaging
{
	SI_XNAP_DT_UERadioCapabilityForPagingOfNR * uERadioCapabilityForPagingOfNR;
	int isPresent_uERadioCapabilityForPagingOfNR;

	SI_XNAP_DT_UERadioCapabilityForPagingOfEUTRA * uERadioCapabilityForPagingOfEUTRA;
	int isPresent_uERadioCapabilityForPagingOfEUTRA;

} SI_XNAP_DT_UERadioCapabilityForPaging;


// UERadioCapabilityID
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_UERadioCapabilityID
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_UERadioCapabilityID;

// UERANPagingIdentity_i-RNTI-full
// BITSTRING,BIT STRING(SIZE(40))
// ADT=0  DT=2
// L:5330
typedef struct __si_xnap_dt_UERANPagingIdentity_i_RNTI_full
{
	unsigned char * data;
	unsigned int length;
	int bitslen;
} SI_XNAP_DT_UERANPagingIdentity_i_RNTI_full;

// UERANPagingIdentity
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_UERANPagingIdentity
{
	union 
	{
		// ParserName = BITSTRING - NonEP false;
		SI_XNAP_DT_UERANPagingIdentity_i_RNTI_full * i_RNTI_full;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_UERANPagingIdentity_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_UERANPagingIdentity;


// UERLFReportContainerLTEExtendBand
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_UERLFReportContainerLTEExtendBand
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_UERLFReportContainerLTEExtendBand;

// UERLFReportContainerLTEExtension
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UERLFReportContainerLTEExtension
{
	SI_XNAP_DT_UERLFReportContainerLTE * ueRLFReportContainerLTE;

	SI_XNAP_DT_UERLFReportContainerLTEExtendBand * ueRLFReportContainerLTEExtendBand;

} SI_XNAP_DT_UERLFReportContainerLTEExtension;


// UESliceMaximumBitRateList
//SEQUENCE OF UESliceMaximumBitRate-Item, MIN=1, MAX= maxnoofSMBR  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_UESliceMaximumBitRateList
{
	SI_LinkedList * UESliceMaximumBitRate_Item;
} SI_XNAP_DT_UESliceMaximumBitRateList;


// UESliceMaximumBitRate-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UESliceMaximumBitRate_Item
{
	SI_XNAP_DT_S_NSSAI * s_NSSAI;

	unsigned long long int dl_UE_Slice_MBR;

	unsigned long long int ul_UE_Slice_MBR;

} SI_XNAP_DT_UESliceMaximumBitRate_Item;


// ULForwardingProposal
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ULForwardingProposal
{
	__si_xnap__ULForwardingProposal_ul_forwarding_proposed_val
} SI_XNAP_DT_ULForwardingProposal;


// L:2561
typedef enum __si_xnap_dt_ULForwardingProposal2
{
	ULForwardingProposal_ul_forwarding_proposed_val
} SI_XNAP_DT_ULForwardingProposal2;


// L:2588
typedef struct __si_xnap_dt_ULForwardingProposal_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ULForwardingProposal_EnumProxy;


// UPTransportParametersItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UPTransportParametersItem
{
	SI_XNAP_DT_UPTransportLayerInformation * upTNLInfo;

	unsigned long long int cellGroupID;

} SI_XNAP_DT_UPTransportParametersItem;


// UserPlaneTrafficActivityReport
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_UserPlaneTrafficActivityReport
{
	__si_xnap__UserPlaneTrafficActivityReport_inactive_val,
	__si_xnap__UserPlaneTrafficActivityReport_re_activated_val
} SI_XNAP_DT_UserPlaneTrafficActivityReport;


// L:2561
typedef enum __si_xnap_dt_UserPlaneTrafficActivityReport2
{
	UserPlaneTrafficActivityReport_inactive_val,
	UserPlaneTrafficActivityReport_re_activated_val
} SI_XNAP_DT_UserPlaneTrafficActivityReport2;


// L:2588
typedef struct __si_xnap_dt_UserPlaneTrafficActivityReport_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_UserPlaneTrafficActivityReport_EnumProxy;


// UserPlaneFailureType
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_UserPlaneFailureType
{
	__si_xnap__UserPlaneFailureType_gtp_u_error_indication_received_val,
	__si_xnap__UserPlaneFailureType_up_path_failure_val
} SI_XNAP_DT_UserPlaneFailureType;


// L:2561
typedef enum __si_xnap_dt_UserPlaneFailureType2
{
	UserPlaneFailureType_gtp_u_error_indication_received_val,
	UserPlaneFailureType_up_path_failure_val
} SI_XNAP_DT_UserPlaneFailureType2;


// L:2588
typedef struct __si_xnap_dt_UserPlaneFailureType_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_UserPlaneFailureType_EnumProxy;


// UserPlaneFailureIndication
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UserPlaneFailureIndication
{
	uint8_t selected_euserPlaneFailureType;
	int extSelected_euserPlaneFailureType;

	SI_XNAP_DT_UPTransportLayerInformation * dL_NG_U_TNLatNG_RAN;

	SI_XNAP_DT_UPTransportLayerInformation * uL_NG_U_TNLatNG_RAN;

} SI_XNAP_DT_UserPlaneFailureIndication;


// URIaddress
// PrintableString,VisibleString
// ADT=0  DT=2
// L:6212
typedef struct __si_xnap_dt_URIaddress
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_URIaddress;

// UEAssociatedInfoResult-List
//SEQUENCE OF UEAssociatedInfoResult-Item, MIN=1, MAX=maxnoofUEReports  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_UEAssociatedInfoResult_List
{
	SI_LinkedList * UEAssociatedInfoResult_Item;
} SI_XNAP_DT_UEAssociatedInfoResult_List;


// UEPerformance
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UEPerformance
{
	unsigned long long int dL_UE_AverageThroughput;
	int isPresent_dL_UE_AverageThroughput;

	unsigned long long int uL_UE_AverageThroughput;
	int isPresent_uL_UE_AverageThroughput;

	SI_XNAP_DT_AveragePacketDelay * uE_AveragePacketDelay;
	int isPresent_uE_AveragePacketDelay;

	unsigned long long int uE_AveragePacketLossDL;
	int isPresent_uE_AveragePacketLossDL;

} SI_XNAP_DT_UEPerformance;


// UEAssociatedInfoResult-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UEAssociatedInfoResult_Item
{
	unsigned long long int uEAssistantIdentifier;

	SI_XNAP_DT_UEPerformance * uEPerformance;
	int isPresent_uEPerformance;

	SI_XNAP_DT_MeasuredUETrajectory * measuredUETrajectory;
	int isPresent_measuredUETrajectory;

} SI_XNAP_DT_UEAssociatedInfoResult_Item;


// UEPerformanceCollectionConfiguration_collectionTimeDurationForUEPerformance
// INTEGER,INTEGER(1..5000,...),MIN=1,MAX=5000  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_UEPerformanceCollectionConfiguration_collectionTimeDurationForUEPerformance
{
	unsigned long long int data;
} SI_XNAP_DT_UEPerformanceCollectionConfiguration_collectionTimeDurationForUEPerformance;

// UEPerformanceCollectionConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UEPerformanceCollectionConfiguration
{
	unsigned long long int collectionTimeDurationForUEPerformance;

} SI_XNAP_DT_UEPerformanceCollectionConfiguration;


// UETrajectoryCollectionConfiguration_collectionTimeDurationForUETrajectory
// INTEGER,INTEGER(1..4096,...),MIN=1,MAX=4096  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_UETrajectoryCollectionConfiguration_collectionTimeDurationForUETrajectory
{
	unsigned long long int data;
} SI_XNAP_DT_UETrajectoryCollectionConfiguration_collectionTimeDurationForUETrajectory;

// UETrajectoryCollectionConfiguration_numberOfVisitedCells
// INTEGER,INTEGER(1..16,...),MIN=1,MAX=16  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_UETrajectoryCollectionConfiguration_numberOfVisitedCells
{
	unsigned long long int data;
} SI_XNAP_DT_UETrajectoryCollectionConfiguration_numberOfVisitedCells;

// UETrajectoryCollectionConfiguration
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UETrajectoryCollectionConfiguration
{
	unsigned long long int collectionTimeDurationForUETrajectory;

	unsigned long long int numberOfVisitedCells;
	int isPresent_numberOfVisitedCells;

} SI_XNAP_DT_UETrajectoryCollectionConfiguration;


// VolumeTimedReportItem_startTimeStamp
// OCTETSTRING,OCTET STRING(SIZE(4))
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_VolumeTimedReportItem_startTimeStamp
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_VolumeTimedReportItem_startTimeStamp;

// VolumeTimedReportItem_endTimeStamp
// OCTETSTRING,OCTET STRING(SIZE(4))
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_VolumeTimedReportItem_endTimeStamp
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_VolumeTimedReportItem_endTimeStamp;

// VolumeTimedReportItem_usageCountUL
// INTEGER,INTEGER(0..18446744073709551615),MIN=0,MAX=18446744073709552000  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_VolumeTimedReportItem_usageCountUL
{
	unsigned long long int data;
} SI_XNAP_DT_VolumeTimedReportItem_usageCountUL;

// VolumeTimedReportItem_usageCountDL
// INTEGER,INTEGER(0..18446744073709551615),MIN=0,MAX=18446744073709552000  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_VolumeTimedReportItem_usageCountDL
{
	unsigned long long int data;
} SI_XNAP_DT_VolumeTimedReportItem_usageCountDL;

// VolumeTimedReport-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_VolumeTimedReport_Item
{
	SI_XNAP_DT_VolumeTimedReportItem_startTimeStamp * startTimeStamp;

	SI_XNAP_DT_VolumeTimedReportItem_endTimeStamp * endTimeStamp;

	unsigned long long int usageCountUL;

	unsigned long long int usageCountDL;

} SI_XNAP_DT_VolumeTimedReport_Item;


// WLANName
// OCTETSTRING,OCTET STRING(SIZE(1..32))
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_WLANName
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_WLANName;

// XnBenefitValue
// INTEGER,INTEGER(1..8,...),MIN=1,MAX=8  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_XnBenefitValue
{
	unsigned long long int data;
} SI_XNAP_DT_XnBenefitValue;

// XR-Bcast-Information
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_XR_Bcast_Information
{
	__si_xnap__XR_Bcast_Information_true_val
} SI_XNAP_DT_XR_Bcast_Information;


// L:2561
typedef enum __si_xnap_dt_XR_Bcast_Information2
{
	XR_Bcast_Information_true_val
} SI_XNAP_DT_XR_Bcast_Information2;


// L:2588
typedef struct __si_xnap_dt_XR_Bcast_Information_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_XR_Bcast_Information_EnumProxy;


// FirstDLCount
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_FirstDLCount
{
	SI_XNAP_DT_DRBsSubjectToEarlyStatusTransfer_List * dRBsSubjectToEarlyStatusTransfer;

} SI_XNAP_DT_FirstDLCount;


// DLDiscarding
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_DLDiscarding
{
	SI_XNAP_DT_DRBsSubjectToDLDiscarding_List * dRBsSubjectToDLDiscarding;

} SI_XNAP_DT_DLDiscarding;


// ProcedureStageChoice
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_ProcedureStageChoice
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_FirstDLCount * first_dl_count;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_DLDiscarding * dl_discarding;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_ProcedureStageChoice_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_ProcedureStageChoice;


// RequestedFastMCGRecoveryViaSRB3
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_RequestedFastMCGRecoveryViaSRB3
{
	__si_xnap__RequestedFastMCGRecoveryViaSRB3_true_val
} SI_XNAP_DT_RequestedFastMCGRecoveryViaSRB3;


// L:2561
typedef enum __si_xnap_dt_RequestedFastMCGRecoveryViaSRB32
{
	RequestedFastMCGRecoveryViaSRB3_true_val
} SI_XNAP_DT_RequestedFastMCGRecoveryViaSRB32;


// L:2588
typedef struct __si_xnap_dt_RequestedFastMCGRecoveryViaSRB3_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_RequestedFastMCGRecoveryViaSRB3_EnumProxy;


// AvailableFastMCGRecoveryViaSRB3
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_AvailableFastMCGRecoveryViaSRB3
{
	__si_xnap__AvailableFastMCGRecoveryViaSRB3_true_val
} SI_XNAP_DT_AvailableFastMCGRecoveryViaSRB3;


// L:2561
typedef enum __si_xnap_dt_AvailableFastMCGRecoveryViaSRB32
{
	AvailableFastMCGRecoveryViaSRB3_true_val
} SI_XNAP_DT_AvailableFastMCGRecoveryViaSRB32;


// L:2588
typedef struct __si_xnap_dt_AvailableFastMCGRecoveryViaSRB3_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_AvailableFastMCGRecoveryViaSRB3_EnumProxy;


// Configuration-successfully-applied_m-NG-RANNode-to-S-NG-RANNode-Container
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_Configuration_successfully_applied_m_NG_RANNode_to_S_NG_RANNode_Container
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_Configuration_successfully_applied_m_NG_RANNode_to_S_NG_RANNode_Container;

// Configuration-successfully-applied
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_Configuration_successfully_applied
{
	SI_XNAP_DT_Configuration_successfully_applied_m_NG_RANNode_to_S_NG_RANNode_Container * m_NG_RANNode_to_S_NG_RANNode_Container;
	int isPresent_m_NG_RANNode_to_S_NG_RANNode_Container;

} SI_XNAP_DT_Configuration_successfully_applied;


// Configuration-rejected-by-M-NG-RANNode_m-NG-RANNode-to-S-NG-RANNode-Container
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_Configuration_rejected_by_M_NG_RANNode_m_NG_RANNode_to_S_NG_RANNode_Container
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_Configuration_rejected_by_M_NG_RANNode_m_NG_RANNode_to_S_NG_RANNode_Container;

// Configuration-rejected-by-M-NG-RANNode
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_Configuration_rejected_by_M_NG_RANNode
{
	SI_XNAP_DT_Cause * cause;

	SI_XNAP_DT_Configuration_rejected_by_M_NG_RANNode_m_NG_RANNode_to_S_NG_RANNode_Container * m_NG_RANNode_to_S_NG_RANNode_Container;
	int isPresent_m_NG_RANNode_to_S_NG_RANNode_Container;

} SI_XNAP_DT_Configuration_rejected_by_M_NG_RANNode;


// ResponseType-ReconfComplete
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_ResponseType_ReconfComplete
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_Configuration_successfully_applied * configuration_successfully_applied;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_Configuration_rejected_by_M_NG_RANNode * configuration_rejected_by_M_NG_RANNode;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_ResponseType_ReconfComplete_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_ResponseType_ReconfComplete;


// RequestedFastMCGRecoveryViaSRB3Release
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_RequestedFastMCGRecoveryViaSRB3Release
{
	__si_xnap__RequestedFastMCGRecoveryViaSRB3Release_true_val
} SI_XNAP_DT_RequestedFastMCGRecoveryViaSRB3Release;


// L:2561
typedef enum __si_xnap_dt_RequestedFastMCGRecoveryViaSRB3Release2
{
	RequestedFastMCGRecoveryViaSRB3Release_true_val
} SI_XNAP_DT_RequestedFastMCGRecoveryViaSRB3Release2;


// L:2588
typedef struct __si_xnap_dt_RequestedFastMCGRecoveryViaSRB3Release_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_RequestedFastMCGRecoveryViaSRB3Release_EnumProxy;


// Src-SN-to-Tgt-SNQMCInfoInquiry
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_Src_SN_to_Tgt_SNQMCInfoInquiry
{
	__si_xnap__Src_SN_to_Tgt_SNQMCInfoInquiry_true_val
} SI_XNAP_DT_Src_SN_to_Tgt_SNQMCInfoInquiry;


// L:2561
typedef enum __si_xnap_dt_Src_SN_to_Tgt_SNQMCInfoInquiry2
{
	Src_SN_to_Tgt_SNQMCInfoInquiry_true_val
} SI_XNAP_DT_Src_SN_to_Tgt_SNQMCInfoInquiry2;


// L:2588
typedef struct __si_xnap_dt_Src_SN_to_Tgt_SNQMCInfoInquiry_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_Src_SN_to_Tgt_SNQMCInfoInquiry_EnumProxy;


// ReleaseFastMCGRecoveryViaSRB3
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_ReleaseFastMCGRecoveryViaSRB3
{
	__si_xnap__ReleaseFastMCGRecoveryViaSRB3_true_val
} SI_XNAP_DT_ReleaseFastMCGRecoveryViaSRB3;


// L:2561
typedef enum __si_xnap_dt_ReleaseFastMCGRecoveryViaSRB32
{
	ReleaseFastMCGRecoveryViaSRB3_true_val
} SI_XNAP_DT_ReleaseFastMCGRecoveryViaSRB32;


// L:2588
typedef struct __si_xnap_dt_ReleaseFastMCGRecoveryViaSRB3_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_ReleaseFastMCGRecoveryViaSRB3_EnumProxy;


//TODO: DataType ->ConfigurationUpdate-gNB<- Got NULL  L:7884

//TODO: DataType ->ConfigurationUpdate-ng-eNB<- Got NULL  L:7884

// ConfigurationUpdateInitiatingNodeChoice
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_ConfigurationUpdateInitiatingNodeChoice
{
	union 
	{
		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_ConfigurationUpdate_gNB * gNB;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_ConfigurationUpdate_ng_eNB * ng_eNB;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_ServedCellsToUpdateInitiatingNodeChoice_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_ConfigurationUpdateInitiatingNodeChoice;


// RespondingNodeTypeConfigUpdateAck-ng-eNB
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RespondingNodeTypeConfigUpdateAck_ng_eNB
{
} SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck_ng_eNB;


// RespondingNodeTypeConfigUpdateAck-gNB
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_RespondingNodeTypeConfigUpdateAck_gNB
{
	SI_XNAP_DT_ServedCells_NR * served_NR_Cells;
	int isPresent_served_NR_Cells;

} SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck_gNB;


// RespondingNodeTypeConfigUpdateAck
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_RespondingNodeTypeConfigUpdateAck
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck_ng_eNB * ng_eNB;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck_gNB * gNB;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck;


// ResourceCoordRequest-ng-eNB-initiated_listofE-UTRACells
//SEQUENCE OF E-UTRA-CGI, MIN=1, MAX= maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ResourceCoordRequest_ng_eNB_initiated_listofE_UTRACells
{
	SI_LinkedList * E_UTRA_CGI;
} SI_XNAP_DT_ResourceCoordRequest_ng_eNB_initiated_listofE_UTRACells;


// ResourceCoordRequest-ng-eNB-initiated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ResourceCoordRequest_ng_eNB_initiated
{
	SI_XNAP_DT_DataTrafficResourceIndication * dataTrafficResourceIndication;

	unsigned long long int spectrumSharingGroupID;

	SI_XNAP_DT_ResourceCoordRequest_ng_eNB_initiated_listofE_UTRACells * listofE_UTRACells;
	int isPresent_listofE_UTRACells;

} SI_XNAP_DT_ResourceCoordRequest_ng_eNB_initiated;


// ResourceCoordRequest-gNB-initiated_listofE-UTRACells
//SEQUENCE OF E-UTRA-CGI, MIN=1, MAX= maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ResourceCoordRequest_gNB_initiated_listofE_UTRACells
{
	SI_LinkedList * E_UTRA_CGI;
} SI_XNAP_DT_ResourceCoordRequest_gNB_initiated_listofE_UTRACells;


// ResourceCoordRequest-gNB-initiated_listofNRCells
//SEQUENCE OF NR-CGI, MIN=1, MAX= maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ResourceCoordRequest_gNB_initiated_listofNRCells
{
	SI_LinkedList * NR_CGI;
} SI_XNAP_DT_ResourceCoordRequest_gNB_initiated_listofNRCells;


// ResourceCoordRequest-gNB-initiated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ResourceCoordRequest_gNB_initiated
{
	SI_XNAP_DT_DataTrafficResourceIndication * dataTrafficResourceIndication;

	SI_XNAP_DT_ResourceCoordRequest_gNB_initiated_listofE_UTRACells * listofE_UTRACells;
	int isPresent_listofE_UTRACells;

	unsigned long long int spectrumSharingGroupID;

	SI_XNAP_DT_ResourceCoordRequest_gNB_initiated_listofNRCells * listofNRCells;
	int isPresent_listofNRCells;

} SI_XNAP_DT_ResourceCoordRequest_gNB_initiated;


// InitiatingNodeType-ResourceCoordRequest
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_InitiatingNodeType_ResourceCoordRequest
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_ResourceCoordRequest_ng_eNB_initiated * ng_eNB;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_ResourceCoordRequest_gNB_initiated * gNB;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_InitiatingNodeType_ResourceCoordRequest_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_InitiatingNodeType_ResourceCoordRequest;


// ResourceCoordResponse-ng-eNB-initiated_listofE-UTRACells
//SEQUENCE OF E-UTRA-CGI, MIN=1, MAX= maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ResourceCoordResponse_ng_eNB_initiated_listofE_UTRACells
{
	SI_LinkedList * E_UTRA_CGI;
} SI_XNAP_DT_ResourceCoordResponse_ng_eNB_initiated_listofE_UTRACells;


// ResourceCoordResponse-ng-eNB-initiated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ResourceCoordResponse_ng_eNB_initiated
{
	SI_XNAP_DT_DataTrafficResourceIndication * dataTrafficResourceIndication;

	unsigned long long int spectrumSharingGroupID;

	SI_XNAP_DT_ResourceCoordResponse_ng_eNB_initiated_listofE_UTRACells * listofE_UTRACells;
	int isPresent_listofE_UTRACells;

} SI_XNAP_DT_ResourceCoordResponse_ng_eNB_initiated;


// ResourceCoordResponse-gNB-initiated_listofNRCells
//SEQUENCE OF NR-CGI, MIN=1, MAX= maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ResourceCoordResponse_gNB_initiated_listofNRCells
{
	SI_LinkedList * NR_CGI;
} SI_XNAP_DT_ResourceCoordResponse_gNB_initiated_listofNRCells;


// ResourceCoordResponse-gNB-initiated
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ResourceCoordResponse_gNB_initiated
{
	SI_XNAP_DT_DataTrafficResourceIndication * dataTrafficResourceIndication;

	unsigned long long int spectrumSharingGroupID;

	SI_XNAP_DT_ResourceCoordResponse_gNB_initiated_listofNRCells * listofNRCells;
	int isPresent_listofNRCells;

} SI_XNAP_DT_ResourceCoordResponse_gNB_initiated;


// RespondingNodeType-ResourceCoordResponse
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_RespondingNodeType_ResourceCoordResponse
{
	union 
	{
		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_ResourceCoordResponse_ng_eNB_initiated * ng_eNB;

		// ParserName = SEQUENCE - NonEP false;
		SI_XNAP_DT_ResourceCoordResponse_gNB_initiated * gNB;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_RespondingNodeType_ResourceCoordResponse_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_RespondingNodeType_ResourceCoordResponse;


// ServedCellsToActivate_nr_cells
//SEQUENCE OF NR-CGI, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ServedCellsToActivate_nr_cells
{
	SI_LinkedList * NR_CGI;
} SI_XNAP_DT_ServedCellsToActivate_nr_cells;


// ServedCellsToActivate_e_utra_cells
//SEQUENCE OF E-UTRA-CGI, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ServedCellsToActivate_e_utra_cells
{
	SI_LinkedList * E_UTRA_CGI;
} SI_XNAP_DT_ServedCellsToActivate_e_utra_cells;


// ServedCellsToActivate
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_ServedCellsToActivate
{
	union 
	{
		// ParserName = SEQUENCE_OF - NonEP false;
		SI_XNAP_DT_ServedCellsToActivate_nr_cells * nr_cells;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_XNAP_DT_ServedCellsToActivate_e_utra_cells * e_utra_cells;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_ServedCellsToActivate_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_ServedCellsToActivate;


// ActivatedServedCells_nr_cells
//SEQUENCE OF NR-CGI, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ActivatedServedCells_nr_cells
{
	SI_LinkedList * NR_CGI;
} SI_XNAP_DT_ActivatedServedCells_nr_cells;


// ActivatedServedCells_e_utra_cells
//SEQUENCE OF E-UTRA-CGI, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ActivatedServedCells_e_utra_cells
{
	SI_LinkedList * E_UTRA_CGI;
} SI_XNAP_DT_ActivatedServedCells_e_utra_cells;


// ActivatedServedCells
// ADT=0  DT=1
// L:3756
typedef struct __si_xnap_dt_ActivatedServedCells
{
	union 
	{
		// ParserName = SEQUENCE_OF - NonEP false;
		SI_XNAP_DT_ActivatedServedCells_nr_cells * nr_cells;

		// ParserName = SEQUENCE_OF - NonEP false;
		SI_XNAP_DT_ActivatedServedCells_e_utra_cells * e_utra_cells;

		// ParserName =  - NonEP true;
		SI_XNAP_DT_PDU_ActivatedServedCells_ExtIEs * choice_extension;

	} u;

	// should be 0 based index of filled structure
	uint8_t SelectedChoice; 
} SI_XNAP_DT_ActivatedServedCells;


// UEContextInfoHORequest_rrc-Context
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_UEContextInfoHORequest_rrc_Context
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_UEContextInfoHORequest_rrc_Context;

// UEContextInfoHORequest
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UEContextInfoHORequest
{
	unsigned long long int ng_c_UE_reference;

	SI_XNAP_DT_CPTransportLayerInformation * cp_TNL_info_source;

	SI_XNAP_DT_UESecurityCapabilities * ueSecurityCapabilities;

	SI_XNAP_DT_AS_SecurityInformation * securityInformation;

	unsigned long long int indexToRatFrequencySelectionPriority;
	int isPresent_indexToRatFrequencySelectionPriority;

	SI_XNAP_DT_UEAggregateMaximumBitRate * ue_AMBR;

	SI_XNAP_DT_PDUSessionResourcesToBeSetup_List * pduSessionResourcesToBeSetup_List;

	SI_XNAP_DT_UEContextInfoHORequest_rrc_Context * rrc_Context;

	SI_XNAP_DT_LocationReportingInformation * locationReportingInformation;
	int isPresent_locationReportingInformation;

	SI_XNAP_DT_MobilityRestrictionList * mrl;
	int isPresent_mrl;

} SI_XNAP_DT_UEContextInfoHORequest;


// UEContextRefAtSN-HORequest
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UEContextRefAtSN_HORequest
{
	SI_XNAP_DT_GlobalNG_RANNode_ID * globalNG_RANNode_ID;

	unsigned long long int sN_NG_RANnodeUEXnAPID;

} SI_XNAP_DT_UEContextRefAtSN_HORequest;


// PDUSessionToBeAddedAddReq
//SEQUENCE OF PDUSessionToBeAddedAddReq-Item, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSessionToBeAddedAddReq
{
	SI_LinkedList * PDUSessionToBeAddedAddReq_Item;
} SI_XNAP_DT_PDUSessionToBeAddedAddReq;


// PDUSessionToBeAddedAddReq-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionToBeAddedAddReq_Item
{
	unsigned long long int pduSessionId;

	SI_XNAP_DT_S_NSSAI * s_NSSAI;

	SI_XNAP_DT_PDUSessionAggregateMaximumBitRate * sN_PDUSessionAMBR;
	int isPresent_sN_PDUSessionAMBR;

	SI_XNAP_DT_PDUSessionResourceSetupInfo_SNterminated * sn_terminated;
	int isPresent_sn_terminated;

	SI_XNAP_DT_PDUSessionResourceSetupInfo_MNterminated * mn_terminated;
	int isPresent_mn_terminated;

} SI_XNAP_DT_PDUSessionToBeAddedAddReq_Item;


// PDUSessionAdmittedAddedAddReqAck
//SEQUENCE OF PDUSessionAdmittedAddedAddReqAck-Item, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSessionAdmittedAddedAddReqAck
{
	SI_LinkedList * PDUSessionAdmittedAddedAddReqAck_Item;
} SI_XNAP_DT_PDUSessionAdmittedAddedAddReqAck;


// PDUSessionAdmittedAddedAddReqAck-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionAdmittedAddedAddReqAck_Item
{
	unsigned long long int pduSessionId;

	SI_XNAP_DT_PDUSessionResourceSetupResponseInfo_SNterminated * sn_terminated;
	int isPresent_sn_terminated;

	SI_XNAP_DT_PDUSessionResourceSetupResponseInfo_MNterminated * mn_terminated;
	int isPresent_mn_terminated;

} SI_XNAP_DT_PDUSessionAdmittedAddedAddReqAck_Item;


// PDUSessionNotAdmittedAddReqAck
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionNotAdmittedAddReqAck
{
	SI_XNAP_DT_PDUSessionResourcesNotAdmitted_List * pduSessionResourcesNotAdmitted_SNterminated;
	int isPresent_pduSessionResourcesNotAdmitted_SNterminated;

	SI_XNAP_DT_PDUSessionResourcesNotAdmitted_List * pduSessionResourcesNotAdmitted_MNterminated;
	int isPresent_pduSessionResourcesNotAdmitted_MNterminated;

} SI_XNAP_DT_PDUSessionNotAdmittedAddReqAck;


// ResponseInfo-ReconfCompl
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ResponseInfo_ReconfCompl
{
	SI_XNAP_DT_ResponseType_ReconfComplete * responseType_ReconfComplete;

} SI_XNAP_DT_ResponseInfo_ReconfCompl;


// PDUSessionsToBeAdded-SNModRequest-List
//SEQUENCE OF PDUSessionsToBeAdded-SNModRequest-Item, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSessionsToBeAdded_SNModRequest_List
{
	SI_LinkedList * PDUSessionsToBeAdded_SNModRequest_Item;
} SI_XNAP_DT_PDUSessionsToBeAdded_SNModRequest_List;


// PDUSessionsToBeModified-SNModRequest-List
//SEQUENCE OF PDUSessionsToBeModified-SNModRequest-Item, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSessionsToBeModified_SNModRequest_List
{
	SI_LinkedList * PDUSessionsToBeModified_SNModRequest_Item;
} SI_XNAP_DT_PDUSessionsToBeModified_SNModRequest_List;


// PDUSessionsToBeReleased-SNModRequest-List
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionsToBeReleased_SNModRequest_List
{
	SI_XNAP_DT_PDUSession_List_withCause * pdu_session_list;
	int isPresent_pdu_session_list;

} SI_XNAP_DT_PDUSessionsToBeReleased_SNModRequest_List;


// UEContextInfo-SNModRequest
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UEContextInfo_SNModRequest
{
	SI_XNAP_DT_UESecurityCapabilities * ueSecurityCapabilities;
	int isPresent_ueSecurityCapabilities;

	SI_XNAP_DT_S_NG_RANnode_SecurityKey * s_ng_RANnode_SecurityKey;
	int isPresent_s_ng_RANnode_SecurityKey;

	SI_XNAP_DT_UEAggregateMaximumBitRate * s_ng_RANnodeUE_AMBR;
	int isPresent_s_ng_RANnodeUE_AMBR;

	unsigned long long int indexToRatFrequencySelectionPriority;
	int isPresent_indexToRatFrequencySelectionPriority;

	uint8_t selected_elowerLayerPresenceStatusChange;
	int extSelected_elowerLayerPresenceStatusChange;
	int isPresent_lowerLayerPresenceStatusChange;

	SI_XNAP_DT_PDUSessionsToBeAdded_SNModRequest_List * pduSessionResourceToBeAdded;
	int isPresent_pduSessionResourceToBeAdded;

	SI_XNAP_DT_PDUSessionsToBeModified_SNModRequest_List * pduSessionResourceToBeModified;
	int isPresent_pduSessionResourceToBeModified;

	SI_XNAP_DT_PDUSessionsToBeReleased_SNModRequest_List * pduSessionResourceToBeReleased;
	int isPresent_pduSessionResourceToBeReleased;

} SI_XNAP_DT_UEContextInfo_SNModRequest;


// PDUSessionsToBeAdded-SNModRequest-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionsToBeAdded_SNModRequest_Item
{
	unsigned long long int pduSessionId;

	SI_XNAP_DT_S_NSSAI * s_NSSAI;

	SI_XNAP_DT_PDUSessionAggregateMaximumBitRate * sN_PDUSessionAMBR;
	int isPresent_sN_PDUSessionAMBR;

	SI_XNAP_DT_PDUSessionResourceSetupInfo_SNterminated * sn_terminated;
	int isPresent_sn_terminated;

	SI_XNAP_DT_PDUSessionResourceSetupInfo_MNterminated * mn_terminated;
	int isPresent_mn_terminated;

} SI_XNAP_DT_PDUSessionsToBeAdded_SNModRequest_Item;


// PDUSessionsToBeModified-SNModRequest-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionsToBeModified_SNModRequest_Item
{
	unsigned long long int pduSessionId;

	SI_XNAP_DT_PDUSessionAggregateMaximumBitRate * sN_PDUSessionAMBR;
	int isPresent_sN_PDUSessionAMBR;

	SI_XNAP_DT_PDUSessionResourceModificationInfo_SNterminated * sn_terminated;
	int isPresent_sn_terminated;

	SI_XNAP_DT_PDUSessionResourceModificationInfo_MNterminated * mn_terminated;
	int isPresent_mn_terminated;

} SI_XNAP_DT_PDUSessionsToBeModified_SNModRequest_Item;


// PDUSessionAdmittedToBeAddedSNModResponse
//SEQUENCE OF PDUSessionAdmittedToBeAddedSNModResponse-Item, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSessionAdmittedToBeAddedSNModResponse
{
	SI_LinkedList * PDUSessionAdmittedToBeAddedSNModResponse_Item;
} SI_XNAP_DT_PDUSessionAdmittedToBeAddedSNModResponse;


// PDUSessionAdmittedToBeModifiedSNModResponse
//SEQUENCE OF PDUSessionAdmittedToBeModifiedSNModResponse-Item, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSessionAdmittedToBeModifiedSNModResponse
{
	SI_LinkedList * PDUSessionAdmittedToBeModifiedSNModResponse_Item;
} SI_XNAP_DT_PDUSessionAdmittedToBeModifiedSNModResponse;


// PDUSessionAdmittedToBeReleasedSNModResponse
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionAdmittedToBeReleasedSNModResponse
{
	SI_XNAP_DT_PDUSession_List_withDataForwardingRequest * sn_terminated;
	int isPresent_sn_terminated;

	SI_XNAP_DT_PDUSession_List_withCause * mn_terminated;
	int isPresent_mn_terminated;

} SI_XNAP_DT_PDUSessionAdmittedToBeReleasedSNModResponse;


// PDUSessionAdmitted-SNModResponse
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionAdmitted_SNModResponse
{
	SI_XNAP_DT_PDUSessionAdmittedToBeAddedSNModResponse * pduSessionResourcesAdmittedToBeAdded;
	int isPresent_pduSessionResourcesAdmittedToBeAdded;

	SI_XNAP_DT_PDUSessionAdmittedToBeModifiedSNModResponse * pduSessionResourcesAdmittedToBeModified;
	int isPresent_pduSessionResourcesAdmittedToBeModified;

	SI_XNAP_DT_PDUSessionAdmittedToBeReleasedSNModResponse * pduSessionResourcesAdmittedToBeReleased;
	int isPresent_pduSessionResourcesAdmittedToBeReleased;

} SI_XNAP_DT_PDUSessionAdmitted_SNModResponse;


// PDUSessionAdmittedToBeAddedSNModResponse-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionAdmittedToBeAddedSNModResponse_Item
{
	unsigned long long int pduSessionId;

	SI_XNAP_DT_PDUSessionResourceSetupResponseInfo_SNterminated * sn_terminated;
	int isPresent_sn_terminated;

	SI_XNAP_DT_PDUSessionResourceSetupResponseInfo_MNterminated * mn_terminated;
	int isPresent_mn_terminated;

} SI_XNAP_DT_PDUSessionAdmittedToBeAddedSNModResponse_Item;


// PDUSessionAdmittedToBeModifiedSNModResponse-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionAdmittedToBeModifiedSNModResponse_Item
{
	unsigned long long int pduSessionId;

	SI_XNAP_DT_PDUSessionResourceModificationResponseInfo_SNterminated * sn_terminated;
	int isPresent_sn_terminated;

	SI_XNAP_DT_PDUSessionResourceModificationResponseInfo_MNterminated * mn_terminated;
	int isPresent_mn_terminated;

} SI_XNAP_DT_PDUSessionAdmittedToBeModifiedSNModResponse_Item;


// PDUSessionNotAdmitted-SNModResponse
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionNotAdmitted_SNModResponse
{
	SI_XNAP_DT_PDUSession_List * pdu_Session_List;
	int isPresent_pdu_Session_List;

} SI_XNAP_DT_PDUSessionNotAdmitted_SNModResponse;


// PDUSessionDataForwarding-SNModResponse
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionDataForwarding_SNModResponse
{
	SI_XNAP_DT_PDUSession_List_withDataForwardingRequest * sn_terminated;

} SI_XNAP_DT_PDUSessionDataForwarding_SNModResponse;


// PDUSessionToBeModifiedSNModRequired
//SEQUENCE OF PDUSessionToBeModifiedSNModRequired-Item, MIN=1, MAX= maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSessionToBeModifiedSNModRequired
{
	SI_LinkedList * PDUSessionToBeModifiedSNModRequired_Item;
} SI_XNAP_DT_PDUSessionToBeModifiedSNModRequired;


// PDUSessionToBeModifiedSNModRequired-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionToBeModifiedSNModRequired_Item
{
	unsigned long long int pduSessionId;

	SI_XNAP_DT_PDUSessionResourceModRqdInfo_SNterminated * sn_terminated;
	int isPresent_sn_terminated;

	SI_XNAP_DT_PDUSessionResourceModRqdInfo_MNterminated * mn_terminated;
	int isPresent_mn_terminated;

} SI_XNAP_DT_PDUSessionToBeModifiedSNModRequired_Item;


// PDUSessionToBeReleasedSNModRequired
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionToBeReleasedSNModRequired
{
	SI_XNAP_DT_PDUSession_List_withDataForwardingRequest * sn_terminated;
	int isPresent_sn_terminated;

	SI_XNAP_DT_PDUSession_List_withCause * mn_terminated;
	int isPresent_mn_terminated;

} SI_XNAP_DT_PDUSessionToBeReleasedSNModRequired;


// PDUSessionAdmittedModSNModConfirm
//SEQUENCE OF PDUSessionAdmittedModSNModConfirm-Item, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSessionAdmittedModSNModConfirm
{
	SI_LinkedList * PDUSessionAdmittedModSNModConfirm_Item;
} SI_XNAP_DT_PDUSessionAdmittedModSNModConfirm;


// PDUSessionAdmittedModSNModConfirm-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionAdmittedModSNModConfirm_Item
{
	unsigned long long int pduSessionId;

	SI_XNAP_DT_PDUSessionResourceModConfirmInfo_SNterminated * sn_terminated;
	int isPresent_sn_terminated;

	SI_XNAP_DT_PDUSessionResourceModConfirmInfo_MNterminated * mn_terminated;
	int isPresent_mn_terminated;

} SI_XNAP_DT_PDUSessionAdmittedModSNModConfirm_Item;


// PDUSessionReleasedSNModConfirm
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionReleasedSNModConfirm
{
	SI_XNAP_DT_PDUSession_List_withDataForwardingFromTarget * sn_terminated;
	int isPresent_sn_terminated;

	SI_XNAP_DT_PDUSession_List * mn_terminated;
	int isPresent_mn_terminated;

} SI_XNAP_DT_PDUSessionReleasedSNModConfirm;


// PDUSessionToBeReleasedList-RelReqAck
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionToBeReleasedList_RelReqAck
{
	SI_XNAP_DT_PDUSession_List_withDataForwardingRequest * pduSessionsToBeReleasedList_SNterminated;
	int isPresent_pduSessionsToBeReleasedList_SNterminated;

} SI_XNAP_DT_PDUSessionToBeReleasedList_RelReqAck;


// PDUSessionToBeReleasedList-RelRqd
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionToBeReleasedList_RelRqd
{
	SI_XNAP_DT_PDUSession_List_withDataForwardingRequest * pduSessionsToBeReleasedList_SNterminated;
	int isPresent_pduSessionsToBeReleasedList_SNterminated;

} SI_XNAP_DT_PDUSessionToBeReleasedList_RelRqd;


// PDUSessionReleasedList-RelConf
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionReleasedList_RelConf
{
	SI_XNAP_DT_PDUSession_List_withDataForwardingFromTarget * pduSessionsReleasedList_SNterminated;
	int isPresent_pduSessionsReleasedList_SNterminated;

} SI_XNAP_DT_PDUSessionReleasedList_RelConf;


// BearersSubjectToCounterCheck-List
//SEQUENCE OF BearersSubjectToCounterCheck-Item, MIN=1, MAX=maxnoofDRBs  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_BearersSubjectToCounterCheck_List
{
	SI_LinkedList * BearersSubjectToCounterCheck_Item;
} SI_XNAP_DT_BearersSubjectToCounterCheck_List;


// BearersSubjectToCounterCheck-Item_ul-count
// INTEGER,INTEGER(0.. 4294967295),MIN=0,MAX=4294967295  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_BearersSubjectToCounterCheck_Item_ul_count
{
	unsigned long long int data;
} SI_XNAP_DT_BearersSubjectToCounterCheck_Item_ul_count;

// BearersSubjectToCounterCheck-Item_dl-count
// INTEGER,INTEGER(0.. 4294967295),MIN=0,MAX=4294967295  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_BearersSubjectToCounterCheck_Item_dl_count
{
	unsigned long long int data;
} SI_XNAP_DT_BearersSubjectToCounterCheck_Item_dl_count;

// BearersSubjectToCounterCheck-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_BearersSubjectToCounterCheck_Item
{
	unsigned long long int drb_ID;

	unsigned long long int ul_count;

	unsigned long long int dl_count;

} SI_XNAP_DT_BearersSubjectToCounterCheck_Item;


// PDUSession-SNChangeRequired-List
//SEQUENCE OF PDUSession-SNChangeRequired-Item, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSession_SNChangeRequired_List
{
	SI_LinkedList * PDUSession_SNChangeRequired_Item;
} SI_XNAP_DT_PDUSession_SNChangeRequired_List;


// PDUSession-SNChangeRequired-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSession_SNChangeRequired_Item
{
	unsigned long long int pduSessionId;

	SI_XNAP_DT_PDUSessionResourceChangeRequiredInfo_SNterminated * sn_terminated;
	int isPresent_sn_terminated;

	SI_XNAP_DT_PDUSessionResourceChangeRequiredInfo_MNterminated * mn_terminated;
	int isPresent_mn_terminated;

} SI_XNAP_DT_PDUSession_SNChangeRequired_Item;


// PDUSession-SNChangeConfirm-List
//SEQUENCE OF PDUSession-SNChangeConfirm-Item, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSession_SNChangeConfirm_List
{
	SI_LinkedList * PDUSession_SNChangeConfirm_Item;
} SI_XNAP_DT_PDUSession_SNChangeConfirm_List;


// PDUSession-SNChangeConfirm-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSession_SNChangeConfirm_Item
{
	unsigned long long int pduSessionId;

	SI_XNAP_DT_PDUSessionResourceChangeConfirmInfo_SNterminated * sn_terminated;
	int isPresent_sn_terminated;

	SI_XNAP_DT_PDUSessionResourceChangeConfirmInfo_MNterminated * mn_terminated;
	int isPresent_mn_terminated;

} SI_XNAP_DT_PDUSession_SNChangeConfirm_Item;


// SplitSRB-RRCTransfer_rrcContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_SplitSRB_RRCTransfer_rrcContainer
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_SplitSRB_RRCTransfer_rrcContainer;

// SplitSRB-RRCTransfer_srbType
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_SplitSRB_RRCTransfer_srbType
{
	__si_xnap__SplitSRB_RRCTransfer_srbType_srb1_val,
	__si_xnap__SplitSRB_RRCTransfer_srbType_srb2_val
} SI_XNAP_DT_SplitSRB_RRCTransfer_srbType;


// L:2561
typedef enum __si_xnap_dt_SplitSRB_RRCTransfer_srbType2
{
	SplitSRB_RRCTransfer_srbType_srb1_val,
	SplitSRB_RRCTransfer_srbType_srb2_val
} SI_XNAP_DT_SplitSRB_RRCTransfer_srbType2;


// L:2588
typedef struct __si_xnap_dt_SplitSRB_RRCTransfer_srbType_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_SplitSRB_RRCTransfer_srbType_EnumProxy;


// SplitSRB-RRCTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SplitSRB_RRCTransfer
{
	SI_XNAP_DT_SplitSRB_RRCTransfer_rrcContainer * rrcContainer;
	int isPresent_rrcContainer;

	uint8_t selected_esrbType;
	int extSelected_esrbType;

	unsigned long long int deliveryStatus;
	int isPresent_deliveryStatus;

} SI_XNAP_DT_SplitSRB_RRCTransfer;


// UEReportRRCTransfer_rrcContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_UEReportRRCTransfer_rrcContainer
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_UEReportRRCTransfer_rrcContainer;

// UEReportRRCTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_UEReportRRCTransfer
{
	SI_XNAP_DT_UEReportRRCTransfer_rrcContainer * rrcContainer;

} SI_XNAP_DT_UEReportRRCTransfer;


// FastMCGRecoveryRRCTransfer_rrcContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_FastMCGRecoveryRRCTransfer_rrcContainer
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_FastMCGRecoveryRRCTransfer_rrcContainer;

// FastMCGRecoveryRRCTransfer
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_FastMCGRecoveryRRCTransfer
{
	SI_XNAP_DT_FastMCGRecoveryRRCTransfer_rrcContainer * rrcContainer;

} SI_XNAP_DT_FastMCGRecoveryRRCTransfer;


// SDT-SRB-between-NewNode-OldNode_rrcContainer
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_SDT_SRB_between_NewNode_OldNode_rrcContainer
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_SDT_SRB_between_NewNode_OldNode_rrcContainer;

// SDT-SRB-between-NewNode-OldNode
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SDT_SRB_between_NewNode_OldNode
{
	SI_XNAP_DT_SDT_SRB_between_NewNode_OldNode_rrcContainer * rrcContainer;

	unsigned long long int srb_ID;

} SI_XNAP_DT_SDT_SRB_between_NewNode_OldNode;


// QoE-Measurement-Results_qOEReference
// OCTETSTRING,OCTET STRING(SIZE(6))
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_QoE_Measurement_Results_qOEReference
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_QoE_Measurement_Results_qOEReference;

// QoE-Measurement-Results_rrcContainerForRVQoEReport
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_QoE_Measurement_Results_rrcContainerForRVQoEReport
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_QoE_Measurement_Results_rrcContainerForRVQoEReport;

// QoE-Measurement-Results_rrcContainerForQoEReport
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_QoE_Measurement_Results_rrcContainerForQoEReport
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_QoE_Measurement_Results_rrcContainerForQoEReport;

// QoE-Measurement-Results_appLayerSessionStatus
// ADT=0  DT=1
// L:2535
typedef enum __si_xnap_dt_QoE_Measurement_Results_appLayerSessionStatus
{
	__si_xnap__QoE_Measurement_Results_appLayerSessionStatus_started_val,
	__si_xnap__QoE_Measurement_Results_appLayerSessionStatus_stopped_val
} SI_XNAP_DT_QoE_Measurement_Results_appLayerSessionStatus;


// L:2561
typedef enum __si_xnap_dt_QoE_Measurement_Results_appLayerSessionStatus2
{
	QoE_Measurement_Results_appLayerSessionStatus_started_val,
	QoE_Measurement_Results_appLayerSessionStatus_stopped_val
} SI_XNAP_DT_QoE_Measurement_Results_appLayerSessionStatus2;


// L:2588
typedef struct __si_xnap_dt_QoE_Measurement_Results_appLayerSessionStatus_EnumProxy
{
	uint8_t data;
} SI_XNAP_DT_QoE_Measurement_Results_appLayerSessionStatus_EnumProxy;


// QoE-Measurement-Results
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoE_Measurement_Results
{
	SI_XNAP_DT_QoE_Measurement_Results_qOEReference * qOEReference;

	SI_XNAP_DT_QoE_Measurement_Results_rrcContainerForRVQoEReport * rrcContainerForRVQoEReport;
	int isPresent_rrcContainerForRVQoEReport;

	SI_XNAP_DT_QoE_Measurement_Results_rrcContainerForQoEReport * rrcContainerForQoEReport;
	int isPresent_rrcContainerForQoEReport;

	uint8_t selected_eappLayerSessionStatus;
	int extSelected_eappLayerSessionStatus;
	int isPresent_appLayerSessionStatus;

} SI_XNAP_DT_QoE_Measurement_Results;


// PDUSessionResourcesNotifyList
//SEQUENCE OF PDUSessionResourcesNotify-Item, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSessionResourcesNotifyList
{
	SI_LinkedList * PDUSessionResourcesNotify_Item;
} SI_XNAP_DT_PDUSessionResourcesNotifyList;


// PDUSessionResourcesNotify-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourcesNotify_Item
{
	unsigned long long int pduSessionId;

	SI_XNAP_DT_QoSFlowNotificationControlIndicationInfo * qosFlowsNotificationContrIndInfo;

} SI_XNAP_DT_PDUSessionResourcesNotify_Item;


// PDUSessionResourcesActivityNotifyList
//SEQUENCE OF PDUSessionResourcesActivityNotify-Item, MIN=1, MAX=maxnoofPDUSessions  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_PDUSessionResourcesActivityNotifyList
{
	SI_LinkedList * PDUSessionResourcesActivityNotify_Item;
} SI_XNAP_DT_PDUSessionResourcesActivityNotifyList;


// QoSFlowsActivityNotifyList
//SEQUENCE OF QoSFlowsActivityNotifyItem, MIN=1, MAX=maxnoofQoSFlows  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_QoSFlowsActivityNotifyList
{
	SI_LinkedList * QoSFlowsActivityNotifyItem;
} SI_XNAP_DT_QoSFlowsActivityNotifyList;


// PDUSessionResourcesActivityNotify-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_PDUSessionResourcesActivityNotify_Item
{
	unsigned long long int pduSessionId;

	uint8_t selected_epduSessionLevelUPactivityreport;
	int extSelected_epduSessionLevelUPactivityreport;
	int isPresent_pduSessionLevelUPactivityreport;

	SI_XNAP_DT_QoSFlowsActivityNotifyList * qosFlowsActivityNotifyList;
	int isPresent_qosFlowsActivityNotifyList;

} SI_XNAP_DT_PDUSessionResourcesActivityNotify_Item;


// QoSFlowsActivityNotifyItem
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_QoSFlowsActivityNotifyItem
{
	unsigned long long int qosFlowIdentifier;

	uint8_t selected_epduSessionLevelUPactivityreport;
	int extSelected_epduSessionLevelUPactivityreport;

} SI_XNAP_DT_QoSFlowsActivityNotifyItem;


// ToBeActivatedNRCellsAndSSBsList
//SEQUENCE OF ToBeActivatedNRCellsAndSSBs-Item, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ToBeActivatedNRCellsAndSSBsList
{
	SI_LinkedList * ToBeActivatedNRCellsAndSSBs_Item;
} SI_XNAP_DT_ToBeActivatedNRCellsAndSSBsList;


// ToBeActivatedNRCellsAndSSBs-Item_sSBstobeActivatedList
//SEQUENCE OF SSBsToBeActivated-Item, MIN=1, MAX= maxnoofSSBAreas  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ToBeActivatedNRCellsAndSSBs_Item_sSBstobeActivatedList
{
	SI_LinkedList * SSBsToBeActivated_Item;
} SI_XNAP_DT_ToBeActivatedNRCellsAndSSBs_Item_sSBstobeActivatedList;


// ToBeActivatedNRCellsAndSSBs-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ToBeActivatedNRCellsAndSSBs_Item
{
	SI_XNAP_DT_NR_CGI * nrCGI;

	SI_XNAP_DT_ToBeActivatedNRCellsAndSSBs_Item_sSBstobeActivatedList * sSBstobeActivatedList;
	int isPresent_sSBstobeActivatedList;

} SI_XNAP_DT_ToBeActivatedNRCellsAndSSBs_Item;


// SSBsToBeActivated-Item_ssbIndex
// INTEGER,INTEGER(0..63),MIN=0,MAX=63  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SSBsToBeActivated_Item_ssbIndex
{
	unsigned long long int data;
} SI_XNAP_DT_SSBsToBeActivated_Item_ssbIndex;

// SSBsToBeActivated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SSBsToBeActivated_Item
{
	unsigned long long int ssbIndex;

} SI_XNAP_DT_SSBsToBeActivated_Item;


// ActivatedNRCellsAndSSBsList
//SEQUENCE OF ActivatedNRCellsAndSSBs-Item, MIN=1, MAX=maxnoofCellsinNG-RANnode  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ActivatedNRCellsAndSSBsList
{
	SI_LinkedList * ActivatedNRCellsAndSSBs_Item;
} SI_XNAP_DT_ActivatedNRCellsAndSSBsList;


// ActivatedNRCellsAndSSBs-Item_sSBsActivatedList
//SEQUENCE OF SSBsActivated-Item, MIN=1, MAX=maxnoofSSBAreas  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ActivatedNRCellsAndSSBs_Item_sSBsActivatedList
{
	SI_LinkedList * SSBsActivated_Item;
} SI_XNAP_DT_ActivatedNRCellsAndSSBs_Item_sSBsActivatedList;


// ActivatedNRCellsAndSSBs-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ActivatedNRCellsAndSSBs_Item
{
	SI_XNAP_DT_NR_CGI * nrCGI;

	SI_XNAP_DT_ActivatedNRCellsAndSSBs_Item_sSBsActivatedList * sSBsActivatedList;
	int isPresent_sSBsActivatedList;

} SI_XNAP_DT_ActivatedNRCellsAndSSBs_Item;


// SSBsActivated-Item_ssbIndex
// INTEGER,INTEGER(0..63),MIN=0,MAX=63  plexs
// ADT=0  DT=2
// L:5746
typedef struct __si_xnap_dt_SSBsActivated_Item_ssbIndex
{
	unsigned long long int data;
} SI_XNAP_DT_SSBsActivated_Item_ssbIndex;

// SSBsActivated-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_SSBsActivated_Item
{
	unsigned long long int ssbIndex;

} SI_XNAP_DT_SSBsActivated_Item;


// TrafficToBeAddedList
//SEQUENCE OF TrafficToBeAdded-Item, MIN=1, MAX=maxnoofTrafficIndexEntries  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TrafficToBeAddedList
{
	SI_LinkedList * TrafficToBeAdded_Item;
} SI_XNAP_DT_TrafficToBeAddedList;


// TrafficToBeAdded-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TrafficToBeAdded_Item
{
	unsigned long long int trafficIndex;

	SI_XNAP_DT_TrafficProfile * trafficProfile;

	SI_XNAP_DT_F1_TerminatingTopologyBHInformation * f1_TerminatingTopologyBHInformation;
	int isPresent_f1_TerminatingTopologyBHInformation;

} SI_XNAP_DT_TrafficToBeAdded_Item;


// TrafficToBeModifiedList
//SEQUENCE OF TrafficToBeModified-Item, MIN=1, MAX=maxnoofTrafficIndexEntries  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TrafficToBeModifiedList
{
	SI_LinkedList * TrafficToBeModified_Item;
} SI_XNAP_DT_TrafficToBeModifiedList;


// TrafficToBeModified-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TrafficToBeModified_Item
{
	unsigned long long int trafficIndex;

	SI_XNAP_DT_TrafficProfile * trafficProfile;
	int isPresent_trafficProfile;

	SI_XNAP_DT_F1_TerminatingTopologyBHInformation * f1_TerminatingTopologyBHInformation;
	int isPresent_f1_TerminatingTopologyBHInformation;

} SI_XNAP_DT_TrafficToBeModified_Item;


// TrafficAddedList
//SEQUENCE OF TrafficAdded-Item, MIN=1, MAX=maxnoofTrafficIndexEntries  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TrafficAddedList
{
	SI_LinkedList * TrafficAdded_Item;
} SI_XNAP_DT_TrafficAddedList;


// TrafficAdded-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TrafficAdded_Item
{
	unsigned long long int trafficIndex;

	SI_XNAP_DT_Non_F1_TerminatingTopologyBHInformation * non_F1_TerminatingTopologyBHInformation;

} SI_XNAP_DT_TrafficAdded_Item;


// TrafficModifiedList
//SEQUENCE OF TrafficModified-Item, MIN=1, MAX=maxnoofTrafficIndexEntries  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TrafficModifiedList
{
	SI_LinkedList * TrafficModified_Item;
} SI_XNAP_DT_TrafficModifiedList;


// TrafficModified-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TrafficModified_Item
{
	unsigned long long int trafficIndex;

	SI_XNAP_DT_Non_F1_TerminatingTopologyBHInformation * non_F1_TerminatingTopologyBHInformation;

} SI_XNAP_DT_TrafficModified_Item;


// TrafficNotAddedList
//SEQUENCE OF TrafficNotAdded-Item, MIN=1, MAX=maxnoofTrafficIndexEntries  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TrafficNotAddedList
{
	SI_LinkedList * TrafficNotAdded_Item;
} SI_XNAP_DT_TrafficNotAddedList;


// TrafficNotAdded-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TrafficNotAdded_Item
{
	unsigned long long int trafficIndex;

	SI_XNAP_DT_Cause * casue;
	int isPresent_casue;

} SI_XNAP_DT_TrafficNotAdded_Item;


// TrafficNotModifiedList
//SEQUENCE OF TrafficNotModified-Item, MIN=1, MAX=maxnoofTrafficIndexEntries  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TrafficNotModifiedList
{
	SI_LinkedList * TrafficNotModified_Item;
} SI_XNAP_DT_TrafficNotModifiedList;


// TrafficNotModified-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TrafficNotModified_Item
{
	unsigned long long int trafficIndex;

	SI_XNAP_DT_Cause * cause;
	int isPresent_cause;

} SI_XNAP_DT_TrafficNotModified_Item;


// TrafficReleasedList
//SEQUENCE OF TrafficReleased-Item, MIN=1, MAX=maxnoofTrafficIndexEntries  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TrafficReleasedList
{
	SI_LinkedList * TrafficReleased_Item;
} SI_XNAP_DT_TrafficReleasedList;


// TrafficReleased-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TrafficReleased_Item
{
	unsigned long long int trafficIndex;

	SI_XNAP_DT_BHInfoList * bHInfoList;
	int isPresent_bHInfoList;

} SI_XNAP_DT_TrafficReleased_Item;


// TrafficRequiredToBeModifiedList
//SEQUENCE OF TrafficRequiredToBeModified-Item, MIN=1, MAX=maxnoofTrafficIndexEntries  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TrafficRequiredToBeModifiedList
{
	SI_LinkedList * TrafficRequiredToBeModified_Item;
} SI_XNAP_DT_TrafficRequiredToBeModifiedList;


// TrafficRequiredToBeModified-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TrafficRequiredToBeModified_Item
{
	unsigned long long int trafficIndex;

	SI_XNAP_DT_Non_F1_TerminatingTopologyBHInformation * non_f1_TerminatingTopologyBHInformation;

} SI_XNAP_DT_TrafficRequiredToBeModified_Item;


// IABTNLAddressToBeReleasedList
//SEQUENCE OF IABTNLAddressToBeReleased-Item, MIN=1, MAX=maxnoofTLAsIAB  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_IABTNLAddressToBeReleasedList
{
	SI_LinkedList * IABTNLAddressToBeReleased_Item;
} SI_XNAP_DT_IABTNLAddressToBeReleasedList;


// IABTNLAddressToBeReleased-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_IABTNLAddressToBeReleased_Item
{
	SI_XNAP_DT_IABTNLAddress * iabTNLAddress;

} SI_XNAP_DT_IABTNLAddressToBeReleased_Item;


// TrafficRequiredModifiedList
//SEQUENCE OF TrafficRequiredModified-Item, MIN=1, MAX=maxnoofTrafficIndexEntries  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_TrafficRequiredModifiedList
{
	SI_LinkedList * TrafficRequiredModified_Item;
} SI_XNAP_DT_TrafficRequiredModifiedList;


// TrafficRequiredModified-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_TrafficRequiredModified_Item
{
	unsigned long long int trafficIndex;

} SI_XNAP_DT_TrafficRequiredModified_Item;


// BoundaryNodeCellsList
//SEQUENCE OF BoundaryNodeCellsList-Item, MIN=1, MAX=maxnoofServedCellsIAB  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_BoundaryNodeCellsList
{
	SI_LinkedList * BoundaryNodeCellsList_Item;
} SI_XNAP_DT_BoundaryNodeCellsList;


// BoundaryNodeCellsList-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_BoundaryNodeCellsList_Item
{
	SI_XNAP_DT_IABCellInformation * boundaryNodeCellInformation;

} SI_XNAP_DT_BoundaryNodeCellsList_Item;


// ParentNodeCellsList
//SEQUENCE OF ParentNodeCellsList-Item, MIN=1, MAX=maxnoofServingCells  ADT=0  DT=2
// L:2207
typedef struct __si_xnap_dt_ParentNodeCellsList
{
	SI_LinkedList * ParentNodeCellsList_Item;
} SI_XNAP_DT_ParentNodeCellsList;


// ParentNodeCellsList-Item
// ONLY-SEQUENCE ADT=0  DT=1qwe
// L:1125
typedef struct __si_xnap_dt_ParentNodeCellsList_Item
{
	SI_XNAP_DT_IABCellInformation * parentNodeCellInformation;

} SI_XNAP_DT_ParentNodeCellsList_Item;


// DefaultOctetString
// OCTETSTRING,OCTET STRING
// ADT=0  DT=2
// L:4862
typedef struct __si_xnap_dt_DefaultOctetString
{
	unsigned char * data;
	unsigned int length;
} SI_XNAP_DT_DefaultOctetString;

//TODO: DataType -><- Got NULL  L:7520

void __si_xnap_debug_Criticality( char * key, uint8_t eCriticality, int lvl);

int __si_xnap_Encode_Criticality( uint8_t eCriticality, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_Presence( char * key, uint8_t ePresence, int lvl);

int __si_xnap_Encode_Presence( uint8_t ePresence, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PrivateIEID_local( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_PrivateIEID_local( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_PrivateIEID_local( SI_XNAP_DT_PrivateIEID_local * data);


void __si_xnap_init_PrivateIE_ID( SI_XNAP_DT_PrivateIE_ID ** data);

void __si_xnap_debug_PrivateIE_ID( char * key, SI_XNAP_DT_PrivateIE_ID * data, int lvl);

void __si_xnap_memfree_PrivateIE_ID( SI_XNAP_DT_PrivateIE_ID * data);

int __si_xnap_Encode_PrivateIE_ID( SI_XNAP_DT_PrivateIE_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NULL( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_NULL( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_NULL( SI_XNAP_DT_NULL * data);


void __si_xnap_debug_ProcedureCode( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_ProcedureCode( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_ProcedureCode( SI_XNAP_DT_ProcedureCode * data);


void __si_xnap_debug_ProtocolIE_ID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_ProtocolIE_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_ProtocolIE_ID( SI_XNAP_DT_ProtocolIE_ID * data);


void __si_xnap_debug_TriggeringMessage( char * key, uint8_t eTriggeringMessage, int lvl);

int __si_xnap_Encode_TriggeringMessage( uint8_t eTriggeringMessage, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_A2XPC5QoSFlowList( SI_XNAP_DT_A2XPC5QoSFlowList ** data);

void __si_xnap_debug_A2XPC5QoSFlowList( char * key, SI_XNAP_DT_A2XPC5QoSFlowList * data, int lvl);

void __si_xnap_memfree_A2XPC5QoSFlowList( SI_XNAP_DT_A2XPC5QoSFlowList * data);

int __si_xnap_Encode_A2XPC5QoSFlowList( SI_XNAP_DT_A2XPC5QoSFlowList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_BitRate( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_BitRate( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_BitRate( SI_XNAP_DT_BitRate * data);


void __si_xnap_init_A2XPC5QoSParameters( SI_XNAP_DT_A2XPC5QoSParameters ** data);

void __si_xnap_debug_A2XPC5QoSParameters( char * key, SI_XNAP_DT_A2XPC5QoSParameters * data, int lvl);

void __si_xnap_memfree_A2XPC5QoSParameters( SI_XNAP_DT_A2XPC5QoSParameters * data);

int __si_xnap_Encode_A2XPC5QoSParameters( SI_XNAP_DT_A2XPC5QoSParameters * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_FiveQI( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_FiveQI( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_FiveQI( SI_XNAP_DT_FiveQI * data);


void __si_xnap_init_A2XPC5FlowBitRates( SI_XNAP_DT_A2XPC5FlowBitRates ** data);

void __si_xnap_debug_A2XPC5FlowBitRates( char * key, SI_XNAP_DT_A2XPC5FlowBitRates * data, int lvl);

void __si_xnap_memfree_A2XPC5FlowBitRates( SI_XNAP_DT_A2XPC5FlowBitRates * data);

int __si_xnap_Encode_A2XPC5FlowBitRates( SI_XNAP_DT_A2XPC5FlowBitRates * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_Range( char * key, uint8_t eRange, int lvl);

int __si_xnap_Encode_Range( uint8_t eRange, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_A2XPC5QoSFlowItem( SI_XNAP_DT_A2XPC5QoSFlowItem ** data);

void __si_xnap_debug_A2XPC5QoSFlowItem( char * key, SI_XNAP_DT_A2XPC5QoSFlowItem * data, int lvl);

void __si_xnap_memfree_A2XPC5QoSFlowItem( SI_XNAP_DT_A2XPC5QoSFlowItem * data);

int __si_xnap_Encode_A2XPC5QoSFlowItem( SI_XNAP_DT_A2XPC5QoSFlowItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated( SI_XNAP_DT_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated ** data);

void __si_xnap_debug_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated( char * key, SI_XNAP_DT_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated * data, int lvl);

void __si_xnap_memfree_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated( SI_XNAP_DT_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated * data);

int __si_xnap_Encode_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated( SI_XNAP_DT_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFLowsAcceptedToBeForwarded_List( SI_XNAP_DT_QoSFLowsAcceptedToBeForwarded_List ** data);

void __si_xnap_debug_QoSFLowsAcceptedToBeForwarded_List( char * key, SI_XNAP_DT_QoSFLowsAcceptedToBeForwarded_List * data, int lvl);

void __si_xnap_memfree_QoSFLowsAcceptedToBeForwarded_List( SI_XNAP_DT_QoSFLowsAcceptedToBeForwarded_List * data);

int __si_xnap_Encode_QoSFLowsAcceptedToBeForwarded_List( SI_XNAP_DT_QoSFLowsAcceptedToBeForwarded_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TransportLayerAddress( SI_XNAP_DT_TransportLayerAddress ** data);

void __si_xnap_init_TransportLayerAddress2( SI_XNAP_DT_TransportLayerAddress ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_TransportLayerAddress( char * key, SI_XNAP_DT_TransportLayerAddress * data, int lvl);

void __si_xnap_memfree_TransportLayerAddress( SI_XNAP_DT_TransportLayerAddress * data);

int __si_xnap_Encode_TransportLayerAddress( SI_XNAP_DT_TransportLayerAddress * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GTP_TEID( SI_XNAP_DT_GTP_TEID ** data);

void __si_xnap_init_GTP_TEID2( SI_XNAP_DT_GTP_TEID ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_GTP_TEID( char * key, SI_XNAP_DT_GTP_TEID * data, int lvl);

void __si_xnap_memfree_GTP_TEID( SI_XNAP_DT_GTP_TEID * data);

int __si_xnap_Encode_GTP_TEID( SI_XNAP_DT_GTP_TEID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GTPtunnelTransportLayerInformation( SI_XNAP_DT_GTPtunnelTransportLayerInformation ** data);

void __si_xnap_debug_GTPtunnelTransportLayerInformation( char * key, SI_XNAP_DT_GTPtunnelTransportLayerInformation * data, int lvl);

void __si_xnap_memfree_GTPtunnelTransportLayerInformation( SI_XNAP_DT_GTPtunnelTransportLayerInformation * data);

int __si_xnap_Encode_GTPtunnelTransportLayerInformation( SI_XNAP_DT_GTPtunnelTransportLayerInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UPTransportLayerInformation( SI_XNAP_DT_UPTransportLayerInformation ** data);

void __si_xnap_debug_UPTransportLayerInformation( char * key, SI_XNAP_DT_UPTransportLayerInformation * data, int lvl);

void __si_xnap_memfree_UPTransportLayerInformation( SI_XNAP_DT_UPTransportLayerInformation * data);

int __si_xnap_Encode_UPTransportLayerInformation( SI_XNAP_DT_UPTransportLayerInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DataForwardingResponseDRBItemList( SI_XNAP_DT_DataForwardingResponseDRBItemList ** data);

void __si_xnap_debug_DataForwardingResponseDRBItemList( char * key, SI_XNAP_DT_DataForwardingResponseDRBItemList * data, int lvl);

void __si_xnap_memfree_DataForwardingResponseDRBItemList( SI_XNAP_DT_DataForwardingResponseDRBItemList * data);

int __si_xnap_Encode_DataForwardingResponseDRBItemList( SI_XNAP_DT_DataForwardingResponseDRBItemList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DataForwardingInfoFromTargetNGRANnode( SI_XNAP_DT_DataForwardingInfoFromTargetNGRANnode ** data);

void __si_xnap_debug_DataForwardingInfoFromTargetNGRANnode( char * key, SI_XNAP_DT_DataForwardingInfoFromTargetNGRANnode * data, int lvl);

void __si_xnap_memfree_DataForwardingInfoFromTargetNGRANnode( SI_XNAP_DT_DataForwardingInfoFromTargetNGRANnode * data);

int __si_xnap_Encode_DataForwardingInfoFromTargetNGRANnode( SI_XNAP_DT_DataForwardingInfoFromTargetNGRANnode * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceChangeConfirmInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceChangeConfirmInfo_SNterminated ** data);

void __si_xnap_debug_PDUSessionResourceChangeConfirmInfo_SNterminated( char * key, SI_XNAP_DT_PDUSessionResourceChangeConfirmInfo_SNterminated * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceChangeConfirmInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceChangeConfirmInfo_SNterminated * data);

int __si_xnap_Encode_PDUSessionResourceChangeConfirmInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceChangeConfirmInfo_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item( SI_XNAP_DT_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item ** data);

void __si_xnap_debug_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item( char * key, SI_XNAP_DT_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item * data, int lvl);

void __si_xnap_memfree_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item( SI_XNAP_DT_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item * data);

int __si_xnap_Encode_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item( SI_XNAP_DT_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_AveragePacketDelayValue( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_AveragePacketDelayValue( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_AveragePacketDelayValue( SI_XNAP_DT_AveragePacketDelayValue * data);


void __si_xnap_init_AveragePacketDelay( SI_XNAP_DT_AveragePacketDelay ** data);

void __si_xnap_debug_AveragePacketDelay( char * key, SI_XNAP_DT_AveragePacketDelay * data, int lvl);

void __si_xnap_memfree_AveragePacketDelay( SI_XNAP_DT_AveragePacketDelay * data);

int __si_xnap_Encode_AveragePacketDelay( SI_XNAP_DT_AveragePacketDelay * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_AdditionLocationInformation( char * key, uint8_t eAdditionLocationInformation, int lvl);

int __si_xnap_Encode_AdditionLocationInformation( uint8_t eAdditionLocationInformation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Additional_PDCP_Duplication_TNL_List( SI_XNAP_DT_Additional_PDCP_Duplication_TNL_List ** data);

void __si_xnap_debug_Additional_PDCP_Duplication_TNL_List( char * key, SI_XNAP_DT_Additional_PDCP_Duplication_TNL_List * data, int lvl);

void __si_xnap_memfree_Additional_PDCP_Duplication_TNL_List( SI_XNAP_DT_Additional_PDCP_Duplication_TNL_List * data);

int __si_xnap_Encode_Additional_PDCP_Duplication_TNL_List( SI_XNAP_DT_Additional_PDCP_Duplication_TNL_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Additional_PDCP_Duplication_TNL_Item( SI_XNAP_DT_Additional_PDCP_Duplication_TNL_Item ** data);

void __si_xnap_debug_Additional_PDCP_Duplication_TNL_Item( char * key, SI_XNAP_DT_Additional_PDCP_Duplication_TNL_Item * data, int lvl);

void __si_xnap_memfree_Additional_PDCP_Duplication_TNL_Item( SI_XNAP_DT_Additional_PDCP_Duplication_TNL_Item * data);

int __si_xnap_Encode_Additional_PDCP_Duplication_TNL_Item( SI_XNAP_DT_Additional_PDCP_Duplication_TNL_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Additional_UL_NG_U_TNLatUPF_Item( SI_XNAP_DT_Additional_UL_NG_U_TNLatUPF_Item ** data);

void __si_xnap_debug_Additional_UL_NG_U_TNLatUPF_Item( char * key, SI_XNAP_DT_Additional_UL_NG_U_TNLatUPF_Item * data, int lvl);

void __si_xnap_memfree_Additional_UL_NG_U_TNLatUPF_Item( SI_XNAP_DT_Additional_UL_NG_U_TNLatUPF_Item * data);

int __si_xnap_Encode_Additional_UL_NG_U_TNLatUPF_Item( SI_XNAP_DT_Additional_UL_NG_U_TNLatUPF_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Additional_UL_NG_U_TNLatUPF_List( SI_XNAP_DT_Additional_UL_NG_U_TNLatUPF_List ** data);

void __si_xnap_debug_Additional_UL_NG_U_TNLatUPF_List( char * key, SI_XNAP_DT_Additional_UL_NG_U_TNLatUPF_List * data, int lvl);

void __si_xnap_memfree_Additional_UL_NG_U_TNLatUPF_List( SI_XNAP_DT_Additional_UL_NG_U_TNLatUPF_List * data);

int __si_xnap_Encode_Additional_UL_NG_U_TNLatUPF_List( SI_XNAP_DT_Additional_UL_NG_U_TNLatUPF_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Additional_Measurement_Timing_Configuration_List( SI_XNAP_DT_Additional_Measurement_Timing_Configuration_List ** data);

void __si_xnap_debug_Additional_Measurement_Timing_Configuration_List( char * key, SI_XNAP_DT_Additional_Measurement_Timing_Configuration_List * data, int lvl);

void __si_xnap_memfree_Additional_Measurement_Timing_Configuration_List( SI_XNAP_DT_Additional_Measurement_Timing_Configuration_List * data);

int __si_xnap_Encode_Additional_Measurement_Timing_Configuration_List( SI_XNAP_DT_Additional_Measurement_Timing_Configuration_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_AdditionalMeasurementTimingConfigurationItem_additionalMeasurementTimingConfigurationIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_AdditionalMeasurementTimingConfigurationItem_additionalMeasurementTimingConfigurationIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_AdditionalMeasurementTimingConfigurationItem_additionalMeasurementTimingConfigurationIndex( SI_XNAP_DT_AdditionalMeasurementTimingConfigurationItem_additionalMeasurementTimingConfigurationIndex * data);


void __si_xnap_init_CSI_RS_MTC_Configuration_List( SI_XNAP_DT_CSI_RS_MTC_Configuration_List ** data);

void __si_xnap_debug_CSI_RS_MTC_Configuration_List( char * key, SI_XNAP_DT_CSI_RS_MTC_Configuration_List * data, int lvl);

void __si_xnap_memfree_CSI_RS_MTC_Configuration_List( SI_XNAP_DT_CSI_RS_MTC_Configuration_List * data);

int __si_xnap_Encode_CSI_RS_MTC_Configuration_List( SI_XNAP_DT_CSI_RS_MTC_Configuration_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Additional_Measurement_Timing_Configuration_Item( SI_XNAP_DT_Additional_Measurement_Timing_Configuration_Item ** data);

void __si_xnap_debug_Additional_Measurement_Timing_Configuration_Item( char * key, SI_XNAP_DT_Additional_Measurement_Timing_Configuration_Item * data, int lvl);

void __si_xnap_memfree_Additional_Measurement_Timing_Configuration_Item( SI_XNAP_DT_Additional_Measurement_Timing_Configuration_Item * data);

int __si_xnap_Encode_Additional_Measurement_Timing_Configuration_Item( SI_XNAP_DT_Additional_Measurement_Timing_Configuration_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ActivationIDforCellActivation( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_ActivationIDforCellActivation( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_ActivationIDforCellActivation( SI_XNAP_DT_ActivationIDforCellActivation * data);


void __si_xnap_init_MBS_QoSFlowsToAdd_List( SI_XNAP_DT_MBS_QoSFlowsToAdd_List ** data);

void __si_xnap_debug_MBS_QoSFlowsToAdd_List( char * key, SI_XNAP_DT_MBS_QoSFlowsToAdd_List * data, int lvl);

void __si_xnap_memfree_MBS_QoSFlowsToAdd_List( SI_XNAP_DT_MBS_QoSFlowsToAdd_List * data);

int __si_xnap_Encode_MBS_QoSFlowsToAdd_List( SI_XNAP_DT_MBS_QoSFlowsToAdd_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_ServiceAreaCell_List( SI_XNAP_DT_MBS_ServiceAreaCell_List ** data);

void __si_xnap_debug_MBS_ServiceAreaCell_List( char * key, SI_XNAP_DT_MBS_ServiceAreaCell_List * data, int lvl);

void __si_xnap_memfree_MBS_ServiceAreaCell_List( SI_XNAP_DT_MBS_ServiceAreaCell_List * data);

int __si_xnap_Encode_MBS_ServiceAreaCell_List( SI_XNAP_DT_MBS_ServiceAreaCell_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_ServiceAreaTAI_List( SI_XNAP_DT_MBS_ServiceAreaTAI_List ** data);

void __si_xnap_debug_MBS_ServiceAreaTAI_List( char * key, SI_XNAP_DT_MBS_ServiceAreaTAI_List * data, int lvl);

void __si_xnap_memfree_MBS_ServiceAreaTAI_List( SI_XNAP_DT_MBS_ServiceAreaTAI_List * data);

int __si_xnap_Encode_MBS_ServiceAreaTAI_List( SI_XNAP_DT_MBS_ServiceAreaTAI_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_ServiceAreaInformation( SI_XNAP_DT_MBS_ServiceAreaInformation ** data);

void __si_xnap_debug_MBS_ServiceAreaInformation( char * key, SI_XNAP_DT_MBS_ServiceAreaInformation * data, int lvl);

void __si_xnap_memfree_MBS_ServiceAreaInformation( SI_XNAP_DT_MBS_ServiceAreaInformation * data);

int __si_xnap_Encode_MBS_ServiceAreaInformation( SI_XNAP_DT_MBS_ServiceAreaInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_ServiceAreaInformationList( SI_XNAP_DT_MBS_ServiceAreaInformationList ** data);

void __si_xnap_debug_MBS_ServiceAreaInformationList( char * key, SI_XNAP_DT_MBS_ServiceAreaInformationList * data, int lvl);

void __si_xnap_memfree_MBS_ServiceAreaInformationList( SI_XNAP_DT_MBS_ServiceAreaInformationList * data);

int __si_xnap_Encode_MBS_ServiceAreaInformationList( SI_XNAP_DT_MBS_ServiceAreaInformationList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_ServiceArea( SI_XNAP_DT_MBS_ServiceArea ** data);

void __si_xnap_debug_MBS_ServiceArea( char * key, SI_XNAP_DT_MBS_ServiceArea * data, int lvl);

void __si_xnap_memfree_MBS_ServiceArea( SI_XNAP_DT_MBS_ServiceArea * data);

int __si_xnap_Encode_MBS_ServiceArea( SI_XNAP_DT_MBS_ServiceArea * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_MappingandDataForwardingRequestInfofromSource( SI_XNAP_DT_MBS_MappingandDataForwardingRequestInfofromSource ** data);

void __si_xnap_debug_MBS_MappingandDataForwardingRequestInfofromSource( char * key, SI_XNAP_DT_MBS_MappingandDataForwardingRequestInfofromSource * data, int lvl);

void __si_xnap_memfree_MBS_MappingandDataForwardingRequestInfofromSource( SI_XNAP_DT_MBS_MappingandDataForwardingRequestInfofromSource * data);

int __si_xnap_Encode_MBS_MappingandDataForwardingRequestInfofromSource( SI_XNAP_DT_MBS_MappingandDataForwardingRequestInfofromSource * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Active_MBS_SessionInformation( SI_XNAP_DT_Active_MBS_SessionInformation ** data);

void __si_xnap_debug_Active_MBS_SessionInformation( char * key, SI_XNAP_DT_Active_MBS_SessionInformation * data, int lvl);

void __si_xnap_memfree_Active_MBS_SessionInformation( SI_XNAP_DT_Active_MBS_SessionInformation * data);

int __si_xnap_Encode_Active_MBS_SessionInformation( SI_XNAP_DT_Active_MBS_SessionInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_Measurement_ID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_Measurement_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_Measurement_ID( SI_XNAP_DT_Measurement_ID * data);


void __si_xnap_init_DataCollectionID( SI_XNAP_DT_DataCollectionID ** data);

void __si_xnap_debug_DataCollectionID( char * key, SI_XNAP_DT_DataCollectionID * data, int lvl);

void __si_xnap_memfree_DataCollectionID( SI_XNAP_DT_DataCollectionID * data);

int __si_xnap_Encode_DataCollectionID( SI_XNAP_DT_DataCollectionID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_AerialControllerUE( char * key, uint8_t eAerialControllerUE, int lvl);

int __si_xnap_Encode_AerialControllerUE( uint8_t eAerialControllerUE, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_AerialUE( char * key, uint8_t eAerialUE, int lvl);

int __si_xnap_Encode_AerialUE( uint8_t eAerialUE, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_AerialUESubscriptionInformation( char * key, uint8_t eAerialUESubscriptionInformation, int lvl);

int __si_xnap_Encode_AerialUESubscriptionInformation( uint8_t eAerialUESubscriptionInformation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_AllocationandRetentionPriority_priorityLevel( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_AllocationandRetentionPriority_priorityLevel( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_AllocationandRetentionPriority_priorityLevel( SI_XNAP_DT_AllocationandRetentionPriority_priorityLevel * data);


void __si_xnap_debug_AllocationandRetentionPriority_pre_emption_capability( char * key, uint8_t eAllocationandRetentionPriority_pre_emption_capability, int lvl);

int __si_xnap_Encode_AllocationandRetentionPriority_pre_emption_capability( uint8_t eAllocationandRetentionPriority_pre_emption_capability, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_AllocationandRetentionPriority_pre_emption_vulnerability( char * key, uint8_t eAllocationandRetentionPriority_pre_emption_vulnerability, int lvl);

int __si_xnap_Encode_AllocationandRetentionPriority_pre_emption_vulnerability( uint8_t eAllocationandRetentionPriority_pre_emption_vulnerability, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_AllocationandRetentionPriority( SI_XNAP_DT_AllocationandRetentionPriority ** data);

void __si_xnap_debug_AllocationandRetentionPriority( char * key, SI_XNAP_DT_AllocationandRetentionPriority * data, int lvl);

void __si_xnap_memfree_AllocationandRetentionPriority( SI_XNAP_DT_AllocationandRetentionPriority * data);

int __si_xnap_Encode_AllocationandRetentionPriority( SI_XNAP_DT_AllocationandRetentionPriority * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ActivationSFN( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_ActivationSFN( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_ActivationSFN( SI_XNAP_DT_ActivationSFN * data);


void __si_xnap_init_AllowedCAG_ID_List_perPLMN( SI_XNAP_DT_AllowedCAG_ID_List_perPLMN ** data);

void __si_xnap_debug_AllowedCAG_ID_List_perPLMN( char * key, SI_XNAP_DT_AllowedCAG_ID_List_perPLMN * data, int lvl);

void __si_xnap_memfree_AllowedCAG_ID_List_perPLMN( SI_XNAP_DT_AllowedCAG_ID_List_perPLMN * data);

int __si_xnap_Encode_AllowedCAG_ID_List_perPLMN( SI_XNAP_DT_AllowedCAG_ID_List_perPLMN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_AllowedPNI_NPN_ID_List( SI_XNAP_DT_AllowedPNI_NPN_ID_List ** data);

void __si_xnap_debug_AllowedPNI_NPN_ID_List( char * key, SI_XNAP_DT_AllowedPNI_NPN_ID_List * data, int lvl);

void __si_xnap_memfree_AllowedPNI_NPN_ID_List( SI_XNAP_DT_AllowedPNI_NPN_ID_List * data);

int __si_xnap_Encode_AllowedPNI_NPN_ID_List( SI_XNAP_DT_AllowedPNI_NPN_ID_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PLMN_Identity( SI_XNAP_DT_PLMN_Identity ** data);

void __si_xnap_init_PLMN_Identity2( SI_XNAP_DT_PLMN_Identity ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_PLMN_Identity( char * key, SI_XNAP_DT_PLMN_Identity * data, int lvl);

void __si_xnap_memfree_PLMN_Identity( SI_XNAP_DT_PLMN_Identity * data);

int __si_xnap_Encode_PLMN_Identity( SI_XNAP_DT_PLMN_Identity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PNI_NPN_Restricted_Information( char * key, uint8_t ePNI_NPN_Restricted_Information, int lvl);

int __si_xnap_Encode_PNI_NPN_Restricted_Information( uint8_t ePNI_NPN_Restricted_Information, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_AllowedPNI_NPN_ID_Item( SI_XNAP_DT_AllowedPNI_NPN_ID_Item ** data);

void __si_xnap_debug_AllowedPNI_NPN_ID_Item( char * key, SI_XNAP_DT_AllowedPNI_NPN_ID_Item * data, int lvl);

void __si_xnap_memfree_AllowedPNI_NPN_ID_Item( SI_XNAP_DT_AllowedPNI_NPN_ID_Item * data);

int __si_xnap_Encode_AllowedPNI_NPN_ID_Item( SI_XNAP_DT_AllowedPNI_NPN_ID_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_AllTrafficIndication( char * key, uint8_t eAllTrafficIndication, int lvl);

int __si_xnap_Encode_AllTrafficIndication( uint8_t eAllTrafficIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_AlternativeQoSParaSetList( SI_XNAP_DT_AlternativeQoSParaSetList ** data);

void __si_xnap_debug_AlternativeQoSParaSetList( char * key, SI_XNAP_DT_AlternativeQoSParaSetList * data, int lvl);

void __si_xnap_memfree_AlternativeQoSParaSetList( SI_XNAP_DT_AlternativeQoSParaSetList * data);

int __si_xnap_Encode_AlternativeQoSParaSetList( SI_XNAP_DT_AlternativeQoSParaSetList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_QoSParaSetIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_QoSParaSetIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_QoSParaSetIndex( SI_XNAP_DT_QoSParaSetIndex * data);


void __si_xnap_debug_PacketDelayBudget( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_PacketDelayBudget( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_PacketDelayBudget( SI_XNAP_DT_PacketDelayBudget * data);


void __si_xnap_debug_PER_Scalar( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_PER_Scalar( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_PER_Scalar( SI_XNAP_DT_PER_Scalar * data);


void __si_xnap_debug_PER_Exponent( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_PER_Exponent( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_PER_Exponent( SI_XNAP_DT_PER_Exponent * data);


void __si_xnap_init_PacketErrorRate( SI_XNAP_DT_PacketErrorRate ** data);

void __si_xnap_debug_PacketErrorRate( char * key, SI_XNAP_DT_PacketErrorRate * data, int lvl);

void __si_xnap_memfree_PacketErrorRate( SI_XNAP_DT_PacketErrorRate * data);

int __si_xnap_Encode_PacketErrorRate( SI_XNAP_DT_PacketErrorRate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_AlternativeQoSParaSetItem( SI_XNAP_DT_AlternativeQoSParaSetItem ** data);

void __si_xnap_debug_AlternativeQoSParaSetItem( char * key, SI_XNAP_DT_AlternativeQoSParaSetItem * data, int lvl);

void __si_xnap_memfree_AlternativeQoSParaSetItem( SI_XNAP_DT_AlternativeQoSParaSetItem * data);

int __si_xnap_Encode_AlternativeQoSParaSetItem( SI_XNAP_DT_AlternativeQoSParaSetItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_AMF_Region_Information( SI_XNAP_DT_AMF_Region_Information ** data);

void __si_xnap_debug_AMF_Region_Information( char * key, SI_XNAP_DT_AMF_Region_Information * data, int lvl);

void __si_xnap_memfree_AMF_Region_Information( SI_XNAP_DT_AMF_Region_Information * data);

int __si_xnap_Encode_AMF_Region_Information( SI_XNAP_DT_AMF_Region_Information * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GlobalAMFRegionInformation_amf_region_id( SI_XNAP_DT_GlobalAMFRegionInformation_amf_region_id ** data);

void __si_xnap_init_GlobalAMFRegionInformation_amf_region_id2( SI_XNAP_DT_GlobalAMFRegionInformation_amf_region_id ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_GlobalAMFRegionInformation_amf_region_id( char * key, SI_XNAP_DT_GlobalAMFRegionInformation_amf_region_id * data, int lvl);

void __si_xnap_memfree_GlobalAMFRegionInformation_amf_region_id( SI_XNAP_DT_GlobalAMFRegionInformation_amf_region_id * data);

int __si_xnap_Encode_GlobalAMFRegionInformation_amf_region_id( SI_XNAP_DT_GlobalAMFRegionInformation_amf_region_id * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GlobalAMF_Region_Information( SI_XNAP_DT_GlobalAMF_Region_Information ** data);

void __si_xnap_debug_GlobalAMF_Region_Information( char * key, SI_XNAP_DT_GlobalAMF_Region_Information * data, int lvl);

void __si_xnap_memfree_GlobalAMF_Region_Information( SI_XNAP_DT_GlobalAMF_Region_Information * data);

int __si_xnap_Encode_GlobalAMF_Region_Information( SI_XNAP_DT_GlobalAMF_Region_Information * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_AMF_UE_NGAP_ID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_AMF_UE_NGAP_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_AMF_UE_NGAP_ID( SI_XNAP_DT_AMF_UE_NGAP_ID * data);


void __si_xnap_init_AreaOfInterestInformation( SI_XNAP_DT_AreaOfInterestInformation ** data);

void __si_xnap_debug_AreaOfInterestInformation( char * key, SI_XNAP_DT_AreaOfInterestInformation * data, int lvl);

void __si_xnap_memfree_AreaOfInterestInformation( SI_XNAP_DT_AreaOfInterestInformation * data);

int __si_xnap_Encode_AreaOfInterestInformation( SI_XNAP_DT_AreaOfInterestInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ListOfTAIsinAoI( SI_XNAP_DT_ListOfTAIsinAoI ** data);

void __si_xnap_debug_ListOfTAIsinAoI( char * key, SI_XNAP_DT_ListOfTAIsinAoI * data, int lvl);

void __si_xnap_memfree_ListOfTAIsinAoI( SI_XNAP_DT_ListOfTAIsinAoI * data);

int __si_xnap_Encode_ListOfTAIsinAoI( SI_XNAP_DT_ListOfTAIsinAoI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ListOfCells( SI_XNAP_DT_ListOfCells ** data);

void __si_xnap_debug_ListOfCells( char * key, SI_XNAP_DT_ListOfCells * data, int lvl);

void __si_xnap_memfree_ListOfCells( SI_XNAP_DT_ListOfCells * data);

int __si_xnap_Encode_ListOfCells( SI_XNAP_DT_ListOfCells * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ListOfRANNodesinAoI( SI_XNAP_DT_ListOfRANNodesinAoI ** data);

void __si_xnap_debug_ListOfRANNodesinAoI( char * key, SI_XNAP_DT_ListOfRANNodesinAoI * data, int lvl);

void __si_xnap_memfree_ListOfRANNodesinAoI( SI_XNAP_DT_ListOfRANNodesinAoI * data);

int __si_xnap_Encode_ListOfRANNodesinAoI( SI_XNAP_DT_ListOfRANNodesinAoI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RequestReferenceID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_RequestReferenceID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_RequestReferenceID( SI_XNAP_DT_RequestReferenceID * data);


void __si_xnap_init_AreaOfInterest_Item( SI_XNAP_DT_AreaOfInterest_Item ** data);

void __si_xnap_debug_AreaOfInterest_Item( char * key, SI_XNAP_DT_AreaOfInterest_Item * data, int lvl);

void __si_xnap_memfree_AreaOfInterest_Item( SI_XNAP_DT_AreaOfInterest_Item * data);

int __si_xnap_Encode_AreaOfInterest_Item( SI_XNAP_DT_AreaOfInterest_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellIdListforMDT_NR( SI_XNAP_DT_CellIdListforMDT_NR ** data);

void __si_xnap_debug_CellIdListforMDT_NR( char * key, SI_XNAP_DT_CellIdListforMDT_NR * data, int lvl);

void __si_xnap_memfree_CellIdListforMDT_NR( SI_XNAP_DT_CellIdListforMDT_NR * data);

int __si_xnap_Encode_CellIdListforMDT_NR( SI_XNAP_DT_CellIdListforMDT_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellBasedMDT_NR( SI_XNAP_DT_CellBasedMDT_NR ** data);

void __si_xnap_debug_CellBasedMDT_NR( char * key, SI_XNAP_DT_CellBasedMDT_NR * data, int lvl);

void __si_xnap_memfree_CellBasedMDT_NR( SI_XNAP_DT_CellBasedMDT_NR * data);

int __si_xnap_Encode_CellBasedMDT_NR( SI_XNAP_DT_CellBasedMDT_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TAListforMDT( SI_XNAP_DT_TAListforMDT ** data);

void __si_xnap_debug_TAListforMDT( char * key, SI_XNAP_DT_TAListforMDT * data, int lvl);

void __si_xnap_memfree_TAListforMDT( SI_XNAP_DT_TAListforMDT * data);

int __si_xnap_Encode_TAListforMDT( SI_XNAP_DT_TAListforMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TABasedMDT( SI_XNAP_DT_TABasedMDT ** data);

void __si_xnap_debug_TABasedMDT( char * key, SI_XNAP_DT_TABasedMDT * data, int lvl);

void __si_xnap_memfree_TABasedMDT( SI_XNAP_DT_TABasedMDT * data);

int __si_xnap_Encode_TABasedMDT( SI_XNAP_DT_TABasedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TAIListforMDT( SI_XNAP_DT_TAIListforMDT ** data);

void __si_xnap_debug_TAIListforMDT( char * key, SI_XNAP_DT_TAIListforMDT * data, int lvl);

void __si_xnap_memfree_TAIListforMDT( SI_XNAP_DT_TAIListforMDT * data);

int __si_xnap_Encode_TAIListforMDT( SI_XNAP_DT_TAIListforMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TAIBasedMDT( SI_XNAP_DT_TAIBasedMDT ** data);

void __si_xnap_debug_TAIBasedMDT( char * key, SI_XNAP_DT_TAIBasedMDT * data, int lvl);

void __si_xnap_memfree_TAIBasedMDT( SI_XNAP_DT_TAIBasedMDT * data);

int __si_xnap_Encode_TAIBasedMDT( SI_XNAP_DT_TAIBasedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_AreaScopeOfMDT_NR( SI_XNAP_DT_AreaScopeOfMDT_NR ** data);

void __si_xnap_debug_AreaScopeOfMDT_NR( char * key, SI_XNAP_DT_AreaScopeOfMDT_NR * data, int lvl);

void __si_xnap_memfree_AreaScopeOfMDT_NR( SI_XNAP_DT_AreaScopeOfMDT_NR * data);

int __si_xnap_Encode_AreaScopeOfMDT_NR( SI_XNAP_DT_AreaScopeOfMDT_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellIdListforMDT_EUTRA( SI_XNAP_DT_CellIdListforMDT_EUTRA ** data);

void __si_xnap_debug_CellIdListforMDT_EUTRA( char * key, SI_XNAP_DT_CellIdListforMDT_EUTRA * data, int lvl);

void __si_xnap_memfree_CellIdListforMDT_EUTRA( SI_XNAP_DT_CellIdListforMDT_EUTRA * data);

int __si_xnap_Encode_CellIdListforMDT_EUTRA( SI_XNAP_DT_CellIdListforMDT_EUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellBasedMDT_EUTRA( SI_XNAP_DT_CellBasedMDT_EUTRA ** data);

void __si_xnap_debug_CellBasedMDT_EUTRA( char * key, SI_XNAP_DT_CellBasedMDT_EUTRA * data, int lvl);

void __si_xnap_memfree_CellBasedMDT_EUTRA( SI_XNAP_DT_CellBasedMDT_EUTRA * data);

int __si_xnap_Encode_CellBasedMDT_EUTRA( SI_XNAP_DT_CellBasedMDT_EUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_AreaScopeOfMDT_EUTRA( SI_XNAP_DT_AreaScopeOfMDT_EUTRA ** data);

void __si_xnap_debug_AreaScopeOfMDT_EUTRA( char * key, SI_XNAP_DT_AreaScopeOfMDT_EUTRA * data, int lvl);

void __si_xnap_memfree_AreaScopeOfMDT_EUTRA( SI_XNAP_DT_AreaScopeOfMDT_EUTRA * data);

int __si_xnap_Encode_AreaScopeOfMDT_EUTRA( SI_XNAP_DT_AreaScopeOfMDT_EUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_AreaScopeOfNeighCellsList( SI_XNAP_DT_AreaScopeOfNeighCellsList ** data);

void __si_xnap_debug_AreaScopeOfNeighCellsList( char * key, SI_XNAP_DT_AreaScopeOfNeighCellsList * data, int lvl);

void __si_xnap_memfree_AreaScopeOfNeighCellsList( SI_XNAP_DT_AreaScopeOfNeighCellsList * data);

int __si_xnap_Encode_AreaScopeOfNeighCellsList( SI_XNAP_DT_AreaScopeOfNeighCellsList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NRARFCN( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_NRARFCN( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_NRARFCN( SI_XNAP_DT_NRARFCN * data);


void __si_xnap_debug_NRSCS( char * key, uint8_t eNRSCS, int lvl);

int __si_xnap_Encode_NRSCS( uint8_t eNRSCS, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NRNRB( char * key, uint8_t eNRNRB, int lvl);

int __si_xnap_Encode_NRNRB( uint8_t eNRNRB, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRTransmissionBandwidth( SI_XNAP_DT_NRTransmissionBandwidth ** data);

void __si_xnap_debug_NRTransmissionBandwidth( char * key, SI_XNAP_DT_NRTransmissionBandwidth * data, int lvl);

void __si_xnap_memfree_NRTransmissionBandwidth( SI_XNAP_DT_NRTransmissionBandwidth * data);

int __si_xnap_Encode_NRTransmissionBandwidth( SI_XNAP_DT_NRTransmissionBandwidth * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SUL_Information( SI_XNAP_DT_SUL_Information ** data);

void __si_xnap_debug_SUL_Information( char * key, SI_XNAP_DT_SUL_Information * data, int lvl);

void __si_xnap_memfree_SUL_Information( SI_XNAP_DT_SUL_Information * data);

int __si_xnap_Encode_SUL_Information( SI_XNAP_DT_SUL_Information * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRFrequencyBand_List( SI_XNAP_DT_NRFrequencyBand_List ** data);

void __si_xnap_debug_NRFrequencyBand_List( char * key, SI_XNAP_DT_NRFrequencyBand_List * data, int lvl);

void __si_xnap_memfree_NRFrequencyBand_List( SI_XNAP_DT_NRFrequencyBand_List * data);

int __si_xnap_Encode_NRFrequencyBand_List( SI_XNAP_DT_NRFrequencyBand_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRFrequencyInfo( SI_XNAP_DT_NRFrequencyInfo ** data);

void __si_xnap_debug_NRFrequencyInfo( char * key, SI_XNAP_DT_NRFrequencyInfo * data, int lvl);

void __si_xnap_memfree_NRFrequencyInfo( SI_XNAP_DT_NRFrequencyInfo * data);

int __si_xnap_Encode_NRFrequencyInfo( SI_XNAP_DT_NRFrequencyInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PCIListForMDT( SI_XNAP_DT_PCIListForMDT ** data);

void __si_xnap_debug_PCIListForMDT( char * key, SI_XNAP_DT_PCIListForMDT * data, int lvl);

void __si_xnap_memfree_PCIListForMDT( SI_XNAP_DT_PCIListForMDT * data);

int __si_xnap_Encode_PCIListForMDT( SI_XNAP_DT_PCIListForMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_AreaScopeOfNeighCellsItem( SI_XNAP_DT_AreaScopeOfNeighCellsItem ** data);

void __si_xnap_debug_AreaScopeOfNeighCellsItem( char * key, SI_XNAP_DT_AreaScopeOfNeighCellsItem * data, int lvl);

void __si_xnap_memfree_AreaScopeOfNeighCellsItem( SI_XNAP_DT_AreaScopeOfNeighCellsItem * data);

int __si_xnap_Encode_AreaScopeOfNeighCellsItem( SI_XNAP_DT_AreaScopeOfNeighCellsItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellIdListforQMC( SI_XNAP_DT_CellIdListforQMC ** data);

void __si_xnap_debug_CellIdListforQMC( char * key, SI_XNAP_DT_CellIdListforQMC * data, int lvl);

void __si_xnap_memfree_CellIdListforQMC( SI_XNAP_DT_CellIdListforQMC * data);

int __si_xnap_Encode_CellIdListforQMC( SI_XNAP_DT_CellIdListforQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellBasedQMC( SI_XNAP_DT_CellBasedQMC ** data);

void __si_xnap_debug_CellBasedQMC( char * key, SI_XNAP_DT_CellBasedQMC * data, int lvl);

void __si_xnap_memfree_CellBasedQMC( SI_XNAP_DT_CellBasedQMC * data);

int __si_xnap_Encode_CellBasedQMC( SI_XNAP_DT_CellBasedQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TAListforQMC( SI_XNAP_DT_TAListforQMC ** data);

void __si_xnap_debug_TAListforQMC( char * key, SI_XNAP_DT_TAListforQMC * data, int lvl);

void __si_xnap_memfree_TAListforQMC( SI_XNAP_DT_TAListforQMC * data);

int __si_xnap_Encode_TAListforQMC( SI_XNAP_DT_TAListforQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TABasedQMC( SI_XNAP_DT_TABasedQMC ** data);

void __si_xnap_debug_TABasedQMC( char * key, SI_XNAP_DT_TABasedQMC * data, int lvl);

void __si_xnap_memfree_TABasedQMC( SI_XNAP_DT_TABasedQMC * data);

int __si_xnap_Encode_TABasedQMC( SI_XNAP_DT_TABasedQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TAIListforQMC( SI_XNAP_DT_TAIListforQMC ** data);

void __si_xnap_debug_TAIListforQMC( char * key, SI_XNAP_DT_TAIListforQMC * data, int lvl);

void __si_xnap_memfree_TAIListforQMC( SI_XNAP_DT_TAIListforQMC * data);

int __si_xnap_Encode_TAIListforQMC( SI_XNAP_DT_TAIListforQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TAIBasedQMC( SI_XNAP_DT_TAIBasedQMC ** data);

void __si_xnap_debug_TAIBasedQMC( char * key, SI_XNAP_DT_TAIBasedQMC * data, int lvl);

void __si_xnap_memfree_TAIBasedQMC( SI_XNAP_DT_TAIBasedQMC * data);

int __si_xnap_Encode_TAIBasedQMC( SI_XNAP_DT_TAIBasedQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PLMNListforQMC( SI_XNAP_DT_PLMNListforQMC ** data);

void __si_xnap_debug_PLMNListforQMC( char * key, SI_XNAP_DT_PLMNListforQMC * data, int lvl);

void __si_xnap_memfree_PLMNListforQMC( SI_XNAP_DT_PLMNListforQMC * data);

int __si_xnap_Encode_PLMNListforQMC( SI_XNAP_DT_PLMNListforQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PLMNAreaBasedQMC( SI_XNAP_DT_PLMNAreaBasedQMC ** data);

void __si_xnap_debug_PLMNAreaBasedQMC( char * key, SI_XNAP_DT_PLMNAreaBasedQMC * data, int lvl);

void __si_xnap_memfree_PLMNAreaBasedQMC( SI_XNAP_DT_PLMNAreaBasedQMC * data);

int __si_xnap_Encode_PLMNAreaBasedQMC( SI_XNAP_DT_PLMNAreaBasedQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_AreaScopeOfQMC( SI_XNAP_DT_AreaScopeOfQMC ** data);

void __si_xnap_debug_AreaScopeOfQMC( char * key, SI_XNAP_DT_AreaScopeOfQMC * data, int lvl);

void __si_xnap_memfree_AreaScopeOfQMC( SI_XNAP_DT_AreaScopeOfQMC * data);

int __si_xnap_Encode_AreaScopeOfQMC( SI_XNAP_DT_AreaScopeOfQMC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ASSecurityInformation_key_NG_RAN_Star( SI_XNAP_DT_ASSecurityInformation_key_NG_RAN_Star ** data);

void __si_xnap_init_ASSecurityInformation_key_NG_RAN_Star2( SI_XNAP_DT_ASSecurityInformation_key_NG_RAN_Star ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_ASSecurityInformation_key_NG_RAN_Star( char * key, SI_XNAP_DT_ASSecurityInformation_key_NG_RAN_Star * data, int lvl);

void __si_xnap_memfree_ASSecurityInformation_key_NG_RAN_Star( SI_XNAP_DT_ASSecurityInformation_key_NG_RAN_Star * data);

int __si_xnap_Encode_ASSecurityInformation_key_NG_RAN_Star( SI_XNAP_DT_ASSecurityInformation_key_NG_RAN_Star * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ASSecurityInformation_ncc( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_ASSecurityInformation_ncc( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_ASSecurityInformation_ncc( SI_XNAP_DT_ASSecurityInformation_ncc * data);


void __si_xnap_init_AS_SecurityInformation( SI_XNAP_DT_AS_SecurityInformation ** data);

void __si_xnap_debug_AS_SecurityInformation( char * key, SI_XNAP_DT_AS_SecurityInformation * data, int lvl);

void __si_xnap_memfree_AS_SecurityInformation( SI_XNAP_DT_AS_SecurityInformation * data);

int __si_xnap_Encode_AS_SecurityInformation( SI_XNAP_DT_AS_SecurityInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RANPagingAttemptInfo_pagingAttemptCount( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_RANPagingAttemptInfo_pagingAttemptCount( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_RANPagingAttemptInfo_pagingAttemptCount( SI_XNAP_DT_RANPagingAttemptInfo_pagingAttemptCount * data);


void __si_xnap_debug_RANPagingAttemptInfo_intendedNumberOfPagingAttempts( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_RANPagingAttemptInfo_intendedNumberOfPagingAttempts( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_RANPagingAttemptInfo_intendedNumberOfPagingAttempts( SI_XNAP_DT_RANPagingAttemptInfo_intendedNumberOfPagingAttempts * data);


void __si_xnap_debug_RANPagingAttemptInfo_nextPagingAreaScope( char * key, uint8_t eRANPagingAttemptInfo_nextPagingAreaScope, int lvl);

int __si_xnap_Encode_RANPagingAttemptInfo_nextPagingAreaScope( uint8_t eRANPagingAttemptInfo_nextPagingAreaScope, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RANPagingAttemptInfo( SI_XNAP_DT_RANPagingAttemptInfo ** data);

void __si_xnap_debug_RANPagingAttemptInfo( char * key, SI_XNAP_DT_RANPagingAttemptInfo * data, int lvl);

void __si_xnap_memfree_RANPagingAttemptInfo( SI_XNAP_DT_RANPagingAttemptInfo * data);

int __si_xnap_Encode_RANPagingAttemptInfo( SI_XNAP_DT_RANPagingAttemptInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_AssistanceDataForRANPaging( SI_XNAP_DT_AssistanceDataForRANPaging ** data);

void __si_xnap_debug_AssistanceDataForRANPaging( char * key, SI_XNAP_DT_AssistanceDataForRANPaging * data, int lvl);

void __si_xnap_memfree_AssistanceDataForRANPaging( SI_XNAP_DT_AssistanceDataForRANPaging * data);

int __si_xnap_Encode_AssistanceDataForRANPaging( SI_XNAP_DT_AssistanceDataForRANPaging * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_AssistanceInformationQoE_Meas( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_AssistanceInformationQoE_Meas( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_AssistanceInformationQoE_Meas( SI_XNAP_DT_AssistanceInformationQoE_Meas * data);


void __si_xnap_init_Associated_QoSFlowInfo_List( SI_XNAP_DT_Associated_QoSFlowInfo_List ** data);

void __si_xnap_debug_Associated_QoSFlowInfo_List( char * key, SI_XNAP_DT_Associated_QoSFlowInfo_List * data, int lvl);

void __si_xnap_memfree_Associated_QoSFlowInfo_List( SI_XNAP_DT_Associated_QoSFlowInfo_List * data);

int __si_xnap_Encode_Associated_QoSFlowInfo_List( SI_XNAP_DT_Associated_QoSFlowInfo_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_QoSFlowIdentifier( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_QoSFlowIdentifier( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_QoSFlowIdentifier( SI_XNAP_DT_QoSFlowIdentifier * data);


void __si_xnap_init_Associated_QoSFlowInfo_Item( SI_XNAP_DT_Associated_QoSFlowInfo_Item ** data);

void __si_xnap_debug_Associated_QoSFlowInfo_Item( char * key, SI_XNAP_DT_Associated_QoSFlowInfo_Item * data, int lvl);

void __si_xnap_memfree_Associated_QoSFlowInfo_Item( SI_XNAP_DT_Associated_QoSFlowInfo_Item * data);

int __si_xnap_Encode_Associated_QoSFlowInfo_Item( SI_XNAP_DT_Associated_QoSFlowInfo_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_AvailableCapacity( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_AvailableCapacity( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_AvailableCapacity( SI_XNAP_DT_AvailableCapacity * data);


void __si_xnap_debug_AvailableRRCConnectionCapacityValue( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_AvailableRRCConnectionCapacityValue( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_AvailableRRCConnectionCapacityValue( SI_XNAP_DT_AvailableRRCConnectionCapacityValue * data);


void __si_xnap_debug_AvailableRVQoEMetrics_applicationLayerBufferLevelList( char * key, uint8_t eAvailableRVQoEMetrics_applicationLayerBufferLevelList, int lvl);

int __si_xnap_Encode_AvailableRVQoEMetrics_applicationLayerBufferLevelList( uint8_t eAvailableRVQoEMetrics_applicationLayerBufferLevelList, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_AvailableRVQoEMetrics_playoutDelayForMediaStartup( char * key, uint8_t eAvailableRVQoEMetrics_playoutDelayForMediaStartup, int lvl);

int __si_xnap_Encode_AvailableRVQoEMetrics_playoutDelayForMediaStartup( uint8_t eAvailableRVQoEMetrics_playoutDelayForMediaStartup, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_AvailableRVQoEMetrics( SI_XNAP_DT_AvailableRVQoEMetrics ** data);

void __si_xnap_debug_AvailableRVQoEMetrics( char * key, SI_XNAP_DT_AvailableRVQoEMetrics * data, int lvl);

void __si_xnap_memfree_AvailableRVQoEMetrics( SI_XNAP_DT_AvailableRVQoEMetrics * data);

int __si_xnap_Encode_AvailableRVQoEMetrics( SI_XNAP_DT_AvailableRVQoEMetrics * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_AveragingWindow( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_AveragingWindow( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_AveragingWindow( SI_XNAP_DT_AveragingWindow * data);


void __si_xnap_init_BAPAddress( SI_XNAP_DT_BAPAddress ** data);

void __si_xnap_init_BAPAddress2( SI_XNAP_DT_BAPAddress ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_BAPAddress( char * key, SI_XNAP_DT_BAPAddress * data, int lvl);

void __si_xnap_memfree_BAPAddress( SI_XNAP_DT_BAPAddress * data);

int __si_xnap_Encode_BAPAddress( SI_XNAP_DT_BAPAddress * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BAPPathID( SI_XNAP_DT_BAPPathID ** data);

void __si_xnap_init_BAPPathID2( SI_XNAP_DT_BAPPathID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_BAPPathID( char * key, SI_XNAP_DT_BAPPathID * data, int lvl);

void __si_xnap_memfree_BAPPathID( SI_XNAP_DT_BAPPathID * data);

int __si_xnap_Encode_BAPPathID( SI_XNAP_DT_BAPPathID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BAPRoutingID( SI_XNAP_DT_BAPRoutingID ** data);

void __si_xnap_debug_BAPRoutingID( char * key, SI_XNAP_DT_BAPRoutingID * data, int lvl);

void __si_xnap_memfree_BAPRoutingID( SI_XNAP_DT_BAPRoutingID * data);

int __si_xnap_Encode_BAPRoutingID( SI_XNAP_DT_BAPRoutingID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_BeamMeasurementIndicationM1( char * key, uint8_t eBeamMeasurementIndicationM1, int lvl);

int __si_xnap_Encode_BeamMeasurementIndicationM1( uint8_t eBeamMeasurementIndicationM1, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_BeamMeasurementsReportQuantity_rSRP( char * key, uint8_t eBeamMeasurementsReportQuantity_rSRP, int lvl);

int __si_xnap_Encode_BeamMeasurementsReportQuantity_rSRP( uint8_t eBeamMeasurementsReportQuantity_rSRP, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_BeamMeasurementsReportQuantity_rSRQ( char * key, uint8_t eBeamMeasurementsReportQuantity_rSRQ, int lvl);

int __si_xnap_Encode_BeamMeasurementsReportQuantity_rSRQ( uint8_t eBeamMeasurementsReportQuantity_rSRQ, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_BeamMeasurementsReportQuantity_sINR( char * key, uint8_t eBeamMeasurementsReportQuantity_sINR, int lvl);

int __si_xnap_Encode_BeamMeasurementsReportQuantity_sINR( uint8_t eBeamMeasurementsReportQuantity_sINR, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BeamMeasurementsReportQuantity( SI_XNAP_DT_BeamMeasurementsReportQuantity ** data);

void __si_xnap_debug_BeamMeasurementsReportQuantity( char * key, SI_XNAP_DT_BeamMeasurementsReportQuantity * data, int lvl);

void __si_xnap_memfree_BeamMeasurementsReportQuantity( SI_XNAP_DT_BeamMeasurementsReportQuantity * data);

int __si_xnap_Encode_BeamMeasurementsReportQuantity( SI_XNAP_DT_BeamMeasurementsReportQuantity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MaxNrofRS_IndexesToReport( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_MaxNrofRS_IndexesToReport( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_MaxNrofRS_IndexesToReport( SI_XNAP_DT_MaxNrofRS_IndexesToReport * data);


void __si_xnap_init_BeamMeasurementsReportConfiguration( SI_XNAP_DT_BeamMeasurementsReportConfiguration ** data);

void __si_xnap_debug_BeamMeasurementsReportConfiguration( char * key, SI_XNAP_DT_BeamMeasurementsReportConfiguration * data, int lvl);

void __si_xnap_memfree_BeamMeasurementsReportConfiguration( SI_XNAP_DT_BeamMeasurementsReportConfiguration * data);

int __si_xnap_Encode_BeamMeasurementsReportConfiguration( SI_XNAP_DT_BeamMeasurementsReportConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_BHInfoIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_BHInfoIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_BHInfoIndex( SI_XNAP_DT_BHInfoIndex * data);


void __si_xnap_init_BHInfoList( SI_XNAP_DT_BHInfoList ** data);

void __si_xnap_debug_BHInfoList( char * key, SI_XNAP_DT_BHInfoList * data, int lvl);

void __si_xnap_memfree_BHInfoList( SI_XNAP_DT_BHInfoList * data);

int __si_xnap_Encode_BHInfoList( SI_XNAP_DT_BHInfoList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BHInfo_Item( SI_XNAP_DT_BHInfo_Item ** data);

void __si_xnap_debug_BHInfo_Item( char * key, SI_XNAP_DT_BHInfo_Item * data, int lvl);

void __si_xnap_memfree_BHInfo_Item( SI_XNAP_DT_BHInfo_Item * data);

int __si_xnap_Encode_BHInfo_Item( SI_XNAP_DT_BHInfo_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BHRLCChannelID( SI_XNAP_DT_BHRLCChannelID ** data);

void __si_xnap_init_BHRLCChannelID2( SI_XNAP_DT_BHRLCChannelID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_BHRLCChannelID( char * key, SI_XNAP_DT_BHRLCChannelID * data, int lvl);

void __si_xnap_memfree_BHRLCChannelID( SI_XNAP_DT_BHRLCChannelID * data);

int __si_xnap_Encode_BHRLCChannelID( SI_XNAP_DT_BHRLCChannelID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BAPControlPDURLCCH_List( SI_XNAP_DT_BAPControlPDURLCCH_List ** data);

void __si_xnap_debug_BAPControlPDURLCCH_List( char * key, SI_XNAP_DT_BAPControlPDURLCCH_List * data, int lvl);

void __si_xnap_memfree_BAPControlPDURLCCH_List( SI_XNAP_DT_BAPControlPDURLCCH_List * data);

int __si_xnap_Encode_BAPControlPDURLCCH_List( SI_XNAP_DT_BAPControlPDURLCCH_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BAPControlPDURLCCH_Item( SI_XNAP_DT_BAPControlPDURLCCH_Item ** data);

void __si_xnap_debug_BAPControlPDURLCCH_Item( char * key, SI_XNAP_DT_BAPControlPDURLCCH_Item * data, int lvl);

void __si_xnap_memfree_BAPControlPDURLCCH_Item( SI_XNAP_DT_BAPControlPDURLCCH_Item * data);

int __si_xnap_Encode_BAPControlPDURLCCH_Item( SI_XNAP_DT_BAPControlPDURLCCH_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_BarringExemptionforEmerCallInfo( char * key, uint8_t eBarringExemptionforEmerCallInfo, int lvl);

int __si_xnap_Encode_BarringExemptionforEmerCallInfo( uint8_t eBarringExemptionforEmerCallInfo, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_BluetoothMeasurementConfiguration_bt_rssi( char * key, uint8_t eBluetoothMeasurementConfiguration_bt_rssi, int lvl);

int __si_xnap_Encode_BluetoothMeasurementConfiguration_bt_rssi( uint8_t eBluetoothMeasurementConfiguration_bt_rssi, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_BluetoothMeasConfig( char * key, uint8_t eBluetoothMeasConfig, int lvl);

int __si_xnap_Encode_BluetoothMeasConfig( uint8_t eBluetoothMeasConfig, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BluetoothMeasConfigNameList( SI_XNAP_DT_BluetoothMeasConfigNameList ** data);

void __si_xnap_debug_BluetoothMeasConfigNameList( char * key, SI_XNAP_DT_BluetoothMeasConfigNameList * data, int lvl);

void __si_xnap_memfree_BluetoothMeasConfigNameList( SI_XNAP_DT_BluetoothMeasConfigNameList * data);

int __si_xnap_Encode_BluetoothMeasConfigNameList( SI_XNAP_DT_BluetoothMeasConfigNameList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BluetoothMeasurementConfiguration( SI_XNAP_DT_BluetoothMeasurementConfiguration ** data);

void __si_xnap_debug_BluetoothMeasurementConfiguration( char * key, SI_XNAP_DT_BluetoothMeasurementConfiguration * data, int lvl);

void __si_xnap_memfree_BluetoothMeasurementConfiguration( SI_XNAP_DT_BluetoothMeasurementConfiguration * data);

int __si_xnap_Encode_BluetoothMeasurementConfiguration( SI_XNAP_DT_BluetoothMeasurementConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BluetoothName( SI_XNAP_DT_BluetoothName ** data);

void __si_xnap_init_BluetoothName2( SI_XNAP_DT_BluetoothName ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_BluetoothName( char * key, SI_XNAP_DT_BluetoothName * data, int lvl);

void __si_xnap_memfree_BluetoothName( SI_XNAP_DT_BluetoothName * data);

int __si_xnap_Encode_BluetoothName( SI_XNAP_DT_BluetoothName * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BPLMN_ID_Info_EUTRA( SI_XNAP_DT_BPLMN_ID_Info_EUTRA ** data);

void __si_xnap_debug_BPLMN_ID_Info_EUTRA( char * key, SI_XNAP_DT_BPLMN_ID_Info_EUTRA * data, int lvl);

void __si_xnap_memfree_BPLMN_ID_Info_EUTRA( SI_XNAP_DT_BPLMN_ID_Info_EUTRA * data);

int __si_xnap_Encode_BPLMN_ID_Info_EUTRA( SI_XNAP_DT_BPLMN_ID_Info_EUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BroadcastEUTRAPLMNs( SI_XNAP_DT_BroadcastEUTRAPLMNs ** data);

void __si_xnap_debug_BroadcastEUTRAPLMNs( char * key, SI_XNAP_DT_BroadcastEUTRAPLMNs * data, int lvl);

void __si_xnap_memfree_BroadcastEUTRAPLMNs( SI_XNAP_DT_BroadcastEUTRAPLMNs * data);

int __si_xnap_Encode_BroadcastEUTRAPLMNs( SI_XNAP_DT_BroadcastEUTRAPLMNs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TAC( SI_XNAP_DT_TAC ** data);

void __si_xnap_init_TAC2( SI_XNAP_DT_TAC ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_TAC( char * key, SI_XNAP_DT_TAC * data, int lvl);

void __si_xnap_memfree_TAC( SI_XNAP_DT_TAC * data);

int __si_xnap_Encode_TAC( SI_XNAP_DT_TAC * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_E_UTRA_Cell_Identity( SI_XNAP_DT_E_UTRA_Cell_Identity ** data);

void __si_xnap_init_E_UTRA_Cell_Identity2( SI_XNAP_DT_E_UTRA_Cell_Identity ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_E_UTRA_Cell_Identity( char * key, SI_XNAP_DT_E_UTRA_Cell_Identity * data, int lvl);

void __si_xnap_memfree_E_UTRA_Cell_Identity( SI_XNAP_DT_E_UTRA_Cell_Identity * data);

int __si_xnap_Encode_E_UTRA_Cell_Identity( SI_XNAP_DT_E_UTRA_Cell_Identity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RANAC( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_RANAC( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_RANAC( SI_XNAP_DT_RANAC * data);


void __si_xnap_init_BPLMN_ID_Info_EUTRA_Item( SI_XNAP_DT_BPLMN_ID_Info_EUTRA_Item ** data);

void __si_xnap_debug_BPLMN_ID_Info_EUTRA_Item( char * key, SI_XNAP_DT_BPLMN_ID_Info_EUTRA_Item * data, int lvl);

void __si_xnap_memfree_BPLMN_ID_Info_EUTRA_Item( SI_XNAP_DT_BPLMN_ID_Info_EUTRA_Item * data);

int __si_xnap_Encode_BPLMN_ID_Info_EUTRA_Item( SI_XNAP_DT_BPLMN_ID_Info_EUTRA_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BPLMN_ID_Info_NR( SI_XNAP_DT_BPLMN_ID_Info_NR ** data);

void __si_xnap_debug_BPLMN_ID_Info_NR( char * key, SI_XNAP_DT_BPLMN_ID_Info_NR * data, int lvl);

void __si_xnap_memfree_BPLMN_ID_Info_NR( SI_XNAP_DT_BPLMN_ID_Info_NR * data);

int __si_xnap_Encode_BPLMN_ID_Info_NR( SI_XNAP_DT_BPLMN_ID_Info_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BroadcastPLMNs( SI_XNAP_DT_BroadcastPLMNs ** data);

void __si_xnap_debug_BroadcastPLMNs( char * key, SI_XNAP_DT_BroadcastPLMNs * data, int lvl);

void __si_xnap_memfree_BroadcastPLMNs( SI_XNAP_DT_BroadcastPLMNs * data);

int __si_xnap_Encode_BroadcastPLMNs( SI_XNAP_DT_BroadcastPLMNs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NR_Cell_Identity( SI_XNAP_DT_NR_Cell_Identity ** data);

void __si_xnap_init_NR_Cell_Identity2( SI_XNAP_DT_NR_Cell_Identity ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_NR_Cell_Identity( char * key, SI_XNAP_DT_NR_Cell_Identity * data, int lvl);

void __si_xnap_memfree_NR_Cell_Identity( SI_XNAP_DT_NR_Cell_Identity * data);

int __si_xnap_Encode_NR_Cell_Identity( SI_XNAP_DT_NR_Cell_Identity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BPLMN_ID_Info_NR_Item( SI_XNAP_DT_BPLMN_ID_Info_NR_Item ** data);

void __si_xnap_debug_BPLMN_ID_Info_NR_Item( char * key, SI_XNAP_DT_BPLMN_ID_Info_NR_Item * data, int lvl);

void __si_xnap_memfree_BPLMN_ID_Info_NR_Item( SI_XNAP_DT_BPLMN_ID_Info_NR_Item * data);

int __si_xnap_Encode_BPLMN_ID_Info_NR_Item( SI_XNAP_DT_BPLMN_ID_Info_NR_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BroadcastCAG_Identifier_List( SI_XNAP_DT_BroadcastCAG_Identifier_List ** data);

void __si_xnap_debug_BroadcastCAG_Identifier_List( char * key, SI_XNAP_DT_BroadcastCAG_Identifier_List * data, int lvl);

void __si_xnap_memfree_BroadcastCAG_Identifier_List( SI_XNAP_DT_BroadcastCAG_Identifier_List * data);

int __si_xnap_Encode_BroadcastCAG_Identifier_List( SI_XNAP_DT_BroadcastCAG_Identifier_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CAG_Identifier( SI_XNAP_DT_CAG_Identifier ** data);

void __si_xnap_init_CAG_Identifier2( SI_XNAP_DT_CAG_Identifier ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_CAG_Identifier( char * key, SI_XNAP_DT_CAG_Identifier * data, int lvl);

void __si_xnap_memfree_CAG_Identifier( SI_XNAP_DT_CAG_Identifier * data);

int __si_xnap_Encode_CAG_Identifier( SI_XNAP_DT_CAG_Identifier * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BroadcastCAG_Identifier_Item( SI_XNAP_DT_BroadcastCAG_Identifier_Item ** data);

void __si_xnap_debug_BroadcastCAG_Identifier_Item( char * key, SI_XNAP_DT_BroadcastCAG_Identifier_Item * data, int lvl);

void __si_xnap_memfree_BroadcastCAG_Identifier_Item( SI_XNAP_DT_BroadcastCAG_Identifier_Item * data);

int __si_xnap_Encode_BroadcastCAG_Identifier_Item( SI_XNAP_DT_BroadcastCAG_Identifier_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BroadcastNID_List( SI_XNAP_DT_BroadcastNID_List ** data);

void __si_xnap_debug_BroadcastNID_List( char * key, SI_XNAP_DT_BroadcastNID_List * data, int lvl);

void __si_xnap_memfree_BroadcastNID_List( SI_XNAP_DT_BroadcastNID_List * data);

int __si_xnap_Encode_BroadcastNID_List( SI_XNAP_DT_BroadcastNID_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NID( SI_XNAP_DT_NID ** data);

void __si_xnap_init_NID2( SI_XNAP_DT_NID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_NID( char * key, SI_XNAP_DT_NID * data, int lvl);

void __si_xnap_memfree_NID( SI_XNAP_DT_NID * data);

int __si_xnap_Encode_NID( SI_XNAP_DT_NID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BroadcastNID_Item( SI_XNAP_DT_BroadcastNID_Item ** data);

void __si_xnap_debug_BroadcastNID_Item( char * key, SI_XNAP_DT_BroadcastNID_Item * data, int lvl);

void __si_xnap_memfree_BroadcastNID_Item( SI_XNAP_DT_BroadcastNID_Item * data);

int __si_xnap_Encode_BroadcastNID_Item( SI_XNAP_DT_BroadcastNID_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SliceSupport_List( SI_XNAP_DT_SliceSupport_List ** data);

void __si_xnap_debug_SliceSupport_List( char * key, SI_XNAP_DT_SliceSupport_List * data, int lvl);

void __si_xnap_memfree_SliceSupport_List( SI_XNAP_DT_SliceSupport_List * data);

int __si_xnap_Encode_SliceSupport_List( SI_XNAP_DT_SliceSupport_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BroadcastPLMNinTAISupport_Item( SI_XNAP_DT_BroadcastPLMNinTAISupport_Item ** data);

void __si_xnap_debug_BroadcastPLMNinTAISupport_Item( char * key, SI_XNAP_DT_BroadcastPLMNinTAISupport_Item * data, int lvl);

void __si_xnap_memfree_BroadcastPLMNinTAISupport_Item( SI_XNAP_DT_BroadcastPLMNinTAISupport_Item * data);

int __si_xnap_Encode_BroadcastPLMNinTAISupport_Item( SI_XNAP_DT_BroadcastPLMNinTAISupport_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BroadcastPNI_NPN_ID_Information( SI_XNAP_DT_BroadcastPNI_NPN_ID_Information ** data);

void __si_xnap_debug_BroadcastPNI_NPN_ID_Information( char * key, SI_XNAP_DT_BroadcastPNI_NPN_ID_Information * data, int lvl);

void __si_xnap_memfree_BroadcastPNI_NPN_ID_Information( SI_XNAP_DT_BroadcastPNI_NPN_ID_Information * data);

int __si_xnap_Encode_BroadcastPNI_NPN_ID_Information( SI_XNAP_DT_BroadcastPNI_NPN_ID_Information * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BroadcastPNI_NPN_ID_Information_Item( SI_XNAP_DT_BroadcastPNI_NPN_ID_Information_Item ** data);

void __si_xnap_debug_BroadcastPNI_NPN_ID_Information_Item( char * key, SI_XNAP_DT_BroadcastPNI_NPN_ID_Information_Item * data, int lvl);

void __si_xnap_memfree_BroadcastPNI_NPN_ID_Information_Item( SI_XNAP_DT_BroadcastPNI_NPN_ID_Information_Item * data);

int __si_xnap_Encode_BroadcastPNI_NPN_ID_Information_Item( SI_XNAP_DT_BroadcastPNI_NPN_ID_Information_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BroadcastSNPNID_List( SI_XNAP_DT_BroadcastSNPNID_List ** data);

void __si_xnap_debug_BroadcastSNPNID_List( char * key, SI_XNAP_DT_BroadcastSNPNID_List * data, int lvl);

void __si_xnap_memfree_BroadcastSNPNID_List( SI_XNAP_DT_BroadcastSNPNID_List * data);

int __si_xnap_Encode_BroadcastSNPNID_List( SI_XNAP_DT_BroadcastSNPNID_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BroadcastSNPNID( SI_XNAP_DT_BroadcastSNPNID ** data);

void __si_xnap_debug_BroadcastSNPNID( char * key, SI_XNAP_DT_BroadcastSNPNID * data, int lvl);

void __si_xnap_memfree_BroadcastSNPNID( SI_XNAP_DT_BroadcastSNPNID * data);

int __si_xnap_Encode_BroadcastSNPNID( SI_XNAP_DT_BroadcastSNPNID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CandidateRelayUEInfoList( SI_XNAP_DT_CandidateRelayUEInfoList ** data);

void __si_xnap_debug_CandidateRelayUEInfoList( char * key, SI_XNAP_DT_CandidateRelayUEInfoList * data, int lvl);

void __si_xnap_memfree_CandidateRelayUEInfoList( SI_XNAP_DT_CandidateRelayUEInfoList * data);

int __si_xnap_Encode_CandidateRelayUEInfoList( SI_XNAP_DT_CandidateRelayUEInfoList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CandidateRelayUEInfoItem_candidateRelayUEID( SI_XNAP_DT_CandidateRelayUEInfoItem_candidateRelayUEID ** data);

void __si_xnap_init_CandidateRelayUEInfoItem_candidateRelayUEID2( SI_XNAP_DT_CandidateRelayUEInfoItem_candidateRelayUEID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_CandidateRelayUEInfoItem_candidateRelayUEID( char * key, SI_XNAP_DT_CandidateRelayUEInfoItem_candidateRelayUEID * data, int lvl);

void __si_xnap_memfree_CandidateRelayUEInfoItem_candidateRelayUEID( SI_XNAP_DT_CandidateRelayUEInfoItem_candidateRelayUEID * data);

int __si_xnap_Encode_CandidateRelayUEInfoItem_candidateRelayUEID( SI_XNAP_DT_CandidateRelayUEInfoItem_candidateRelayUEID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CandidateRelayUEInfoItem( SI_XNAP_DT_CandidateRelayUEInfoItem ** data);

void __si_xnap_debug_CandidateRelayUEInfoItem( char * key, SI_XNAP_DT_CandidateRelayUEInfoItem * data, int lvl);

void __si_xnap_memfree_CandidateRelayUEInfoItem( SI_XNAP_DT_CandidateRelayUEInfoItem * data);

int __si_xnap_Encode_CandidateRelayUEInfoItem( SI_XNAP_DT_CandidateRelayUEInfoItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CapacityValue( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_CapacityValue( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_CapacityValue( SI_XNAP_DT_CapacityValue * data);


void __si_xnap_init_SSBAreaCapacityValue_List( SI_XNAP_DT_SSBAreaCapacityValue_List ** data);

void __si_xnap_debug_SSBAreaCapacityValue_List( char * key, SI_XNAP_DT_SSBAreaCapacityValue_List * data, int lvl);

void __si_xnap_memfree_SSBAreaCapacityValue_List( SI_XNAP_DT_SSBAreaCapacityValue_List * data);

int __si_xnap_Encode_SSBAreaCapacityValue_List( SI_XNAP_DT_SSBAreaCapacityValue_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CapacityValueInfo( SI_XNAP_DT_CapacityValueInfo ** data);

void __si_xnap_debug_CapacityValueInfo( char * key, SI_XNAP_DT_CapacityValueInfo * data, int lvl);

void __si_xnap_memfree_CapacityValueInfo( SI_XNAP_DT_CapacityValueInfo * data);

int __si_xnap_Encode_CapacityValueInfo( SI_XNAP_DT_CapacityValueInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CauseRadioNetworkLayer( char * key, uint8_t eCauseRadioNetworkLayer, int lvl);

int __si_xnap_Encode_CauseRadioNetworkLayer( uint8_t eCauseRadioNetworkLayer, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CauseTransportLayer( char * key, uint8_t eCauseTransportLayer, int lvl);

int __si_xnap_Encode_CauseTransportLayer( uint8_t eCauseTransportLayer, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CauseProtocol( char * key, uint8_t eCauseProtocol, int lvl);

int __si_xnap_Encode_CauseProtocol( uint8_t eCauseProtocol, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CauseMisc( char * key, uint8_t eCauseMisc, int lvl);

int __si_xnap_Encode_CauseMisc( uint8_t eCauseMisc, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Cause( SI_XNAP_DT_Cause ** data);

void __si_xnap_debug_Cause( char * key, SI_XNAP_DT_Cause * data, int lvl);

void __si_xnap_memfree_Cause( SI_XNAP_DT_Cause * data);

int __si_xnap_Encode_Cause( SI_XNAP_DT_Cause * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellAssistanceInfoNR_limitedNR_List( SI_XNAP_DT_CellAssistanceInfoNR_limitedNR_List ** data);

void __si_xnap_debug_CellAssistanceInfoNR_limitedNR_List( char * key, SI_XNAP_DT_CellAssistanceInfoNR_limitedNR_List * data, int lvl);

void __si_xnap_memfree_CellAssistanceInfoNR_limitedNR_List( SI_XNAP_DT_CellAssistanceInfoNR_limitedNR_List * data);

int __si_xnap_Encode_CellAssistanceInfoNR_limitedNR_List( SI_XNAP_DT_CellAssistanceInfoNR_limitedNR_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CellAssistanceInfoNR_full_List( char * key, uint8_t eCellAssistanceInfoNR_full_List, int lvl);

int __si_xnap_Encode_CellAssistanceInfoNR_full_List( uint8_t eCellAssistanceInfoNR_full_List, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellAssistanceInfo_NR( SI_XNAP_DT_CellAssistanceInfo_NR ** data);

void __si_xnap_debug_CellAssistanceInfo_NR( char * key, SI_XNAP_DT_CellAssistanceInfo_NR * data, int lvl);

void __si_xnap_memfree_CellAssistanceInfo_NR( SI_XNAP_DT_CellAssistanceInfo_NR * data);

int __si_xnap_Encode_CellAssistanceInfo_NR( SI_XNAP_DT_CellAssistanceInfo_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MaximumCellListSize( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_MaximumCellListSize( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_MaximumCellListSize( SI_XNAP_DT_MaximumCellListSize * data);


void __si_xnap_init_CellAndCapacityAssistanceInfo_NR( SI_XNAP_DT_CellAndCapacityAssistanceInfo_NR ** data);

void __si_xnap_debug_CellAndCapacityAssistanceInfo_NR( char * key, SI_XNAP_DT_CellAndCapacityAssistanceInfo_NR * data, int lvl);

void __si_xnap_memfree_CellAndCapacityAssistanceInfo_NR( SI_XNAP_DT_CellAndCapacityAssistanceInfo_NR * data);

int __si_xnap_Encode_CellAndCapacityAssistanceInfo_NR( SI_XNAP_DT_CellAndCapacityAssistanceInfo_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellAssistanceInfoEUTRA_limitedEUTRA_List( SI_XNAP_DT_CellAssistanceInfoEUTRA_limitedEUTRA_List ** data);

void __si_xnap_debug_CellAssistanceInfoEUTRA_limitedEUTRA_List( char * key, SI_XNAP_DT_CellAssistanceInfoEUTRA_limitedEUTRA_List * data, int lvl);

void __si_xnap_memfree_CellAssistanceInfoEUTRA_limitedEUTRA_List( SI_XNAP_DT_CellAssistanceInfoEUTRA_limitedEUTRA_List * data);

int __si_xnap_Encode_CellAssistanceInfoEUTRA_limitedEUTRA_List( SI_XNAP_DT_CellAssistanceInfoEUTRA_limitedEUTRA_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CellAssistanceInfoEUTRA_full_List( char * key, uint8_t eCellAssistanceInfoEUTRA_full_List, int lvl);

int __si_xnap_Encode_CellAssistanceInfoEUTRA_full_List( uint8_t eCellAssistanceInfoEUTRA_full_List, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellAssistanceInfo_EUTRA( SI_XNAP_DT_CellAssistanceInfo_EUTRA ** data);

void __si_xnap_debug_CellAssistanceInfo_EUTRA( char * key, SI_XNAP_DT_CellAssistanceInfo_EUTRA * data, int lvl);

void __si_xnap_memfree_CellAssistanceInfo_EUTRA( SI_XNAP_DT_CellAssistanceInfo_EUTRA * data);

int __si_xnap_Encode_CellAssistanceInfo_EUTRA( SI_XNAP_DT_CellAssistanceInfo_EUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellAndCapacityAssistanceInfo_EUTRA( SI_XNAP_DT_CellAndCapacityAssistanceInfo_EUTRA ** data);

void __si_xnap_debug_CellAndCapacityAssistanceInfo_EUTRA( char * key, SI_XNAP_DT_CellAndCapacityAssistanceInfo_EUTRA * data, int lvl);

void __si_xnap_memfree_CellAndCapacityAssistanceInfo_EUTRA( SI_XNAP_DT_CellAndCapacityAssistanceInfo_EUTRA * data);

int __si_xnap_Encode_CellAndCapacityAssistanceInfo_EUTRA( SI_XNAP_DT_CellAndCapacityAssistanceInfo_EUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CellCapacityClassValue( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_CellCapacityClassValue( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_CellCapacityClassValue( SI_XNAP_DT_CellCapacityClassValue * data);


void __si_xnap_debug_CellDeploymentStatusIndicator( char * key, uint8_t eCellDeploymentStatusIndicator, int lvl);

int __si_xnap_Encode_CellDeploymentStatusIndicator( uint8_t eCellDeploymentStatusIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CellGroupID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_CellGroupID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_CellGroupID( SI_XNAP_DT_CellGroupID * data);


void __si_xnap_init_CellMeasurementResult( SI_XNAP_DT_CellMeasurementResult ** data);

void __si_xnap_debug_CellMeasurementResult( char * key, SI_XNAP_DT_CellMeasurementResult * data, int lvl);

void __si_xnap_memfree_CellMeasurementResult( SI_XNAP_DT_CellMeasurementResult * data);

int __si_xnap_Encode_CellMeasurementResult( SI_XNAP_DT_CellMeasurementResult * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NG_RAN_Cell_Identity( SI_XNAP_DT_NG_RAN_Cell_Identity ** data);

void __si_xnap_debug_NG_RAN_Cell_Identity( char * key, SI_XNAP_DT_NG_RAN_Cell_Identity * data, int lvl);

void __si_xnap_memfree_NG_RAN_Cell_Identity( SI_XNAP_DT_NG_RAN_Cell_Identity * data);

int __si_xnap_Encode_NG_RAN_Cell_Identity( SI_XNAP_DT_NG_RAN_Cell_Identity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GlobalNG_RANCell_ID( SI_XNAP_DT_GlobalNG_RANCell_ID ** data);

void __si_xnap_debug_GlobalNG_RANCell_ID( char * key, SI_XNAP_DT_GlobalNG_RANCell_ID * data, int lvl);

void __si_xnap_memfree_GlobalNG_RANCell_ID( SI_XNAP_DT_GlobalNG_RANCell_ID * data);

int __si_xnap_Encode_GlobalNG_RANCell_ID( SI_XNAP_DT_GlobalNG_RANCell_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DL_GBR_PRB_usage( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_DL_GBR_PRB_usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_DL_GBR_PRB_usage( SI_XNAP_DT_DL_GBR_PRB_usage * data);


void __si_xnap_debug_UL_GBR_PRB_usage( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_UL_GBR_PRB_usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_UL_GBR_PRB_usage( SI_XNAP_DT_UL_GBR_PRB_usage * data);


void __si_xnap_debug_DL_non_GBR_PRB_usage( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_DL_non_GBR_PRB_usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_DL_non_GBR_PRB_usage( SI_XNAP_DT_DL_non_GBR_PRB_usage * data);


void __si_xnap_debug_UL_non_GBR_PRB_usage( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_UL_non_GBR_PRB_usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_UL_non_GBR_PRB_usage( SI_XNAP_DT_UL_non_GBR_PRB_usage * data);


void __si_xnap_debug_DL_Total_PRB_usage( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_DL_Total_PRB_usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_DL_Total_PRB_usage( SI_XNAP_DT_DL_Total_PRB_usage * data);


void __si_xnap_debug_UL_Total_PRB_usage( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_UL_Total_PRB_usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_UL_Total_PRB_usage( SI_XNAP_DT_UL_Total_PRB_usage * data);


void __si_xnap_init_NG_eNB_RadioResourceStatus( SI_XNAP_DT_NG_eNB_RadioResourceStatus ** data);

void __si_xnap_debug_NG_eNB_RadioResourceStatus( char * key, SI_XNAP_DT_NG_eNB_RadioResourceStatus * data, int lvl);

void __si_xnap_memfree_NG_eNB_RadioResourceStatus( SI_XNAP_DT_NG_eNB_RadioResourceStatus * data);

int __si_xnap_Encode_NG_eNB_RadioResourceStatus( SI_XNAP_DT_NG_eNB_RadioResourceStatus * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SSBAreaRadioResourceStatus_List( SI_XNAP_DT_SSBAreaRadioResourceStatus_List ** data);

void __si_xnap_debug_SSBAreaRadioResourceStatus_List( char * key, SI_XNAP_DT_SSBAreaRadioResourceStatus_List * data, int lvl);

void __si_xnap_memfree_SSBAreaRadioResourceStatus_List( SI_XNAP_DT_SSBAreaRadioResourceStatus_List * data);

int __si_xnap_Encode_SSBAreaRadioResourceStatus_List( SI_XNAP_DT_SSBAreaRadioResourceStatus_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GNB_RadioResourceStatus( SI_XNAP_DT_GNB_RadioResourceStatus ** data);

void __si_xnap_debug_GNB_RadioResourceStatus( char * key, SI_XNAP_DT_GNB_RadioResourceStatus * data, int lvl);

void __si_xnap_memfree_GNB_RadioResourceStatus( SI_XNAP_DT_GNB_RadioResourceStatus * data);

int __si_xnap_Encode_GNB_RadioResourceStatus( SI_XNAP_DT_GNB_RadioResourceStatus * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RadioResourceStatus( SI_XNAP_DT_RadioResourceStatus ** data);

void __si_xnap_debug_RadioResourceStatus( char * key, SI_XNAP_DT_RadioResourceStatus * data, int lvl);

void __si_xnap_memfree_RadioResourceStatus( SI_XNAP_DT_RadioResourceStatus * data);

int __si_xnap_Encode_RadioResourceStatus( SI_XNAP_DT_RadioResourceStatus * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_OfferedCapacity( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_OfferedCapacity( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_OfferedCapacity( SI_XNAP_DT_OfferedCapacity * data);


void __si_xnap_init_TNLCapacityIndicator( SI_XNAP_DT_TNLCapacityIndicator ** data);

void __si_xnap_debug_TNLCapacityIndicator( char * key, SI_XNAP_DT_TNLCapacityIndicator * data, int lvl);

void __si_xnap_memfree_TNLCapacityIndicator( SI_XNAP_DT_TNLCapacityIndicator * data);

int __si_xnap_Encode_TNLCapacityIndicator( SI_XNAP_DT_TNLCapacityIndicator * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CompositeAvailableCapacity( SI_XNAP_DT_CompositeAvailableCapacity ** data);

void __si_xnap_debug_CompositeAvailableCapacity( char * key, SI_XNAP_DT_CompositeAvailableCapacity * data, int lvl);

void __si_xnap_memfree_CompositeAvailableCapacity( SI_XNAP_DT_CompositeAvailableCapacity * data);

int __si_xnap_Encode_CompositeAvailableCapacity( SI_XNAP_DT_CompositeAvailableCapacity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CompositeAvailableCapacityGroup( SI_XNAP_DT_CompositeAvailableCapacityGroup ** data);

void __si_xnap_debug_CompositeAvailableCapacityGroup( char * key, SI_XNAP_DT_CompositeAvailableCapacityGroup * data, int lvl);

void __si_xnap_memfree_CompositeAvailableCapacityGroup( SI_XNAP_DT_CompositeAvailableCapacityGroup * data);

int __si_xnap_Encode_CompositeAvailableCapacityGroup( SI_XNAP_DT_CompositeAvailableCapacityGroup * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SliceAvailableCapacity( SI_XNAP_DT_SliceAvailableCapacity ** data);

void __si_xnap_debug_SliceAvailableCapacity( char * key, SI_XNAP_DT_SliceAvailableCapacity * data, int lvl);

void __si_xnap_memfree_SliceAvailableCapacity( SI_XNAP_DT_SliceAvailableCapacity * data);

int __si_xnap_Encode_SliceAvailableCapacity( SI_XNAP_DT_SliceAvailableCapacity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NumberofActiveUEs( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_NumberofActiveUEs( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_NumberofActiveUEs( SI_XNAP_DT_NumberofActiveUEs * data);


void __si_xnap_debug_NoofRRCConnections( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_NoofRRCConnections( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_NoofRRCConnections( SI_XNAP_DT_NoofRRCConnections * data);


void __si_xnap_init_RRCConnections( SI_XNAP_DT_RRCConnections ** data);

void __si_xnap_debug_RRCConnections( char * key, SI_XNAP_DT_RRCConnections * data, int lvl);

void __si_xnap_memfree_RRCConnections( SI_XNAP_DT_RRCConnections * data);

int __si_xnap_Encode_RRCConnections( SI_XNAP_DT_RRCConnections * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellMeasurementResult_Item( SI_XNAP_DT_CellMeasurementResult_Item ** data);

void __si_xnap_debug_CellMeasurementResult_Item( char * key, SI_XNAP_DT_CellMeasurementResult_Item * data, int lvl);

void __si_xnap_memfree_CellMeasurementResult_Item( SI_XNAP_DT_CellMeasurementResult_Item * data);

int __si_xnap_Encode_CellMeasurementResult_Item( SI_XNAP_DT_CellMeasurementResult_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ReplacingCells( SI_XNAP_DT_ReplacingCells ** data);

void __si_xnap_debug_ReplacingCells( char * key, SI_XNAP_DT_ReplacingCells * data, int lvl);

void __si_xnap_memfree_ReplacingCells( SI_XNAP_DT_ReplacingCells * data);

int __si_xnap_Encode_ReplacingCells( SI_XNAP_DT_ReplacingCells * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellReplacingInfo( SI_XNAP_DT_CellReplacingInfo ** data);

void __si_xnap_debug_CellReplacingInfo( char * key, SI_XNAP_DT_CellReplacingInfo * data, int lvl);

void __si_xnap_memfree_CellReplacingInfo( SI_XNAP_DT_CellReplacingInfo * data);

int __si_xnap_Encode_CellReplacingInfo( SI_XNAP_DT_CellReplacingInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellToReport( SI_XNAP_DT_CellToReport ** data);

void __si_xnap_debug_CellToReport( char * key, SI_XNAP_DT_CellToReport * data, int lvl);

void __si_xnap_memfree_CellToReport( SI_XNAP_DT_CellToReport * data);

int __si_xnap_Encode_CellToReport( SI_XNAP_DT_CellToReport * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SSBToReport_List( SI_XNAP_DT_SSBToReport_List ** data);

void __si_xnap_debug_SSBToReport_List( char * key, SI_XNAP_DT_SSBToReport_List * data, int lvl);

void __si_xnap_memfree_SSBToReport_List( SI_XNAP_DT_SSBToReport_List * data);

int __si_xnap_Encode_SSBToReport_List( SI_XNAP_DT_SSBToReport_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SliceToReport_List( SI_XNAP_DT_SliceToReport_List ** data);

void __si_xnap_debug_SliceToReport_List( char * key, SI_XNAP_DT_SliceToReport_List * data, int lvl);

void __si_xnap_memfree_SliceToReport_List( SI_XNAP_DT_SliceToReport_List * data);

int __si_xnap_Encode_SliceToReport_List( SI_XNAP_DT_SliceToReport_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellToReport_Item( SI_XNAP_DT_CellToReport_Item ** data);

void __si_xnap_debug_CellToReport_Item( char * key, SI_XNAP_DT_CellToReport_Item * data, int lvl);

void __si_xnap_memfree_CellToReport_Item( SI_XNAP_DT_CellToReport_Item * data);

int __si_xnap_Encode_CellToReport_Item( SI_XNAP_DT_CellToReport_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellToReportForDataCollection_List( SI_XNAP_DT_CellToReportForDataCollection_List ** data);

void __si_xnap_debug_CellToReportForDataCollection_List( char * key, SI_XNAP_DT_CellToReportForDataCollection_List * data, int lvl);

void __si_xnap_memfree_CellToReportForDataCollection_List( SI_XNAP_DT_CellToReportForDataCollection_List * data);

int __si_xnap_Encode_CellToReportForDataCollection_List( SI_XNAP_DT_CellToReportForDataCollection_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellToReportForDataCollection_Item( SI_XNAP_DT_CellToReportForDataCollection_Item ** data);

void __si_xnap_debug_CellToReportForDataCollection_Item( char * key, SI_XNAP_DT_CellToReportForDataCollection_Item * data, int lvl);

void __si_xnap_memfree_CellToReportForDataCollection_Item( SI_XNAP_DT_CellToReportForDataCollection_Item * data);

int __si_xnap_Encode_CellToReportForDataCollection_Item( SI_XNAP_DT_CellToReportForDataCollection_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellBasedUETrajectoryPrediction( SI_XNAP_DT_CellBasedUETrajectoryPrediction ** data);

void __si_xnap_debug_CellBasedUETrajectoryPrediction( char * key, SI_XNAP_DT_CellBasedUETrajectoryPrediction * data, int lvl);

void __si_xnap_memfree_CellBasedUETrajectoryPrediction( SI_XNAP_DT_CellBasedUETrajectoryPrediction * data);

int __si_xnap_Encode_CellBasedUETrajectoryPrediction( SI_XNAP_DT_CellBasedUETrajectoryPrediction * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellMeasurementInitiationResult_List( SI_XNAP_DT_CellMeasurementInitiationResult_List ** data);

void __si_xnap_debug_CellMeasurementInitiationResult_List( char * key, SI_XNAP_DT_CellMeasurementInitiationResult_List * data, int lvl);

void __si_xnap_memfree_CellMeasurementInitiationResult_List( SI_XNAP_DT_CellMeasurementInitiationResult_List * data);

int __si_xnap_Encode_CellMeasurementInitiationResult_List( SI_XNAP_DT_CellMeasurementInitiationResult_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellMeasurementFailureCause_List( SI_XNAP_DT_CellMeasurementFailureCause_List ** data);

void __si_xnap_debug_CellMeasurementFailureCause_List( char * key, SI_XNAP_DT_CellMeasurementFailureCause_List * data, int lvl);

void __si_xnap_memfree_CellMeasurementFailureCause_List( SI_XNAP_DT_CellMeasurementFailureCause_List * data);

int __si_xnap_Encode_CellMeasurementFailureCause_List( SI_XNAP_DT_CellMeasurementFailureCause_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellMeasurementInitiationResult_Item( SI_XNAP_DT_CellMeasurementInitiationResult_Item ** data);

void __si_xnap_debug_CellMeasurementInitiationResult_Item( char * key, SI_XNAP_DT_CellMeasurementInitiationResult_Item * data, int lvl);

void __si_xnap_memfree_CellMeasurementInitiationResult_Item( SI_XNAP_DT_CellMeasurementInitiationResult_Item * data);

int __si_xnap_Encode_CellMeasurementInitiationResult_Item( SI_XNAP_DT_CellMeasurementInitiationResult_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellMeasurementResultForDataCollection_List( SI_XNAP_DT_CellMeasurementResultForDataCollection_List ** data);

void __si_xnap_debug_CellMeasurementResultForDataCollection_List( char * key, SI_XNAP_DT_CellMeasurementResultForDataCollection_List * data, int lvl);

void __si_xnap_memfree_CellMeasurementResultForDataCollection_List( SI_XNAP_DT_CellMeasurementResultForDataCollection_List * data);

int __si_xnap_Encode_CellMeasurementResultForDataCollection_List( SI_XNAP_DT_CellMeasurementResultForDataCollection_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellInfoResultForDataCollection_Item( SI_XNAP_DT_CellInfoResultForDataCollection_Item ** data);

void __si_xnap_debug_CellInfoResultForDataCollection_Item( char * key, SI_XNAP_DT_CellInfoResultForDataCollection_Item * data, int lvl);

void __si_xnap_memfree_CellInfoResultForDataCollection_Item( SI_XNAP_DT_CellInfoResultForDataCollection_Item * data);

int __si_xnap_Encode_CellInfoResultForDataCollection_Item( SI_XNAP_DT_CellInfoResultForDataCollection_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Cell_Type_Choice( SI_XNAP_DT_Cell_Type_Choice ** data);

void __si_xnap_debug_Cell_Type_Choice( char * key, SI_XNAP_DT_Cell_Type_Choice * data, int lvl);

void __si_xnap_memfree_Cell_Type_Choice( SI_XNAP_DT_Cell_Type_Choice * data);

int __si_xnap_Encode_Cell_Type_Choice( SI_XNAP_DT_Cell_Type_Choice * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellMeasurementFailureCauseItem_cellmeasurementFailedReportCharacteristics( SI_XNAP_DT_CellMeasurementFailureCauseItem_cellmeasurementFailedReportCharacteristics ** data);

void __si_xnap_init_CellMeasurementFailureCauseItem_cellmeasurementFailedReportCharacteristics2( SI_XNAP_DT_CellMeasurementFailureCauseItem_cellmeasurementFailedReportCharacteristics ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_CellMeasurementFailureCauseItem_cellmeasurementFailedReportCharacteristics( char * key, SI_XNAP_DT_CellMeasurementFailureCauseItem_cellmeasurementFailedReportCharacteristics * data, int lvl);

void __si_xnap_memfree_CellMeasurementFailureCauseItem_cellmeasurementFailedReportCharacteristics( SI_XNAP_DT_CellMeasurementFailureCauseItem_cellmeasurementFailedReportCharacteristics * data);

int __si_xnap_Encode_CellMeasurementFailureCauseItem_cellmeasurementFailedReportCharacteristics( SI_XNAP_DT_CellMeasurementFailureCauseItem_cellmeasurementFailedReportCharacteristics * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CellMeasurementFailureCause_Item( SI_XNAP_DT_CellMeasurementFailureCause_Item ** data);

void __si_xnap_debug_CellMeasurementFailureCause_Item( char * key, SI_XNAP_DT_CellMeasurementFailureCause_Item * data, int lvl);

void __si_xnap_memfree_CellMeasurementFailureCause_Item( SI_XNAP_DT_CellMeasurementFailureCause_Item * data);

int __si_xnap_Encode_CellMeasurementFailureCause_Item( SI_XNAP_DT_CellMeasurementFailureCause_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CHOCandidateCell_List( SI_XNAP_DT_CHOCandidateCell_List ** data);

void __si_xnap_debug_CHOCandidateCell_List( char * key, SI_XNAP_DT_CHOCandidateCell_List * data, int lvl);

void __si_xnap_memfree_CHOCandidateCell_List( SI_XNAP_DT_CHOCandidateCell_List * data);

int __si_xnap_Encode_CHOCandidateCell_List( SI_XNAP_DT_CHOCandidateCell_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CHOConfiguration( SI_XNAP_DT_CHOConfiguration ** data);

void __si_xnap_debug_CHOConfiguration( char * key, SI_XNAP_DT_CHOConfiguration * data, int lvl);

void __si_xnap_memfree_CHOConfiguration( SI_XNAP_DT_CHOConfiguration * data);

int __si_xnap_Encode_CHOConfiguration( SI_XNAP_DT_CHOConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CHOExecutionCondition_List( SI_XNAP_DT_CHOExecutionCondition_List ** data);

void __si_xnap_debug_CHOExecutionCondition_List( char * key, SI_XNAP_DT_CHOExecutionCondition_List * data, int lvl);

void __si_xnap_memfree_CHOExecutionCondition_List( SI_XNAP_DT_CHOExecutionCondition_List * data);

int __si_xnap_Encode_CHOExecutionCondition_List( SI_XNAP_DT_CHOExecutionCondition_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CHOCandidateCell_Item( SI_XNAP_DT_CHOCandidateCell_Item ** data);

void __si_xnap_debug_CHOCandidateCell_Item( char * key, SI_XNAP_DT_CHOCandidateCell_Item * data, int lvl);

void __si_xnap_memfree_CHOCandidateCell_Item( SI_XNAP_DT_CHOCandidateCell_Item * data);

int __si_xnap_Encode_CHOCandidateCell_Item( SI_XNAP_DT_CHOCandidateCell_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MeasObjectContainer( SI_XNAP_DT_MeasObjectContainer ** data);

void __si_xnap_init_MeasObjectContainer2( SI_XNAP_DT_MeasObjectContainer ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_MeasObjectContainer( char * key, SI_XNAP_DT_MeasObjectContainer * data, int lvl);

void __si_xnap_memfree_MeasObjectContainer( SI_XNAP_DT_MeasObjectContainer * data);

int __si_xnap_Encode_MeasObjectContainer( SI_XNAP_DT_MeasObjectContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ReportConfigContainer( SI_XNAP_DT_ReportConfigContainer ** data);

void __si_xnap_init_ReportConfigContainer2( SI_XNAP_DT_ReportConfigContainer ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_ReportConfigContainer( char * key, SI_XNAP_DT_ReportConfigContainer * data, int lvl);

void __si_xnap_memfree_ReportConfigContainer( SI_XNAP_DT_ReportConfigContainer * data);

int __si_xnap_Encode_ReportConfigContainer( SI_XNAP_DT_ReportConfigContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CHOExecutionCondition_Item( SI_XNAP_DT_CHOExecutionCondition_Item ** data);

void __si_xnap_debug_CHOExecutionCondition_Item( char * key, SI_XNAP_DT_CHOExecutionCondition_Item * data, int lvl);

void __si_xnap_memfree_CHOExecutionCondition_Item( SI_XNAP_DT_CHOExecutionCondition_Item * data);

int __si_xnap_Encode_CHOExecutionCondition_Item( SI_XNAP_DT_CHOExecutionCondition_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ClockQualityAcceptanceCriteria_synchronisationState( SI_XNAP_DT_ClockQualityAcceptanceCriteria_synchronisationState ** data);

void __si_xnap_init_ClockQualityAcceptanceCriteria_synchronisationState2( SI_XNAP_DT_ClockQualityAcceptanceCriteria_synchronisationState ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_ClockQualityAcceptanceCriteria_synchronisationState( char * key, SI_XNAP_DT_ClockQualityAcceptanceCriteria_synchronisationState * data, int lvl);

void __si_xnap_memfree_ClockQualityAcceptanceCriteria_synchronisationState( SI_XNAP_DT_ClockQualityAcceptanceCriteria_synchronisationState * data);

int __si_xnap_Encode_ClockQualityAcceptanceCriteria_synchronisationState( SI_XNAP_DT_ClockQualityAcceptanceCriteria_synchronisationState * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ClockQualityAcceptanceCriteria_traceabletoUTC( char * key, uint8_t eClockQualityAcceptanceCriteria_traceabletoUTC, int lvl);

int __si_xnap_Encode_ClockQualityAcceptanceCriteria_traceabletoUTC( uint8_t eClockQualityAcceptanceCriteria_traceabletoUTC, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ClockQualityAcceptanceCriteria_traceabletoGNSS( char * key, uint8_t eClockQualityAcceptanceCriteria_traceabletoGNSS, int lvl);

int __si_xnap_Encode_ClockQualityAcceptanceCriteria_traceabletoGNSS( uint8_t eClockQualityAcceptanceCriteria_traceabletoGNSS, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ClockQualityAcceptanceCriteria_clockFrequencyStability( SI_XNAP_DT_ClockQualityAcceptanceCriteria_clockFrequencyStability ** data);

void __si_xnap_init_ClockQualityAcceptanceCriteria_clockFrequencyStability2( SI_XNAP_DT_ClockQualityAcceptanceCriteria_clockFrequencyStability ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_ClockQualityAcceptanceCriteria_clockFrequencyStability( char * key, SI_XNAP_DT_ClockQualityAcceptanceCriteria_clockFrequencyStability * data, int lvl);

void __si_xnap_memfree_ClockQualityAcceptanceCriteria_clockFrequencyStability( SI_XNAP_DT_ClockQualityAcceptanceCriteria_clockFrequencyStability * data);

int __si_xnap_Encode_ClockQualityAcceptanceCriteria_clockFrequencyStability( SI_XNAP_DT_ClockQualityAcceptanceCriteria_clockFrequencyStability * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ClockQualityAcceptanceCriteria_clockAccuracy( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_ClockQualityAcceptanceCriteria_clockAccuracy( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_ClockQualityAcceptanceCriteria_clockAccuracy( SI_XNAP_DT_ClockQualityAcceptanceCriteria_clockAccuracy * data);


void __si_xnap_init_ClockQualityAcceptanceCriteria_parentTimeSource( SI_XNAP_DT_ClockQualityAcceptanceCriteria_parentTimeSource ** data);

void __si_xnap_init_ClockQualityAcceptanceCriteria_parentTimeSource2( SI_XNAP_DT_ClockQualityAcceptanceCriteria_parentTimeSource ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_ClockQualityAcceptanceCriteria_parentTimeSource( char * key, SI_XNAP_DT_ClockQualityAcceptanceCriteria_parentTimeSource * data, int lvl);

void __si_xnap_memfree_ClockQualityAcceptanceCriteria_parentTimeSource( SI_XNAP_DT_ClockQualityAcceptanceCriteria_parentTimeSource * data);

int __si_xnap_Encode_ClockQualityAcceptanceCriteria_parentTimeSource( SI_XNAP_DT_ClockQualityAcceptanceCriteria_parentTimeSource * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ClockQualityAcceptanceCriteria( SI_XNAP_DT_ClockQualityAcceptanceCriteria ** data);

void __si_xnap_debug_ClockQualityAcceptanceCriteria( char * key, SI_XNAP_DT_ClockQualityAcceptanceCriteria * data, int lvl);

void __si_xnap_memfree_ClockQualityAcceptanceCriteria( SI_XNAP_DT_ClockQualityAcceptanceCriteria * data);

int __si_xnap_Encode_ClockQualityAcceptanceCriteria( SI_XNAP_DT_ClockQualityAcceptanceCriteria * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ClockQualityDetailLevel( SI_XNAP_DT_ClockQualityDetailLevel ** data);

void __si_xnap_debug_ClockQualityDetailLevel( char * key, SI_XNAP_DT_ClockQualityDetailLevel * data, int lvl);

void __si_xnap_memfree_ClockQualityDetailLevel( SI_XNAP_DT_ClockQualityDetailLevel * data);

int __si_xnap_Encode_ClockQualityDetailLevel( SI_XNAP_DT_ClockQualityDetailLevel * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ClockQualityReportingControlInfo( SI_XNAP_DT_ClockQualityReportingControlInfo ** data);

void __si_xnap_debug_ClockQualityReportingControlInfo( char * key, SI_XNAP_DT_ClockQualityReportingControlInfo * data, int lvl);

void __si_xnap_memfree_ClockQualityReportingControlInfo( SI_XNAP_DT_ClockQualityReportingControlInfo * data);

int __si_xnap_Encode_ClockQualityReportingControlInfo( SI_XNAP_DT_ClockQualityReportingControlInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CapabilityForBATAdaptation( char * key, uint8_t eCapabilityForBATAdaptation, int lvl);

int __si_xnap_Encode_CapabilityForBATAdaptation( uint8_t eCapabilityForBATAdaptation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ControlPlaneTrafficType( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_ControlPlaneTrafficType( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_ControlPlaneTrafficType( SI_XNAP_DT_ControlPlaneTrafficType * data);


void __si_xnap_debug_CHO_MRDC_EarlyDataForwarding( char * key, uint8_t eCHO_MRDC_EarlyDataForwarding, int lvl);

int __si_xnap_Encode_CHO_MRDC_EarlyDataForwarding( uint8_t eCHO_MRDC_EarlyDataForwarding, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CHO_MRDC_Indicator( char * key, uint8_t eCHO_MRDC_Indicator, int lvl);

int __si_xnap_Encode_CHO_MRDC_Indicator( uint8_t eCHO_MRDC_Indicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CHOtrigger( char * key, uint8_t eCHOtrigger, int lvl);

int __si_xnap_Encode_CHOtrigger( uint8_t eCHOtrigger, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NG_RANnodeUEXnAPID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_NG_RANnodeUEXnAPID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_NG_RANnodeUEXnAPID( SI_XNAP_DT_NG_RANnodeUEXnAPID * data);


void __si_xnap_init_CHOinformation_Req( SI_XNAP_DT_CHOinformation_Req ** data);

void __si_xnap_debug_CHOinformation_Req( char * key, SI_XNAP_DT_CHOinformation_Req * data, int lvl);

void __si_xnap_memfree_CHOinformation_Req( SI_XNAP_DT_CHOinformation_Req * data);

int __si_xnap_Encode_CHOinformation_Req( SI_XNAP_DT_CHOinformation_Req * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CHO_HandoverWindowStart( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_CHO_HandoverWindowStart( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_CHO_HandoverWindowStart( SI_XNAP_DT_CHO_HandoverWindowStart * data);


void __si_xnap_debug_CHO_HandoverWindowDuration( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_CHO_HandoverWindowDuration( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_CHO_HandoverWindowDuration( SI_XNAP_DT_CHO_HandoverWindowDuration * data);


void __si_xnap_init_CHOTimeBasedInformation( SI_XNAP_DT_CHOTimeBasedInformation ** data);

void __si_xnap_debug_CHOTimeBasedInformation( char * key, SI_XNAP_DT_CHOTimeBasedInformation * data, int lvl);

void __si_xnap_memfree_CHOTimeBasedInformation( SI_XNAP_DT_CHOTimeBasedInformation * data);

int __si_xnap_Encode_CHOTimeBasedInformation( SI_XNAP_DT_CHOTimeBasedInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NR_CGI( SI_XNAP_DT_NR_CGI ** data);

void __si_xnap_debug_NR_CGI( char * key, SI_XNAP_DT_NR_CGI * data, int lvl);

void __si_xnap_memfree_NR_CGI( SI_XNAP_DT_NR_CGI * data);

int __si_xnap_Encode_NR_CGI( SI_XNAP_DT_NR_CGI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_E_UTRA_CGI( SI_XNAP_DT_E_UTRA_CGI ** data);

void __si_xnap_debug_E_UTRA_CGI( char * key, SI_XNAP_DT_E_UTRA_CGI * data, int lvl);

void __si_xnap_memfree_E_UTRA_CGI( SI_XNAP_DT_E_UTRA_CGI * data);

int __si_xnap_Encode_E_UTRA_CGI( SI_XNAP_DT_E_UTRA_CGI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Target_CGI( SI_XNAP_DT_Target_CGI ** data);

void __si_xnap_debug_Target_CGI( char * key, SI_XNAP_DT_Target_CGI * data, int lvl);

void __si_xnap_memfree_Target_CGI( SI_XNAP_DT_Target_CGI * data);

int __si_xnap_Encode_Target_CGI( SI_XNAP_DT_Target_CGI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MaxCHOpreparations( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_MaxCHOpreparations( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_MaxCHOpreparations( SI_XNAP_DT_MaxCHOpreparations * data);


void __si_xnap_init_CHOinformation_Ack( SI_XNAP_DT_CHOinformation_Ack ** data);

void __si_xnap_debug_CHOinformation_Ack( char * key, SI_XNAP_DT_CHOinformation_Ack * data, int lvl);

void __si_xnap_memfree_CHOinformation_Ack( SI_XNAP_DT_CHOinformation_Ack * data);

int __si_xnap_Encode_CHOinformation_Ack( SI_XNAP_DT_CHOinformation_Ack * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GNBIDChoice_gnb_ID( SI_XNAP_DT_GNBIDChoice_gnb_ID ** data);

void __si_xnap_init_GNBIDChoice_gnb_ID2( SI_XNAP_DT_GNBIDChoice_gnb_ID ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_GNBIDChoice_gnb_ID( char * key, SI_XNAP_DT_GNBIDChoice_gnb_ID * data, int lvl);

void __si_xnap_memfree_GNBIDChoice_gnb_ID( SI_XNAP_DT_GNBIDChoice_gnb_ID * data);

int __si_xnap_Encode_GNBIDChoice_gnb_ID( SI_XNAP_DT_GNBIDChoice_gnb_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GNB_ID_Choice( SI_XNAP_DT_GNB_ID_Choice ** data);

void __si_xnap_debug_GNB_ID_Choice( char * key, SI_XNAP_DT_GNB_ID_Choice * data, int lvl);

void __si_xnap_memfree_GNB_ID_Choice( SI_XNAP_DT_GNB_ID_Choice * data);

int __si_xnap_Encode_GNB_ID_Choice( SI_XNAP_DT_GNB_ID_Choice * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GlobalgNB_ID( SI_XNAP_DT_GlobalgNB_ID ** data);

void __si_xnap_debug_GlobalgNB_ID( char * key, SI_XNAP_DT_GlobalgNB_ID * data, int lvl);

void __si_xnap_memfree_GlobalgNB_ID( SI_XNAP_DT_GlobalgNB_ID * data);

int __si_xnap_Encode_GlobalgNB_ID( SI_XNAP_DT_GlobalgNB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ENBIDChoice_enb_ID_macro( SI_XNAP_DT_ENBIDChoice_enb_ID_macro ** data);

void __si_xnap_init_ENBIDChoice_enb_ID_macro2( SI_XNAP_DT_ENBIDChoice_enb_ID_macro ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_ENBIDChoice_enb_ID_macro( char * key, SI_XNAP_DT_ENBIDChoice_enb_ID_macro * data, int lvl);

void __si_xnap_memfree_ENBIDChoice_enb_ID_macro( SI_XNAP_DT_ENBIDChoice_enb_ID_macro * data);

int __si_xnap_Encode_ENBIDChoice_enb_ID_macro( SI_XNAP_DT_ENBIDChoice_enb_ID_macro * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ENBIDChoice_enb_ID_shortmacro( SI_XNAP_DT_ENBIDChoice_enb_ID_shortmacro ** data);

void __si_xnap_init_ENBIDChoice_enb_ID_shortmacro2( SI_XNAP_DT_ENBIDChoice_enb_ID_shortmacro ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_ENBIDChoice_enb_ID_shortmacro( char * key, SI_XNAP_DT_ENBIDChoice_enb_ID_shortmacro * data, int lvl);

void __si_xnap_memfree_ENBIDChoice_enb_ID_shortmacro( SI_XNAP_DT_ENBIDChoice_enb_ID_shortmacro * data);

int __si_xnap_Encode_ENBIDChoice_enb_ID_shortmacro( SI_XNAP_DT_ENBIDChoice_enb_ID_shortmacro * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ENBIDChoice_enb_ID_longmacro( SI_XNAP_DT_ENBIDChoice_enb_ID_longmacro ** data);

void __si_xnap_init_ENBIDChoice_enb_ID_longmacro2( SI_XNAP_DT_ENBIDChoice_enb_ID_longmacro ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_ENBIDChoice_enb_ID_longmacro( char * key, SI_XNAP_DT_ENBIDChoice_enb_ID_longmacro * data, int lvl);

void __si_xnap_memfree_ENBIDChoice_enb_ID_longmacro( SI_XNAP_DT_ENBIDChoice_enb_ID_longmacro * data);

int __si_xnap_Encode_ENBIDChoice_enb_ID_longmacro( SI_XNAP_DT_ENBIDChoice_enb_ID_longmacro * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ENB_ID_Choice( SI_XNAP_DT_ENB_ID_Choice ** data);

void __si_xnap_debug_ENB_ID_Choice( char * key, SI_XNAP_DT_ENB_ID_Choice * data, int lvl);

void __si_xnap_memfree_ENB_ID_Choice( SI_XNAP_DT_ENB_ID_Choice * data);

int __si_xnap_Encode_ENB_ID_Choice( SI_XNAP_DT_ENB_ID_Choice * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GlobalngeNB_ID( SI_XNAP_DT_GlobalngeNB_ID ** data);

void __si_xnap_debug_GlobalngeNB_ID( char * key, SI_XNAP_DT_GlobalngeNB_ID * data, int lvl);

void __si_xnap_memfree_GlobalngeNB_ID( SI_XNAP_DT_GlobalngeNB_ID * data);

int __si_xnap_Encode_GlobalngeNB_ID( SI_XNAP_DT_GlobalngeNB_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GlobalNG_RANNode_ID( SI_XNAP_DT_GlobalNG_RANNode_ID ** data);

void __si_xnap_debug_GlobalNG_RANNode_ID( char * key, SI_XNAP_DT_GlobalNG_RANNode_ID * data, int lvl);

void __si_xnap_memfree_GlobalNG_RANNode_ID( SI_XNAP_DT_GlobalNG_RANNode_ID * data);

int __si_xnap_Encode_GlobalNG_RANNode_ID( SI_XNAP_DT_GlobalNG_RANNode_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CHO_Probability( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_CHO_Probability( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_CHO_Probability( SI_XNAP_DT_CHO_Probability * data);


void __si_xnap_init_CHOinformation_AddReq( SI_XNAP_DT_CHOinformation_AddReq ** data);

void __si_xnap_debug_CHOinformation_AddReq( char * key, SI_XNAP_DT_CHOinformation_AddReq * data, int lvl);

void __si_xnap_memfree_CHOinformation_AddReq( SI_XNAP_DT_CHOinformation_AddReq * data);

int __si_xnap_Encode_CHOinformation_AddReq( SI_XNAP_DT_CHOinformation_AddReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CHOinformation_AddReqAck( SI_XNAP_DT_CHOinformation_AddReqAck ** data);

void __si_xnap_debug_CHOinformation_AddReqAck( char * key, SI_XNAP_DT_CHOinformation_AddReqAck * data, int lvl);

void __si_xnap_memfree_CHOinformation_AddReqAck( SI_XNAP_DT_CHOinformation_AddReqAck * data);

int __si_xnap_Encode_CHOinformation_AddReqAck( SI_XNAP_DT_CHOinformation_AddReqAck * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CHOinformationModReq_conditionalReconfig( char * key, uint8_t eCHOinformationModReq_conditionalReconfig, int lvl);

int __si_xnap_Encode_CHOinformationModReq_conditionalReconfig( uint8_t eCHOinformationModReq_conditionalReconfig, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CHOinformation_ModReq( SI_XNAP_DT_CHOinformation_ModReq ** data);

void __si_xnap_debug_CHOinformation_ModReq( char * key, SI_XNAP_DT_CHOinformation_ModReq * data, int lvl);

void __si_xnap_memfree_CHOinformation_ModReq( SI_XNAP_DT_CHOinformation_ModReq * data);

int __si_xnap_Encode_CHOinformation_ModReq( SI_XNAP_DT_CHOinformation_ModReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CHO_Maxnoof_CondReconfig( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_CHO_Maxnoof_CondReconfig( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_CHO_Maxnoof_CondReconfig( SI_XNAP_DT_CHO_Maxnoof_CondReconfig * data);


void __si_xnap_debug_CHO_CPAC_Config_Indicator( char * key, uint8_t eCHO_CPAC_Config_Indicator, int lvl);

int __si_xnap_Encode_CHO_CPAC_Config_Indicator( uint8_t eCHO_CPAC_Config_Indicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CHO_target_SN_node_list( SI_XNAP_DT_CHO_target_SN_node_list ** data);

void __si_xnap_debug_CHO_target_SN_node_list( char * key, SI_XNAP_DT_CHO_target_SN_node_list * data, int lvl);

void __si_xnap_memfree_CHO_target_SN_node_list( SI_XNAP_DT_CHO_target_SN_node_list * data);

int __si_xnap_Encode_CHO_target_SN_node_list( SI_XNAP_DT_CHO_target_SN_node_list * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CHO_CPAC_Information( SI_XNAP_DT_CHO_CPAC_Information ** data);

void __si_xnap_debug_CHO_CPAC_Information( char * key, SI_XNAP_DT_CHO_CPAC_Information * data, int lvl);

void __si_xnap_memfree_CHO_CPAC_Information( SI_XNAP_DT_CHO_CPAC_Information * data);

int __si_xnap_Encode_CHO_CPAC_Information( SI_XNAP_DT_CHO_CPAC_Information * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourcesAdmitted_List( SI_XNAP_DT_PDUSessionResourcesAdmitted_List ** data);

void __si_xnap_debug_PDUSessionResourcesAdmitted_List( char * key, SI_XNAP_DT_PDUSessionResourcesAdmitted_List * data, int lvl);

void __si_xnap_memfree_PDUSessionResourcesAdmitted_List( SI_XNAP_DT_PDUSessionResourcesAdmitted_List * data);

int __si_xnap_Encode_PDUSessionResourcesAdmitted_List( SI_XNAP_DT_PDUSessionResourcesAdmitted_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CHO_Candidate_PSCells_list( SI_XNAP_DT_CHO_Candidate_PSCells_list ** data);

void __si_xnap_debug_CHO_Candidate_PSCells_list( char * key, SI_XNAP_DT_CHO_Candidate_PSCells_list * data, int lvl);

void __si_xnap_memfree_CHO_Candidate_PSCells_list( SI_XNAP_DT_CHO_Candidate_PSCells_list * data);

int __si_xnap_Encode_CHO_Candidate_PSCells_list( SI_XNAP_DT_CHO_Candidate_PSCells_list * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CHO_target_SN_node_Item( SI_XNAP_DT_CHO_target_SN_node_Item ** data);

void __si_xnap_debug_CHO_target_SN_node_Item( char * key, SI_XNAP_DT_CHO_target_SN_node_Item * data, int lvl);

void __si_xnap_memfree_CHO_target_SN_node_Item( SI_XNAP_DT_CHO_target_SN_node_Item * data);

int __si_xnap_Encode_CHO_target_SN_node_Item( SI_XNAP_DT_CHO_target_SN_node_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CHOCandidatePSCellsItem_target2source_NG_RANNode_Container( SI_XNAP_DT_CHOCandidatePSCellsItem_target2source_NG_RANNode_Container ** data);

void __si_xnap_init_CHOCandidatePSCellsItem_target2source_NG_RANNode_Container2( SI_XNAP_DT_CHOCandidatePSCellsItem_target2source_NG_RANNode_Container ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_CHOCandidatePSCellsItem_target2source_NG_RANNode_Container( char * key, SI_XNAP_DT_CHOCandidatePSCellsItem_target2source_NG_RANNode_Container * data, int lvl);

void __si_xnap_memfree_CHOCandidatePSCellsItem_target2source_NG_RANNode_Container( SI_XNAP_DT_CHOCandidatePSCellsItem_target2source_NG_RANNode_Container * data);

int __si_xnap_Encode_CHOCandidatePSCellsItem_target2source_NG_RANNode_Container( SI_XNAP_DT_CHOCandidatePSCellsItem_target2source_NG_RANNode_Container * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CHO_Candidate_PSCells_Item( SI_XNAP_DT_CHO_Candidate_PSCells_Item ** data);

void __si_xnap_debug_CHO_Candidate_PSCells_Item( char * key, SI_XNAP_DT_CHO_Candidate_PSCells_Item * data, int lvl);

void __si_xnap_memfree_CHO_Candidate_PSCells_Item( SI_XNAP_DT_CHO_Candidate_PSCells_Item * data);

int __si_xnap_Encode_CHO_Candidate_PSCells_Item( SI_XNAP_DT_CHO_Candidate_PSCells_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CNsubgroupID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_CNsubgroupID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_CNsubgroupID( SI_XNAP_DT_CNsubgroupID * data);


void __si_xnap_debug_CompleteCandidateConfig_Indicator( char * key, uint8_t eCompleteCandidateConfig_Indicator, int lvl);

int __si_xnap_Encode_CompleteCandidateConfig_Indicator( uint8_t eCompleteCandidateConfig_Indicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Conditional_Reconfig_List( SI_XNAP_DT_Conditional_Reconfig_List ** data);

void __si_xnap_debug_Conditional_Reconfig_List( char * key, SI_XNAP_DT_Conditional_Reconfig_List * data, int lvl);

void __si_xnap_memfree_Conditional_Reconfig_List( SI_XNAP_DT_Conditional_Reconfig_List * data);

int __si_xnap_Encode_Conditional_Reconfig_List( SI_XNAP_DT_Conditional_Reconfig_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Conditional_Reconfig_Item( SI_XNAP_DT_Conditional_Reconfig_Item ** data);

void __si_xnap_debug_Conditional_Reconfig_Item( char * key, SI_XNAP_DT_Conditional_Reconfig_Item * data, int lvl);

void __si_xnap_memfree_Conditional_Reconfig_Item( SI_XNAP_DT_Conditional_Reconfig_Item * data);

int __si_xnap_Encode_Conditional_Reconfig_Item( SI_XNAP_DT_Conditional_Reconfig_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ConfiguredTACIndication( char * key, uint8_t eConfiguredTACIndication, int lvl);

int __si_xnap_Encode_ConfiguredTACIndication( uint8_t eConfiguredTACIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ConnectivitySupport_eNDC_Support( char * key, uint8_t eConnectivitySupport_eNDC_Support, int lvl);

int __si_xnap_Encode_ConnectivitySupport_eNDC_Support( uint8_t eConnectivitySupport_eNDC_Support, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Connectivity_Support( SI_XNAP_DT_Connectivity_Support ** data);

void __si_xnap_debug_Connectivity_Support( char * key, SI_XNAP_DT_Connectivity_Support * data, int lvl);

void __si_xnap_memfree_Connectivity_Support( SI_XNAP_DT_Connectivity_Support * data);

int __si_xnap_Encode_Connectivity_Support( SI_XNAP_DT_Connectivity_Support * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ContainerAppLayerMeasConfig( SI_XNAP_DT_ContainerAppLayerMeasConfig ** data);

void __si_xnap_init_ContainerAppLayerMeasConfig2( SI_XNAP_DT_ContainerAppLayerMeasConfig ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_ContainerAppLayerMeasConfig( char * key, SI_XNAP_DT_ContainerAppLayerMeasConfig * data, int lvl);

void __si_xnap_memfree_ContainerAppLayerMeasConfig( SI_XNAP_DT_ContainerAppLayerMeasConfig * data);

int __si_xnap_Encode_ContainerAppLayerMeasConfig( SI_XNAP_DT_ContainerAppLayerMeasConfig * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_COUNTPDCPSN12_pdcp_SN12( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_COUNTPDCPSN12_pdcp_SN12( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_COUNTPDCPSN12_pdcp_SN12( SI_XNAP_DT_COUNTPDCPSN12_pdcp_SN12 * data);


void __si_xnap_debug_COUNTPDCPSN12_hfn_PDCP_SN12( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_COUNTPDCPSN12_hfn_PDCP_SN12( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_COUNTPDCPSN12_hfn_PDCP_SN12( SI_XNAP_DT_COUNTPDCPSN12_hfn_PDCP_SN12 * data);


void __si_xnap_init_COUNT_PDCP_SN12( SI_XNAP_DT_COUNT_PDCP_SN12 ** data);

void __si_xnap_debug_COUNT_PDCP_SN12( char * key, SI_XNAP_DT_COUNT_PDCP_SN12 * data, int lvl);

void __si_xnap_memfree_COUNT_PDCP_SN12( SI_XNAP_DT_COUNT_PDCP_SN12 * data);

int __si_xnap_Encode_COUNT_PDCP_SN12( SI_XNAP_DT_COUNT_PDCP_SN12 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_COUNTPDCPSN18_pdcp_SN18( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_COUNTPDCPSN18_pdcp_SN18( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_COUNTPDCPSN18_pdcp_SN18( SI_XNAP_DT_COUNTPDCPSN18_pdcp_SN18 * data);


void __si_xnap_debug_COUNTPDCPSN18_hfn_PDCP_SN18( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_COUNTPDCPSN18_hfn_PDCP_SN18( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_COUNTPDCPSN18_hfn_PDCP_SN18( SI_XNAP_DT_COUNTPDCPSN18_hfn_PDCP_SN18 * data);


void __si_xnap_init_COUNT_PDCP_SN18( SI_XNAP_DT_COUNT_PDCP_SN18 ** data);

void __si_xnap_debug_COUNT_PDCP_SN18( char * key, SI_XNAP_DT_COUNT_PDCP_SN18 * data, int lvl);

void __si_xnap_memfree_COUNT_PDCP_SN18( SI_XNAP_DT_COUNT_PDCP_SN18 * data);

int __si_xnap_Encode_COUNT_PDCP_SN18( SI_XNAP_DT_COUNT_PDCP_SN18 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CoverageModificationCause( char * key, uint8_t eCoverageModificationCause, int lvl);

int __si_xnap_Encode_CoverageModificationCause( uint8_t eCoverageModificationCause, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Coverage_Modification_List( SI_XNAP_DT_Coverage_Modification_List ** data);

void __si_xnap_debug_Coverage_Modification_List( char * key, SI_XNAP_DT_Coverage_Modification_List * data, int lvl);

void __si_xnap_memfree_Coverage_Modification_List( SI_XNAP_DT_Coverage_Modification_List * data);

int __si_xnap_Encode_Coverage_Modification_List( SI_XNAP_DT_Coverage_Modification_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CoverageModificationListItem_cellCoverageState( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_CoverageModificationListItem_cellCoverageState( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_CoverageModificationListItem_cellCoverageState( SI_XNAP_DT_CoverageModificationListItem_cellCoverageState * data);


void __si_xnap_init_GlobalCell_ID( SI_XNAP_DT_GlobalCell_ID ** data);

void __si_xnap_debug_GlobalCell_ID( char * key, SI_XNAP_DT_GlobalCell_ID * data, int lvl);

void __si_xnap_memfree_GlobalCell_ID( SI_XNAP_DT_GlobalCell_ID * data);

int __si_xnap_Encode_GlobalCell_ID( SI_XNAP_DT_GlobalCell_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SSB_Coverage_Modification_List( SI_XNAP_DT_SSB_Coverage_Modification_List ** data);

void __si_xnap_debug_SSB_Coverage_Modification_List( char * key, SI_XNAP_DT_SSB_Coverage_Modification_List * data, int lvl);

void __si_xnap_memfree_SSB_Coverage_Modification_List( SI_XNAP_DT_SSB_Coverage_Modification_List * data);

int __si_xnap_Encode_SSB_Coverage_Modification_List( SI_XNAP_DT_SSB_Coverage_Modification_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Coverage_Modification_List_Item( SI_XNAP_DT_Coverage_Modification_List_Item ** data);

void __si_xnap_debug_Coverage_Modification_List_Item( char * key, SI_XNAP_DT_Coverage_Modification_List_Item * data, int lvl);

void __si_xnap_memfree_Coverage_Modification_List_Item( SI_XNAP_DT_Coverage_Modification_List_Item * data);

int __si_xnap_Encode_Coverage_Modification_List_Item( SI_XNAP_DT_Coverage_Modification_List_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPTransportLayerInformation( SI_XNAP_DT_CPTransportLayerInformation ** data);

void __si_xnap_debug_CPTransportLayerInformation( char * key, SI_XNAP_DT_CPTransportLayerInformation * data, int lvl);

void __si_xnap_memfree_CPTransportLayerInformation( SI_XNAP_DT_CPTransportLayerInformation * data);

int __si_xnap_Encode_CPTransportLayerInformation( SI_XNAP_DT_CPTransportLayerInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPACcandidatePSCells_list( SI_XNAP_DT_CPACcandidatePSCells_list ** data);

void __si_xnap_debug_CPACcandidatePSCells_list( char * key, SI_XNAP_DT_CPACcandidatePSCells_list * data, int lvl);

void __si_xnap_memfree_CPACcandidatePSCells_list( SI_XNAP_DT_CPACcandidatePSCells_list * data);

int __si_xnap_Encode_CPACcandidatePSCells_list( SI_XNAP_DT_CPACcandidatePSCells_list * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPACcandidatePSCells_item( SI_XNAP_DT_CPACcandidatePSCells_item ** data);

void __si_xnap_debug_CPACcandidatePSCells_item( char * key, SI_XNAP_DT_CPACcandidatePSCells_item * data, int lvl);

void __si_xnap_memfree_CPACcandidatePSCells_item( SI_XNAP_DT_CPACcandidatePSCells_item * data);

int __si_xnap_Encode_CPACcandidatePSCells_item( SI_XNAP_DT_CPACcandidatePSCells_item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPACcandidatePSCells_wotherInfo_list( SI_XNAP_DT_CPACcandidatePSCells_wotherInfo_list ** data);

void __si_xnap_debug_CPACcandidatePSCells_wotherInfo_list( char * key, SI_XNAP_DT_CPACcandidatePSCells_wotherInfo_list * data, int lvl);

void __si_xnap_memfree_CPACcandidatePSCells_wotherInfo_list( SI_XNAP_DT_CPACcandidatePSCells_wotherInfo_list * data);

int __si_xnap_Encode_CPACcandidatePSCells_wotherInfo_list( SI_XNAP_DT_CPACcandidatePSCells_wotherInfo_list * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPACcandidatePSCells_wotherInfo_item( SI_XNAP_DT_CPACcandidatePSCells_wotherInfo_item ** data);

void __si_xnap_debug_CPACcandidatePSCells_wotherInfo_item( char * key, SI_XNAP_DT_CPACcandidatePSCells_wotherInfo_item * data, int lvl);

void __si_xnap_memfree_CPACcandidatePSCells_wotherInfo_item( SI_XNAP_DT_CPACcandidatePSCells_wotherInfo_item * data);

int __si_xnap_Encode_CPACcandidatePSCells_wotherInfo_item( SI_XNAP_DT_CPACcandidatePSCells_wotherInfo_item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPACCandidateCell_List( SI_XNAP_DT_CPACCandidateCell_List ** data);

void __si_xnap_debug_CPACCandidateCell_List( char * key, SI_XNAP_DT_CPACCandidateCell_List * data, int lvl);

void __si_xnap_memfree_CPACCandidateCell_List( SI_XNAP_DT_CPACCandidateCell_List * data);

int __si_xnap_Encode_CPACCandidateCell_List( SI_XNAP_DT_CPACCandidateCell_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPACConfiguration( SI_XNAP_DT_CPACConfiguration ** data);

void __si_xnap_debug_CPACConfiguration( char * key, SI_XNAP_DT_CPACConfiguration * data, int lvl);

void __si_xnap_memfree_CPACConfiguration( SI_XNAP_DT_CPACConfiguration * data);

int __si_xnap_Encode_CPACConfiguration( SI_XNAP_DT_CPACConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPACExecutionCondition_List( SI_XNAP_DT_CPACExecutionCondition_List ** data);

void __si_xnap_debug_CPACExecutionCondition_List( char * key, SI_XNAP_DT_CPACExecutionCondition_List * data, int lvl);

void __si_xnap_memfree_CPACExecutionCondition_List( SI_XNAP_DT_CPACExecutionCondition_List * data);

int __si_xnap_Encode_CPACExecutionCondition_List( SI_XNAP_DT_CPACExecutionCondition_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPACCandidateCell_Item( SI_XNAP_DT_CPACCandidateCell_Item ** data);

void __si_xnap_debug_CPACCandidateCell_Item( char * key, SI_XNAP_DT_CPACCandidateCell_Item * data, int lvl);

void __si_xnap_memfree_CPACCandidateCell_Item( SI_XNAP_DT_CPACCandidateCell_Item * data);

int __si_xnap_Encode_CPACCandidateCell_Item( SI_XNAP_DT_CPACCandidateCell_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPACExecutionCondition_Item( SI_XNAP_DT_CPACExecutionCondition_Item ** data);

void __si_xnap_debug_CPACExecutionCondition_Item( char * key, SI_XNAP_DT_CPACExecutionCondition_Item * data, int lvl);

void __si_xnap_memfree_CPACExecutionCondition_Item( SI_XNAP_DT_CPACExecutionCondition_Item * data);

int __si_xnap_Encode_CPACExecutionCondition_Item( SI_XNAP_DT_CPACExecutionCondition_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CPCindicator( char * key, uint8_t eCPCindicator, int lvl);

int __si_xnap_Encode_CPCindicator( uint8_t eCPCindicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CPAInformationRequest_max_no_of_pscells( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_CPAInformationRequest_max_no_of_pscells( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_CPAInformationRequest_max_no_of_pscells( SI_XNAP_DT_CPAInformationRequest_max_no_of_pscells * data);


void __si_xnap_init_CPAInformationRequest( SI_XNAP_DT_CPAInformationRequest ** data);

void __si_xnap_debug_CPAInformationRequest( char * key, SI_XNAP_DT_CPAInformationRequest * data, int lvl);

void __si_xnap_memfree_CPAInformationRequest( SI_XNAP_DT_CPAInformationRequest * data);

int __si_xnap_Encode_CPAInformationRequest( SI_XNAP_DT_CPAInformationRequest * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPAInformationAck( SI_XNAP_DT_CPAInformationAck ** data);

void __si_xnap_debug_CPAInformationAck( char * key, SI_XNAP_DT_CPAInformationAck * data, int lvl);

void __si_xnap_memfree_CPAInformationAck( SI_XNAP_DT_CPAInformationAck * data);

int __si_xnap_Encode_CPAInformationAck( SI_XNAP_DT_CPAInformationAck * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPC_target_SN_required_list( SI_XNAP_DT_CPC_target_SN_required_list ** data);

void __si_xnap_debug_CPC_target_SN_required_list( char * key, SI_XNAP_DT_CPC_target_SN_required_list * data, int lvl);

void __si_xnap_memfree_CPC_target_SN_required_list( SI_XNAP_DT_CPC_target_SN_required_list * data);

int __si_xnap_Encode_CPC_target_SN_required_list( SI_XNAP_DT_CPC_target_SN_required_list * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPCInformationRequired( SI_XNAP_DT_CPCInformationRequired ** data);

void __si_xnap_debug_CPCInformationRequired( char * key, SI_XNAP_DT_CPCInformationRequired * data, int lvl);

void __si_xnap_memfree_CPCInformationRequired( SI_XNAP_DT_CPCInformationRequired * data);

int __si_xnap_Encode_CPCInformationRequired( SI_XNAP_DT_CPCInformationRequired * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CPCtargetSNrequiredlistItem_max_no_of_pscells( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_CPCtargetSNrequiredlistItem_max_no_of_pscells( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_CPCtargetSNrequiredlistItem_max_no_of_pscells( SI_XNAP_DT_CPCtargetSNrequiredlistItem_max_no_of_pscells * data);


void __si_xnap_init_CPCtargetSNrequiredlistItem_sN_to_MN_Container( SI_XNAP_DT_CPCtargetSNrequiredlistItem_sN_to_MN_Container ** data);

void __si_xnap_init_CPCtargetSNrequiredlistItem_sN_to_MN_Container2( SI_XNAP_DT_CPCtargetSNrequiredlistItem_sN_to_MN_Container ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_CPCtargetSNrequiredlistItem_sN_to_MN_Container( char * key, SI_XNAP_DT_CPCtargetSNrequiredlistItem_sN_to_MN_Container * data, int lvl);

void __si_xnap_memfree_CPCtargetSNrequiredlistItem_sN_to_MN_Container( SI_XNAP_DT_CPCtargetSNrequiredlistItem_sN_to_MN_Container * data);

int __si_xnap_Encode_CPCtargetSNrequiredlistItem_sN_to_MN_Container( SI_XNAP_DT_CPCtargetSNrequiredlistItem_sN_to_MN_Container * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPC_target_SN_required_list_Item( SI_XNAP_DT_CPC_target_SN_required_list_Item ** data);

void __si_xnap_debug_CPC_target_SN_required_list_Item( char * key, SI_XNAP_DT_CPC_target_SN_required_list_Item * data, int lvl);

void __si_xnap_memfree_CPC_target_SN_required_list_Item( SI_XNAP_DT_CPC_target_SN_required_list_Item * data);

int __si_xnap_Encode_CPC_target_SN_required_list_Item( SI_XNAP_DT_CPC_target_SN_required_list_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPC_target_SN_confirm_list( SI_XNAP_DT_CPC_target_SN_confirm_list ** data);

void __si_xnap_debug_CPC_target_SN_confirm_list( char * key, SI_XNAP_DT_CPC_target_SN_confirm_list * data, int lvl);

void __si_xnap_memfree_CPC_target_SN_confirm_list( SI_XNAP_DT_CPC_target_SN_confirm_list * data);

int __si_xnap_Encode_CPC_target_SN_confirm_list( SI_XNAP_DT_CPC_target_SN_confirm_list * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPCInformationConfirm( SI_XNAP_DT_CPCInformationConfirm ** data);

void __si_xnap_debug_CPCInformationConfirm( char * key, SI_XNAP_DT_CPCInformationConfirm * data, int lvl);

void __si_xnap_memfree_CPCInformationConfirm( SI_XNAP_DT_CPCInformationConfirm * data);

int __si_xnap_Encode_CPCInformationConfirm( SI_XNAP_DT_CPCInformationConfirm * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPC_target_SN_confirm_list_Item( SI_XNAP_DT_CPC_target_SN_confirm_list_Item ** data);

void __si_xnap_debug_CPC_target_SN_confirm_list_Item( char * key, SI_XNAP_DT_CPC_target_SN_confirm_list_Item * data, int lvl);

void __si_xnap_memfree_CPC_target_SN_confirm_list_Item( SI_XNAP_DT_CPC_target_SN_confirm_list_Item * data);

int __si_xnap_Encode_CPC_target_SN_confirm_list_Item( SI_XNAP_DT_CPC_target_SN_confirm_list_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CPAInformationModReq_max_no_of_pscells( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_CPAInformationModReq_max_no_of_pscells( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_CPAInformationModReq_max_no_of_pscells( SI_XNAP_DT_CPAInformationModReq_max_no_of_pscells * data);


void __si_xnap_init_CPAInformationModReq( SI_XNAP_DT_CPAInformationModReq ** data);

void __si_xnap_debug_CPAInformationModReq( char * key, SI_XNAP_DT_CPAInformationModReq * data, int lvl);

void __si_xnap_memfree_CPAInformationModReq( SI_XNAP_DT_CPAInformationModReq * data);

int __si_xnap_Encode_CPAInformationModReq( SI_XNAP_DT_CPAInformationModReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPAInformationModReqAck( SI_XNAP_DT_CPAInformationModReqAck ** data);

void __si_xnap_debug_CPAInformationModReqAck( char * key, SI_XNAP_DT_CPAInformationModReqAck * data, int lvl);

void __si_xnap_memfree_CPAInformationModReqAck( SI_XNAP_DT_CPAInformationModReqAck * data);

int __si_xnap_Encode_CPAInformationModReqAck( SI_XNAP_DT_CPAInformationModReqAck * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CPC_DataForwarding_Indicator( char * key, uint8_t eCPC_DataForwarding_Indicator, int lvl);

int __si_xnap_Encode_CPC_DataForwarding_Indicator( uint8_t eCPC_DataForwarding_Indicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CPAC_Preparation_Type( char * key, uint8_t eCPAC_Preparation_Type, int lvl);

int __si_xnap_Encode_CPAC_Preparation_Type( uint8_t eCPAC_Preparation_Type, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPACInformationModRequired( SI_XNAP_DT_CPACInformationModRequired ** data);

void __si_xnap_debug_CPACInformationModRequired( char * key, SI_XNAP_DT_CPACInformationModRequired * data, int lvl);

void __si_xnap_memfree_CPACInformationModRequired( SI_XNAP_DT_CPACInformationModRequired * data);

int __si_xnap_Encode_CPACInformationModRequired( SI_XNAP_DT_CPACInformationModRequired * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPC_target_SN_mod_list( SI_XNAP_DT_CPC_target_SN_mod_list ** data);

void __si_xnap_debug_CPC_target_SN_mod_list( char * key, SI_XNAP_DT_CPC_target_SN_mod_list * data, int lvl);

void __si_xnap_memfree_CPC_target_SN_mod_list( SI_XNAP_DT_CPC_target_SN_mod_list * data);

int __si_xnap_Encode_CPC_target_SN_mod_list( SI_XNAP_DT_CPC_target_SN_mod_list * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPCInformationUpdate( SI_XNAP_DT_CPCInformationUpdate ** data);

void __si_xnap_debug_CPCInformationUpdate( char * key, SI_XNAP_DT_CPCInformationUpdate * data, int lvl);

void __si_xnap_memfree_CPCInformationUpdate( SI_XNAP_DT_CPCInformationUpdate * data);

int __si_xnap_Encode_CPCInformationUpdate( SI_XNAP_DT_CPCInformationUpdate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPCInformationUpdatePSCells_list( SI_XNAP_DT_CPCInformationUpdatePSCells_list ** data);

void __si_xnap_debug_CPCInformationUpdatePSCells_list( char * key, SI_XNAP_DT_CPCInformationUpdatePSCells_list * data, int lvl);

void __si_xnap_memfree_CPCInformationUpdatePSCells_list( SI_XNAP_DT_CPCInformationUpdatePSCells_list * data);

int __si_xnap_Encode_CPCInformationUpdatePSCells_list( SI_XNAP_DT_CPCInformationUpdatePSCells_list * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPC_target_SN_mod_item( SI_XNAP_DT_CPC_target_SN_mod_item ** data);

void __si_xnap_debug_CPC_target_SN_mod_item( char * key, SI_XNAP_DT_CPC_target_SN_mod_item * data, int lvl);

void __si_xnap_memfree_CPC_target_SN_mod_item( SI_XNAP_DT_CPC_target_SN_mod_item * data);

int __si_xnap_Encode_CPC_target_SN_mod_item( SI_XNAP_DT_CPC_target_SN_mod_item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CPCInformationUpdatePSCells_item( SI_XNAP_DT_CPCInformationUpdatePSCells_item ** data);

void __si_xnap_debug_CPCInformationUpdatePSCells_item( char * key, SI_XNAP_DT_CPCInformationUpdatePSCells_item * data, int lvl);

void __si_xnap_memfree_CPCInformationUpdatePSCells_item( SI_XNAP_DT_CPCInformationUpdatePSCells_item * data);

int __si_xnap_Encode_CPCInformationUpdatePSCells_item( SI_XNAP_DT_CPCInformationUpdatePSCells_item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CriticalityDiagnostics_IE_List( SI_XNAP_DT_CriticalityDiagnostics_IE_List ** data);

void __si_xnap_debug_CriticalityDiagnostics_IE_List( char * key, SI_XNAP_DT_CriticalityDiagnostics_IE_List * data, int lvl);

void __si_xnap_memfree_CriticalityDiagnostics_IE_List( SI_XNAP_DT_CriticalityDiagnostics_IE_List * data);

int __si_xnap_Encode_CriticalityDiagnostics_IE_List( SI_XNAP_DT_CriticalityDiagnostics_IE_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CriticalityDiagnostics( SI_XNAP_DT_CriticalityDiagnostics ** data);

void __si_xnap_debug_CriticalityDiagnostics( char * key, SI_XNAP_DT_CriticalityDiagnostics * data, int lvl);

void __si_xnap_memfree_CriticalityDiagnostics( SI_XNAP_DT_CriticalityDiagnostics * data);

int __si_xnap_Encode_CriticalityDiagnostics( SI_XNAP_DT_CriticalityDiagnostics * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_TypeOfError( char * key, uint8_t eTypeOfError, int lvl);

int __si_xnap_Encode_TypeOfError( uint8_t eTypeOfError, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CriticalityDiagnostics_IE_List_def_2106595569( SI_XNAP_DT_CriticalityDiagnostics_IE_List_def_2106595569 ** data);

void __si_xnap_debug_CriticalityDiagnostics_IE_List_def_2106595569( char * key, SI_XNAP_DT_CriticalityDiagnostics_IE_List_def_2106595569 * data, int lvl);

void __si_xnap_memfree_CriticalityDiagnostics_IE_List_def_2106595569( SI_XNAP_DT_CriticalityDiagnostics_IE_List_def_2106595569 * data);

int __si_xnap_Encode_CriticalityDiagnostics_IE_List_def_2106595569( SI_XNAP_DT_CriticalityDiagnostics_IE_List_def_2106595569 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_C_RNTI( SI_XNAP_DT_C_RNTI ** data);

void __si_xnap_init_C_RNTI2( SI_XNAP_DT_C_RNTI ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_C_RNTI( char * key, SI_XNAP_DT_C_RNTI * data, int lvl);

void __si_xnap_memfree_C_RNTI( SI_XNAP_DT_C_RNTI * data);

int __si_xnap_Encode_C_RNTI( SI_XNAP_DT_C_RNTI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CSIRSMTCConfigurationItem_csi_RS_Index( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_CSIRSMTCConfigurationItem_csi_RS_Index( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_CSIRSMTCConfigurationItem_csi_RS_Index( SI_XNAP_DT_CSIRSMTCConfigurationItem_csi_RS_Index * data);


void __si_xnap_debug_CSIRSMTCConfigurationItem_csi_RS_Status( char * key, uint8_t eCSIRSMTCConfigurationItem_csi_RS_Status, int lvl);

int __si_xnap_Encode_CSIRSMTCConfigurationItem_csi_RS_Status( uint8_t eCSIRSMTCConfigurationItem_csi_RS_Status, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CSI_RS_Neighbour_List( SI_XNAP_DT_CSI_RS_Neighbour_List ** data);

void __si_xnap_debug_CSI_RS_Neighbour_List( char * key, SI_XNAP_DT_CSI_RS_Neighbour_List * data, int lvl);

void __si_xnap_memfree_CSI_RS_Neighbour_List( SI_XNAP_DT_CSI_RS_Neighbour_List * data);

int __si_xnap_Encode_CSI_RS_Neighbour_List( SI_XNAP_DT_CSI_RS_Neighbour_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CSI_RS_MTC_Configuration_Item( SI_XNAP_DT_CSI_RS_MTC_Configuration_Item ** data);

void __si_xnap_debug_CSI_RS_MTC_Configuration_Item( char * key, SI_XNAP_DT_CSI_RS_MTC_Configuration_Item * data, int lvl);

void __si_xnap_memfree_CSI_RS_MTC_Configuration_Item( SI_XNAP_DT_CSI_RS_MTC_Configuration_Item * data);

int __si_xnap_Encode_CSI_RS_MTC_Configuration_Item( SI_XNAP_DT_CSI_RS_MTC_Configuration_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CSI_RS_MTC_Neighbour_List( SI_XNAP_DT_CSI_RS_MTC_Neighbour_List ** data);

void __si_xnap_debug_CSI_RS_MTC_Neighbour_List( char * key, SI_XNAP_DT_CSI_RS_MTC_Neighbour_List * data, int lvl);

void __si_xnap_memfree_CSI_RS_MTC_Neighbour_List( SI_XNAP_DT_CSI_RS_MTC_Neighbour_List * data);

int __si_xnap_Encode_CSI_RS_MTC_Neighbour_List( SI_XNAP_DT_CSI_RS_MTC_Neighbour_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CSI_RS_Neighbour_Item( SI_XNAP_DT_CSI_RS_Neighbour_Item ** data);

void __si_xnap_debug_CSI_RS_Neighbour_Item( char * key, SI_XNAP_DT_CSI_RS_Neighbour_Item * data, int lvl);

void __si_xnap_memfree_CSI_RS_Neighbour_Item( SI_XNAP_DT_CSI_RS_Neighbour_Item * data);

int __si_xnap_Encode_CSI_RS_Neighbour_Item( SI_XNAP_DT_CSI_RS_Neighbour_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CSIRSMTCNeighbourItem_csi_RS_Index( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_CSIRSMTCNeighbourItem_csi_RS_Index( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_CSIRSMTCNeighbourItem_csi_RS_Index( SI_XNAP_DT_CSIRSMTCNeighbourItem_csi_RS_Index * data);


void __si_xnap_init_CSI_RS_MTC_Neighbour_Item( SI_XNAP_DT_CSI_RS_MTC_Neighbour_Item ** data);

void __si_xnap_debug_CSI_RS_MTC_Neighbour_Item( char * key, SI_XNAP_DT_CSI_RS_MTC_Neighbour_Item * data, int lvl);

void __si_xnap_memfree_CSI_RS_MTC_Neighbour_Item( SI_XNAP_DT_CSI_RS_MTC_Neighbour_Item * data);

int __si_xnap_Encode_CSI_RS_MTC_Neighbour_Item( SI_XNAP_DT_CSI_RS_MTC_Neighbour_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CyclicPrefix_E_UTRA_DL( char * key, uint8_t eCyclicPrefix_E_UTRA_DL, int lvl);

int __si_xnap_Encode_CyclicPrefix_E_UTRA_DL( uint8_t eCyclicPrefix_E_UTRA_DL, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CyclicPrefix_E_UTRA_UL( char * key, uint8_t eCyclicPrefix_E_UTRA_UL, int lvl);

int __si_xnap_Encode_CyclicPrefix_E_UTRA_UL( uint8_t eCyclicPrefix_E_UTRA_UL, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CSI_RSTransmissionIndication( char * key, uint8_t eCSI_RSTransmissionIndication, int lvl);

int __si_xnap_Encode_CSI_RSTransmissionIndication( uint8_t eCSI_RSTransmissionIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CAGListforMDT( SI_XNAP_DT_CAGListforMDT ** data);

void __si_xnap_debug_CAGListforMDT( char * key, SI_XNAP_DT_CAGListforMDT * data, int lvl);

void __si_xnap_memfree_CAGListforMDT( SI_XNAP_DT_CAGListforMDT * data);

int __si_xnap_Encode_CAGListforMDT( SI_XNAP_DT_CAGListforMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CAGListforMDTItem( SI_XNAP_DT_CAGListforMDTItem ** data);

void __si_xnap_debug_CAGListforMDTItem( char * key, SI_XNAP_DT_CAGListforMDTItem * data, int lvl);

void __si_xnap_memfree_CAGListforMDTItem( SI_XNAP_DT_CAGListforMDTItem * data);

int __si_xnap_Encode_CAGListforMDTItem( SI_XNAP_DT_CAGListforMDTItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_XnUAddressInfoperPDUSession_List( SI_XNAP_DT_XnUAddressInfoperPDUSession_List ** data);

void __si_xnap_debug_XnUAddressInfoperPDUSession_List( char * key, SI_XNAP_DT_XnUAddressInfoperPDUSession_List * data, int lvl);

void __si_xnap_memfree_XnUAddressInfoperPDUSession_List( SI_XNAP_DT_XnUAddressInfoperPDUSession_List * data);

int __si_xnap_Encode_XnUAddressInfoperPDUSession_List( SI_XNAP_DT_XnUAddressInfoperPDUSession_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PDUSession_ID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_PDUSession_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_PDUSession_ID( SI_XNAP_DT_PDUSession_ID * data);


void __si_xnap_init_PDUSessionResourceBearerSetupCompleteInfoSNterminated_dRBsToBeSetupList( SI_XNAP_DT_PDUSessionResourceBearerSetupCompleteInfoSNterminated_dRBsToBeSetupList ** data);

void __si_xnap_debug_PDUSessionResourceBearerSetupCompleteInfoSNterminated_dRBsToBeSetupList( char * key, SI_XNAP_DT_PDUSessionResourceBearerSetupCompleteInfoSNterminated_dRBsToBeSetupList * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceBearerSetupCompleteInfoSNterminated_dRBsToBeSetupList( SI_XNAP_DT_PDUSessionResourceBearerSetupCompleteInfoSNterminated_dRBsToBeSetupList * data);

int __si_xnap_Encode_PDUSessionResourceBearerSetupCompleteInfoSNterminated_dRBsToBeSetupList( SI_XNAP_DT_PDUSessionResourceBearerSetupCompleteInfoSNterminated_dRBsToBeSetupList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceBearerSetupCompleteInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceBearerSetupCompleteInfo_SNterminated ** data);

void __si_xnap_debug_PDUSessionResourceBearerSetupCompleteInfo_SNterminated( char * key, SI_XNAP_DT_PDUSessionResourceBearerSetupCompleteInfo_SNterminated * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceBearerSetupCompleteInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceBearerSetupCompleteInfo_SNterminated * data);

int __si_xnap_Encode_PDUSessionResourceBearerSetupCompleteInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceBearerSetupCompleteInfo_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_XnUAddressInfoperPDUSession_Item( SI_XNAP_DT_XnUAddressInfoperPDUSession_Item ** data);

void __si_xnap_debug_XnUAddressInfoperPDUSession_Item( char * key, SI_XNAP_DT_XnUAddressInfoperPDUSession_Item * data, int lvl);

void __si_xnap_memfree_XnUAddressInfoperPDUSession_Item( SI_XNAP_DT_XnUAddressInfoperPDUSession_Item * data);

int __si_xnap_Encode_XnUAddressInfoperPDUSession_Item( SI_XNAP_DT_XnUAddressInfoperPDUSession_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DataForwardingInfoFromTargetE_UTRANnode_List( SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode_List ** data);

void __si_xnap_debug_DataForwardingInfoFromTargetE_UTRANnode_List( char * key, SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode_List * data, int lvl);

void __si_xnap_memfree_DataForwardingInfoFromTargetE_UTRANnode_List( SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode_List * data);

int __si_xnap_Encode_DataForwardingInfoFromTargetE_UTRANnode_List( SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DataForwardingInfoFromTargetE_UTRANnode( SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode ** data);

void __si_xnap_debug_DataForwardingInfoFromTargetE_UTRANnode( char * key, SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode * data, int lvl);

void __si_xnap_memfree_DataForwardingInfoFromTargetE_UTRANnode( SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode * data);

int __si_xnap_Encode_DataForwardingInfoFromTargetE_UTRANnode( SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsToBeForwarded_List( SI_XNAP_DT_QoSFlowsToBeForwarded_List ** data);

void __si_xnap_debug_QoSFlowsToBeForwarded_List( char * key, SI_XNAP_DT_QoSFlowsToBeForwarded_List * data, int lvl);

void __si_xnap_memfree_QoSFlowsToBeForwarded_List( SI_XNAP_DT_QoSFlowsToBeForwarded_List * data);

int __si_xnap_Encode_QoSFlowsToBeForwarded_List( SI_XNAP_DT_QoSFlowsToBeForwarded_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DataForwardingInfoFromTargetE_UTRANnode_Item( SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode_Item ** data);

void __si_xnap_debug_DataForwardingInfoFromTargetE_UTRANnode_Item( char * key, SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode_Item * data, int lvl);

void __si_xnap_memfree_DataForwardingInfoFromTargetE_UTRANnode_Item( SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode_Item * data);

int __si_xnap_Encode_DataForwardingInfoFromTargetE_UTRANnode_Item( SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsToBeForwarded_Item( SI_XNAP_DT_QoSFlowsToBeForwarded_Item ** data);

void __si_xnap_debug_QoSFlowsToBeForwarded_Item( char * key, SI_XNAP_DT_QoSFlowsToBeForwarded_Item * data, int lvl);

void __si_xnap_memfree_QoSFlowsToBeForwarded_Item( SI_XNAP_DT_QoSFlowsToBeForwarded_Item * data);

int __si_xnap_Encode_QoSFlowsToBeForwarded_Item( SI_XNAP_DT_QoSFlowsToBeForwarded_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFLowsAcceptedToBeForwarded_Item( SI_XNAP_DT_QoSFLowsAcceptedToBeForwarded_Item ** data);

void __si_xnap_debug_QoSFLowsAcceptedToBeForwarded_Item( char * key, SI_XNAP_DT_QoSFLowsAcceptedToBeForwarded_Item * data, int lvl);

void __si_xnap_memfree_QoSFLowsAcceptedToBeForwarded_Item( SI_XNAP_DT_QoSFLowsAcceptedToBeForwarded_Item * data);

int __si_xnap_Encode_QoSFLowsAcceptedToBeForwarded_Item( SI_XNAP_DT_QoSFLowsAcceptedToBeForwarded_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFLowsToBeForwarded_List( SI_XNAP_DT_QoSFLowsToBeForwarded_List ** data);

void __si_xnap_debug_QoSFLowsToBeForwarded_List( char * key, SI_XNAP_DT_QoSFLowsToBeForwarded_List * data, int lvl);

void __si_xnap_memfree_QoSFLowsToBeForwarded_List( SI_XNAP_DT_QoSFLowsToBeForwarded_List * data);

int __si_xnap_Encode_QoSFLowsToBeForwarded_List( SI_XNAP_DT_QoSFLowsToBeForwarded_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBToQoSFlowMapping_List( SI_XNAP_DT_DRBToQoSFlowMapping_List ** data);

void __si_xnap_debug_DRBToQoSFlowMapping_List( char * key, SI_XNAP_DT_DRBToQoSFlowMapping_List * data, int lvl);

void __si_xnap_memfree_DRBToQoSFlowMapping_List( SI_XNAP_DT_DRBToQoSFlowMapping_List * data);

int __si_xnap_Encode_DRBToQoSFlowMapping_List( SI_XNAP_DT_DRBToQoSFlowMapping_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DataforwardingandOffloadingInfofromSource( SI_XNAP_DT_DataforwardingandOffloadingInfofromSource ** data);

void __si_xnap_debug_DataforwardingandOffloadingInfofromSource( char * key, SI_XNAP_DT_DataforwardingandOffloadingInfofromSource * data, int lvl);

void __si_xnap_memfree_DataforwardingandOffloadingInfofromSource( SI_XNAP_DT_DataforwardingandOffloadingInfofromSource * data);

int __si_xnap_Encode_DataforwardingandOffloadingInfofromSource( SI_XNAP_DT_DataforwardingandOffloadingInfofromSource * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DLForwarding( char * key, uint8_t eDLForwarding, int lvl);

int __si_xnap_Encode_DLForwarding( uint8_t eDLForwarding, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ULForwarding( char * key, uint8_t eULForwarding, int lvl);

int __si_xnap_Encode_ULForwarding( uint8_t eULForwarding, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFLowsToBeForwarded_Item( SI_XNAP_DT_QoSFLowsToBeForwarded_Item ** data);

void __si_xnap_debug_QoSFLowsToBeForwarded_Item( char * key, SI_XNAP_DT_QoSFLowsToBeForwarded_Item * data, int lvl);

void __si_xnap_memfree_QoSFLowsToBeForwarded_Item( SI_XNAP_DT_QoSFLowsToBeForwarded_Item * data);

int __si_xnap_Encode_QoSFLowsToBeForwarded_Item( SI_XNAP_DT_QoSFLowsToBeForwarded_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DRB_ID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_DRB_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_DRB_ID( SI_XNAP_DT_DRB_ID * data);


void __si_xnap_init_DataForwardingResponseDRBItem( SI_XNAP_DT_DataForwardingResponseDRBItem ** data);

void __si_xnap_debug_DataForwardingResponseDRBItem( char * key, SI_XNAP_DT_DataForwardingResponseDRBItem * data, int lvl);

void __si_xnap_memfree_DataForwardingResponseDRBItem( SI_XNAP_DT_DataForwardingResponseDRBItem * data);

int __si_xnap_Encode_DataForwardingResponseDRBItem( SI_XNAP_DT_DataForwardingResponseDRBItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DataTrafficResources( SI_XNAP_DT_DataTrafficResources ** data);

void __si_xnap_init_DataTrafficResources2( SI_XNAP_DT_DataTrafficResources ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_DataTrafficResources( char * key, SI_XNAP_DT_DataTrafficResources * data, int lvl);

void __si_xnap_memfree_DataTrafficResources( SI_XNAP_DT_DataTrafficResources * data);

int __si_xnap_Encode_DataTrafficResources( SI_XNAP_DT_DataTrafficResources * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SharedResourceType_UL_OnlySharing( SI_XNAP_DT_SharedResourceType_UL_OnlySharing ** data);

void __si_xnap_debug_SharedResourceType_UL_OnlySharing( char * key, SI_XNAP_DT_SharedResourceType_UL_OnlySharing * data, int lvl);

void __si_xnap_memfree_SharedResourceType_UL_OnlySharing( SI_XNAP_DT_SharedResourceType_UL_OnlySharing * data);

int __si_xnap_Encode_SharedResourceType_UL_OnlySharing( SI_XNAP_DT_SharedResourceType_UL_OnlySharing * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged( SI_XNAP_DT_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged ** data);

void __si_xnap_debug_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged( char * key, SI_XNAP_DT_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged * data, int lvl);

void __si_xnap_memfree_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged( SI_XNAP_DT_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged * data);

int __si_xnap_Encode_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged( SI_XNAP_DT_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SharedResourceType_ULDL_Sharing_UL_Resources( SI_XNAP_DT_SharedResourceType_ULDL_Sharing_UL_Resources ** data);

void __si_xnap_debug_SharedResourceType_ULDL_Sharing_UL_Resources( char * key, SI_XNAP_DT_SharedResourceType_ULDL_Sharing_UL_Resources * data, int lvl);

void __si_xnap_memfree_SharedResourceType_ULDL_Sharing_UL_Resources( SI_XNAP_DT_SharedResourceType_ULDL_Sharing_UL_Resources * data);

int __si_xnap_Encode_SharedResourceType_ULDL_Sharing_UL_Resources( SI_XNAP_DT_SharedResourceType_ULDL_Sharing_UL_Resources * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged( SI_XNAP_DT_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged ** data);

void __si_xnap_debug_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged( char * key, SI_XNAP_DT_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged * data, int lvl);

void __si_xnap_memfree_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged( SI_XNAP_DT_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged * data);

int __si_xnap_Encode_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged( SI_XNAP_DT_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SharedResourceType_ULDL_Sharing_DL_Resources( SI_XNAP_DT_SharedResourceType_ULDL_Sharing_DL_Resources ** data);

void __si_xnap_debug_SharedResourceType_ULDL_Sharing_DL_Resources( char * key, SI_XNAP_DT_SharedResourceType_ULDL_Sharing_DL_Resources * data, int lvl);

void __si_xnap_memfree_SharedResourceType_ULDL_Sharing_DL_Resources( SI_XNAP_DT_SharedResourceType_ULDL_Sharing_DL_Resources * data);

int __si_xnap_Encode_SharedResourceType_ULDL_Sharing_DL_Resources( SI_XNAP_DT_SharedResourceType_ULDL_Sharing_DL_Resources * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SharedResourceType_ULDL_Sharing( SI_XNAP_DT_SharedResourceType_ULDL_Sharing ** data);

void __si_xnap_debug_SharedResourceType_ULDL_Sharing( char * key, SI_XNAP_DT_SharedResourceType_ULDL_Sharing * data, int lvl);

void __si_xnap_memfree_SharedResourceType_ULDL_Sharing( SI_XNAP_DT_SharedResourceType_ULDL_Sharing * data);

int __si_xnap_Encode_SharedResourceType_ULDL_Sharing( SI_XNAP_DT_SharedResourceType_ULDL_Sharing * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SharedResourceType( SI_XNAP_DT_SharedResourceType ** data);

void __si_xnap_debug_SharedResourceType( char * key, SI_XNAP_DT_SharedResourceType * data, int lvl);

void __si_xnap_memfree_SharedResourceType( SI_XNAP_DT_SharedResourceType * data);

int __si_xnap_Encode_SharedResourceType( SI_XNAP_DT_SharedResourceType * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ReservedSubframePattern_subframeType( char * key, uint8_t eReservedSubframePattern_subframeType, int lvl);

int __si_xnap_Encode_ReservedSubframePattern_subframeType( uint8_t eReservedSubframePattern_subframeType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ReservedSubframePattern_reservedSubframePattern( SI_XNAP_DT_ReservedSubframePattern_reservedSubframePattern ** data);

void __si_xnap_init_ReservedSubframePattern_reservedSubframePattern2( SI_XNAP_DT_ReservedSubframePattern_reservedSubframePattern ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_ReservedSubframePattern_reservedSubframePattern( char * key, SI_XNAP_DT_ReservedSubframePattern_reservedSubframePattern * data, int lvl);

void __si_xnap_memfree_ReservedSubframePattern_reservedSubframePattern( SI_XNAP_DT_ReservedSubframePattern_reservedSubframePattern * data);

int __si_xnap_Encode_ReservedSubframePattern_reservedSubframePattern( SI_XNAP_DT_ReservedSubframePattern_reservedSubframePattern * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MBSFNControlRegionLength( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_MBSFNControlRegionLength( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_MBSFNControlRegionLength( SI_XNAP_DT_MBSFNControlRegionLength * data);


void __si_xnap_init_ReservedSubframePattern( SI_XNAP_DT_ReservedSubframePattern ** data);

void __si_xnap_debug_ReservedSubframePattern( char * key, SI_XNAP_DT_ReservedSubframePattern * data, int lvl);

void __si_xnap_memfree_ReservedSubframePattern( SI_XNAP_DT_ReservedSubframePattern * data);

int __si_xnap_Encode_ReservedSubframePattern( SI_XNAP_DT_ReservedSubframePattern * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DataTrafficResourceIndication( SI_XNAP_DT_DataTrafficResourceIndication ** data);

void __si_xnap_debug_DataTrafficResourceIndication( char * key, SI_XNAP_DT_DataTrafficResourceIndication * data, int lvl);

void __si_xnap_memfree_DataTrafficResourceIndication( SI_XNAP_DT_DataTrafficResourceIndication * data);

int __si_xnap_Encode_DataTrafficResourceIndication( SI_XNAP_DT_DataTrafficResourceIndication * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DAPSRequestInfo_dapsIndicator( char * key, uint8_t eDAPSRequestInfo_dapsIndicator, int lvl);

int __si_xnap_Encode_DAPSRequestInfo_dapsIndicator( uint8_t eDAPSRequestInfo_dapsIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DAPSRequestInfo( SI_XNAP_DT_DAPSRequestInfo ** data);

void __si_xnap_debug_DAPSRequestInfo( char * key, SI_XNAP_DT_DAPSRequestInfo * data, int lvl);

void __si_xnap_memfree_DAPSRequestInfo( SI_XNAP_DT_DAPSRequestInfo * data);

int __si_xnap_Encode_DAPSRequestInfo( SI_XNAP_DT_DAPSRequestInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DAPSResponseInfo_List( SI_XNAP_DT_DAPSResponseInfo_List ** data);

void __si_xnap_debug_DAPSResponseInfo_List( char * key, SI_XNAP_DT_DAPSResponseInfo_List * data, int lvl);

void __si_xnap_memfree_DAPSResponseInfo_List( SI_XNAP_DT_DAPSResponseInfo_List * data);

int __si_xnap_Encode_DAPSResponseInfo_List( SI_XNAP_DT_DAPSResponseInfo_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DAPSResponseInfoItem_dapsResponseIndicator( char * key, uint8_t eDAPSResponseInfoItem_dapsResponseIndicator, int lvl);

int __si_xnap_Encode_DAPSResponseInfoItem_dapsResponseIndicator( uint8_t eDAPSResponseInfoItem_dapsResponseIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DAPSResponseInfo_Item( SI_XNAP_DT_DAPSResponseInfo_Item ** data);

void __si_xnap_debug_DAPSResponseInfo_Item( char * key, SI_XNAP_DT_DAPSResponseInfo_Item * data, int lvl);

void __si_xnap_memfree_DAPSResponseInfo_Item( SI_XNAP_DT_DAPSResponseInfo_Item * data);

int __si_xnap_Encode_DAPSResponseInfo_Item( SI_XNAP_DT_DAPSResponseInfo_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DeliveryStatus( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_DeliveryStatus( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_DeliveryStatus( SI_XNAP_DT_DeliveryStatus * data);


void __si_xnap_debug_DesiredActNotificationLevel( char * key, uint8_t eDesiredActNotificationLevel, int lvl);

int __si_xnap_Encode_DesiredActNotificationLevel( uint8_t eDesiredActNotificationLevel, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DefaultDRB_Allowed( char * key, uint8_t eDefaultDRB_Allowed, int lvl);

int __si_xnap_Encode_DefaultDRB_Allowed( uint8_t eDefaultDRB_Allowed, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DirectForwardingPathAvailability( char * key, uint8_t eDirectForwardingPathAvailability, int lvl);

int __si_xnap_Encode_DirectForwardingPathAvailability( uint8_t eDirectForwardingPathAvailability, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DirectForwardingPathAvailabilityWithSourceMN( char * key, uint8_t eDirectForwardingPathAvailabilityWithSourceMN, int lvl);

int __si_xnap_Encode_DirectForwardingPathAvailabilityWithSourceMN( uint8_t eDirectForwardingPathAvailabilityWithSourceMN, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DLCountChoice( SI_XNAP_DT_DLCountChoice ** data);

void __si_xnap_debug_DLCountChoice( char * key, SI_XNAP_DT_DLCountChoice * data, int lvl);

void __si_xnap_memfree_DLCountChoice( SI_XNAP_DT_DLCountChoice * data);

int __si_xnap_Encode_DLCountChoice( SI_XNAP_DT_DLCountChoice * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DL_GBR_PRB_usage_for_MIMO( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_DL_GBR_PRB_usage_for_MIMO( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_DL_GBR_PRB_usage_for_MIMO( SI_XNAP_DT_DL_GBR_PRB_usage_for_MIMO * data);


void __si_xnap_debug_DL_non_GBR_PRB_usage_for_MIMO( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_DL_non_GBR_PRB_usage_for_MIMO( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_DL_non_GBR_PRB_usage_for_MIMO( SI_XNAP_DT_DL_non_GBR_PRB_usage_for_MIMO * data);


void __si_xnap_init_DLF1Terminating_BHInfo( SI_XNAP_DT_DLF1Terminating_BHInfo ** data);

void __si_xnap_debug_DLF1Terminating_BHInfo( char * key, SI_XNAP_DT_DLF1Terminating_BHInfo * data, int lvl);

void __si_xnap_memfree_DLF1Terminating_BHInfo( SI_XNAP_DT_DLF1Terminating_BHInfo * data);

int __si_xnap_Encode_DLF1Terminating_BHInfo( SI_XNAP_DT_DLF1Terminating_BHInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DLLBTFailureInformationRequest( char * key, uint8_t eDLLBTFailureInformationRequest, int lvl);

int __si_xnap_Encode_DLLBTFailureInformationRequest( uint8_t eDLLBTFailureInformationRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DLLBTFailureInformationList( SI_XNAP_DT_DLLBTFailureInformationList ** data);

void __si_xnap_debug_DLLBTFailureInformationList( char * key, SI_XNAP_DT_DLLBTFailureInformationList * data, int lvl);

void __si_xnap_memfree_DLLBTFailureInformationList( SI_XNAP_DT_DLLBTFailureInformationList * data);

int __si_xnap_Encode_DLLBTFailureInformationList( SI_XNAP_DT_DLLBTFailureInformationList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DLLBTFailureInformationListItem_numberOfDLLBTFailures( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_DLLBTFailureInformationListItem_numberOfDLLBTFailures( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_DLLBTFailureInformationListItem_numberOfDLLBTFailures( SI_XNAP_DT_DLLBTFailureInformationListItem_numberOfDLLBTFailures * data);


void __si_xnap_init_DLLBTFailureInformationList_Item( SI_XNAP_DT_DLLBTFailureInformationList_Item ** data);

void __si_xnap_debug_DLLBTFailureInformationList_Item( char * key, SI_XNAP_DT_DLLBTFailureInformationList_Item * data, int lvl);

void __si_xnap_memfree_DLLBTFailureInformationList_Item( SI_XNAP_DT_DLLBTFailureInformationList_Item * data);

int __si_xnap_Encode_DLLBTFailureInformationList_Item( SI_XNAP_DT_DLLBTFailureInformationList_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABQoSMappingInformation_dscp( SI_XNAP_DT_IABQoSMappingInformation_dscp ** data);

void __si_xnap_init_IABQoSMappingInformation_dscp2( SI_XNAP_DT_IABQoSMappingInformation_dscp ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_IABQoSMappingInformation_dscp( char * key, SI_XNAP_DT_IABQoSMappingInformation_dscp * data, int lvl);

void __si_xnap_memfree_IABQoSMappingInformation_dscp( SI_XNAP_DT_IABQoSMappingInformation_dscp * data);

int __si_xnap_Encode_IABQoSMappingInformation_dscp( SI_XNAP_DT_IABQoSMappingInformation_dscp * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABQoSMappingInformation_flow_label( SI_XNAP_DT_IABQoSMappingInformation_flow_label ** data);

void __si_xnap_init_IABQoSMappingInformation_flow_label2( SI_XNAP_DT_IABQoSMappingInformation_flow_label ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_IABQoSMappingInformation_flow_label( char * key, SI_XNAP_DT_IABQoSMappingInformation_flow_label * data, int lvl);

void __si_xnap_memfree_IABQoSMappingInformation_flow_label( SI_XNAP_DT_IABQoSMappingInformation_flow_label * data);

int __si_xnap_Encode_IABQoSMappingInformation_flow_label( SI_XNAP_DT_IABQoSMappingInformation_flow_label * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IAB_QoS_Mapping_Information( SI_XNAP_DT_IAB_QoS_Mapping_Information ** data);

void __si_xnap_debug_IAB_QoS_Mapping_Information( char * key, SI_XNAP_DT_IAB_QoS_Mapping_Information * data, int lvl);

void __si_xnap_memfree_IAB_QoS_Mapping_Information( SI_XNAP_DT_IAB_QoS_Mapping_Information * data);

int __si_xnap_Encode_IAB_QoS_Mapping_Information( SI_XNAP_DT_IAB_QoS_Mapping_Information * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DLNonF1Terminating_BHInfo( SI_XNAP_DT_DLNonF1Terminating_BHInfo ** data);

void __si_xnap_debug_DLNonF1Terminating_BHInfo( char * key, SI_XNAP_DT_DLNonF1Terminating_BHInfo * data, int lvl);

void __si_xnap_memfree_DLNonF1Terminating_BHInfo( SI_XNAP_DT_DLNonF1Terminating_BHInfo * data);

int __si_xnap_Encode_DLNonF1Terminating_BHInfo( SI_XNAP_DT_DLNonF1Terminating_BHInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DL_Total_PRB_usage_for_MIMO( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_DL_Total_PRB_usage_for_MIMO( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_DL_Total_PRB_usage_for_MIMO( SI_XNAP_DT_DL_Total_PRB_usage_for_MIMO * data);


void __si_xnap_init_DRB_List( SI_XNAP_DT_DRB_List ** data);

void __si_xnap_debug_DRB_List( char * key, SI_XNAP_DT_DRB_List * data, int lvl);

void __si_xnap_memfree_DRB_List( SI_XNAP_DT_DRB_List * data);

int __si_xnap_Encode_DRB_List( SI_XNAP_DT_DRB_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRB_List_withCause( SI_XNAP_DT_DRB_List_withCause ** data);

void __si_xnap_debug_DRB_List_withCause( char * key, SI_XNAP_DT_DRB_List_withCause * data, int lvl);

void __si_xnap_memfree_DRB_List_withCause( SI_XNAP_DT_DRB_List_withCause * data);

int __si_xnap_Encode_DRB_List_withCause( SI_XNAP_DT_DRB_List_withCause * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RLCMode( char * key, uint8_t eRLCMode, int lvl);

int __si_xnap_Encode_RLCMode( uint8_t eRLCMode, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRB_List_withCause_Item( SI_XNAP_DT_DRB_List_withCause_Item ** data);

void __si_xnap_debug_DRB_List_withCause_Item( char * key, SI_XNAP_DT_DRB_List_withCause_Item * data, int lvl);

void __si_xnap_memfree_DRB_List_withCause_Item( SI_XNAP_DT_DRB_List_withCause_Item * data);

int __si_xnap_Encode_DRB_List_withCause_Item( SI_XNAP_DT_DRB_List_withCause_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DRB_Number( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_DRB_Number( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_DRB_Number( SI_XNAP_DT_DRB_Number * data);


void __si_xnap_init_DRBsSubjectToDLDiscarding_List( SI_XNAP_DT_DRBsSubjectToDLDiscarding_List ** data);

void __si_xnap_debug_DRBsSubjectToDLDiscarding_List( char * key, SI_XNAP_DT_DRBsSubjectToDLDiscarding_List * data, int lvl);

void __si_xnap_memfree_DRBsSubjectToDLDiscarding_List( SI_XNAP_DT_DRBsSubjectToDLDiscarding_List * data);

int __si_xnap_Encode_DRBsSubjectToDLDiscarding_List( SI_XNAP_DT_DRBsSubjectToDLDiscarding_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsSubjectToDLDiscarding_Item( SI_XNAP_DT_DRBsSubjectToDLDiscarding_Item ** data);

void __si_xnap_debug_DRBsSubjectToDLDiscarding_Item( char * key, SI_XNAP_DT_DRBsSubjectToDLDiscarding_Item * data, int lvl);

void __si_xnap_memfree_DRBsSubjectToDLDiscarding_Item( SI_XNAP_DT_DRBsSubjectToDLDiscarding_Item * data);

int __si_xnap_Encode_DRBsSubjectToDLDiscarding_Item( SI_XNAP_DT_DRBsSubjectToDLDiscarding_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsSubjectToEarlyStatusTransfer_List( SI_XNAP_DT_DRBsSubjectToEarlyStatusTransfer_List ** data);

void __si_xnap_debug_DRBsSubjectToEarlyStatusTransfer_List( char * key, SI_XNAP_DT_DRBsSubjectToEarlyStatusTransfer_List * data, int lvl);

void __si_xnap_memfree_DRBsSubjectToEarlyStatusTransfer_List( SI_XNAP_DT_DRBsSubjectToEarlyStatusTransfer_List * data);

int __si_xnap_Encode_DRBsSubjectToEarlyStatusTransfer_List( SI_XNAP_DT_DRBsSubjectToEarlyStatusTransfer_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsSubjectToEarlyStatusTransfer_Item( SI_XNAP_DT_DRBsSubjectToEarlyStatusTransfer_Item ** data);

void __si_xnap_debug_DRBsSubjectToEarlyStatusTransfer_Item( char * key, SI_XNAP_DT_DRBsSubjectToEarlyStatusTransfer_Item * data, int lvl);

void __si_xnap_memfree_DRBsSubjectToEarlyStatusTransfer_Item( SI_XNAP_DT_DRBsSubjectToEarlyStatusTransfer_Item * data);

int __si_xnap_Encode_DRBsSubjectToEarlyStatusTransfer_Item( SI_XNAP_DT_DRBsSubjectToEarlyStatusTransfer_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsSubjectToStatusTransfer_List( SI_XNAP_DT_DRBsSubjectToStatusTransfer_List ** data);

void __si_xnap_debug_DRBsSubjectToStatusTransfer_List( char * key, SI_XNAP_DT_DRBsSubjectToStatusTransfer_List * data, int lvl);

void __si_xnap_memfree_DRBsSubjectToStatusTransfer_List( SI_XNAP_DT_DRBsSubjectToStatusTransfer_List * data);

int __si_xnap_Encode_DRBsSubjectToStatusTransfer_List( SI_XNAP_DT_DRBsSubjectToStatusTransfer_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBBStatusTransfer12bitsSN_receiveStatusofPDCPSDU( SI_XNAP_DT_DRBBStatusTransfer12bitsSN_receiveStatusofPDCPSDU ** data);

void __si_xnap_init_DRBBStatusTransfer12bitsSN_receiveStatusofPDCPSDU2( SI_XNAP_DT_DRBBStatusTransfer12bitsSN_receiveStatusofPDCPSDU ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_DRBBStatusTransfer12bitsSN_receiveStatusofPDCPSDU( char * key, SI_XNAP_DT_DRBBStatusTransfer12bitsSN_receiveStatusofPDCPSDU * data, int lvl);

void __si_xnap_memfree_DRBBStatusTransfer12bitsSN_receiveStatusofPDCPSDU( SI_XNAP_DT_DRBBStatusTransfer12bitsSN_receiveStatusofPDCPSDU * data);

int __si_xnap_Encode_DRBBStatusTransfer12bitsSN_receiveStatusofPDCPSDU( SI_XNAP_DT_DRBBStatusTransfer12bitsSN_receiveStatusofPDCPSDU * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBBStatusTransfer12bitsSN( SI_XNAP_DT_DRBBStatusTransfer12bitsSN ** data);

void __si_xnap_debug_DRBBStatusTransfer12bitsSN( char * key, SI_XNAP_DT_DRBBStatusTransfer12bitsSN * data, int lvl);

void __si_xnap_memfree_DRBBStatusTransfer12bitsSN( SI_XNAP_DT_DRBBStatusTransfer12bitsSN * data);

int __si_xnap_Encode_DRBBStatusTransfer12bitsSN( SI_XNAP_DT_DRBBStatusTransfer12bitsSN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBBStatusTransfer18bitsSN_receiveStatusofPDCPSDU( SI_XNAP_DT_DRBBStatusTransfer18bitsSN_receiveStatusofPDCPSDU ** data);

void __si_xnap_init_DRBBStatusTransfer18bitsSN_receiveStatusofPDCPSDU2( SI_XNAP_DT_DRBBStatusTransfer18bitsSN_receiveStatusofPDCPSDU ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_DRBBStatusTransfer18bitsSN_receiveStatusofPDCPSDU( char * key, SI_XNAP_DT_DRBBStatusTransfer18bitsSN_receiveStatusofPDCPSDU * data, int lvl);

void __si_xnap_memfree_DRBBStatusTransfer18bitsSN_receiveStatusofPDCPSDU( SI_XNAP_DT_DRBBStatusTransfer18bitsSN_receiveStatusofPDCPSDU * data);

int __si_xnap_Encode_DRBBStatusTransfer18bitsSN_receiveStatusofPDCPSDU( SI_XNAP_DT_DRBBStatusTransfer18bitsSN_receiveStatusofPDCPSDU * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBBStatusTransfer18bitsSN( SI_XNAP_DT_DRBBStatusTransfer18bitsSN ** data);

void __si_xnap_debug_DRBBStatusTransfer18bitsSN( char * key, SI_XNAP_DT_DRBBStatusTransfer18bitsSN * data, int lvl);

void __si_xnap_memfree_DRBBStatusTransfer18bitsSN( SI_XNAP_DT_DRBBStatusTransfer18bitsSN * data);

int __si_xnap_Encode_DRBBStatusTransfer18bitsSN( SI_XNAP_DT_DRBBStatusTransfer18bitsSN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBBStatusTransferChoice( SI_XNAP_DT_DRBBStatusTransferChoice ** data);

void __si_xnap_debug_DRBBStatusTransferChoice( char * key, SI_XNAP_DT_DRBBStatusTransferChoice * data, int lvl);

void __si_xnap_memfree_DRBBStatusTransferChoice( SI_XNAP_DT_DRBBStatusTransferChoice * data);

int __si_xnap_Encode_DRBBStatusTransferChoice( SI_XNAP_DT_DRBBStatusTransferChoice * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsSubjectToStatusTransfer_Item( SI_XNAP_DT_DRBsSubjectToStatusTransfer_Item ** data);

void __si_xnap_debug_DRBsSubjectToStatusTransfer_Item( char * key, SI_XNAP_DT_DRBsSubjectToStatusTransfer_Item * data, int lvl);

void __si_xnap_memfree_DRBsSubjectToStatusTransfer_Item( SI_XNAP_DT_DRBsSubjectToStatusTransfer_Item * data);

int __si_xnap_Encode_DRBsSubjectToStatusTransfer_Item( SI_XNAP_DT_DRBsSubjectToStatusTransfer_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlows_List( SI_XNAP_DT_QoSFlows_List ** data);

void __si_xnap_debug_QoSFlows_List( char * key, SI_XNAP_DT_QoSFlows_List * data, int lvl);

void __si_xnap_memfree_QoSFlows_List( SI_XNAP_DT_QoSFlows_List * data);

int __si_xnap_Encode_QoSFlows_List( SI_XNAP_DT_QoSFlows_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBToQoSFlowMapping_Item( SI_XNAP_DT_DRBToQoSFlowMapping_Item ** data);

void __si_xnap_debug_DRBToQoSFlowMapping_Item( char * key, SI_XNAP_DT_DRBToQoSFlowMapping_Item * data, int lvl);

void __si_xnap_memfree_DRBToQoSFlowMapping_Item( SI_XNAP_DT_DRBToQoSFlowMapping_Item * data);

int __si_xnap_Encode_DRBToQoSFlowMapping_Item( SI_XNAP_DT_DRBToQoSFlowMapping_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DUF_Slot_Config_List( SI_XNAP_DT_DUF_Slot_Config_List ** data);

void __si_xnap_debug_DUF_Slot_Config_List( char * key, SI_XNAP_DT_DUF_Slot_Config_List * data, int lvl);

void __si_xnap_memfree_DUF_Slot_Config_List( SI_XNAP_DT_DUF_Slot_Config_List * data);

int __si_xnap_Encode_DUF_Slot_Config_List( SI_XNAP_DT_DUF_Slot_Config_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_Permutation( char * key, uint8_t ePermutation, int lvl);

int __si_xnap_Encode_Permutation( uint8_t ePermutation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ExplicitFormat_noofDownlinkSymbols( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_ExplicitFormat_noofDownlinkSymbols( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_ExplicitFormat_noofDownlinkSymbols( SI_XNAP_DT_ExplicitFormat_noofDownlinkSymbols * data);


void __si_xnap_debug_ExplicitFormat_noofUplinkSymbols( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_ExplicitFormat_noofUplinkSymbols( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_ExplicitFormat_noofUplinkSymbols( SI_XNAP_DT_ExplicitFormat_noofUplinkSymbols * data);


void __si_xnap_init_ExplicitFormat( SI_XNAP_DT_ExplicitFormat ** data);

void __si_xnap_debug_ExplicitFormat( char * key, SI_XNAP_DT_ExplicitFormat * data, int lvl);

void __si_xnap_memfree_ExplicitFormat( SI_XNAP_DT_ExplicitFormat * data);

int __si_xnap_Encode_ExplicitFormat( SI_XNAP_DT_ExplicitFormat * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DUFSlotformatIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_DUFSlotformatIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_DUFSlotformatIndex( SI_XNAP_DT_DUFSlotformatIndex * data);


void __si_xnap_init_ImplicitFormat( SI_XNAP_DT_ImplicitFormat ** data);

void __si_xnap_debug_ImplicitFormat( char * key, SI_XNAP_DT_ImplicitFormat * data, int lvl);

void __si_xnap_memfree_ImplicitFormat( SI_XNAP_DT_ImplicitFormat * data);

int __si_xnap_Encode_ImplicitFormat( SI_XNAP_DT_ImplicitFormat * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DUF_Slot_Config_Item( SI_XNAP_DT_DUF_Slot_Config_Item ** data);

void __si_xnap_debug_DUF_Slot_Config_Item( char * key, SI_XNAP_DT_DUF_Slot_Config_Item * data, int lvl);

void __si_xnap_memfree_DUF_Slot_Config_Item( SI_XNAP_DT_DUF_Slot_Config_Item * data);

int __si_xnap_Encode_DUF_Slot_Config_Item( SI_XNAP_DT_DUF_Slot_Config_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DUFTransmissionPeriodicity( char * key, uint8_t eDUFTransmissionPeriodicity, int lvl);

int __si_xnap_Encode_DUFTransmissionPeriodicity( uint8_t eDUFTransmissionPeriodicity, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DU_RX_MT_RX( char * key, uint8_t eDU_RX_MT_RX, int lvl);

int __si_xnap_Encode_DU_RX_MT_RX( uint8_t eDU_RX_MT_RX, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DU_TX_MT_TX( char * key, uint8_t eDU_TX_MT_TX, int lvl);

int __si_xnap_Encode_DU_TX_MT_TX( uint8_t eDU_TX_MT_TX, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DU_RX_MT_TX( char * key, uint8_t eDU_RX_MT_TX, int lvl);

int __si_xnap_Encode_DU_RX_MT_TX( uint8_t eDU_RX_MT_TX, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DU_TX_MT_RX( char * key, uint8_t eDU_TX_MT_RX, int lvl);

int __si_xnap_Encode_DU_TX_MT_RX( uint8_t eDU_TX_MT_RX, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DuplicationActivation( char * key, uint8_t eDuplicationActivation, int lvl);

int __si_xnap_Encode_DuplicationActivation( uint8_t eDuplicationActivation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_Dynamic5QIDescriptor_delayCritical( char * key, uint8_t eDynamic5QIDescriptor_delayCritical, int lvl);

int __si_xnap_Encode_Dynamic5QIDescriptor_delayCritical( uint8_t eDynamic5QIDescriptor_delayCritical, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PriorityLevelQoS( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_PriorityLevelQoS( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_PriorityLevelQoS( SI_XNAP_DT_PriorityLevelQoS * data);


void __si_xnap_debug_MaximumDataBurstVolume( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_MaximumDataBurstVolume( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_MaximumDataBurstVolume( SI_XNAP_DT_MaximumDataBurstVolume * data);


void __si_xnap_init_Dynamic5QIDescriptor( SI_XNAP_DT_Dynamic5QIDescriptor ** data);

void __si_xnap_debug_Dynamic5QIDescriptor( char * key, SI_XNAP_DT_Dynamic5QIDescriptor * data, int lvl);

void __si_xnap_memfree_Dynamic5QIDescriptor( SI_XNAP_DT_Dynamic5QIDescriptor * data);

int __si_xnap_Encode_Dynamic5QIDescriptor( SI_XNAP_DT_Dynamic5QIDescriptor * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_EarlyMeasurement( char * key, uint8_t eEarlyMeasurement, int lvl);

int __si_xnap_Encode_EarlyMeasurement( uint8_t eEarlyMeasurement, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ECNMarkingAtRANRequest( char * key, uint8_t eECNMarkingAtRANRequest, int lvl);

int __si_xnap_Encode_ECNMarkingAtRANRequest( uint8_t eECNMarkingAtRANRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ECNMarkingAtUPFRequest( char * key, uint8_t eECNMarkingAtUPFRequest, int lvl);

int __si_xnap_Encode_ECNMarkingAtUPFRequest( uint8_t eECNMarkingAtUPFRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CongestionInformationRequest( char * key, uint8_t eCongestionInformationRequest, int lvl);

int __si_xnap_Encode_CongestionInformationRequest( uint8_t eCongestionInformationRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ECNMarkingorCongestionInformationReportingRequest( SI_XNAP_DT_ECNMarkingorCongestionInformationReportingRequest ** data);

void __si_xnap_debug_ECNMarkingorCongestionInformationReportingRequest( char * key, SI_XNAP_DT_ECNMarkingorCongestionInformationReportingRequest * data, int lvl);

void __si_xnap_memfree_ECNMarkingorCongestionInformationReportingRequest( SI_XNAP_DT_ECNMarkingorCongestionInformationReportingRequest * data);

int __si_xnap_Encode_ECNMarkingorCongestionInformationReportingRequest( SI_XNAP_DT_ECNMarkingorCongestionInformationReportingRequest * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_EnergyCost( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_EnergyCost( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_EnergyCost( SI_XNAP_DT_EnergyCost * data);


void __si_xnap_init_EquivalentSNPNs( SI_XNAP_DT_EquivalentSNPNs ** data);

void __si_xnap_debug_EquivalentSNPNs( char * key, SI_XNAP_DT_EquivalentSNPNs * data, int lvl);

void __si_xnap_memfree_EquivalentSNPNs( SI_XNAP_DT_EquivalentSNPNs * data);

int __si_xnap_Encode_EquivalentSNPNs( SI_XNAP_DT_EquivalentSNPNs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_E_RAB_ID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_E_RAB_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_E_RAB_ID( SI_XNAP_DT_E_RAB_ID * data);


void __si_xnap_debug_E_UTRAARFCN( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_E_UTRAARFCN( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_E_UTRAARFCN( SI_XNAP_DT_E_UTRAARFCN * data);


void __si_xnap_init_ERedcap_Bcast_Information( SI_XNAP_DT_ERedcap_Bcast_Information ** data);

void __si_xnap_init_ERedcap_Bcast_Information2( SI_XNAP_DT_ERedcap_Bcast_Information ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_ERedcap_Bcast_Information( char * key, SI_XNAP_DT_ERedcap_Bcast_Information * data, int lvl);

void __si_xnap_memfree_ERedcap_Bcast_Information( SI_XNAP_DT_ERedcap_Bcast_Information * data);

int __si_xnap_Encode_ERedcap_Bcast_Information( SI_XNAP_DT_ERedcap_Bcast_Information * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_E_UTRAFrequencyBandIndicator( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_E_UTRAFrequencyBandIndicator( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_E_UTRAFrequencyBandIndicator( SI_XNAP_DT_E_UTRAFrequencyBandIndicator * data);


void __si_xnap_init_E_UTRAMultibandInfoList( SI_XNAP_DT_E_UTRAMultibandInfoList ** data);

void __si_xnap_debug_E_UTRAMultibandInfoList( char * key, SI_XNAP_DT_E_UTRAMultibandInfoList * data, int lvl);

void __si_xnap_memfree_E_UTRAMultibandInfoList( SI_XNAP_DT_E_UTRAMultibandInfoList * data);

int __si_xnap_Encode_E_UTRAMultibandInfoList( SI_XNAP_DT_E_UTRAMultibandInfoList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_EUTRAPaging_eDRX_Cycle( char * key, uint8_t eEUTRAPaging_eDRX_Cycle, int lvl);

int __si_xnap_Encode_EUTRAPaging_eDRX_Cycle( uint8_t eEUTRAPaging_eDRX_Cycle, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_EUTRAPaging_Time_Window( char * key, uint8_t eEUTRAPaging_Time_Window, int lvl);

int __si_xnap_Encode_EUTRAPaging_Time_Window( uint8_t eEUTRAPaging_Time_Window, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_EUTRAPagingeDRXInformation( SI_XNAP_DT_EUTRAPagingeDRXInformation ** data);

void __si_xnap_debug_EUTRAPagingeDRXInformation( char * key, SI_XNAP_DT_EUTRAPagingeDRXInformation * data, int lvl);

void __si_xnap_memfree_EUTRAPagingeDRXInformation( SI_XNAP_DT_EUTRAPagingeDRXInformation * data);

int __si_xnap_Encode_EUTRAPagingeDRXInformation( SI_XNAP_DT_EUTRAPagingeDRXInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_E_UTRAPCI( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_E_UTRAPCI( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_E_UTRAPCI( SI_XNAP_DT_E_UTRAPCI * data);


void __si_xnap_debug_EUTRAPRACHConfiguration_rootSequenceIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_EUTRAPRACHConfiguration_rootSequenceIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_EUTRAPRACHConfiguration_rootSequenceIndex( SI_XNAP_DT_EUTRAPRACHConfiguration_rootSequenceIndex * data);


void __si_xnap_debug_EUTRAPRACHConfiguration_zeroCorrelationIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_EUTRAPRACHConfiguration_zeroCorrelationIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_EUTRAPRACHConfiguration_zeroCorrelationIndex( SI_XNAP_DT_EUTRAPRACHConfiguration_zeroCorrelationIndex * data);


void __si_xnap_debug_EUTRAPRACHConfiguration_highSpeedFlag( char * key, uint8_t eEUTRAPRACHConfiguration_highSpeedFlag, int lvl);

int __si_xnap_Encode_EUTRAPRACHConfiguration_highSpeedFlag( uint8_t eEUTRAPRACHConfiguration_highSpeedFlag, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_EUTRAPRACHConfiguration_prach_FreqOffset( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_EUTRAPRACHConfiguration_prach_FreqOffset( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_EUTRAPRACHConfiguration_prach_FreqOffset( SI_XNAP_DT_EUTRAPRACHConfiguration_prach_FreqOffset * data);


void __si_xnap_debug_EUTRAPRACHConfiguration_prach_ConfigIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_EUTRAPRACHConfiguration_prach_ConfigIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_EUTRAPRACHConfiguration_prach_ConfigIndex( SI_XNAP_DT_EUTRAPRACHConfiguration_prach_ConfigIndex * data);


void __si_xnap_init_E_UTRAPRACHConfiguration( SI_XNAP_DT_E_UTRAPRACHConfiguration ** data);

void __si_xnap_debug_E_UTRAPRACHConfiguration( char * key, SI_XNAP_DT_E_UTRAPRACHConfiguration * data, int lvl);

void __si_xnap_memfree_E_UTRAPRACHConfiguration( SI_XNAP_DT_E_UTRAPRACHConfiguration * data);

int __si_xnap_Encode_E_UTRAPRACHConfiguration( SI_XNAP_DT_E_UTRAPRACHConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_E_UTRATransmissionBandwidth( char * key, uint8_t eE_UTRATransmissionBandwidth, int lvl);

int __si_xnap_Encode_E_UTRATransmissionBandwidth( uint8_t eE_UTRATransmissionBandwidth, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PortNumber( SI_XNAP_DT_PortNumber ** data);

void __si_xnap_init_PortNumber2( SI_XNAP_DT_PortNumber ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_PortNumber( char * key, SI_XNAP_DT_PortNumber * data, int lvl);

void __si_xnap_memfree_PortNumber( SI_XNAP_DT_PortNumber * data);

int __si_xnap_Encode_PortNumber( SI_XNAP_DT_PortNumber * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_EndpointIPAddressAndPort( SI_XNAP_DT_EndpointIPAddressAndPort ** data);

void __si_xnap_debug_EndpointIPAddressAndPort( char * key, SI_XNAP_DT_EndpointIPAddressAndPort * data, int lvl);

void __si_xnap_memfree_EndpointIPAddressAndPort( SI_XNAP_DT_EndpointIPAddressAndPort * data);

int __si_xnap_Encode_EndpointIPAddressAndPort( SI_XNAP_DT_EndpointIPAddressAndPort * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_EventTypeTrigger_outOfCoverage( char * key, uint8_t eEventTypeTrigger_outOfCoverage, int lvl);

int __si_xnap_Encode_EventTypeTrigger_outOfCoverage( uint8_t eEventTypeTrigger_outOfCoverage, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_Threshold_RSRP( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_Threshold_RSRP( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_Threshold_RSRP( SI_XNAP_DT_Threshold_RSRP * data);


void __si_xnap_debug_Threshold_RSRQ( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_Threshold_RSRQ( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_Threshold_RSRQ( SI_XNAP_DT_Threshold_RSRQ * data);


void __si_xnap_init_MeasurementThresholdL1LoggedMDT( SI_XNAP_DT_MeasurementThresholdL1LoggedMDT ** data);

void __si_xnap_debug_MeasurementThresholdL1LoggedMDT( char * key, SI_XNAP_DT_MeasurementThresholdL1LoggedMDT * data, int lvl);

void __si_xnap_memfree_MeasurementThresholdL1LoggedMDT( SI_XNAP_DT_MeasurementThresholdL1LoggedMDT * data);

int __si_xnap_Encode_MeasurementThresholdL1LoggedMDT( SI_XNAP_DT_MeasurementThresholdL1LoggedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_Hysteresis( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_Hysteresis( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_Hysteresis( SI_XNAP_DT_Hysteresis * data);


void __si_xnap_debug_TimeToTrigger( char * key, uint8_t eTimeToTrigger, int lvl);

int __si_xnap_Encode_TimeToTrigger( uint8_t eTimeToTrigger, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_EventL1( SI_XNAP_DT_EventL1 ** data);

void __si_xnap_debug_EventL1( char * key, SI_XNAP_DT_EventL1 * data, int lvl);

void __si_xnap_memfree_EventL1( SI_XNAP_DT_EventL1 * data);

int __si_xnap_Encode_EventL1( SI_XNAP_DT_EventL1 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_EventTypeTrigger( SI_XNAP_DT_EventTypeTrigger ** data);

void __si_xnap_debug_EventTypeTrigger( char * key, SI_XNAP_DT_EventTypeTrigger * data, int lvl);

void __si_xnap_memfree_EventTypeTrigger( SI_XNAP_DT_EventTypeTrigger * data);

int __si_xnap_Encode_EventTypeTrigger( SI_XNAP_DT_EventTypeTrigger * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_LoggedEventTriggeredConfig( SI_XNAP_DT_LoggedEventTriggeredConfig ** data);

void __si_xnap_debug_LoggedEventTriggeredConfig( char * key, SI_XNAP_DT_LoggedEventTriggeredConfig * data, int lvl);

void __si_xnap_memfree_LoggedEventTriggeredConfig( SI_XNAP_DT_LoggedEventTriggeredConfig * data);

int __si_xnap_Encode_LoggedEventTriggeredConfig( SI_XNAP_DT_LoggedEventTriggeredConfig * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_EventTriggered( SI_XNAP_DT_EventTriggered ** data);

void __si_xnap_debug_EventTriggered( char * key, SI_XNAP_DT_EventTriggered * data, int lvl);

void __si_xnap_memfree_EventTriggered( SI_XNAP_DT_EventTriggered * data);

int __si_xnap_Encode_EventTriggered( SI_XNAP_DT_EventTriggered * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_EventType( char * key, uint8_t eEventType, int lvl);

int __si_xnap_Encode_EventType( uint8_t eEventType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ExcessPacketDelayThresholdConfiguration( SI_XNAP_DT_ExcessPacketDelayThresholdConfiguration ** data);

void __si_xnap_debug_ExcessPacketDelayThresholdConfiguration( char * key, SI_XNAP_DT_ExcessPacketDelayThresholdConfiguration * data, int lvl);

void __si_xnap_memfree_ExcessPacketDelayThresholdConfiguration( SI_XNAP_DT_ExcessPacketDelayThresholdConfiguration * data);

int __si_xnap_Encode_ExcessPacketDelayThresholdConfiguration( SI_XNAP_DT_ExcessPacketDelayThresholdConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ExcessPacketDelayThresholdValue( char * key, uint8_t eExcessPacketDelayThresholdValue, int lvl);

int __si_xnap_Encode_ExcessPacketDelayThresholdValue( uint8_t eExcessPacketDelayThresholdValue, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ExcessPacketDelayThresholdItem( SI_XNAP_DT_ExcessPacketDelayThresholdItem ** data);

void __si_xnap_debug_ExcessPacketDelayThresholdItem( char * key, SI_XNAP_DT_ExcessPacketDelayThresholdItem * data, int lvl);

void __si_xnap_memfree_ExcessPacketDelayThresholdItem( SI_XNAP_DT_ExcessPacketDelayThresholdItem * data);

int __si_xnap_Encode_ExcessPacketDelayThresholdItem( SI_XNAP_DT_ExcessPacketDelayThresholdItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ExpectedActivityPeriod( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_ExpectedActivityPeriod( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_ExpectedActivityPeriod( SI_XNAP_DT_ExpectedActivityPeriod * data);


void __si_xnap_debug_ExpectedHOInterval( char * key, uint8_t eExpectedHOInterval, int lvl);

int __si_xnap_Encode_ExpectedHOInterval( uint8_t eExpectedHOInterval, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ExpectedIdlePeriod( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_ExpectedIdlePeriod( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_ExpectedIdlePeriod( SI_XNAP_DT_ExpectedIdlePeriod * data);


void __si_xnap_debug_SourceOfUEActivityBehaviourInformation( char * key, uint8_t eSourceOfUEActivityBehaviourInformation, int lvl);

int __si_xnap_Encode_SourceOfUEActivityBehaviourInformation( uint8_t eSourceOfUEActivityBehaviourInformation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ExpectedUEActivityBehaviour( SI_XNAP_DT_ExpectedUEActivityBehaviour ** data);

void __si_xnap_debug_ExpectedUEActivityBehaviour( char * key, SI_XNAP_DT_ExpectedUEActivityBehaviour * data, int lvl);

void __si_xnap_memfree_ExpectedUEActivityBehaviour( SI_XNAP_DT_ExpectedUEActivityBehaviour * data);

int __si_xnap_Encode_ExpectedUEActivityBehaviour( SI_XNAP_DT_ExpectedUEActivityBehaviour * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ExpectedUEMobility( char * key, uint8_t eExpectedUEMobility, int lvl);

int __si_xnap_Encode_ExpectedUEMobility( uint8_t eExpectedUEMobility, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ExpectedUEMovingTrajectory( SI_XNAP_DT_ExpectedUEMovingTrajectory ** data);

void __si_xnap_debug_ExpectedUEMovingTrajectory( char * key, SI_XNAP_DT_ExpectedUEMovingTrajectory * data, int lvl);

void __si_xnap_memfree_ExpectedUEMovingTrajectory( SI_XNAP_DT_ExpectedUEMovingTrajectory * data);

int __si_xnap_Encode_ExpectedUEMovingTrajectory( SI_XNAP_DT_ExpectedUEMovingTrajectory * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ExpectedUEBehaviour( SI_XNAP_DT_ExpectedUEBehaviour ** data);

void __si_xnap_debug_ExpectedUEBehaviour( char * key, SI_XNAP_DT_ExpectedUEBehaviour * data, int lvl);

void __si_xnap_memfree_ExpectedUEBehaviour( SI_XNAP_DT_ExpectedUEBehaviour * data);

int __si_xnap_Encode_ExpectedUEBehaviour( SI_XNAP_DT_ExpectedUEBehaviour * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ExpectedUEMovingTrajectoryItem_timeStayedInCell( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_ExpectedUEMovingTrajectoryItem_timeStayedInCell( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_ExpectedUEMovingTrajectoryItem_timeStayedInCell( SI_XNAP_DT_ExpectedUEMovingTrajectoryItem_timeStayedInCell * data);


void __si_xnap_init_ExpectedUEMovingTrajectoryItem( SI_XNAP_DT_ExpectedUEMovingTrajectoryItem ** data);

void __si_xnap_debug_ExpectedUEMovingTrajectoryItem( char * key, SI_XNAP_DT_ExpectedUEMovingTrajectoryItem * data, int lvl);

void __si_xnap_memfree_ExpectedUEMovingTrajectoryItem( SI_XNAP_DT_ExpectedUEMovingTrajectoryItem * data);

int __si_xnap_Encode_ExpectedUEMovingTrajectoryItem( SI_XNAP_DT_ExpectedUEMovingTrajectoryItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ExtendedRATRestrictionInformation_primaryRATRestriction( SI_XNAP_DT_ExtendedRATRestrictionInformation_primaryRATRestriction ** data);

void __si_xnap_init_ExtendedRATRestrictionInformation_primaryRATRestriction2( SI_XNAP_DT_ExtendedRATRestrictionInformation_primaryRATRestriction ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_ExtendedRATRestrictionInformation_primaryRATRestriction( char * key, SI_XNAP_DT_ExtendedRATRestrictionInformation_primaryRATRestriction * data, int lvl);

void __si_xnap_memfree_ExtendedRATRestrictionInformation_primaryRATRestriction( SI_XNAP_DT_ExtendedRATRestrictionInformation_primaryRATRestriction * data);

int __si_xnap_Encode_ExtendedRATRestrictionInformation_primaryRATRestriction( SI_XNAP_DT_ExtendedRATRestrictionInformation_primaryRATRestriction * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ExtendedRATRestrictionInformation_secondaryRATRestriction( SI_XNAP_DT_ExtendedRATRestrictionInformation_secondaryRATRestriction ** data);

void __si_xnap_init_ExtendedRATRestrictionInformation_secondaryRATRestriction2( SI_XNAP_DT_ExtendedRATRestrictionInformation_secondaryRATRestriction ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_ExtendedRATRestrictionInformation_secondaryRATRestriction( char * key, SI_XNAP_DT_ExtendedRATRestrictionInformation_secondaryRATRestriction * data, int lvl);

void __si_xnap_memfree_ExtendedRATRestrictionInformation_secondaryRATRestriction( SI_XNAP_DT_ExtendedRATRestrictionInformation_secondaryRATRestriction * data);

int __si_xnap_Encode_ExtendedRATRestrictionInformation_secondaryRATRestriction( SI_XNAP_DT_ExtendedRATRestrictionInformation_secondaryRATRestriction * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ExtendedRATRestrictionInformation( SI_XNAP_DT_ExtendedRATRestrictionInformation ** data);

void __si_xnap_debug_ExtendedRATRestrictionInformation( char * key, SI_XNAP_DT_ExtendedRATRestrictionInformation * data, int lvl);

void __si_xnap_memfree_ExtendedRATRestrictionInformation( SI_XNAP_DT_ExtendedRATRestrictionInformation * data);

int __si_xnap_Encode_ExtendedRATRestrictionInformation( SI_XNAP_DT_ExtendedRATRestrictionInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ExtendedPacketDelayBudget( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_ExtendedPacketDelayBudget( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_ExtendedPacketDelayBudget( SI_XNAP_DT_ExtendedPacketDelayBudget * data);


void __si_xnap_init_ExtendedSliceSupportList( SI_XNAP_DT_ExtendedSliceSupportList ** data);

void __si_xnap_debug_ExtendedSliceSupportList( char * key, SI_XNAP_DT_ExtendedSliceSupportList * data, int lvl);

void __si_xnap_memfree_ExtendedSliceSupportList( SI_XNAP_DT_ExtendedSliceSupportList * data);

int __si_xnap_Encode_ExtendedSliceSupportList( SI_XNAP_DT_ExtendedSliceSupportList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ExtendedUEIdentityIndexValue( SI_XNAP_DT_ExtendedUEIdentityIndexValue ** data);

void __si_xnap_init_ExtendedUEIdentityIndexValue2( SI_XNAP_DT_ExtendedUEIdentityIndexValue ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_ExtendedUEIdentityIndexValue( char * key, SI_XNAP_DT_ExtendedUEIdentityIndexValue * data, int lvl);

void __si_xnap_memfree_ExtendedUEIdentityIndexValue( SI_XNAP_DT_ExtendedUEIdentityIndexValue * data);

int __si_xnap_Encode_ExtendedUEIdentityIndexValue( SI_XNAP_DT_ExtendedUEIdentityIndexValue * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ExtTLAs( SI_XNAP_DT_ExtTLAs ** data);

void __si_xnap_debug_ExtTLAs( char * key, SI_XNAP_DT_ExtTLAs * data, int lvl);

void __si_xnap_memfree_ExtTLAs( SI_XNAP_DT_ExtTLAs * data);

int __si_xnap_Encode_ExtTLAs( SI_XNAP_DT_ExtTLAs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GTPTLAs( SI_XNAP_DT_GTPTLAs ** data);

void __si_xnap_debug_GTPTLAs( char * key, SI_XNAP_DT_GTPTLAs * data, int lvl);

void __si_xnap_memfree_GTPTLAs( SI_XNAP_DT_GTPTLAs * data);

int __si_xnap_Encode_GTPTLAs( SI_XNAP_DT_GTPTLAs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ExtTLA_Item( SI_XNAP_DT_ExtTLA_Item ** data);

void __si_xnap_debug_ExtTLA_Item( char * key, SI_XNAP_DT_ExtTLA_Item * data, int lvl);

void __si_xnap_memfree_ExtTLA_Item( SI_XNAP_DT_ExtTLA_Item * data);

int __si_xnap_Encode_ExtTLA_Item( SI_XNAP_DT_ExtTLA_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GTPTLA_Item( SI_XNAP_DT_GTPTLA_Item ** data);

void __si_xnap_debug_GTPTLA_Item( char * key, SI_XNAP_DT_GTPTLA_Item * data, int lvl);

void __si_xnap_memfree_GTPTLA_Item( SI_XNAP_DT_GTPTLA_Item * data);

int __si_xnap_Encode_GTPTLA_Item( SI_XNAP_DT_GTPTLA_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_F1CTrafficContainer( SI_XNAP_DT_F1CTrafficContainer ** data);

void __si_xnap_init_F1CTrafficContainer2( SI_XNAP_DT_F1CTrafficContainer ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_F1CTrafficContainer( char * key, SI_XNAP_DT_F1CTrafficContainer * data, int lvl);

void __si_xnap_memfree_F1CTrafficContainer( SI_XNAP_DT_F1CTrafficContainer * data);

int __si_xnap_Encode_F1CTrafficContainer( SI_XNAP_DT_F1CTrafficContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_F1_terminatingIAB_donorIndicator( char * key, uint8_t eF1_terminatingIAB_donorIndicator, int lvl);

int __si_xnap_Encode_F1_terminatingIAB_donorIndicator( uint8_t eF1_terminatingIAB_donorIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_F1TerminatingBHInformation_List( SI_XNAP_DT_F1TerminatingBHInformation_List ** data);

void __si_xnap_debug_F1TerminatingBHInformation_List( char * key, SI_XNAP_DT_F1TerminatingBHInformation_List * data, int lvl);

void __si_xnap_memfree_F1TerminatingBHInformation_List( SI_XNAP_DT_F1TerminatingBHInformation_List * data);

int __si_xnap_Encode_F1TerminatingBHInformation_List( SI_XNAP_DT_F1TerminatingBHInformation_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_F1_TerminatingTopologyBHInformation( SI_XNAP_DT_F1_TerminatingTopologyBHInformation ** data);

void __si_xnap_debug_F1_TerminatingTopologyBHInformation( char * key, SI_XNAP_DT_F1_TerminatingTopologyBHInformation * data, int lvl);

void __si_xnap_memfree_F1_TerminatingTopologyBHInformation( SI_XNAP_DT_F1_TerminatingTopologyBHInformation * data);

int __si_xnap_Encode_F1_TerminatingTopologyBHInformation( SI_XNAP_DT_F1_TerminatingTopologyBHInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABTNLAddress_iPv4Address( SI_XNAP_DT_IABTNLAddress_iPv4Address ** data);

void __si_xnap_init_IABTNLAddress_iPv4Address2( SI_XNAP_DT_IABTNLAddress_iPv4Address ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_IABTNLAddress_iPv4Address( char * key, SI_XNAP_DT_IABTNLAddress_iPv4Address * data, int lvl);

void __si_xnap_memfree_IABTNLAddress_iPv4Address( SI_XNAP_DT_IABTNLAddress_iPv4Address * data);

int __si_xnap_Encode_IABTNLAddress_iPv4Address( SI_XNAP_DT_IABTNLAddress_iPv4Address * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABTNLAddress_iPv6Address( SI_XNAP_DT_IABTNLAddress_iPv6Address ** data);

void __si_xnap_init_IABTNLAddress_iPv6Address2( SI_XNAP_DT_IABTNLAddress_iPv6Address ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_IABTNLAddress_iPv6Address( char * key, SI_XNAP_DT_IABTNLAddress_iPv6Address * data, int lvl);

void __si_xnap_memfree_IABTNLAddress_iPv6Address( SI_XNAP_DT_IABTNLAddress_iPv6Address * data);

int __si_xnap_Encode_IABTNLAddress_iPv6Address( SI_XNAP_DT_IABTNLAddress_iPv6Address * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABTNLAddress_iPv6Prefix( SI_XNAP_DT_IABTNLAddress_iPv6Prefix ** data);

void __si_xnap_init_IABTNLAddress_iPv6Prefix2( SI_XNAP_DT_IABTNLAddress_iPv6Prefix ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_IABTNLAddress_iPv6Prefix( char * key, SI_XNAP_DT_IABTNLAddress_iPv6Prefix * data, int lvl);

void __si_xnap_memfree_IABTNLAddress_iPv6Prefix( SI_XNAP_DT_IABTNLAddress_iPv6Prefix * data);

int __si_xnap_Encode_IABTNLAddress_iPv6Prefix( SI_XNAP_DT_IABTNLAddress_iPv6Prefix * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABTNLAddress( SI_XNAP_DT_IABTNLAddress ** data);

void __si_xnap_debug_IABTNLAddress( char * key, SI_XNAP_DT_IABTNLAddress * data, int lvl);

void __si_xnap_memfree_IABTNLAddress( SI_XNAP_DT_IABTNLAddress * data);

int __si_xnap_Encode_IABTNLAddress( SI_XNAP_DT_IABTNLAddress * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ULF1Terminating_BHInfo( SI_XNAP_DT_ULF1Terminating_BHInfo ** data);

void __si_xnap_debug_ULF1Terminating_BHInfo( char * key, SI_XNAP_DT_ULF1Terminating_BHInfo * data, int lvl);

void __si_xnap_memfree_ULF1Terminating_BHInfo( SI_XNAP_DT_ULF1Terminating_BHInfo * data);

int __si_xnap_Encode_ULF1Terminating_BHInfo( SI_XNAP_DT_ULF1Terminating_BHInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_F1TerminatingBHInformation_Item( SI_XNAP_DT_F1TerminatingBHInformation_Item ** data);

void __si_xnap_debug_F1TerminatingBHInformation_Item( char * key, SI_XNAP_DT_F1TerminatingBHInformation_Item * data, int lvl);

void __si_xnap_memfree_F1TerminatingBHInformation_Item( SI_XNAP_DT_F1TerminatingBHInformation_Item * data);

int __si_xnap_Encode_F1TerminatingBHInformation_Item( SI_XNAP_DT_F1TerminatingBHInformation_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_FiveGCMobilityRestrictionListContainer( SI_XNAP_DT_FiveGCMobilityRestrictionListContainer ** data);

void __si_xnap_init_FiveGCMobilityRestrictionListContainer2( SI_XNAP_DT_FiveGCMobilityRestrictionListContainer ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_FiveGCMobilityRestrictionListContainer( char * key, SI_XNAP_DT_FiveGCMobilityRestrictionListContainer * data, int lvl);

void __si_xnap_memfree_FiveGCMobilityRestrictionListContainer( SI_XNAP_DT_FiveGCMobilityRestrictionListContainer * data);

int __si_xnap_Encode_FiveGCMobilityRestrictionListContainer( SI_XNAP_DT_FiveGCMobilityRestrictionListContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_FiveGProSeDirectDiscovery( char * key, uint8_t eFiveGProSeDirectDiscovery, int lvl);

int __si_xnap_Encode_FiveGProSeDirectDiscovery( uint8_t eFiveGProSeDirectDiscovery, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_FiveGProSeDirectCommunication( char * key, uint8_t eFiveGProSeDirectCommunication, int lvl);

int __si_xnap_Encode_FiveGProSeDirectCommunication( uint8_t eFiveGProSeDirectCommunication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_FiveGProSeLayer2UEtoNetworkRelay( char * key, uint8_t eFiveGProSeLayer2UEtoNetworkRelay, int lvl);

int __si_xnap_Encode_FiveGProSeLayer2UEtoNetworkRelay( uint8_t eFiveGProSeLayer2UEtoNetworkRelay, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_FiveGProSeLayer3UEtoNetworkRelay( char * key, uint8_t eFiveGProSeLayer3UEtoNetworkRelay, int lvl);

int __si_xnap_Encode_FiveGProSeLayer3UEtoNetworkRelay( uint8_t eFiveGProSeLayer3UEtoNetworkRelay, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_FiveGProSeLayer2RemoteUE( char * key, uint8_t eFiveGProSeLayer2RemoteUE, int lvl);

int __si_xnap_Encode_FiveGProSeLayer2RemoteUE( uint8_t eFiveGProSeLayer2RemoteUE, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_FiveGProSeAuthorized( SI_XNAP_DT_FiveGProSeAuthorized ** data);

void __si_xnap_debug_FiveGProSeAuthorized( char * key, SI_XNAP_DT_FiveGProSeAuthorized * data, int lvl);

void __si_xnap_memfree_FiveGProSeAuthorized( SI_XNAP_DT_FiveGProSeAuthorized * data);

int __si_xnap_Encode_FiveGProSeAuthorized( SI_XNAP_DT_FiveGProSeAuthorized * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_FiveGProSeLayer2Multipath( char * key, uint8_t eFiveGProSeLayer2Multipath, int lvl);

int __si_xnap_Encode_FiveGProSeLayer2Multipath( uint8_t eFiveGProSeLayer2Multipath, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_FiveGProSeLayer2UEtoUERelay( char * key, uint8_t eFiveGProSeLayer2UEtoUERelay, int lvl);

int __si_xnap_Encode_FiveGProSeLayer2UEtoUERelay( uint8_t eFiveGProSeLayer2UEtoUERelay, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_FiveGProSeLayer2UEtoUERemote( char * key, uint8_t eFiveGProSeLayer2UEtoUERemote, int lvl);

int __si_xnap_Encode_FiveGProSeLayer2UEtoUERemote( uint8_t eFiveGProSeLayer2UEtoUERemote, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_FiveGProSePC5QoSFlowList( SI_XNAP_DT_FiveGProSePC5QoSFlowList ** data);

void __si_xnap_debug_FiveGProSePC5QoSFlowList( char * key, SI_XNAP_DT_FiveGProSePC5QoSFlowList * data, int lvl);

void __si_xnap_memfree_FiveGProSePC5QoSFlowList( SI_XNAP_DT_FiveGProSePC5QoSFlowList * data);

int __si_xnap_Encode_FiveGProSePC5QoSFlowList( SI_XNAP_DT_FiveGProSePC5QoSFlowList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_FiveGProSePC5QoSParameters( SI_XNAP_DT_FiveGProSePC5QoSParameters ** data);

void __si_xnap_debug_FiveGProSePC5QoSParameters( char * key, SI_XNAP_DT_FiveGProSePC5QoSParameters * data, int lvl);

void __si_xnap_memfree_FiveGProSePC5QoSParameters( SI_XNAP_DT_FiveGProSePC5QoSParameters * data);

int __si_xnap_Encode_FiveGProSePC5QoSParameters( SI_XNAP_DT_FiveGProSePC5QoSParameters * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_FiveGProSePC5FlowBitRates( SI_XNAP_DT_FiveGProSePC5FlowBitRates ** data);

void __si_xnap_debug_FiveGProSePC5FlowBitRates( char * key, SI_XNAP_DT_FiveGProSePC5FlowBitRates * data, int lvl);

void __si_xnap_memfree_FiveGProSePC5FlowBitRates( SI_XNAP_DT_FiveGProSePC5FlowBitRates * data);

int __si_xnap_Encode_FiveGProSePC5FlowBitRates( SI_XNAP_DT_FiveGProSePC5FlowBitRates * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_FiveGProSePC5QoSFlowItem( SI_XNAP_DT_FiveGProSePC5QoSFlowItem ** data);

void __si_xnap_debug_FiveGProSePC5QoSFlowItem( char * key, SI_XNAP_DT_FiveGProSePC5QoSFlowItem * data, int lvl);

void __si_xnap_memfree_FiveGProSePC5QoSFlowItem( SI_XNAP_DT_FiveGProSePC5QoSFlowItem * data);

int __si_xnap_Encode_FiveGProSePC5QoSFlowItem( SI_XNAP_DT_FiveGProSePC5QoSFlowItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Flows_Mapped_To_DRB_List( SI_XNAP_DT_Flows_Mapped_To_DRB_List ** data);

void __si_xnap_debug_Flows_Mapped_To_DRB_List( char * key, SI_XNAP_DT_Flows_Mapped_To_DRB_List * data, int lvl);

void __si_xnap_memfree_Flows_Mapped_To_DRB_List( SI_XNAP_DT_Flows_Mapped_To_DRB_List * data);

int __si_xnap_Encode_Flows_Mapped_To_DRB_List( SI_XNAP_DT_Flows_Mapped_To_DRB_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NonDynamic5QIDescriptor( SI_XNAP_DT_NonDynamic5QIDescriptor ** data);

void __si_xnap_debug_NonDynamic5QIDescriptor( char * key, SI_XNAP_DT_NonDynamic5QIDescriptor * data, int lvl);

void __si_xnap_memfree_NonDynamic5QIDescriptor( SI_XNAP_DT_NonDynamic5QIDescriptor * data);

int __si_xnap_Encode_NonDynamic5QIDescriptor( SI_XNAP_DT_NonDynamic5QIDescriptor * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSCharacteristics( SI_XNAP_DT_QoSCharacteristics ** data);

void __si_xnap_debug_QoSCharacteristics( char * key, SI_XNAP_DT_QoSCharacteristics * data, int lvl);

void __si_xnap_memfree_QoSCharacteristics( SI_XNAP_DT_QoSCharacteristics * data);

int __si_xnap_Encode_QoSCharacteristics( SI_XNAP_DT_QoSCharacteristics * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_GBRQoSFlowInfo_notificationControl( char * key, uint8_t eGBRQoSFlowInfo_notificationControl, int lvl);

int __si_xnap_Encode_GBRQoSFlowInfo_notificationControl( uint8_t eGBRQoSFlowInfo_notificationControl, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PacketLossRate( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_PacketLossRate( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_PacketLossRate( SI_XNAP_DT_PacketLossRate * data);


void __si_xnap_init_GBRQoSFlowInfo( SI_XNAP_DT_GBRQoSFlowInfo ** data);

void __si_xnap_debug_GBRQoSFlowInfo( char * key, SI_XNAP_DT_GBRQoSFlowInfo * data, int lvl);

void __si_xnap_memfree_GBRQoSFlowInfo( SI_XNAP_DT_GBRQoSFlowInfo * data);

int __si_xnap_Encode_GBRQoSFlowInfo( SI_XNAP_DT_GBRQoSFlowInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ReflectiveQoSAttribute( char * key, uint8_t eReflectiveQoSAttribute, int lvl);

int __si_xnap_Encode_ReflectiveQoSAttribute( uint8_t eReflectiveQoSAttribute, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_QoSFlowLevelQoSParameters_additionalQoSflowInfo( char * key, uint8_t eQoSFlowLevelQoSParameters_additionalQoSflowInfo, int lvl);

int __si_xnap_Encode_QoSFlowLevelQoSParameters_additionalQoSflowInfo( uint8_t eQoSFlowLevelQoSParameters_additionalQoSflowInfo, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowLevelQoSParameters( SI_XNAP_DT_QoSFlowLevelQoSParameters ** data);

void __si_xnap_debug_QoSFlowLevelQoSParameters( char * key, SI_XNAP_DT_QoSFlowLevelQoSParameters * data, int lvl);

void __si_xnap_memfree_QoSFlowLevelQoSParameters( SI_XNAP_DT_QoSFlowLevelQoSParameters * data);

int __si_xnap_Encode_QoSFlowLevelQoSParameters( SI_XNAP_DT_QoSFlowLevelQoSParameters * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_QoSFlowMappingIndication( char * key, uint8_t eQoSFlowMappingIndication, int lvl);

int __si_xnap_Encode_QoSFlowMappingIndication( uint8_t eQoSFlowMappingIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Flows_Mapped_To_DRB_Item( SI_XNAP_DT_Flows_Mapped_To_DRB_Item ** data);

void __si_xnap_debug_Flows_Mapped_To_DRB_Item( char * key, SI_XNAP_DT_Flows_Mapped_To_DRB_Item * data, int lvl);

void __si_xnap_memfree_Flows_Mapped_To_DRB_Item( SI_XNAP_DT_Flows_Mapped_To_DRB_Item * data);

int __si_xnap_Encode_Flows_Mapped_To_DRB_Item( SI_XNAP_DT_Flows_Mapped_To_DRB_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_FreqDomainHSNAconfiguration_List( SI_XNAP_DT_FreqDomainHSNAconfiguration_List ** data);

void __si_xnap_debug_FreqDomainHSNAconfiguration_List( char * key, SI_XNAP_DT_FreqDomainHSNAconfiguration_List * data, int lvl);

void __si_xnap_memfree_FreqDomainHSNAconfiguration_List( SI_XNAP_DT_FreqDomainHSNAconfiguration_List * data);

int __si_xnap_Encode_FreqDomainHSNAconfiguration_List( SI_XNAP_DT_FreqDomainHSNAconfiguration_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_FreqDomainHSNAconfigurationListItem_rBsetIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_FreqDomainHSNAconfigurationListItem_rBsetIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_FreqDomainHSNAconfigurationListItem_rBsetIndex( SI_XNAP_DT_FreqDomainHSNAconfigurationListItem_rBsetIndex * data);


void __si_xnap_init_FreqDomainSlotHSNAconfiguration_List( SI_XNAP_DT_FreqDomainSlotHSNAconfiguration_List ** data);

void __si_xnap_debug_FreqDomainSlotHSNAconfiguration_List( char * key, SI_XNAP_DT_FreqDomainSlotHSNAconfiguration_List * data, int lvl);

void __si_xnap_memfree_FreqDomainSlotHSNAconfiguration_List( SI_XNAP_DT_FreqDomainSlotHSNAconfiguration_List * data);

int __si_xnap_Encode_FreqDomainSlotHSNAconfiguration_List( SI_XNAP_DT_FreqDomainSlotHSNAconfiguration_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_FreqDomainHSNAconfiguration_List_Item( SI_XNAP_DT_FreqDomainHSNAconfiguration_List_Item ** data);

void __si_xnap_debug_FreqDomainHSNAconfiguration_List_Item( char * key, SI_XNAP_DT_FreqDomainHSNAconfiguration_List_Item * data, int lvl);

void __si_xnap_memfree_FreqDomainHSNAconfiguration_List_Item( SI_XNAP_DT_FreqDomainHSNAconfiguration_List_Item * data);

int __si_xnap_Encode_FreqDomainHSNAconfiguration_List_Item( SI_XNAP_DT_FreqDomainHSNAconfiguration_List_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_FreqDomainSlotHSNAconfigurationListItem_slotIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_FreqDomainSlotHSNAconfigurationListItem_slotIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_FreqDomainSlotHSNAconfigurationListItem_slotIndex( SI_XNAP_DT_FreqDomainSlotHSNAconfigurationListItem_slotIndex * data);


void __si_xnap_debug_HSNADownlink( char * key, uint8_t eHSNADownlink, int lvl);

int __si_xnap_Encode_HSNADownlink( uint8_t eHSNADownlink, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_HSNAUplink( char * key, uint8_t eHSNAUplink, int lvl);

int __si_xnap_Encode_HSNAUplink( uint8_t eHSNAUplink, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_HSNAFlexible( char * key, uint8_t eHSNAFlexible, int lvl);

int __si_xnap_Encode_HSNAFlexible( uint8_t eHSNAFlexible, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_FreqDomainSlotHSNAconfiguration_List_Item( SI_XNAP_DT_FreqDomainSlotHSNAconfiguration_List_Item ** data);

void __si_xnap_debug_FreqDomainSlotHSNAconfiguration_List_Item( char * key, SI_XNAP_DT_FreqDomainSlotHSNAconfiguration_List_Item * data, int lvl);

void __si_xnap_memfree_FreqDomainSlotHSNAconfiguration_List_Item( SI_XNAP_DT_FreqDomainSlotHSNAconfiguration_List_Item * data);

int __si_xnap_Encode_FreqDomainSlotHSNAconfiguration_List_Item( SI_XNAP_DT_FreqDomainSlotHSNAconfiguration_List_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_FrequencyShift7p5khz( char * key, uint8_t eFrequencyShift7p5khz, int lvl);

int __si_xnap_Encode_FrequencyShift7p5khz( uint8_t eFrequencyShift7p5khz, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SSB_subcarrierSpacing( char * key, uint8_t eSSB_subcarrierSpacing, int lvl);

int __si_xnap_Encode_SSB_subcarrierSpacing( uint8_t eSSB_subcarrierSpacing, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_HSNATransmissionPeriodicity( char * key, uint8_t eHSNATransmissionPeriodicity, int lvl);

int __si_xnap_Encode_HSNATransmissionPeriodicity( uint8_t eHSNATransmissionPeriodicity, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_HSNASlotConfigList( SI_XNAP_DT_HSNASlotConfigList ** data);

void __si_xnap_debug_HSNASlotConfigList( char * key, SI_XNAP_DT_HSNASlotConfigList * data, int lvl);

void __si_xnap_memfree_HSNASlotConfigList( SI_XNAP_DT_HSNASlotConfigList * data);

int __si_xnap_Encode_HSNASlotConfigList( SI_XNAP_DT_HSNASlotConfigList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RBsetConfiguration_rBsetSize( char * key, uint8_t eRBsetConfiguration_rBsetSize, int lvl);

int __si_xnap_Encode_RBsetConfiguration_rBsetSize( uint8_t eRBsetConfiguration_rBsetSize, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RBsetConfiguration_numberofRBSets( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_RBsetConfiguration_numberofRBSets( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_RBsetConfiguration_numberofRBSets( SI_XNAP_DT_RBsetConfiguration_numberofRBSets * data);


void __si_xnap_init_RBsetConfiguration( SI_XNAP_DT_RBsetConfiguration ** data);

void __si_xnap_debug_RBsetConfiguration( char * key, SI_XNAP_DT_RBsetConfiguration * data, int lvl);

void __si_xnap_memfree_RBsetConfiguration( SI_XNAP_DT_RBsetConfiguration * data);

int __si_xnap_Encode_RBsetConfiguration( SI_XNAP_DT_RBsetConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NACellResourceConfigurationList( SI_XNAP_DT_NACellResourceConfigurationList ** data);

void __si_xnap_debug_NACellResourceConfigurationList( char * key, SI_XNAP_DT_NACellResourceConfigurationList * data, int lvl);

void __si_xnap_memfree_NACellResourceConfigurationList( SI_XNAP_DT_NACellResourceConfigurationList * data);

int __si_xnap_Encode_NACellResourceConfigurationList( SI_XNAP_DT_NACellResourceConfigurationList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GNB_DU_Cell_Resource_Configuration( SI_XNAP_DT_GNB_DU_Cell_Resource_Configuration ** data);

void __si_xnap_debug_GNB_DU_Cell_Resource_Configuration( char * key, SI_XNAP_DT_GNB_DU_Cell_Resource_Configuration * data, int lvl);

void __si_xnap_memfree_GNB_DU_Cell_Resource_Configuration( SI_XNAP_DT_GNB_DU_Cell_Resource_Configuration * data);

int __si_xnap_Encode_GNB_DU_Cell_Resource_Configuration( SI_XNAP_DT_GNB_DU_Cell_Resource_Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GUAMI_amf_region_id( SI_XNAP_DT_GUAMI_amf_region_id ** data);

void __si_xnap_init_GUAMI_amf_region_id2( SI_XNAP_DT_GUAMI_amf_region_id ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_GUAMI_amf_region_id( char * key, SI_XNAP_DT_GUAMI_amf_region_id * data, int lvl);

void __si_xnap_memfree_GUAMI_amf_region_id( SI_XNAP_DT_GUAMI_amf_region_id * data);

int __si_xnap_Encode_GUAMI_amf_region_id( SI_XNAP_DT_GUAMI_amf_region_id * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GUAMI_amf_set_id( SI_XNAP_DT_GUAMI_amf_set_id ** data);

void __si_xnap_init_GUAMI_amf_set_id2( SI_XNAP_DT_GUAMI_amf_set_id ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_GUAMI_amf_set_id( char * key, SI_XNAP_DT_GUAMI_amf_set_id * data, int lvl);

void __si_xnap_memfree_GUAMI_amf_set_id( SI_XNAP_DT_GUAMI_amf_set_id * data);

int __si_xnap_Encode_GUAMI_amf_set_id( SI_XNAP_DT_GUAMI_amf_set_id * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GUAMI_amf_pointer( SI_XNAP_DT_GUAMI_amf_pointer ** data);

void __si_xnap_init_GUAMI_amf_pointer2( SI_XNAP_DT_GUAMI_amf_pointer ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_GUAMI_amf_pointer( char * key, SI_XNAP_DT_GUAMI_amf_pointer * data, int lvl);

void __si_xnap_memfree_GUAMI_amf_pointer( SI_XNAP_DT_GUAMI_amf_pointer * data);

int __si_xnap_Encode_GUAMI_amf_pointer( SI_XNAP_DT_GUAMI_amf_pointer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GUAMI( SI_XNAP_DT_GUAMI ** data);

void __si_xnap_debug_GUAMI( char * key, SI_XNAP_DT_GUAMI * data, int lvl);

void __si_xnap_memfree_GUAMI( SI_XNAP_DT_GUAMI * data);

int __si_xnap_Encode_GUAMI( SI_XNAP_DT_GUAMI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_HandoverReportType( char * key, uint8_t eHandoverReportType, int lvl);

int __si_xnap_Encode_HandoverReportType( uint8_t eHandoverReportType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_HashedUEIdentityIndexValue( SI_XNAP_DT_HashedUEIdentityIndexValue ** data);

void __si_xnap_init_HashedUEIdentityIndexValue2( SI_XNAP_DT_HashedUEIdentityIndexValue ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_HashedUEIdentityIndexValue( char * key, SI_XNAP_DT_HashedUEIdentityIndexValue * data, int lvl);

void __si_xnap_memfree_HashedUEIdentityIndexValue( SI_XNAP_DT_HashedUEIdentityIndexValue * data);

int __si_xnap_Encode_HashedUEIdentityIndexValue( SI_XNAP_DT_HashedUEIdentityIndexValue * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_HSNASlotConfigItem( SI_XNAP_DT_HSNASlotConfigItem ** data);

void __si_xnap_debug_HSNASlotConfigItem( char * key, SI_XNAP_DT_HSNASlotConfigItem * data, int lvl);

void __si_xnap_memfree_HSNASlotConfigItem( SI_XNAP_DT_HSNASlotConfigItem * data);

int __si_xnap_Encode_HSNASlotConfigItem( SI_XNAP_DT_HSNASlotConfigItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABCellInformation_cSI_RS_Configuration( SI_XNAP_DT_IABCellInformation_cSI_RS_Configuration ** data);

void __si_xnap_init_IABCellInformation_cSI_RS_Configuration2( SI_XNAP_DT_IABCellInformation_cSI_RS_Configuration ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_IABCellInformation_cSI_RS_Configuration( char * key, SI_XNAP_DT_IABCellInformation_cSI_RS_Configuration * data, int lvl);

void __si_xnap_memfree_IABCellInformation_cSI_RS_Configuration( SI_XNAP_DT_IABCellInformation_cSI_RS_Configuration * data);

int __si_xnap_Encode_IABCellInformation_cSI_RS_Configuration( SI_XNAP_DT_IABCellInformation_cSI_RS_Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABCellInformation_sR_Configuration( SI_XNAP_DT_IABCellInformation_sR_Configuration ** data);

void __si_xnap_init_IABCellInformation_sR_Configuration2( SI_XNAP_DT_IABCellInformation_sR_Configuration ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_IABCellInformation_sR_Configuration( char * key, SI_XNAP_DT_IABCellInformation_sR_Configuration * data, int lvl);

void __si_xnap_memfree_IABCellInformation_sR_Configuration( SI_XNAP_DT_IABCellInformation_sR_Configuration * data);

int __si_xnap_Encode_IABCellInformation_sR_Configuration( SI_XNAP_DT_IABCellInformation_sR_Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABCellInformation_pDCCH_ConfigSIB1( SI_XNAP_DT_IABCellInformation_pDCCH_ConfigSIB1 ** data);

void __si_xnap_init_IABCellInformation_pDCCH_ConfigSIB12( SI_XNAP_DT_IABCellInformation_pDCCH_ConfigSIB1 ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_IABCellInformation_pDCCH_ConfigSIB1( char * key, SI_XNAP_DT_IABCellInformation_pDCCH_ConfigSIB1 * data, int lvl);

void __si_xnap_memfree_IABCellInformation_pDCCH_ConfigSIB1( SI_XNAP_DT_IABCellInformation_pDCCH_ConfigSIB1 * data);

int __si_xnap_Encode_IABCellInformation_pDCCH_ConfigSIB1( SI_XNAP_DT_IABCellInformation_pDCCH_ConfigSIB1 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABCellInformation_sCS_Common( SI_XNAP_DT_IABCellInformation_sCS_Common ** data);

void __si_xnap_init_IABCellInformation_sCS_Common2( SI_XNAP_DT_IABCellInformation_sCS_Common ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_IABCellInformation_sCS_Common( char * key, SI_XNAP_DT_IABCellInformation_sCS_Common * data, int lvl);

void __si_xnap_memfree_IABCellInformation_sCS_Common( SI_XNAP_DT_IABCellInformation_sCS_Common * data);

int __si_xnap_Encode_IABCellInformation_sCS_Common( SI_XNAP_DT_IABCellInformation_sCS_Common * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRCarrierList( SI_XNAP_DT_NRCarrierList ** data);

void __si_xnap_debug_NRCarrierList( char * key, SI_XNAP_DT_NRCarrierList * data, int lvl);

void __si_xnap_memfree_NRCarrierList( SI_XNAP_DT_NRCarrierList * data);

int __si_xnap_Encode_NRCarrierList( SI_XNAP_DT_NRCarrierList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IAB_DU_Cell_Resource_Configuration_TDD_Info( SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_TDD_Info ** data);

void __si_xnap_debug_IAB_DU_Cell_Resource_Configuration_TDD_Info( char * key, SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_TDD_Info * data, int lvl);

void __si_xnap_memfree_IAB_DU_Cell_Resource_Configuration_TDD_Info( SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_TDD_Info * data);

int __si_xnap_Encode_IAB_DU_Cell_Resource_Configuration_TDD_Info( SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_TDD_Info * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IAB_DU_Cell_Resource_Configuration_FDD_Info( SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_FDD_Info ** data);

void __si_xnap_debug_IAB_DU_Cell_Resource_Configuration_FDD_Info( char * key, SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_FDD_Info * data, int lvl);

void __si_xnap_memfree_IAB_DU_Cell_Resource_Configuration_FDD_Info( SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_FDD_Info * data);

int __si_xnap_Encode_IAB_DU_Cell_Resource_Configuration_FDD_Info( SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_FDD_Info * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IAB_DU_Cell_Resource_Configuration_Mode_Info( SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_Mode_Info ** data);

void __si_xnap_debug_IAB_DU_Cell_Resource_Configuration_Mode_Info( char * key, SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_Mode_Info * data, int lvl);

void __si_xnap_memfree_IAB_DU_Cell_Resource_Configuration_Mode_Info( SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_Mode_Info * data);

int __si_xnap_Encode_IAB_DU_Cell_Resource_Configuration_Mode_Info( SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_Mode_Info * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IAB_STC_Info_List( SI_XNAP_DT_IAB_STC_Info_List ** data);

void __si_xnap_debug_IAB_STC_Info_List( char * key, SI_XNAP_DT_IAB_STC_Info_List * data, int lvl);

void __si_xnap_memfree_IAB_STC_Info_List( SI_XNAP_DT_IAB_STC_Info_List * data);

int __si_xnap_Encode_IAB_STC_Info_List( SI_XNAP_DT_IAB_STC_Info_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IAB_STC_Info( SI_XNAP_DT_IAB_STC_Info ** data);

void __si_xnap_debug_IAB_STC_Info( char * key, SI_XNAP_DT_IAB_STC_Info * data, int lvl);

void __si_xnap_memfree_IAB_STC_Info( SI_XNAP_DT_IAB_STC_Info * data);

int __si_xnap_Encode_IAB_STC_Info( SI_XNAP_DT_IAB_STC_Info * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RACH_Config_Common( SI_XNAP_DT_RACH_Config_Common ** data);

void __si_xnap_init_RACH_Config_Common2( SI_XNAP_DT_RACH_Config_Common ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_RACH_Config_Common( char * key, SI_XNAP_DT_RACH_Config_Common * data, int lvl);

void __si_xnap_memfree_RACH_Config_Common( SI_XNAP_DT_RACH_Config_Common * data);

int __si_xnap_Encode_RACH_Config_Common( SI_XNAP_DT_RACH_Config_Common * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RACH_Config_Common_IAB( SI_XNAP_DT_RACH_Config_Common_IAB ** data);

void __si_xnap_init_RACH_Config_Common_IAB2( SI_XNAP_DT_RACH_Config_Common_IAB ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_RACH_Config_Common_IAB( char * key, SI_XNAP_DT_RACH_Config_Common_IAB * data, int lvl);

void __si_xnap_memfree_RACH_Config_Common_IAB( SI_XNAP_DT_RACH_Config_Common_IAB * data);

int __si_xnap_Encode_RACH_Config_Common_IAB( SI_XNAP_DT_RACH_Config_Common_IAB * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IAB_MT_Cell_List( SI_XNAP_DT_IAB_MT_Cell_List ** data);

void __si_xnap_debug_IAB_MT_Cell_List( char * key, SI_XNAP_DT_IAB_MT_Cell_List * data, int lvl);

void __si_xnap_memfree_IAB_MT_Cell_List( SI_XNAP_DT_IAB_MT_Cell_List * data);

int __si_xnap_Encode_IAB_MT_Cell_List( SI_XNAP_DT_IAB_MT_Cell_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MultiplexingInfo( SI_XNAP_DT_MultiplexingInfo ** data);

void __si_xnap_debug_MultiplexingInfo( char * key, SI_XNAP_DT_MultiplexingInfo * data, int lvl);

void __si_xnap_memfree_MultiplexingInfo( SI_XNAP_DT_MultiplexingInfo * data);

int __si_xnap_Encode_MultiplexingInfo( SI_XNAP_DT_MultiplexingInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABCellInformation( SI_XNAP_DT_IABCellInformation ** data);

void __si_xnap_debug_IABCellInformation( char * key, SI_XNAP_DT_IABCellInformation * data, int lvl);

void __si_xnap_memfree_IABCellInformation( SI_XNAP_DT_IABCellInformation * data);

int __si_xnap_Encode_IABCellInformation( SI_XNAP_DT_IABCellInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IAB_MT_Cell_List_Item( SI_XNAP_DT_IAB_MT_Cell_List_Item ** data);

void __si_xnap_debug_IAB_MT_Cell_List_Item( char * key, SI_XNAP_DT_IAB_MT_Cell_List_Item * data, int lvl);

void __si_xnap_memfree_IAB_MT_Cell_List_Item( SI_XNAP_DT_IAB_MT_Cell_List_Item * data);

int __si_xnap_Encode_IAB_MT_Cell_List_Item( SI_XNAP_DT_IAB_MT_Cell_List_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_IABNodeIndication( char * key, uint8_t eIABNodeIndication, int lvl);

int __si_xnap_Encode_IABNodeIndication( uint8_t eIABNodeIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SSB_freqInfo( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SSB_freqInfo( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SSB_freqInfo( SI_XNAP_DT_SSB_freqInfo * data);


void __si_xnap_debug_SSB_transmissionPeriodicity( char * key, uint8_t eSSB_transmissionPeriodicity, int lvl);

int __si_xnap_Encode_SSB_transmissionPeriodicity( uint8_t eSSB_transmissionPeriodicity, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SSB_transmissionTimingOffset( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SSB_transmissionTimingOffset( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SSB_transmissionTimingOffset( SI_XNAP_DT_SSB_transmissionTimingOffset * data);


void __si_xnap_init_SSBtransmissionBitmap_shortBitmap( SI_XNAP_DT_SSBtransmissionBitmap_shortBitmap ** data);

void __si_xnap_init_SSBtransmissionBitmap_shortBitmap2( SI_XNAP_DT_SSBtransmissionBitmap_shortBitmap ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_SSBtransmissionBitmap_shortBitmap( char * key, SI_XNAP_DT_SSBtransmissionBitmap_shortBitmap * data, int lvl);

void __si_xnap_memfree_SSBtransmissionBitmap_shortBitmap( SI_XNAP_DT_SSBtransmissionBitmap_shortBitmap * data);

int __si_xnap_Encode_SSBtransmissionBitmap_shortBitmap( SI_XNAP_DT_SSBtransmissionBitmap_shortBitmap * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SSBtransmissionBitmap_mediumBitmap( SI_XNAP_DT_SSBtransmissionBitmap_mediumBitmap ** data);

void __si_xnap_init_SSBtransmissionBitmap_mediumBitmap2( SI_XNAP_DT_SSBtransmissionBitmap_mediumBitmap ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_SSBtransmissionBitmap_mediumBitmap( char * key, SI_XNAP_DT_SSBtransmissionBitmap_mediumBitmap * data, int lvl);

void __si_xnap_memfree_SSBtransmissionBitmap_mediumBitmap( SI_XNAP_DT_SSBtransmissionBitmap_mediumBitmap * data);

int __si_xnap_Encode_SSBtransmissionBitmap_mediumBitmap( SI_XNAP_DT_SSBtransmissionBitmap_mediumBitmap * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SSBtransmissionBitmap_longBitmap( SI_XNAP_DT_SSBtransmissionBitmap_longBitmap ** data);

void __si_xnap_init_SSBtransmissionBitmap_longBitmap2( SI_XNAP_DT_SSBtransmissionBitmap_longBitmap ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_SSBtransmissionBitmap_longBitmap( char * key, SI_XNAP_DT_SSBtransmissionBitmap_longBitmap * data, int lvl);

void __si_xnap_memfree_SSBtransmissionBitmap_longBitmap( SI_XNAP_DT_SSBtransmissionBitmap_longBitmap * data);

int __si_xnap_Encode_SSBtransmissionBitmap_longBitmap( SI_XNAP_DT_SSBtransmissionBitmap_longBitmap * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SSB_transmissionBitmap( SI_XNAP_DT_SSB_transmissionBitmap ** data);

void __si_xnap_debug_SSB_transmissionBitmap( char * key, SI_XNAP_DT_SSB_transmissionBitmap * data, int lvl);

void __si_xnap_memfree_SSB_transmissionBitmap( SI_XNAP_DT_SSB_transmissionBitmap * data);

int __si_xnap_Encode_SSB_transmissionBitmap( SI_XNAP_DT_SSB_transmissionBitmap * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IAB_STC_Info_Item( SI_XNAP_DT_IAB_STC_Info_Item ** data);

void __si_xnap_debug_IAB_STC_Info_Item( char * key, SI_XNAP_DT_IAB_STC_Info_Item * data, int lvl);

void __si_xnap_memfree_IAB_STC_Info_Item( SI_XNAP_DT_IAB_STC_Info_Item * data);

int __si_xnap_Encode_IAB_STC_Info_Item( SI_XNAP_DT_IAB_STC_Info_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedAllTraffic( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedAllTraffic( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedAllTraffic( SI_XNAP_DT_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedAllTraffic * data);


void __si_xnap_debug_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1_C( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1_C( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1_C( SI_XNAP_DT_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1_C * data);


void __si_xnap_debug_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1_U( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1_U( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1_U( SI_XNAP_DT_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1_U * data);


void __si_xnap_debug_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedNoNF1( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedNoNF1( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedNoNF1( SI_XNAP_DT_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedNoNF1 * data);


void __si_xnap_init_IABTNLAddressesRequested( SI_XNAP_DT_IABTNLAddressesRequested ** data);

void __si_xnap_debug_IABTNLAddressesRequested( char * key, SI_XNAP_DT_IABTNLAddressesRequested * data, int lvl);

void __si_xnap_memfree_IABTNLAddressesRequested( SI_XNAP_DT_IABTNLAddressesRequested * data);

int __si_xnap_Encode_IABTNLAddressesRequested( SI_XNAP_DT_IABTNLAddressesRequested * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABIPv6RequestType( SI_XNAP_DT_IABIPv6RequestType ** data);

void __si_xnap_debug_IABIPv6RequestType( char * key, SI_XNAP_DT_IABIPv6RequestType * data, int lvl);

void __si_xnap_memfree_IABIPv6RequestType( SI_XNAP_DT_IABIPv6RequestType * data);

int __si_xnap_Encode_IABIPv6RequestType( SI_XNAP_DT_IABIPv6RequestType * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABTNLAddressToRemove_List( SI_XNAP_DT_IABTNLAddressToRemove_List ** data);

void __si_xnap_debug_IABTNLAddressToRemove_List( char * key, SI_XNAP_DT_IABTNLAddressToRemove_List * data, int lvl);

void __si_xnap_memfree_IABTNLAddressToRemove_List( SI_XNAP_DT_IABTNLAddressToRemove_List * data);

int __si_xnap_Encode_IABTNLAddressToRemove_List( SI_XNAP_DT_IABTNLAddressToRemove_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IAB_TNL_Address_Request( SI_XNAP_DT_IAB_TNL_Address_Request ** data);

void __si_xnap_debug_IAB_TNL_Address_Request( char * key, SI_XNAP_DT_IAB_TNL_Address_Request * data, int lvl);

void __si_xnap_memfree_IAB_TNL_Address_Request( SI_XNAP_DT_IAB_TNL_Address_Request * data);

int __si_xnap_Encode_IAB_TNL_Address_Request( SI_XNAP_DT_IAB_TNL_Address_Request * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABAllocatedTNLAddress_List( SI_XNAP_DT_IABAllocatedTNLAddress_List ** data);

void __si_xnap_debug_IABAllocatedTNLAddress_List( char * key, SI_XNAP_DT_IABAllocatedTNLAddress_List * data, int lvl);

void __si_xnap_memfree_IABAllocatedTNLAddress_List( SI_XNAP_DT_IABAllocatedTNLAddress_List * data);

int __si_xnap_Encode_IABAllocatedTNLAddress_List( SI_XNAP_DT_IABAllocatedTNLAddress_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IAB_TNL_Address_Response( SI_XNAP_DT_IAB_TNL_Address_Response ** data);

void __si_xnap_debug_IAB_TNL_Address_Response( char * key, SI_XNAP_DT_IAB_TNL_Address_Response * data, int lvl);

void __si_xnap_memfree_IAB_TNL_Address_Response( SI_XNAP_DT_IAB_TNL_Address_Response * data);

int __si_xnap_Encode_IAB_TNL_Address_Response( SI_XNAP_DT_IAB_TNL_Address_Response * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_IABTNLAddressUsage( char * key, uint8_t eIABTNLAddressUsage, int lvl);

int __si_xnap_Encode_IABTNLAddressUsage( uint8_t eIABTNLAddressUsage, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABAllocatedTNLAddress_Item( SI_XNAP_DT_IABAllocatedTNLAddress_Item ** data);

void __si_xnap_debug_IABAllocatedTNLAddress_Item( char * key, SI_XNAP_DT_IABAllocatedTNLAddress_Item * data, int lvl);

void __si_xnap_memfree_IABAllocatedTNLAddress_Item( SI_XNAP_DT_IABAllocatedTNLAddress_Item * data);

int __si_xnap_Encode_IABAllocatedTNLAddress_Item( SI_XNAP_DT_IABAllocatedTNLAddress_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABTNLAddressToRemove_Item( SI_XNAP_DT_IABTNLAddressToRemove_Item ** data);

void __si_xnap_debug_IABTNLAddressToRemove_Item( char * key, SI_XNAP_DT_IABTNLAddressToRemove_Item * data, int lvl);

void __si_xnap_memfree_IABTNLAddressToRemove_Item( SI_XNAP_DT_IABTNLAddressToRemove_Item * data);

int __si_xnap_Encode_IABTNLAddressToRemove_Item( SI_XNAP_DT_IABTNLAddressToRemove_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABTNLAddressException( SI_XNAP_DT_IABTNLAddressException ** data);

void __si_xnap_debug_IABTNLAddressException( char * key, SI_XNAP_DT_IABTNLAddressException * data, int lvl);

void __si_xnap_memfree_IABTNLAddressException( SI_XNAP_DT_IABTNLAddressException * data);

int __si_xnap_Encode_IABTNLAddressException( SI_XNAP_DT_IABTNLAddressException * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{IABTNLAddress-ItemExtIEs}}<- Got NULL  L:7520

void __si_xnap_init_IABTNLAddress_Item( SI_XNAP_DT_IABTNLAddress_Item ** data);

void __si_xnap_debug_IABTNLAddress_Item( char * key, SI_XNAP_DT_IABTNLAddress_Item * data, int lvl);

void __si_xnap_memfree_IABTNLAddress_Item( SI_XNAP_DT_IABTNLAddress_Item * data);

int __si_xnap_Encode_IABTNLAddress_Item( SI_XNAP_DT_IABTNLAddress_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MeasurementsToActivate( SI_XNAP_DT_MeasurementsToActivate ** data);

void __si_xnap_init_MeasurementsToActivate2( SI_XNAP_DT_MeasurementsToActivate ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_MeasurementsToActivate( char * key, SI_XNAP_DT_MeasurementsToActivate * data, int lvl);

void __si_xnap_memfree_MeasurementsToActivate( SI_XNAP_DT_MeasurementsToActivate * data);

int __si_xnap_Encode_MeasurementsToActivate( SI_XNAP_DT_MeasurementsToActivate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_M1ReportingTrigger( char * key, uint8_t eM1ReportingTrigger, int lvl);

int __si_xnap_Encode_M1ReportingTrigger( uint8_t eM1ReportingTrigger, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_Threshold_SINR( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_Threshold_SINR( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_Threshold_SINR( SI_XNAP_DT_Threshold_SINR * data);


void __si_xnap_init_MeasurementThresholdA2( SI_XNAP_DT_MeasurementThresholdA2 ** data);

void __si_xnap_debug_MeasurementThresholdA2( char * key, SI_XNAP_DT_MeasurementThresholdA2 * data, int lvl);

void __si_xnap_memfree_MeasurementThresholdA2( SI_XNAP_DT_MeasurementThresholdA2 * data);

int __si_xnap_Encode_MeasurementThresholdA2( SI_XNAP_DT_MeasurementThresholdA2 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_M1ThresholdEventA2( SI_XNAP_DT_M1ThresholdEventA2 ** data);

void __si_xnap_debug_M1ThresholdEventA2( char * key, SI_XNAP_DT_M1ThresholdEventA2 * data, int lvl);

void __si_xnap_memfree_M1ThresholdEventA2( SI_XNAP_DT_M1ThresholdEventA2 * data);

int __si_xnap_Encode_M1ThresholdEventA2( SI_XNAP_DT_M1ThresholdEventA2 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ReportIntervalMDT( char * key, uint8_t eReportIntervalMDT, int lvl);

int __si_xnap_Encode_ReportIntervalMDT( uint8_t eReportIntervalMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ReportAmountMDT( char * key, uint8_t eReportAmountMDT, int lvl);

int __si_xnap_Encode_ReportAmountMDT( uint8_t eReportAmountMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_M1PeriodicReporting( SI_XNAP_DT_M1PeriodicReporting ** data);

void __si_xnap_debug_M1PeriodicReporting( char * key, SI_XNAP_DT_M1PeriodicReporting * data, int lvl);

void __si_xnap_memfree_M1PeriodicReporting( SI_XNAP_DT_M1PeriodicReporting * data);

int __si_xnap_Encode_M1PeriodicReporting( SI_XNAP_DT_M1PeriodicReporting * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_M1Configuration( SI_XNAP_DT_M1Configuration ** data);

void __si_xnap_debug_M1Configuration( char * key, SI_XNAP_DT_M1Configuration * data, int lvl);

void __si_xnap_memfree_M1Configuration( SI_XNAP_DT_M1Configuration * data);

int __si_xnap_Encode_M1Configuration( SI_XNAP_DT_M1Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_M4period( char * key, uint8_t eM4period, int lvl);

int __si_xnap_Encode_M4period( uint8_t eM4period, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_Links_to_log( char * key, uint8_t eLinks_to_log, int lvl);

int __si_xnap_Encode_Links_to_log( uint8_t eLinks_to_log, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_M4Configuration( SI_XNAP_DT_M4Configuration ** data);

void __si_xnap_debug_M4Configuration( char * key, SI_XNAP_DT_M4Configuration * data, int lvl);

void __si_xnap_memfree_M4Configuration( SI_XNAP_DT_M4Configuration * data);

int __si_xnap_Encode_M4Configuration( SI_XNAP_DT_M4Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_M5period( char * key, uint8_t eM5period, int lvl);

int __si_xnap_Encode_M5period( uint8_t eM5period, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_M5Configuration( SI_XNAP_DT_M5Configuration ** data);

void __si_xnap_debug_M5Configuration( char * key, SI_XNAP_DT_M5Configuration * data, int lvl);

void __si_xnap_memfree_M5Configuration( SI_XNAP_DT_M5Configuration * data);

int __si_xnap_Encode_M5Configuration( SI_XNAP_DT_M5Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MDT_Location_Info( SI_XNAP_DT_MDT_Location_Info ** data);

void __si_xnap_init_MDT_Location_Info2( SI_XNAP_DT_MDT_Location_Info ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_MDT_Location_Info( char * key, SI_XNAP_DT_MDT_Location_Info * data, int lvl);

void __si_xnap_memfree_MDT_Location_Info( SI_XNAP_DT_MDT_Location_Info * data);

int __si_xnap_Encode_MDT_Location_Info( SI_XNAP_DT_MDT_Location_Info * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_M6report_Interval( char * key, uint8_t eM6report_Interval, int lvl);

int __si_xnap_Encode_M6report_Interval( uint8_t eM6report_Interval, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_M6Configuration( SI_XNAP_DT_M6Configuration ** data);

void __si_xnap_debug_M6Configuration( char * key, SI_XNAP_DT_M6Configuration * data, int lvl);

void __si_xnap_memfree_M6Configuration( SI_XNAP_DT_M6Configuration * data);

int __si_xnap_Encode_M6Configuration( SI_XNAP_DT_M6Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_M7period( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_M7period( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_M7period( SI_XNAP_DT_M7period * data);


void __si_xnap_init_M7Configuration( SI_XNAP_DT_M7Configuration ** data);

void __si_xnap_debug_M7Configuration( char * key, SI_XNAP_DT_M7Configuration * data, int lvl);

void __si_xnap_memfree_M7Configuration( SI_XNAP_DT_M7Configuration * data);

int __si_xnap_Encode_M7Configuration( SI_XNAP_DT_M7Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_WLANMeasConfig( char * key, uint8_t eWLANMeasConfig, int lvl);

int __si_xnap_Encode_WLANMeasConfig( uint8_t eWLANMeasConfig, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_WLANMeasConfigNameList( SI_XNAP_DT_WLANMeasConfigNameList ** data);

void __si_xnap_debug_WLANMeasConfigNameList( char * key, SI_XNAP_DT_WLANMeasConfigNameList * data, int lvl);

void __si_xnap_memfree_WLANMeasConfigNameList( SI_XNAP_DT_WLANMeasConfigNameList * data);

int __si_xnap_Encode_WLANMeasConfigNameList( SI_XNAP_DT_WLANMeasConfigNameList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_WLANMeasurementConfiguration_wlan_rssi( char * key, uint8_t eWLANMeasurementConfiguration_wlan_rssi, int lvl);

int __si_xnap_Encode_WLANMeasurementConfiguration_wlan_rssi( uint8_t eWLANMeasurementConfiguration_wlan_rssi, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_WLANMeasurementConfiguration_wlan_rtt( char * key, uint8_t eWLANMeasurementConfiguration_wlan_rtt, int lvl);

int __si_xnap_Encode_WLANMeasurementConfiguration_wlan_rtt( uint8_t eWLANMeasurementConfiguration_wlan_rtt, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_WLANMeasurementConfiguration( SI_XNAP_DT_WLANMeasurementConfiguration ** data);

void __si_xnap_debug_WLANMeasurementConfiguration( char * key, SI_XNAP_DT_WLANMeasurementConfiguration * data, int lvl);

void __si_xnap_memfree_WLANMeasurementConfiguration( SI_XNAP_DT_WLANMeasurementConfiguration * data);

int __si_xnap_Encode_WLANMeasurementConfiguration( SI_XNAP_DT_WLANMeasurementConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SensorMeasConfig( char * key, uint8_t eSensorMeasConfig, int lvl);

int __si_xnap_Encode_SensorMeasConfig( uint8_t eSensorMeasConfig, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SensorMeasConfigNameList( SI_XNAP_DT_SensorMeasConfigNameList ** data);

void __si_xnap_debug_SensorMeasConfigNameList( char * key, SI_XNAP_DT_SensorMeasConfigNameList * data, int lvl);

void __si_xnap_memfree_SensorMeasConfigNameList( SI_XNAP_DT_SensorMeasConfigNameList * data);

int __si_xnap_Encode_SensorMeasConfigNameList( SI_XNAP_DT_SensorMeasConfigNameList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SensorMeasurementConfiguration( SI_XNAP_DT_SensorMeasurementConfiguration ** data);

void __si_xnap_debug_SensorMeasurementConfiguration( char * key, SI_XNAP_DT_SensorMeasurementConfiguration * data, int lvl);

void __si_xnap_memfree_SensorMeasurementConfiguration( SI_XNAP_DT_SensorMeasurementConfiguration * data);

int __si_xnap_Encode_SensorMeasurementConfiguration( SI_XNAP_DT_SensorMeasurementConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ImmediateMDT_NR( SI_XNAP_DT_ImmediateMDT_NR ** data);

void __si_xnap_debug_ImmediateMDT_NR( char * key, SI_XNAP_DT_ImmediateMDT_NR * data, int lvl);

void __si_xnap_memfree_ImmediateMDT_NR( SI_XNAP_DT_ImmediateMDT_NR * data);

int __si_xnap_Encode_ImmediateMDT_NR( SI_XNAP_DT_ImmediateMDT_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NRPCI( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_NRPCI( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_NRPCI( SI_XNAP_DT_NRPCI * data);


void __si_xnap_init_NG_RAN_CellPCI( SI_XNAP_DT_NG_RAN_CellPCI ** data);

void __si_xnap_debug_NG_RAN_CellPCI( char * key, SI_XNAP_DT_NG_RAN_CellPCI * data, int lvl);

void __si_xnap_memfree_NG_RAN_CellPCI( SI_XNAP_DT_NG_RAN_CellPCI * data);

int __si_xnap_Encode_NG_RAN_CellPCI( SI_XNAP_DT_NG_RAN_CellPCI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MAC_I( SI_XNAP_DT_MAC_I ** data);

void __si_xnap_init_MAC_I2( SI_XNAP_DT_MAC_I ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_MAC_I( char * key, SI_XNAP_DT_MAC_I * data, int lvl);

void __si_xnap_memfree_MAC_I( SI_XNAP_DT_MAC_I * data);

int __si_xnap_Encode_MAC_I( SI_XNAP_DT_MAC_I * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RRCReestab_Initiated_Reporting_wo_UERLFReport( SI_XNAP_DT_RRCReestab_Initiated_Reporting_wo_UERLFReport ** data);

void __si_xnap_debug_RRCReestab_Initiated_Reporting_wo_UERLFReport( char * key, SI_XNAP_DT_RRCReestab_Initiated_Reporting_wo_UERLFReport * data, int lvl);

void __si_xnap_memfree_RRCReestab_Initiated_Reporting_wo_UERLFReport( SI_XNAP_DT_RRCReestab_Initiated_Reporting_wo_UERLFReport * data);

int __si_xnap_Encode_RRCReestab_Initiated_Reporting_wo_UERLFReport( SI_XNAP_DT_RRCReestab_Initiated_Reporting_wo_UERLFReport * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UERLFReportContainerNR( SI_XNAP_DT_UERLFReportContainerNR ** data);

void __si_xnap_init_UERLFReportContainerNR2( SI_XNAP_DT_UERLFReportContainerNR ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_UERLFReportContainerNR( char * key, SI_XNAP_DT_UERLFReportContainerNR * data, int lvl);

void __si_xnap_memfree_UERLFReportContainerNR( SI_XNAP_DT_UERLFReportContainerNR * data);

int __si_xnap_Encode_UERLFReportContainerNR( SI_XNAP_DT_UERLFReportContainerNR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UERLFReportContainerLTE( SI_XNAP_DT_UERLFReportContainerLTE ** data);

void __si_xnap_init_UERLFReportContainerLTE2( SI_XNAP_DT_UERLFReportContainerLTE ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_UERLFReportContainerLTE( char * key, SI_XNAP_DT_UERLFReportContainerLTE * data, int lvl);

void __si_xnap_memfree_UERLFReportContainerLTE( SI_XNAP_DT_UERLFReportContainerLTE * data);

int __si_xnap_Encode_UERLFReportContainerLTE( SI_XNAP_DT_UERLFReportContainerLTE * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UERLFReportContainer( SI_XNAP_DT_UERLFReportContainer ** data);

void __si_xnap_debug_UERLFReportContainer( char * key, SI_XNAP_DT_UERLFReportContainer * data, int lvl);

void __si_xnap_memfree_UERLFReportContainer( SI_XNAP_DT_UERLFReportContainer * data);

int __si_xnap_Encode_UERLFReportContainer( SI_XNAP_DT_UERLFReportContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RRCReestab_Initiated_Reporting_with_UERLFReport( SI_XNAP_DT_RRCReestab_Initiated_Reporting_with_UERLFReport ** data);

void __si_xnap_debug_RRCReestab_Initiated_Reporting_with_UERLFReport( char * key, SI_XNAP_DT_RRCReestab_Initiated_Reporting_with_UERLFReport * data, int lvl);

void __si_xnap_memfree_RRCReestab_Initiated_Reporting_with_UERLFReport( SI_XNAP_DT_RRCReestab_Initiated_Reporting_with_UERLFReport * data);

int __si_xnap_Encode_RRCReestab_Initiated_Reporting_with_UERLFReport( SI_XNAP_DT_RRCReestab_Initiated_Reporting_with_UERLFReport * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RRCReestab_Initiated_Reporting( SI_XNAP_DT_RRCReestab_Initiated_Reporting ** data);

void __si_xnap_debug_RRCReestab_Initiated_Reporting( char * key, SI_XNAP_DT_RRCReestab_Initiated_Reporting * data, int lvl);

void __si_xnap_memfree_RRCReestab_Initiated_Reporting( SI_XNAP_DT_RRCReestab_Initiated_Reporting * data);

int __si_xnap_Encode_RRCReestab_Initiated_Reporting( SI_XNAP_DT_RRCReestab_Initiated_Reporting * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RRCReestab_initiated( SI_XNAP_DT_RRCReestab_initiated ** data);

void __si_xnap_debug_RRCReestab_initiated( char * key, SI_XNAP_DT_RRCReestab_initiated * data, int lvl);

void __si_xnap_memfree_RRCReestab_initiated( SI_XNAP_DT_RRCReestab_initiated * data);

int __si_xnap_Encode_RRCReestab_initiated( SI_XNAP_DT_RRCReestab_initiated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RRCSetup_Initiated_Reporting_with_UERLFReport( SI_XNAP_DT_RRCSetup_Initiated_Reporting_with_UERLFReport ** data);

void __si_xnap_debug_RRCSetup_Initiated_Reporting_with_UERLFReport( char * key, SI_XNAP_DT_RRCSetup_Initiated_Reporting_with_UERLFReport * data, int lvl);

void __si_xnap_memfree_RRCSetup_Initiated_Reporting_with_UERLFReport( SI_XNAP_DT_RRCSetup_Initiated_Reporting_with_UERLFReport * data);

int __si_xnap_Encode_RRCSetup_Initiated_Reporting_with_UERLFReport( SI_XNAP_DT_RRCSetup_Initiated_Reporting_with_UERLFReport * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RRCSetup_Initiated_Reporting( SI_XNAP_DT_RRCSetup_Initiated_Reporting ** data);

void __si_xnap_debug_RRCSetup_Initiated_Reporting( char * key, SI_XNAP_DT_RRCSetup_Initiated_Reporting * data, int lvl);

void __si_xnap_memfree_RRCSetup_Initiated_Reporting( SI_XNAP_DT_RRCSetup_Initiated_Reporting * data);

int __si_xnap_Encode_RRCSetup_Initiated_Reporting( SI_XNAP_DT_RRCSetup_Initiated_Reporting * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RRCSetup_initiated( SI_XNAP_DT_RRCSetup_initiated ** data);

void __si_xnap_debug_RRCSetup_initiated( char * key, SI_XNAP_DT_RRCSetup_initiated * data, int lvl);

void __si_xnap_memfree_RRCSetup_initiated( SI_XNAP_DT_RRCSetup_initiated * data);

int __si_xnap_Encode_RRCSetup_initiated( SI_XNAP_DT_RRCSetup_initiated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_InitiatingCondition_FailureIndication( SI_XNAP_DT_InitiatingCondition_FailureIndication ** data);

void __si_xnap_debug_InitiatingCondition_FailureIndication( char * key, SI_XNAP_DT_InitiatingCondition_FailureIndication * data, int lvl);

void __si_xnap_memfree_InitiatingCondition_FailureIndication( SI_XNAP_DT_InitiatingCondition_FailureIndication * data);

int __si_xnap_Encode_InitiatingCondition_FailureIndication( SI_XNAP_DT_InitiatingCondition_FailureIndication * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NRCyclicPrefix( char * key, uint8_t eNRCyclicPrefix, int lvl);

int __si_xnap_Encode_NRCyclicPrefix( uint8_t eNRCyclicPrefix, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NRDL_ULTransmissionPeriodicity( char * key, uint8_t eNRDL_ULTransmissionPeriodicity, int lvl);

int __si_xnap_Encode_NRDL_ULTransmissionPeriodicity( uint8_t eNRDL_ULTransmissionPeriodicity, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SlotConfiguration_List( SI_XNAP_DT_SlotConfiguration_List ** data);

void __si_xnap_debug_SlotConfiguration_List( char * key, SI_XNAP_DT_SlotConfiguration_List * data, int lvl);

void __si_xnap_memfree_SlotConfiguration_List( SI_XNAP_DT_SlotConfiguration_List * data);

int __si_xnap_Encode_SlotConfiguration_List( SI_XNAP_DT_SlotConfiguration_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IntendedTDD_DL_ULConfiguration_NR( SI_XNAP_DT_IntendedTDD_DL_ULConfiguration_NR ** data);

void __si_xnap_debug_IntendedTDD_DL_ULConfiguration_NR( char * key, SI_XNAP_DT_IntendedTDD_DL_ULConfiguration_NR * data, int lvl);

void __si_xnap_memfree_IntendedTDD_DL_ULConfiguration_NR( SI_XNAP_DT_IntendedTDD_DL_ULConfiguration_NR * data);

int __si_xnap_Encode_IntendedTDD_DL_ULConfiguration_NR( SI_XNAP_DT_IntendedTDD_DL_ULConfiguration_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_InterfaceInstanceIndication( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_InterfaceInstanceIndication( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_InterfaceInstanceIndication( SI_XNAP_DT_InterfaceInstanceIndication * data);


void __si_xnap_init_IRNTI_i_RNTI_full( SI_XNAP_DT_IRNTI_i_RNTI_full ** data);

void __si_xnap_init_IRNTI_i_RNTI_full2( SI_XNAP_DT_IRNTI_i_RNTI_full ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_IRNTI_i_RNTI_full( char * key, SI_XNAP_DT_IRNTI_i_RNTI_full * data, int lvl);

void __si_xnap_memfree_IRNTI_i_RNTI_full( SI_XNAP_DT_IRNTI_i_RNTI_full * data);

int __si_xnap_Encode_IRNTI_i_RNTI_full( SI_XNAP_DT_IRNTI_i_RNTI_full * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IRNTI_i_RNTI_short( SI_XNAP_DT_IRNTI_i_RNTI_short ** data);

void __si_xnap_init_IRNTI_i_RNTI_short2( SI_XNAP_DT_IRNTI_i_RNTI_short ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_IRNTI_i_RNTI_short( char * key, SI_XNAP_DT_IRNTI_i_RNTI_short * data, int lvl);

void __si_xnap_memfree_IRNTI_i_RNTI_short( SI_XNAP_DT_IRNTI_i_RNTI_short * data);

int __si_xnap_Encode_IRNTI_i_RNTI_short( SI_XNAP_DT_IRNTI_i_RNTI_short * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_I_RNTI( SI_XNAP_DT_I_RNTI ** data);

void __si_xnap_debug_I_RNTI( char * key, SI_XNAP_DT_I_RNTI * data, int lvl);

void __si_xnap_memfree_I_RNTI( SI_XNAP_DT_I_RNTI * data);

int __si_xnap_Encode_I_RNTI( SI_XNAP_DT_I_RNTI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_IABAuthorizationStatus( char * key, uint8_t eIABAuthorizationStatus, int lvl);

int __si_xnap_Encode_IABAuthorizationStatus( uint8_t eIABAuthorizationStatus, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_FullIRNTIProfileList_full_I_RNTI_Profile_0( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_0 ** data);

void __si_xnap_init_FullIRNTIProfileList_full_I_RNTI_Profile_02( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_0 ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_FullIRNTIProfileList_full_I_RNTI_Profile_0( char * key, SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_0 * data, int lvl);

void __si_xnap_memfree_FullIRNTIProfileList_full_I_RNTI_Profile_0( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_0 * data);

int __si_xnap_Encode_FullIRNTIProfileList_full_I_RNTI_Profile_0( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_0 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_FullIRNTIProfileList_full_I_RNTI_Profile_1( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_1 ** data);

void __si_xnap_init_FullIRNTIProfileList_full_I_RNTI_Profile_12( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_1 ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_FullIRNTIProfileList_full_I_RNTI_Profile_1( char * key, SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_1 * data, int lvl);

void __si_xnap_memfree_FullIRNTIProfileList_full_I_RNTI_Profile_1( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_1 * data);

int __si_xnap_Encode_FullIRNTIProfileList_full_I_RNTI_Profile_1( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_1 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_FullIRNTIProfileList_full_I_RNTI_Profile_2( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_2 ** data);

void __si_xnap_init_FullIRNTIProfileList_full_I_RNTI_Profile_22( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_2 ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_FullIRNTIProfileList_full_I_RNTI_Profile_2( char * key, SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_2 * data, int lvl);

void __si_xnap_memfree_FullIRNTIProfileList_full_I_RNTI_Profile_2( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_2 * data);

int __si_xnap_Encode_FullIRNTIProfileList_full_I_RNTI_Profile_2( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_2 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_FullIRNTIProfileList_full_I_RNTI_Profile_3( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_3 ** data);

void __si_xnap_init_FullIRNTIProfileList_full_I_RNTI_Profile_32( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_3 ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_FullIRNTIProfileList_full_I_RNTI_Profile_3( char * key, SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_3 * data, int lvl);

void __si_xnap_memfree_FullIRNTIProfileList_full_I_RNTI_Profile_3( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_3 * data);

int __si_xnap_Encode_FullIRNTIProfileList_full_I_RNTI_Profile_3( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_3 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Full_I_RNTI_Profile_List( SI_XNAP_DT_Full_I_RNTI_Profile_List ** data);

void __si_xnap_debug_Full_I_RNTI_Profile_List( char * key, SI_XNAP_DT_Full_I_RNTI_Profile_List * data, int lvl);

void __si_xnap_memfree_Full_I_RNTI_Profile_List( SI_XNAP_DT_Full_I_RNTI_Profile_List * data);

int __si_xnap_Encode_Full_I_RNTI_Profile_List( SI_XNAP_DT_Full_I_RNTI_Profile_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ShortIRNTIProfileList_short_I_RNTI_Profile_0( SI_XNAP_DT_ShortIRNTIProfileList_short_I_RNTI_Profile_0 ** data);

void __si_xnap_init_ShortIRNTIProfileList_short_I_RNTI_Profile_02( SI_XNAP_DT_ShortIRNTIProfileList_short_I_RNTI_Profile_0 ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_ShortIRNTIProfileList_short_I_RNTI_Profile_0( char * key, SI_XNAP_DT_ShortIRNTIProfileList_short_I_RNTI_Profile_0 * data, int lvl);

void __si_xnap_memfree_ShortIRNTIProfileList_short_I_RNTI_Profile_0( SI_XNAP_DT_ShortIRNTIProfileList_short_I_RNTI_Profile_0 * data);

int __si_xnap_Encode_ShortIRNTIProfileList_short_I_RNTI_Profile_0( SI_XNAP_DT_ShortIRNTIProfileList_short_I_RNTI_Profile_0 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ShortIRNTIProfileList_short_I_RNTI_Profile_1( SI_XNAP_DT_ShortIRNTIProfileList_short_I_RNTI_Profile_1 ** data);

void __si_xnap_init_ShortIRNTIProfileList_short_I_RNTI_Profile_12( SI_XNAP_DT_ShortIRNTIProfileList_short_I_RNTI_Profile_1 ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_ShortIRNTIProfileList_short_I_RNTI_Profile_1( char * key, SI_XNAP_DT_ShortIRNTIProfileList_short_I_RNTI_Profile_1 * data, int lvl);

void __si_xnap_memfree_ShortIRNTIProfileList_short_I_RNTI_Profile_1( SI_XNAP_DT_ShortIRNTIProfileList_short_I_RNTI_Profile_1 * data);

int __si_xnap_Encode_ShortIRNTIProfileList_short_I_RNTI_Profile_1( SI_XNAP_DT_ShortIRNTIProfileList_short_I_RNTI_Profile_1 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Short_I_RNTI_Profile_List( SI_XNAP_DT_Short_I_RNTI_Profile_List ** data);

void __si_xnap_debug_Short_I_RNTI_Profile_List( char * key, SI_XNAP_DT_Short_I_RNTI_Profile_List * data, int lvl);

void __si_xnap_memfree_Short_I_RNTI_Profile_List( SI_XNAP_DT_Short_I_RNTI_Profile_List * data);

int __si_xnap_Encode_Short_I_RNTI_Profile_List( SI_XNAP_DT_Short_I_RNTI_Profile_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Local_NG_RAN_Node_Identifier( SI_XNAP_DT_Local_NG_RAN_Node_Identifier ** data);

void __si_xnap_debug_Local_NG_RAN_Node_Identifier( char * key, SI_XNAP_DT_Local_NG_RAN_Node_Identifier * data, int lvl);

void __si_xnap_memfree_Local_NG_RAN_Node_Identifier( SI_XNAP_DT_Local_NG_RAN_Node_Identifier * data);

int __si_xnap_Encode_Local_NG_RAN_Node_Identifier( SI_XNAP_DT_Local_NG_RAN_Node_Identifier * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Full_and_Short_I_RNTI_Profile_List( SI_XNAP_DT_Full_and_Short_I_RNTI_Profile_List ** data);

void __si_xnap_debug_Full_and_Short_I_RNTI_Profile_List( char * key, SI_XNAP_DT_Full_and_Short_I_RNTI_Profile_List * data, int lvl);

void __si_xnap_memfree_Full_and_Short_I_RNTI_Profile_List( SI_XNAP_DT_Full_and_Short_I_RNTI_Profile_List * data);

int __si_xnap_Encode_Full_and_Short_I_RNTI_Profile_List( SI_XNAP_DT_Full_and_Short_I_RNTI_Profile_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_LastVisitedNGRANCellInformation( SI_XNAP_DT_LastVisitedNGRANCellInformation ** data);

void __si_xnap_init_LastVisitedNGRANCellInformation2( SI_XNAP_DT_LastVisitedNGRANCellInformation ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_LastVisitedNGRANCellInformation( char * key, SI_XNAP_DT_LastVisitedNGRANCellInformation * data, int lvl);

void __si_xnap_memfree_LastVisitedNGRANCellInformation( SI_XNAP_DT_LastVisitedNGRANCellInformation * data);

int __si_xnap_Encode_LastVisitedNGRANCellInformation( SI_XNAP_DT_LastVisitedNGRANCellInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_LastVisitedEUTRANCellInformation( SI_XNAP_DT_LastVisitedEUTRANCellInformation ** data);

void __si_xnap_init_LastVisitedEUTRANCellInformation2( SI_XNAP_DT_LastVisitedEUTRANCellInformation ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_LastVisitedEUTRANCellInformation( char * key, SI_XNAP_DT_LastVisitedEUTRANCellInformation * data, int lvl);

void __si_xnap_memfree_LastVisitedEUTRANCellInformation( SI_XNAP_DT_LastVisitedEUTRANCellInformation * data);

int __si_xnap_Encode_LastVisitedEUTRANCellInformation( SI_XNAP_DT_LastVisitedEUTRANCellInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_LastVisitedUTRANCellInformation( SI_XNAP_DT_LastVisitedUTRANCellInformation ** data);

void __si_xnap_init_LastVisitedUTRANCellInformation2( SI_XNAP_DT_LastVisitedUTRANCellInformation ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_LastVisitedUTRANCellInformation( char * key, SI_XNAP_DT_LastVisitedUTRANCellInformation * data, int lvl);

void __si_xnap_memfree_LastVisitedUTRANCellInformation( SI_XNAP_DT_LastVisitedUTRANCellInformation * data);

int __si_xnap_Encode_LastVisitedUTRANCellInformation( SI_XNAP_DT_LastVisitedUTRANCellInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_LastVisitedGERANCellInformation( SI_XNAP_DT_LastVisitedGERANCellInformation ** data);

void __si_xnap_init_LastVisitedGERANCellInformation2( SI_XNAP_DT_LastVisitedGERANCellInformation ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_LastVisitedGERANCellInformation( char * key, SI_XNAP_DT_LastVisitedGERANCellInformation * data, int lvl);

void __si_xnap_memfree_LastVisitedGERANCellInformation( SI_XNAP_DT_LastVisitedGERANCellInformation * data);

int __si_xnap_Encode_LastVisitedGERANCellInformation( SI_XNAP_DT_LastVisitedGERANCellInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_LastVisitedCell_Item( SI_XNAP_DT_LastVisitedCell_Item ** data);

void __si_xnap_debug_LastVisitedCell_Item( char * key, SI_XNAP_DT_LastVisitedCell_Item * data, int lvl);

void __si_xnap_memfree_LastVisitedCell_Item( SI_XNAP_DT_LastVisitedCell_Item * data);

int __si_xnap_Encode_LastVisitedCell_Item( SI_XNAP_DT_LastVisitedCell_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_LastVisitedPSCellInformation( SI_XNAP_DT_LastVisitedPSCellInformation ** data);

void __si_xnap_init_LastVisitedPSCellInformation2( SI_XNAP_DT_LastVisitedPSCellInformation ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_LastVisitedPSCellInformation( char * key, SI_XNAP_DT_LastVisitedPSCellInformation * data, int lvl);

void __si_xnap_memfree_LastVisitedPSCellInformation( SI_XNAP_DT_LastVisitedPSCellInformation * data);

int __si_xnap_Encode_LastVisitedPSCellInformation( SI_XNAP_DT_LastVisitedPSCellInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_LastVisitedPSCellList( SI_XNAP_DT_LastVisitedPSCellList ** data);

void __si_xnap_debug_LastVisitedPSCellList( char * key, SI_XNAP_DT_LastVisitedPSCellList * data, int lvl);

void __si_xnap_memfree_LastVisitedPSCellList( SI_XNAP_DT_LastVisitedPSCellList * data);

int __si_xnap_Encode_LastVisitedPSCellList( SI_XNAP_DT_LastVisitedPSCellList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_LastVisitedPSCellList_Item( SI_XNAP_DT_LastVisitedPSCellList_Item ** data);

void __si_xnap_debug_LastVisitedPSCellList_Item( char * key, SI_XNAP_DT_LastVisitedPSCellList_Item * data, int lvl);

void __si_xnap_memfree_LastVisitedPSCellList_Item( SI_XNAP_DT_LastVisitedPSCellList_Item * data);

int __si_xnap_Encode_LastVisitedPSCellList_Item( SI_XNAP_DT_LastVisitedPSCellList_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SCGUEHistoryInformation( SI_XNAP_DT_SCGUEHistoryInformation ** data);

void __si_xnap_debug_SCGUEHistoryInformation( char * key, SI_XNAP_DT_SCGUEHistoryInformation * data, int lvl);

void __si_xnap_memfree_SCGUEHistoryInformation( SI_XNAP_DT_SCGUEHistoryInformation * data);

int __si_xnap_Encode_SCGUEHistoryInformation( SI_XNAP_DT_SCGUEHistoryInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_LCID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_LCID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_LCID( SI_XNAP_DT_LCID * data);


void __si_xnap_init_CellsinAoI_Item( SI_XNAP_DT_CellsinAoI_Item ** data);

void __si_xnap_debug_CellsinAoI_Item( char * key, SI_XNAP_DT_CellsinAoI_Item * data, int lvl);

void __si_xnap_memfree_CellsinAoI_Item( SI_XNAP_DT_CellsinAoI_Item * data);

int __si_xnap_Encode_CellsinAoI_Item( SI_XNAP_DT_CellsinAoI_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_GlobalNG_RANNodesinAoI_Item( SI_XNAP_DT_GlobalNG_RANNodesinAoI_Item ** data);

void __si_xnap_debug_GlobalNG_RANNodesinAoI_Item( char * key, SI_XNAP_DT_GlobalNG_RANNodesinAoI_Item * data, int lvl);

void __si_xnap_memfree_GlobalNG_RANNodesinAoI_Item( SI_XNAP_DT_GlobalNG_RANNodesinAoI_Item * data);

int __si_xnap_Encode_GlobalNG_RANNodesinAoI_Item( SI_XNAP_DT_GlobalNG_RANNodesinAoI_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TAIsinAoI_Item( SI_XNAP_DT_TAIsinAoI_Item ** data);

void __si_xnap_debug_TAIsinAoI_Item( char * key, SI_XNAP_DT_TAIsinAoI_Item * data, int lvl);

void __si_xnap_memfree_TAIsinAoI_Item( SI_XNAP_DT_TAIsinAoI_Item * data);

int __si_xnap_Encode_TAIsinAoI_Item( SI_XNAP_DT_TAIsinAoI_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_LocationInformationSNReporting( char * key, uint8_t eLocationInformationSNReporting, int lvl);

int __si_xnap_Encode_LocationInformationSNReporting( uint8_t eLocationInformationSNReporting, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ReportArea( char * key, uint8_t eReportArea, int lvl);

int __si_xnap_Encode_ReportArea( uint8_t eReportArea, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_LocationReportingInformation( SI_XNAP_DT_LocationReportingInformation ** data);

void __si_xnap_debug_LocationReportingInformation( char * key, SI_XNAP_DT_LocationReportingInformation * data, int lvl);

void __si_xnap_memfree_LocationReportingInformation( SI_XNAP_DT_LocationReportingInformation * data);

int __si_xnap_Encode_LocationReportingInformation( SI_XNAP_DT_LocationReportingInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_LoggingInterval( char * key, uint8_t eLoggingInterval, int lvl);

int __si_xnap_Encode_LoggingInterval( uint8_t eLoggingInterval, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_LoggingDuration( char * key, uint8_t eLoggingDuration, int lvl);

int __si_xnap_Encode_LoggingDuration( uint8_t eLoggingDuration, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Periodical( SI_XNAP_DT_Periodical ** data);

void __si_xnap_debug_Periodical( char * key, SI_XNAP_DT_Periodical * data, int lvl);

void __si_xnap_memfree_Periodical( SI_XNAP_DT_Periodical * data);

int __si_xnap_Encode_Periodical( SI_XNAP_DT_Periodical * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ReportType( SI_XNAP_DT_ReportType ** data);

void __si_xnap_debug_ReportType( char * key, SI_XNAP_DT_ReportType * data, int lvl);

void __si_xnap_memfree_ReportType( SI_XNAP_DT_ReportType * data);

int __si_xnap_Encode_ReportType( SI_XNAP_DT_ReportType * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_LoggedMDT_NR( SI_XNAP_DT_LoggedMDT_NR ** data);

void __si_xnap_debug_LoggedMDT_NR( char * key, SI_XNAP_DT_LoggedMDT_NR * data, int lvl);

void __si_xnap_memfree_LoggedMDT_NR( SI_XNAP_DT_LoggedMDT_NR * data);

int __si_xnap_Encode_LoggedMDT_NR( SI_XNAP_DT_LoggedMDT_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_LowerLayerPresenceStatusChange( char * key, uint8_t eLowerLayerPresenceStatusChange, int lvl);

int __si_xnap_Encode_LowerLayerPresenceStatusChange( uint8_t eLowerLayerPresenceStatusChange, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_LTEA2XServicesAuthorized( SI_XNAP_DT_LTEA2XServicesAuthorized ** data);

void __si_xnap_debug_LTEA2XServicesAuthorized( char * key, SI_XNAP_DT_LTEA2XServicesAuthorized * data, int lvl);

void __si_xnap_memfree_LTEA2XServicesAuthorized( SI_XNAP_DT_LTEA2XServicesAuthorized * data);

int __si_xnap_Encode_LTEA2XServicesAuthorized( SI_XNAP_DT_LTEA2XServicesAuthorized * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_VehicleUE( char * key, uint8_t eVehicleUE, int lvl);

int __si_xnap_Encode_VehicleUE( uint8_t eVehicleUE, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PedestrianUE( char * key, uint8_t ePedestrianUE, int lvl);

int __si_xnap_Encode_PedestrianUE( uint8_t ePedestrianUE, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_LTEV2XServicesAuthorized( SI_XNAP_DT_LTEV2XServicesAuthorized ** data);

void __si_xnap_debug_LTEV2XServicesAuthorized( char * key, SI_XNAP_DT_LTEV2XServicesAuthorized * data, int lvl);

void __si_xnap_memfree_LTEV2XServicesAuthorized( SI_XNAP_DT_LTEV2XServicesAuthorized * data);

int __si_xnap_Encode_LTEV2XServicesAuthorized( SI_XNAP_DT_LTEV2XServicesAuthorized * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_LTEUESidelinkAggregateMaximumBitRate( SI_XNAP_DT_LTEUESidelinkAggregateMaximumBitRate ** data);

void __si_xnap_debug_LTEUESidelinkAggregateMaximumBitRate( char * key, SI_XNAP_DT_LTEUESidelinkAggregateMaximumBitRate * data, int lvl);

void __si_xnap_memfree_LTEUESidelinkAggregateMaximumBitRate( SI_XNAP_DT_LTEUESidelinkAggregateMaximumBitRate * data);

int __si_xnap_Encode_LTEUESidelinkAggregateMaximumBitRate( SI_XNAP_DT_LTEUESidelinkAggregateMaximumBitRate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MBSCommServiceType( char * key, uint8_t eMBSCommServiceType, int lvl);

int __si_xnap_Encode_MBSCommServiceType( uint8_t eMBSCommServiceType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NG_RANTraceID( SI_XNAP_DT_NG_RANTraceID ** data);

void __si_xnap_init_NG_RANTraceID2( SI_XNAP_DT_NG_RANTraceID ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_NG_RANTraceID( char * key, SI_XNAP_DT_NG_RANTraceID * data, int lvl);

void __si_xnap_memfree_NG_RANTraceID( SI_XNAP_DT_NG_RANTraceID * data);

int __si_xnap_Encode_NG_RANTraceID( SI_XNAP_DT_NG_RANTraceID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_S_BasedMDT( SI_XNAP_DT_S_BasedMDT ** data);

void __si_xnap_debug_S_BasedMDT( char * key, SI_XNAP_DT_S_BasedMDT * data, int lvl);

void __si_xnap_memfree_S_BasedMDT( SI_XNAP_DT_S_BasedMDT * data);

int __si_xnap_Encode_S_BasedMDT( SI_XNAP_DT_S_BasedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MDTAlignmentInfo( SI_XNAP_DT_MDTAlignmentInfo ** data);

void __si_xnap_debug_MDTAlignmentInfo( char * key, SI_XNAP_DT_MDTAlignmentInfo * data, int lvl);

void __si_xnap_memfree_MDTAlignmentInfo( SI_XNAP_DT_MDTAlignmentInfo * data);

int __si_xnap_Encode_MDTAlignmentInfo( SI_XNAP_DT_MDTAlignmentInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MeasCollectionEntityIPAddress( SI_XNAP_DT_MeasCollectionEntityIPAddress ** data);

void __si_xnap_debug_MeasCollectionEntityIPAddress( char * key, SI_XNAP_DT_MeasCollectionEntityIPAddress * data, int lvl);

void __si_xnap_memfree_MeasCollectionEntityIPAddress( SI_XNAP_DT_MeasCollectionEntityIPAddress * data);

int __si_xnap_Encode_MeasCollectionEntityIPAddress( SI_XNAP_DT_MeasCollectionEntityIPAddress * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_M4ReportAmountMDT( char * key, uint8_t eM4ReportAmountMDT, int lvl);

int __si_xnap_Encode_M4ReportAmountMDT( uint8_t eM4ReportAmountMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_M5ReportAmountMDT( char * key, uint8_t eM5ReportAmountMDT, int lvl);

int __si_xnap_Encode_M5ReportAmountMDT( uint8_t eM5ReportAmountMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_M6ReportAmountMDT( char * key, uint8_t eM6ReportAmountMDT, int lvl);

int __si_xnap_Encode_M6ReportAmountMDT( uint8_t eM6ReportAmountMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_M7ReportAmountMDT( char * key, uint8_t eM7ReportAmountMDT, int lvl);

int __si_xnap_Encode_M7ReportAmountMDT( uint8_t eM7ReportAmountMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MaskedIMEISV( SI_XNAP_DT_MaskedIMEISV ** data);

void __si_xnap_init_MaskedIMEISV2( SI_XNAP_DT_MaskedIMEISV ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_MaskedIMEISV( char * key, SI_XNAP_DT_MaskedIMEISV * data, int lvl);

void __si_xnap_memfree_MaskedIMEISV( SI_XNAP_DT_MaskedIMEISV * data);

int __si_xnap_Encode_MaskedIMEISV( SI_XNAP_DT_MaskedIMEISV * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MaxIPrate( char * key, uint8_t eMaxIPrate, int lvl);

int __si_xnap_Encode_MaxIPrate( uint8_t eMaxIPrate, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MaximumIPdatarate( SI_XNAP_DT_MaximumIPdatarate ** data);

void __si_xnap_debug_MaximumIPdatarate( char * key, SI_XNAP_DT_MaximumIPdatarate * data, int lvl);

void __si_xnap_memfree_MaximumIPdatarate( SI_XNAP_DT_MaximumIPdatarate * data);

int __si_xnap_Encode_MaximumIPdatarate( SI_XNAP_DT_MaximumIPdatarate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBSFNSubframeAllocationEUTRA_oneframe( SI_XNAP_DT_MBSFNSubframeAllocationEUTRA_oneframe ** data);

void __si_xnap_init_MBSFNSubframeAllocationEUTRA_oneframe2( SI_XNAP_DT_MBSFNSubframeAllocationEUTRA_oneframe ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_MBSFNSubframeAllocationEUTRA_oneframe( char * key, SI_XNAP_DT_MBSFNSubframeAllocationEUTRA_oneframe * data, int lvl);

void __si_xnap_memfree_MBSFNSubframeAllocationEUTRA_oneframe( SI_XNAP_DT_MBSFNSubframeAllocationEUTRA_oneframe * data);

int __si_xnap_Encode_MBSFNSubframeAllocationEUTRA_oneframe( SI_XNAP_DT_MBSFNSubframeAllocationEUTRA_oneframe * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBSFNSubframeAllocationEUTRA_fourframes( SI_XNAP_DT_MBSFNSubframeAllocationEUTRA_fourframes ** data);

void __si_xnap_init_MBSFNSubframeAllocationEUTRA_fourframes2( SI_XNAP_DT_MBSFNSubframeAllocationEUTRA_fourframes ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_MBSFNSubframeAllocationEUTRA_fourframes( char * key, SI_XNAP_DT_MBSFNSubframeAllocationEUTRA_fourframes * data, int lvl);

void __si_xnap_memfree_MBSFNSubframeAllocationEUTRA_fourframes( SI_XNAP_DT_MBSFNSubframeAllocationEUTRA_fourframes * data);

int __si_xnap_Encode_MBSFNSubframeAllocationEUTRA_fourframes( SI_XNAP_DT_MBSFNSubframeAllocationEUTRA_fourframes * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBSFNSubframeAllocation_E_UTRA( SI_XNAP_DT_MBSFNSubframeAllocation_E_UTRA ** data);

void __si_xnap_debug_MBSFNSubframeAllocation_E_UTRA( char * key, SI_XNAP_DT_MBSFNSubframeAllocation_E_UTRA * data, int lvl);

void __si_xnap_memfree_MBSFNSubframeAllocation_E_UTRA( SI_XNAP_DT_MBSFNSubframeAllocation_E_UTRA * data);

int __si_xnap_Encode_MBSFNSubframeAllocation_E_UTRA( SI_XNAP_DT_MBSFNSubframeAllocation_E_UTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBSFNSubframeInfo_E_UTRA( SI_XNAP_DT_MBSFNSubframeInfo_E_UTRA ** data);

void __si_xnap_debug_MBSFNSubframeInfo_E_UTRA( char * key, SI_XNAP_DT_MBSFNSubframeInfo_E_UTRA * data, int lvl);

void __si_xnap_memfree_MBSFNSubframeInfo_E_UTRA( SI_XNAP_DT_MBSFNSubframeInfo_E_UTRA * data);

int __si_xnap_Encode_MBSFNSubframeInfo_E_UTRA( SI_XNAP_DT_MBSFNSubframeInfo_E_UTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod( char * key, uint8_t eMBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod, int lvl);

int __si_xnap_Encode_MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod( uint8_t eMBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MBSFNSubframeInfoEUTRAItem_radioframeAllocationOffset( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_MBSFNSubframeInfoEUTRAItem_radioframeAllocationOffset( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_MBSFNSubframeInfoEUTRAItem_radioframeAllocationOffset( SI_XNAP_DT_MBSFNSubframeInfoEUTRAItem_radioframeAllocationOffset * data);


void __si_xnap_init_MBSFNSubframeInfo_E_UTRA_Item( SI_XNAP_DT_MBSFNSubframeInfo_E_UTRA_Item ** data);

void __si_xnap_debug_MBSFNSubframeInfo_E_UTRA_Item( char * key, SI_XNAP_DT_MBSFNSubframeInfo_E_UTRA_Item * data, int lvl);

void __si_xnap_memfree_MBSFNSubframeInfo_E_UTRA_Item( SI_XNAP_DT_MBSFNSubframeInfo_E_UTRA_Item * data);

int __si_xnap_Encode_MBSFNSubframeInfo_E_UTRA_Item( SI_XNAP_DT_MBSFNSubframeInfo_E_UTRA_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_FrequencySelectionArea_Identity( SI_XNAP_DT_MBS_FrequencySelectionArea_Identity ** data);

void __si_xnap_init_MBS_FrequencySelectionArea_Identity2( SI_XNAP_DT_MBS_FrequencySelectionArea_Identity ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_MBS_FrequencySelectionArea_Identity( char * key, SI_XNAP_DT_MBS_FrequencySelectionArea_Identity * data, int lvl);

void __si_xnap_memfree_MBS_FrequencySelectionArea_Identity( SI_XNAP_DT_MBS_FrequencySelectionArea_Identity * data);

int __si_xnap_Encode_MBS_FrequencySelectionArea_Identity( SI_XNAP_DT_MBS_FrequencySelectionArea_Identity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MBS_Area_Session_ID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_MBS_Area_Session_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_MBS_Area_Session_ID( SI_XNAP_DT_MBS_Area_Session_ID * data);


void __si_xnap_debug_MRB_ID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_MRB_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_MRB_ID( SI_XNAP_DT_MRB_ID * data);


void __si_xnap_init_MBS_QoSFlow_List( SI_XNAP_DT_MBS_QoSFlow_List ** data);

void __si_xnap_debug_MBS_QoSFlow_List( char * key, SI_XNAP_DT_MBS_QoSFlow_List * data, int lvl);

void __si_xnap_memfree_MBS_QoSFlow_List( SI_XNAP_DT_MBS_QoSFlow_List * data);

int __si_xnap_Encode_MBS_QoSFlow_List( SI_XNAP_DT_MBS_QoSFlow_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MRBProgressInformation_pdcp_SN12( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_MRBProgressInformation_pdcp_SN12( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_MRBProgressInformation_pdcp_SN12( SI_XNAP_DT_MRBProgressInformation_pdcp_SN12 * data);


void __si_xnap_debug_MRBProgressInformation_pdcp_SN18( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_MRBProgressInformation_pdcp_SN18( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_MRBProgressInformation_pdcp_SN18( SI_XNAP_DT_MRBProgressInformation_pdcp_SN18 * data);


void __si_xnap_init_MRB_ProgressInformation( SI_XNAP_DT_MRB_ProgressInformation ** data);

void __si_xnap_debug_MRB_ProgressInformation( char * key, SI_XNAP_DT_MRB_ProgressInformation * data, int lvl);

void __si_xnap_memfree_MRB_ProgressInformation( SI_XNAP_DT_MRB_ProgressInformation * data);

int __si_xnap_Encode_MRB_ProgressInformation( SI_XNAP_DT_MRB_ProgressInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_MappingandDataForwardingRequestInfofromSource_Item( SI_XNAP_DT_MBS_MappingandDataForwardingRequestInfofromSource_Item ** data);

void __si_xnap_debug_MBS_MappingandDataForwardingRequestInfofromSource_Item( char * key, SI_XNAP_DT_MBS_MappingandDataForwardingRequestInfofromSource_Item * data, int lvl);

void __si_xnap_memfree_MBS_MappingandDataForwardingRequestInfofromSource_Item( SI_XNAP_DT_MBS_MappingandDataForwardingRequestInfofromSource_Item * data);

int __si_xnap_Encode_MBS_MappingandDataForwardingRequestInfofromSource_Item( SI_XNAP_DT_MBS_MappingandDataForwardingRequestInfofromSource_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MBS_DataForwarding_Indicator( char * key, uint8_t eMBS_DataForwarding_Indicator, int lvl);

int __si_xnap_Encode_MBS_DataForwarding_Indicator( uint8_t eMBS_DataForwarding_Indicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_DataForwardingResponseInfofromTarget( SI_XNAP_DT_MBS_DataForwardingResponseInfofromTarget ** data);

void __si_xnap_debug_MBS_DataForwardingResponseInfofromTarget( char * key, SI_XNAP_DT_MBS_DataForwardingResponseInfofromTarget * data, int lvl);

void __si_xnap_memfree_MBS_DataForwardingResponseInfofromTarget( SI_XNAP_DT_MBS_DataForwardingResponseInfofromTarget * data);

int __si_xnap_Encode_MBS_DataForwardingResponseInfofromTarget( SI_XNAP_DT_MBS_DataForwardingResponseInfofromTarget * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_DataForwardingResponseInfofromTarget_Item( SI_XNAP_DT_MBS_DataForwardingResponseInfofromTarget_Item ** data);

void __si_xnap_debug_MBS_DataForwardingResponseInfofromTarget_Item( char * key, SI_XNAP_DT_MBS_DataForwardingResponseInfofromTarget_Item * data, int lvl);

void __si_xnap_memfree_MBS_DataForwardingResponseInfofromTarget_Item( SI_XNAP_DT_MBS_DataForwardingResponseInfofromTarget_Item * data);

int __si_xnap_Encode_MBS_DataForwardingResponseInfofromTarget_Item( SI_XNAP_DT_MBS_DataForwardingResponseInfofromTarget_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_QoSFlowsToAdd_Item( SI_XNAP_DT_MBS_QoSFlowsToAdd_Item ** data);

void __si_xnap_debug_MBS_QoSFlowsToAdd_Item( char * key, SI_XNAP_DT_MBS_QoSFlowsToAdd_Item * data, int lvl);

void __si_xnap_memfree_MBS_QoSFlowsToAdd_Item( SI_XNAP_DT_MBS_QoSFlowsToAdd_Item * data);

int __si_xnap_Encode_MBS_QoSFlowsToAdd_Item( SI_XNAP_DT_MBS_QoSFlowsToAdd_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_ServiceAreaInformation_Item( SI_XNAP_DT_MBS_ServiceAreaInformation_Item ** data);

void __si_xnap_debug_MBS_ServiceAreaInformation_Item( char * key, SI_XNAP_DT_MBS_ServiceAreaInformation_Item * data, int lvl);

void __si_xnap_memfree_MBS_ServiceAreaInformation_Item( SI_XNAP_DT_MBS_ServiceAreaInformation_Item * data);

int __si_xnap_Encode_MBS_ServiceAreaInformation_Item( SI_XNAP_DT_MBS_ServiceAreaInformation_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_ServiceAreaTAI_Item( SI_XNAP_DT_MBS_ServiceAreaTAI_Item ** data);

void __si_xnap_debug_MBS_ServiceAreaTAI_Item( char * key, SI_XNAP_DT_MBS_ServiceAreaTAI_Item * data, int lvl);

void __si_xnap_memfree_MBS_ServiceAreaTAI_Item( SI_XNAP_DT_MBS_ServiceAreaTAI_Item * data);

int __si_xnap_Encode_MBS_ServiceAreaTAI_Item( SI_XNAP_DT_MBS_ServiceAreaTAI_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TMGI( SI_XNAP_DT_TMGI ** data);

void __si_xnap_init_TMGI2( SI_XNAP_DT_TMGI ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_TMGI( char * key, SI_XNAP_DT_TMGI * data, int lvl);

void __si_xnap_memfree_TMGI( SI_XNAP_DT_TMGI * data);

int __si_xnap_Encode_TMGI( SI_XNAP_DT_TMGI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_Session_ID( SI_XNAP_DT_MBS_Session_ID ** data);

void __si_xnap_debug_MBS_Session_ID( char * key, SI_XNAP_DT_MBS_Session_ID * data, int lvl);

void __si_xnap_memfree_MBS_Session_ID( SI_XNAP_DT_MBS_Session_ID * data);

int __si_xnap_Encode_MBS_Session_ID( SI_XNAP_DT_MBS_Session_ID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MBS_AssistanceInformation( char * key, uint8_t eMBS_AssistanceInformation, int lvl);

int __si_xnap_Encode_MBS_AssistanceInformation( uint8_t eMBS_AssistanceInformation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_SessionAssociatedInformation( SI_XNAP_DT_MBS_SessionAssociatedInformation ** data);

void __si_xnap_debug_MBS_SessionAssociatedInformation( char * key, SI_XNAP_DT_MBS_SessionAssociatedInformation * data, int lvl);

void __si_xnap_memfree_MBS_SessionAssociatedInformation( SI_XNAP_DT_MBS_SessionAssociatedInformation * data);

int __si_xnap_Encode_MBS_SessionAssociatedInformation( SI_XNAP_DT_MBS_SessionAssociatedInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_SessionAssociatedInformation_Item( SI_XNAP_DT_MBS_SessionAssociatedInformation_Item ** data);

void __si_xnap_debug_MBS_SessionAssociatedInformation_Item( char * key, SI_XNAP_DT_MBS_SessionAssociatedInformation_Item * data, int lvl);

void __si_xnap_memfree_MBS_SessionAssociatedInformation_Item( SI_XNAP_DT_MBS_SessionAssociatedInformation_Item * data);

int __si_xnap_Encode_MBS_SessionAssociatedInformation_Item( SI_XNAP_DT_MBS_SessionAssociatedInformation_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_SessionInformation_List( SI_XNAP_DT_MBS_SessionInformation_List ** data);

void __si_xnap_debug_MBS_SessionInformation_List( char * key, SI_XNAP_DT_MBS_SessionInformation_List * data, int lvl);

void __si_xnap_memfree_MBS_SessionInformation_List( SI_XNAP_DT_MBS_SessionInformation_List * data);

int __si_xnap_Encode_MBS_SessionInformation_List( SI_XNAP_DT_MBS_SessionInformation_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_SessionInformation_Item( SI_XNAP_DT_MBS_SessionInformation_Item ** data);

void __si_xnap_debug_MBS_SessionInformation_Item( char * key, SI_XNAP_DT_MBS_SessionInformation_Item * data, int lvl);

void __si_xnap_memfree_MBS_SessionInformation_Item( SI_XNAP_DT_MBS_SessionInformation_Item * data);

int __si_xnap_Encode_MBS_SessionInformation_Item( SI_XNAP_DT_MBS_SessionInformation_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_SessionInformationResponse_List( SI_XNAP_DT_MBS_SessionInformationResponse_List ** data);

void __si_xnap_debug_MBS_SessionInformationResponse_List( char * key, SI_XNAP_DT_MBS_SessionInformationResponse_List * data, int lvl);

void __si_xnap_memfree_MBS_SessionInformationResponse_List( SI_XNAP_DT_MBS_SessionInformationResponse_List * data);

int __si_xnap_Encode_MBS_SessionInformationResponse_List( SI_XNAP_DT_MBS_SessionInformationResponse_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MBS_SessionInformationResponse_Item( SI_XNAP_DT_MBS_SessionInformationResponse_Item ** data);

void __si_xnap_debug_MBS_SessionInformationResponse_Item( char * key, SI_XNAP_DT_MBS_SessionInformationResponse_Item * data, int lvl);

void __si_xnap_memfree_MBS_SessionInformationResponse_Item( SI_XNAP_DT_MBS_SessionInformationResponse_Item * data);

int __si_xnap_Encode_MBS_SessionInformationResponse_Item( SI_XNAP_DT_MBS_SessionInformationResponse_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MDT_Activation( char * key, uint8_t eMDT_Activation, int lvl);

int __si_xnap_Encode_MDT_Activation( uint8_t eMDT_Activation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MDTMode_NR_Extension( SI_XNAP_DT_MDTMode_NR_Extension ** data);

void __si_xnap_debug_MDTMode_NR_Extension( char * key, SI_XNAP_DT_MDTMode_NR_Extension * data, int lvl);

void __si_xnap_memfree_MDTMode_NR_Extension( SI_XNAP_DT_MDTMode_NR_Extension * data);

int __si_xnap_Encode_MDTMode_NR_Extension( SI_XNAP_DT_MDTMode_NR_Extension * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MDTMode_NR( SI_XNAP_DT_MDTMode_NR ** data);

void __si_xnap_debug_MDTMode_NR( char * key, SI_XNAP_DT_MDTMode_NR * data, int lvl);

void __si_xnap_memfree_MDTMode_NR( SI_XNAP_DT_MDTMode_NR * data);

int __si_xnap_Encode_MDTMode_NR( SI_XNAP_DT_MDTMode_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MDTPLMNList( SI_XNAP_DT_MDTPLMNList ** data);

void __si_xnap_debug_MDTPLMNList( char * key, SI_XNAP_DT_MDTPLMNList * data, int lvl);

void __si_xnap_memfree_MDTPLMNList( SI_XNAP_DT_MDTPLMNList * data);

int __si_xnap_Encode_MDTPLMNList( SI_XNAP_DT_MDTPLMNList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MDT_Configuration_NR( SI_XNAP_DT_MDT_Configuration_NR ** data);

void __si_xnap_debug_MDT_Configuration_NR( char * key, SI_XNAP_DT_MDT_Configuration_NR * data, int lvl);

void __si_xnap_memfree_MDT_Configuration_NR( SI_XNAP_DT_MDT_Configuration_NR * data);

int __si_xnap_Encode_MDT_Configuration_NR( SI_XNAP_DT_MDT_Configuration_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MDTMode_EUTRA( SI_XNAP_DT_MDTMode_EUTRA ** data);

void __si_xnap_init_MDTMode_EUTRA2( SI_XNAP_DT_MDTMode_EUTRA ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_MDTMode_EUTRA( char * key, SI_XNAP_DT_MDTMode_EUTRA * data, int lvl);

void __si_xnap_memfree_MDTMode_EUTRA( SI_XNAP_DT_MDTMode_EUTRA * data);

int __si_xnap_Encode_MDTMode_EUTRA( SI_XNAP_DT_MDTMode_EUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MDT_Configuration_EUTRA( SI_XNAP_DT_MDT_Configuration_EUTRA ** data);

void __si_xnap_debug_MDT_Configuration_EUTRA( char * key, SI_XNAP_DT_MDT_Configuration_EUTRA * data, int lvl);

void __si_xnap_memfree_MDT_Configuration_EUTRA( SI_XNAP_DT_MDT_Configuration_EUTRA * data);

int __si_xnap_Encode_MDT_Configuration_EUTRA( SI_XNAP_DT_MDT_Configuration_EUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MDT_Configuration( SI_XNAP_DT_MDT_Configuration ** data);

void __si_xnap_debug_MDT_Configuration( char * key, SI_XNAP_DT_MDT_Configuration * data, int lvl);

void __si_xnap_memfree_MDT_Configuration( SI_XNAP_DT_MDT_Configuration * data);

int __si_xnap_Encode_MDT_Configuration( SI_XNAP_DT_MDT_Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MN_only_MDT_collection( char * key, uint8_t eMN_only_MDT_collection, int lvl);

int __si_xnap_Encode_MN_only_MDT_collection( uint8_t eMN_only_MDT_collection, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MDTPLMNModificationList( SI_XNAP_DT_MDTPLMNModificationList ** data);

void __si_xnap_debug_MDTPLMNModificationList( char * key, SI_XNAP_DT_MDTPLMNModificationList * data, int lvl);

void __si_xnap_memfree_MDTPLMNModificationList( SI_XNAP_DT_MDTPLMNModificationList * data);

int __si_xnap_Encode_MDTPLMNModificationList( SI_XNAP_DT_MDTPLMNModificationList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_UL_GBR_PRB_usage_for_MIMO( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_UL_GBR_PRB_usage_for_MIMO( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_UL_GBR_PRB_usage_for_MIMO( SI_XNAP_DT_UL_GBR_PRB_usage_for_MIMO * data);


void __si_xnap_debug_UL_non_GBR_PRB_usage_for_MIMO( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_UL_non_GBR_PRB_usage_for_MIMO( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_UL_non_GBR_PRB_usage_for_MIMO( SI_XNAP_DT_UL_non_GBR_PRB_usage_for_MIMO * data);


void __si_xnap_debug_UL_Total_PRB_usage_for_MIMO( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_UL_Total_PRB_usage_for_MIMO( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_UL_Total_PRB_usage_for_MIMO( SI_XNAP_DT_UL_Total_PRB_usage_for_MIMO * data);


void __si_xnap_init_MIMOPRBusageInformation( SI_XNAP_DT_MIMOPRBusageInformation ** data);

void __si_xnap_debug_MIMOPRBusageInformation( char * key, SI_XNAP_DT_MIMOPRBusageInformation * data, int lvl);

void __si_xnap_memfree_MIMOPRBusageInformation( SI_XNAP_DT_MIMOPRBusageInformation * data);

int __si_xnap_Encode_MIMOPRBusageInformation( SI_XNAP_DT_MIMOPRBusageInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MobileIAB_AuthorizationStatus( char * key, uint8_t eMobileIAB_AuthorizationStatus, int lvl);

int __si_xnap_Encode_MobileIAB_AuthorizationStatus( uint8_t eMobileIAB_AuthorizationStatus, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MobileIABCell( char * key, uint8_t eMobileIABCell, int lvl);

int __si_xnap_Encode_MobileIABCell( uint8_t eMobileIABCell, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MobilityInformation( SI_XNAP_DT_MobilityInformation ** data);

void __si_xnap_init_MobilityInformation2( SI_XNAP_DT_MobilityInformation ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_MobilityInformation( char * key, SI_XNAP_DT_MobilityInformation * data, int lvl);

void __si_xnap_memfree_MobilityInformation( SI_XNAP_DT_MobilityInformation * data);

int __si_xnap_Encode_MobilityInformation( SI_XNAP_DT_MobilityInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MobilityParametersModificationRange_handoverTriggerChangeLowerLimit( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_MobilityParametersModificationRange_handoverTriggerChangeLowerLimit( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_MobilityParametersModificationRange_handoverTriggerChangeLowerLimit( SI_XNAP_DT_MobilityParametersModificationRange_handoverTriggerChangeLowerLimit * data);


void __si_xnap_debug_MobilityParametersModificationRange_handoverTriggerChangeUpperLimit( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_MobilityParametersModificationRange_handoverTriggerChangeUpperLimit( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_MobilityParametersModificationRange_handoverTriggerChangeUpperLimit( SI_XNAP_DT_MobilityParametersModificationRange_handoverTriggerChangeUpperLimit * data);


void __si_xnap_init_MobilityParametersModificationRange( SI_XNAP_DT_MobilityParametersModificationRange ** data);

void __si_xnap_debug_MobilityParametersModificationRange( char * key, SI_XNAP_DT_MobilityParametersModificationRange * data, int lvl);

void __si_xnap_memfree_MobilityParametersModificationRange( SI_XNAP_DT_MobilityParametersModificationRange * data);

int __si_xnap_Encode_MobilityParametersModificationRange( SI_XNAP_DT_MobilityParametersModificationRange * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MobilityParametersInformation_handoverTriggerChange( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_MobilityParametersInformation_handoverTriggerChange( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_MobilityParametersInformation_handoverTriggerChange( SI_XNAP_DT_MobilityParametersInformation_handoverTriggerChange * data);


void __si_xnap_init_MobilityParametersInformation( SI_XNAP_DT_MobilityParametersInformation ** data);

void __si_xnap_debug_MobilityParametersInformation( char * key, SI_XNAP_DT_MobilityParametersInformation * data, int lvl);

void __si_xnap_memfree_MobilityParametersInformation( SI_XNAP_DT_MobilityParametersInformation * data);

int __si_xnap_Encode_MobilityParametersInformation( SI_XNAP_DT_MobilityParametersInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MobilityRestrictionList_equivalent_PLMNs( SI_XNAP_DT_MobilityRestrictionList_equivalent_PLMNs ** data);

void __si_xnap_debug_MobilityRestrictionList_equivalent_PLMNs( char * key, SI_XNAP_DT_MobilityRestrictionList_equivalent_PLMNs * data, int lvl);

void __si_xnap_memfree_MobilityRestrictionList_equivalent_PLMNs( SI_XNAP_DT_MobilityRestrictionList_equivalent_PLMNs * data);

int __si_xnap_Encode_MobilityRestrictionList_equivalent_PLMNs( SI_XNAP_DT_MobilityRestrictionList_equivalent_PLMNs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RAT_RestrictionsList( SI_XNAP_DT_RAT_RestrictionsList ** data);

void __si_xnap_debug_RAT_RestrictionsList( char * key, SI_XNAP_DT_RAT_RestrictionsList * data, int lvl);

void __si_xnap_memfree_RAT_RestrictionsList( SI_XNAP_DT_RAT_RestrictionsList * data);

int __si_xnap_Encode_RAT_RestrictionsList( SI_XNAP_DT_RAT_RestrictionsList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ForbiddenAreaList( SI_XNAP_DT_ForbiddenAreaList ** data);

void __si_xnap_debug_ForbiddenAreaList( char * key, SI_XNAP_DT_ForbiddenAreaList * data, int lvl);

void __si_xnap_memfree_ForbiddenAreaList( SI_XNAP_DT_ForbiddenAreaList * data);

int __si_xnap_Encode_ForbiddenAreaList( SI_XNAP_DT_ForbiddenAreaList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServiceAreaList( SI_XNAP_DT_ServiceAreaList ** data);

void __si_xnap_debug_ServiceAreaList( char * key, SI_XNAP_DT_ServiceAreaList * data, int lvl);

void __si_xnap_memfree_ServiceAreaList( SI_XNAP_DT_ServiceAreaList * data);

int __si_xnap_Encode_ServiceAreaList( SI_XNAP_DT_ServiceAreaList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MobilityRestrictionList( SI_XNAP_DT_MobilityRestrictionList ** data);

void __si_xnap_debug_MobilityRestrictionList( char * key, SI_XNAP_DT_MobilityRestrictionList * data, int lvl);

void __si_xnap_memfree_MobilityRestrictionList( SI_XNAP_DT_MobilityRestrictionList * data);

int __si_xnap_Encode_MobilityRestrictionList( SI_XNAP_DT_MobilityRestrictionList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CNTypeRestrictionsForEquivalent( SI_XNAP_DT_CNTypeRestrictionsForEquivalent ** data);

void __si_xnap_debug_CNTypeRestrictionsForEquivalent( char * key, SI_XNAP_DT_CNTypeRestrictionsForEquivalent * data, int lvl);

void __si_xnap_memfree_CNTypeRestrictionsForEquivalent( SI_XNAP_DT_CNTypeRestrictionsForEquivalent * data);

int __si_xnap_Encode_CNTypeRestrictionsForEquivalent( SI_XNAP_DT_CNTypeRestrictionsForEquivalent * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CNTypeRestrictionsForEquivalentItem_cn_Type( char * key, uint8_t eCNTypeRestrictionsForEquivalentItem_cn_Type, int lvl);

int __si_xnap_Encode_CNTypeRestrictionsForEquivalentItem_cn_Type( uint8_t eCNTypeRestrictionsForEquivalentItem_cn_Type, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_CNTypeRestrictionsForEquivalentItem( SI_XNAP_DT_CNTypeRestrictionsForEquivalentItem ** data);

void __si_xnap_debug_CNTypeRestrictionsForEquivalentItem( char * key, SI_XNAP_DT_CNTypeRestrictionsForEquivalentItem * data, int lvl);

void __si_xnap_memfree_CNTypeRestrictionsForEquivalentItem( SI_XNAP_DT_CNTypeRestrictionsForEquivalentItem * data);

int __si_xnap_Encode_CNTypeRestrictionsForEquivalentItem( SI_XNAP_DT_CNTypeRestrictionsForEquivalentItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_CNTypeRestrictionsForServing( char * key, uint8_t eCNTypeRestrictionsForServing, int lvl);

int __si_xnap_Encode_CNTypeRestrictionsForServing( uint8_t eCNTypeRestrictionsForServing, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RAT_RestrictionInformation( SI_XNAP_DT_RAT_RestrictionInformation ** data);

void __si_xnap_init_RAT_RestrictionInformation2( SI_XNAP_DT_RAT_RestrictionInformation ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_RAT_RestrictionInformation( char * key, SI_XNAP_DT_RAT_RestrictionInformation * data, int lvl);

void __si_xnap_memfree_RAT_RestrictionInformation( SI_XNAP_DT_RAT_RestrictionInformation * data);

int __si_xnap_Encode_RAT_RestrictionInformation( SI_XNAP_DT_RAT_RestrictionInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RAT_RestrictionsItem( SI_XNAP_DT_RAT_RestrictionsItem ** data);

void __si_xnap_debug_RAT_RestrictionsItem( char * key, SI_XNAP_DT_RAT_RestrictionsItem * data, int lvl);

void __si_xnap_memfree_RAT_RestrictionsItem( SI_XNAP_DT_RAT_RestrictionsItem * data);

int __si_xnap_Encode_RAT_RestrictionsItem( SI_XNAP_DT_RAT_RestrictionsItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ForbiddenAreaItem_forbidden_TACs( SI_XNAP_DT_ForbiddenAreaItem_forbidden_TACs ** data);

void __si_xnap_debug_ForbiddenAreaItem_forbidden_TACs( char * key, SI_XNAP_DT_ForbiddenAreaItem_forbidden_TACs * data, int lvl);

void __si_xnap_memfree_ForbiddenAreaItem_forbidden_TACs( SI_XNAP_DT_ForbiddenAreaItem_forbidden_TACs * data);

int __si_xnap_Encode_ForbiddenAreaItem_forbidden_TACs( SI_XNAP_DT_ForbiddenAreaItem_forbidden_TACs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ForbiddenAreaItem( SI_XNAP_DT_ForbiddenAreaItem ** data);

void __si_xnap_debug_ForbiddenAreaItem( char * key, SI_XNAP_DT_ForbiddenAreaItem * data, int lvl);

void __si_xnap_memfree_ForbiddenAreaItem( SI_XNAP_DT_ForbiddenAreaItem * data);

int __si_xnap_Encode_ForbiddenAreaItem( SI_XNAP_DT_ForbiddenAreaItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServiceAreaItem_allowed_TACs_ServiceArea( SI_XNAP_DT_ServiceAreaItem_allowed_TACs_ServiceArea ** data);

void __si_xnap_debug_ServiceAreaItem_allowed_TACs_ServiceArea( char * key, SI_XNAP_DT_ServiceAreaItem_allowed_TACs_ServiceArea * data, int lvl);

void __si_xnap_memfree_ServiceAreaItem_allowed_TACs_ServiceArea( SI_XNAP_DT_ServiceAreaItem_allowed_TACs_ServiceArea * data);

int __si_xnap_Encode_ServiceAreaItem_allowed_TACs_ServiceArea( SI_XNAP_DT_ServiceAreaItem_allowed_TACs_ServiceArea * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServiceAreaItem_not_allowed_TACs_ServiceArea( SI_XNAP_DT_ServiceAreaItem_not_allowed_TACs_ServiceArea ** data);

void __si_xnap_debug_ServiceAreaItem_not_allowed_TACs_ServiceArea( char * key, SI_XNAP_DT_ServiceAreaItem_not_allowed_TACs_ServiceArea * data, int lvl);

void __si_xnap_memfree_ServiceAreaItem_not_allowed_TACs_ServiceArea( SI_XNAP_DT_ServiceAreaItem_not_allowed_TACs_ServiceArea * data);

int __si_xnap_Encode_ServiceAreaItem_not_allowed_TACs_ServiceArea( SI_XNAP_DT_ServiceAreaItem_not_allowed_TACs_ServiceArea * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServiceAreaItem( SI_XNAP_DT_ServiceAreaItem ** data);

void __si_xnap_debug_ServiceAreaItem( char * key, SI_XNAP_DT_ServiceAreaItem * data, int lvl);

void __si_xnap_memfree_ServiceAreaItem( SI_XNAP_DT_ServiceAreaItem * data);

int __si_xnap_Encode_ServiceAreaItem( SI_XNAP_DT_ServiceAreaItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_EUTRAResourceCoordinationInfo_ul_coordination_info( SI_XNAP_DT_EUTRAResourceCoordinationInfo_ul_coordination_info ** data);

void __si_xnap_init_EUTRAResourceCoordinationInfo_ul_coordination_info2( SI_XNAP_DT_EUTRAResourceCoordinationInfo_ul_coordination_info ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_EUTRAResourceCoordinationInfo_ul_coordination_info( char * key, SI_XNAP_DT_EUTRAResourceCoordinationInfo_ul_coordination_info * data, int lvl);

void __si_xnap_memfree_EUTRAResourceCoordinationInfo_ul_coordination_info( SI_XNAP_DT_EUTRAResourceCoordinationInfo_ul_coordination_info * data);

int __si_xnap_Encode_EUTRAResourceCoordinationInfo_ul_coordination_info( SI_XNAP_DT_EUTRAResourceCoordinationInfo_ul_coordination_info * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_EUTRAResourceCoordinationInfo_dl_coordination_info( SI_XNAP_DT_EUTRAResourceCoordinationInfo_dl_coordination_info ** data);

void __si_xnap_init_EUTRAResourceCoordinationInfo_dl_coordination_info2( SI_XNAP_DT_EUTRAResourceCoordinationInfo_dl_coordination_info ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_EUTRAResourceCoordinationInfo_dl_coordination_info( char * key, SI_XNAP_DT_EUTRAResourceCoordinationInfo_dl_coordination_info * data, int lvl);

void __si_xnap_memfree_EUTRAResourceCoordinationInfo_dl_coordination_info( SI_XNAP_DT_EUTRAResourceCoordinationInfo_dl_coordination_info * data);

int __si_xnap_Encode_EUTRAResourceCoordinationInfo_dl_coordination_info( SI_XNAP_DT_EUTRAResourceCoordinationInfo_dl_coordination_info * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_E_UTRA_CoordinationAssistanceInfo( char * key, uint8_t eE_UTRA_CoordinationAssistanceInfo, int lvl);

int __si_xnap_Encode_E_UTRA_CoordinationAssistanceInfo( uint8_t eE_UTRA_CoordinationAssistanceInfo, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_E_UTRA_ResourceCoordinationInfo( SI_XNAP_DT_E_UTRA_ResourceCoordinationInfo ** data);

void __si_xnap_debug_E_UTRA_ResourceCoordinationInfo( char * key, SI_XNAP_DT_E_UTRA_ResourceCoordinationInfo * data, int lvl);

void __si_xnap_memfree_E_UTRA_ResourceCoordinationInfo( SI_XNAP_DT_E_UTRA_ResourceCoordinationInfo * data);

int __si_xnap_Encode_E_UTRA_ResourceCoordinationInfo( SI_XNAP_DT_E_UTRA_ResourceCoordinationInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRResourceCoordinationInfo_ul_coordination_info( SI_XNAP_DT_NRResourceCoordinationInfo_ul_coordination_info ** data);

void __si_xnap_init_NRResourceCoordinationInfo_ul_coordination_info2( SI_XNAP_DT_NRResourceCoordinationInfo_ul_coordination_info ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_NRResourceCoordinationInfo_ul_coordination_info( char * key, SI_XNAP_DT_NRResourceCoordinationInfo_ul_coordination_info * data, int lvl);

void __si_xnap_memfree_NRResourceCoordinationInfo_ul_coordination_info( SI_XNAP_DT_NRResourceCoordinationInfo_ul_coordination_info * data);

int __si_xnap_Encode_NRResourceCoordinationInfo_ul_coordination_info( SI_XNAP_DT_NRResourceCoordinationInfo_ul_coordination_info * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRResourceCoordinationInfo_dl_coordination_info( SI_XNAP_DT_NRResourceCoordinationInfo_dl_coordination_info ** data);

void __si_xnap_init_NRResourceCoordinationInfo_dl_coordination_info2( SI_XNAP_DT_NRResourceCoordinationInfo_dl_coordination_info ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_NRResourceCoordinationInfo_dl_coordination_info( char * key, SI_XNAP_DT_NRResourceCoordinationInfo_dl_coordination_info * data, int lvl);

void __si_xnap_memfree_NRResourceCoordinationInfo_dl_coordination_info( SI_XNAP_DT_NRResourceCoordinationInfo_dl_coordination_info * data);

int __si_xnap_Encode_NRResourceCoordinationInfo_dl_coordination_info( SI_XNAP_DT_NRResourceCoordinationInfo_dl_coordination_info * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NR_CoordinationAssistanceInfo( char * key, uint8_t eNR_CoordinationAssistanceInfo, int lvl);

int __si_xnap_Encode_NR_CoordinationAssistanceInfo( uint8_t eNR_CoordinationAssistanceInfo, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NR_ResourceCoordinationInfo( SI_XNAP_DT_NR_ResourceCoordinationInfo ** data);

void __si_xnap_debug_NR_ResourceCoordinationInfo( char * key, SI_XNAP_DT_NR_ResourceCoordinationInfo * data, int lvl);

void __si_xnap_memfree_NR_ResourceCoordinationInfo( SI_XNAP_DT_NR_ResourceCoordinationInfo * data);

int __si_xnap_Encode_NR_ResourceCoordinationInfo( SI_XNAP_DT_NR_ResourceCoordinationInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NG_RAN_Node_ResourceCoordinationInfo( SI_XNAP_DT_NG_RAN_Node_ResourceCoordinationInfo ** data);

void __si_xnap_debug_NG_RAN_Node_ResourceCoordinationInfo( char * key, SI_XNAP_DT_NG_RAN_Node_ResourceCoordinationInfo * data, int lvl);

void __si_xnap_memfree_NG_RAN_Node_ResourceCoordinationInfo( SI_XNAP_DT_NG_RAN_Node_ResourceCoordinationInfo * data);

int __si_xnap_Encode_NG_RAN_Node_ResourceCoordinationInfo( SI_XNAP_DT_NG_RAN_Node_ResourceCoordinationInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MR_DC_ResourceCoordinationInfo( SI_XNAP_DT_MR_DC_ResourceCoordinationInfo ** data);

void __si_xnap_debug_MR_DC_ResourceCoordinationInfo( char * key, SI_XNAP_DT_MR_DC_ResourceCoordinationInfo * data, int lvl);

void __si_xnap_memfree_MR_DC_ResourceCoordinationInfo( SI_XNAP_DT_MR_DC_ResourceCoordinationInfo * data);

int __si_xnap_Encode_MR_DC_ResourceCoordinationInfo( SI_XNAP_DT_MR_DC_ResourceCoordinationInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MessageOversizeNotification( SI_XNAP_DT_MessageOversizeNotification ** data);

void __si_xnap_debug_MessageOversizeNotification( char * key, SI_XNAP_DT_MessageOversizeNotification * data, int lvl);

void __si_xnap_memfree_MessageOversizeNotification( SI_XNAP_DT_MessageOversizeNotification * data);

int __si_xnap_Encode_MessageOversizeNotification( SI_XNAP_DT_MessageOversizeNotification * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MT_SDT_Indicator( char * key, uint8_t eMT_SDT_Indicator, int lvl);

int __si_xnap_Encode_MT_SDT_Indicator( uint8_t eMT_SDT_Indicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MT_SDT_DataSize( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_MT_SDT_DataSize( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_MT_SDT_DataSize( SI_XNAP_DT_MT_SDT_DataSize * data);


void __si_xnap_init_MT_SDT_Information( SI_XNAP_DT_MT_SDT_Information ** data);

void __si_xnap_debug_MT_SDT_Information( char * key, SI_XNAP_DT_MT_SDT_Information * data, int lvl);

void __si_xnap_memfree_MT_SDT_Information( SI_XNAP_DT_MT_SDT_Information * data);

int __si_xnap_Encode_MT_SDT_Information( SI_XNAP_DT_MT_SDT_Information * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MeasuredUETrajectory( SI_XNAP_DT_MeasuredUETrajectory ** data);

void __si_xnap_debug_MeasuredUETrajectory( char * key, SI_XNAP_DT_MeasuredUETrajectory * data, int lvl);

void __si_xnap_memfree_MeasuredUETrajectory( SI_XNAP_DT_MeasuredUETrajectory * data);

int __si_xnap_Encode_MeasuredUETrajectory( SI_XNAP_DT_MeasuredUETrajectory * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MeasuredTrajectoryNGRANCellInfo_timeUEStaysInCell( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_MeasuredTrajectoryNGRANCellInfo_timeUEStaysInCell( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_MeasuredTrajectoryNGRANCellInfo_timeUEStaysInCell( SI_XNAP_DT_MeasuredTrajectoryNGRANCellInfo_timeUEStaysInCell * data);


void __si_xnap_init_MeasuredTrajectoryNGRANCellInfo( SI_XNAP_DT_MeasuredTrajectoryNGRANCellInfo ** data);

void __si_xnap_debug_MeasuredTrajectoryNGRANCellInfo( char * key, SI_XNAP_DT_MeasuredTrajectoryNGRANCellInfo * data, int lvl);

void __si_xnap_memfree_MeasuredTrajectoryNGRANCellInfo( SI_XNAP_DT_MeasuredTrajectoryNGRANCellInfo * data);

int __si_xnap_Encode_MeasuredTrajectoryNGRANCellInfo( SI_XNAP_DT_MeasuredTrajectoryNGRANCellInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MeasuredTrajectoryCellInfo( SI_XNAP_DT_MeasuredTrajectoryCellInfo ** data);

void __si_xnap_debug_MeasuredTrajectoryCellInfo( char * key, SI_XNAP_DT_MeasuredTrajectoryCellInfo * data, int lvl);

void __si_xnap_memfree_MeasuredTrajectoryCellInfo( SI_XNAP_DT_MeasuredTrajectoryCellInfo * data);

int __si_xnap_Encode_MeasuredTrajectoryCellInfo( SI_XNAP_DT_MeasuredTrajectoryCellInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MeasuredUETrajectory_Item( SI_XNAP_DT_MeasuredUETrajectory_Item ** data);

void __si_xnap_debug_MeasuredUETrajectory_Item( char * key, SI_XNAP_DT_MeasuredUETrajectory_Item * data, int lvl);

void __si_xnap_memfree_MeasuredUETrajectory_Item( SI_XNAP_DT_MeasuredUETrajectory_Item * data);

int __si_xnap_Encode_MeasuredUETrajectory_Item( SI_XNAP_DT_MeasuredUETrajectory_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_N6JitterInformation_n6JitterLowerBound( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_N6JitterInformation_n6JitterLowerBound( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_N6JitterInformation_n6JitterLowerBound( SI_XNAP_DT_N6JitterInformation_n6JitterLowerBound * data);


void __si_xnap_debug_N6JitterInformation_n6JitterUpperBound( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_N6JitterInformation_n6JitterUpperBound( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_N6JitterInformation_n6JitterUpperBound( SI_XNAP_DT_N6JitterInformation_n6JitterUpperBound * data);


//TODO: DataType ->ProtocolExtensionContainer{{N6JitterInformationExtIEs}}<- Got NULL  L:7520

void __si_xnap_init_N6JitterInformation( SI_XNAP_DT_N6JitterInformation ** data);

void __si_xnap_debug_N6JitterInformation( char * key, SI_XNAP_DT_N6JitterInformation * data, int lvl);

void __si_xnap_memfree_N6JitterInformation( SI_XNAP_DT_N6JitterInformation * data);

int __si_xnap_Encode_N6JitterInformation( SI_XNAP_DT_N6JitterInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NACellResourceConfigurationItem_nAdownlink( char * key, uint8_t eNACellResourceConfigurationItem_nAdownlink, int lvl);

int __si_xnap_Encode_NACellResourceConfigurationItem_nAdownlink( uint8_t eNACellResourceConfigurationItem_nAdownlink, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NACellResourceConfigurationItem_nAuplink( char * key, uint8_t eNACellResourceConfigurationItem_nAuplink, int lvl);

int __si_xnap_Encode_NACellResourceConfigurationItem_nAuplink( uint8_t eNACellResourceConfigurationItem_nAuplink, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NACellResourceConfigurationItem_nAflexible( char * key, uint8_t eNACellResourceConfigurationItem_nAflexible, int lvl);

int __si_xnap_Encode_NACellResourceConfigurationItem_nAflexible( uint8_t eNACellResourceConfigurationItem_nAflexible, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NACellResourceConfiguration_Item( SI_XNAP_DT_NACellResourceConfiguration_Item ** data);

void __si_xnap_debug_NACellResourceConfiguration_Item( char * key, SI_XNAP_DT_NACellResourceConfiguration_Item * data, int lvl);

void __si_xnap_memfree_NACellResourceConfiguration_Item( SI_XNAP_DT_NACellResourceConfiguration_Item * data);

int __si_xnap_Encode_NACellResourceConfiguration_Item( SI_XNAP_DT_NACellResourceConfiguration_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NBIoT_UL_DL_AlignmentOffset( char * key, uint8_t eNBIoT_UL_DL_AlignmentOffset, int lvl);

int __si_xnap_Encode_NBIoT_UL_DL_AlignmentOffset( uint8_t eNBIoT_UL_DL_AlignmentOffset, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NEDCTDMPattern_subframeAssignment( char * key, uint8_t eNEDCTDMPattern_subframeAssignment, int lvl);

int __si_xnap_Encode_NEDCTDMPattern_subframeAssignment( uint8_t eNEDCTDMPattern_subframeAssignment, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NEDCTDMPattern_harqOffset( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_NEDCTDMPattern_harqOffset( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_NEDCTDMPattern_harqOffset( SI_XNAP_DT_NEDCTDMPattern_harqOffset * data);


void __si_xnap_init_NE_DC_TDM_Pattern( SI_XNAP_DT_NE_DC_TDM_Pattern ** data);

void __si_xnap_debug_NE_DC_TDM_Pattern( char * key, SI_XNAP_DT_NE_DC_TDM_Pattern * data, int lvl);

void __si_xnap_memfree_NE_DC_TDM_Pattern( SI_XNAP_DT_NE_DC_TDM_Pattern * data);

int __si_xnap_Encode_NE_DC_TDM_Pattern( SI_XNAP_DT_NE_DC_TDM_Pattern * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NeighbourInformation_E_UTRA( SI_XNAP_DT_NeighbourInformation_E_UTRA ** data);

void __si_xnap_debug_NeighbourInformation_E_UTRA( char * key, SI_XNAP_DT_NeighbourInformation_E_UTRA * data, int lvl);

void __si_xnap_memfree_NeighbourInformation_E_UTRA( SI_XNAP_DT_NeighbourInformation_E_UTRA * data);

int __si_xnap_Encode_NeighbourInformation_E_UTRA( SI_XNAP_DT_NeighbourInformation_E_UTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NeighbourInformation_E_UTRA_Item( SI_XNAP_DT_NeighbourInformation_E_UTRA_Item ** data);

void __si_xnap_debug_NeighbourInformation_E_UTRA_Item( char * key, SI_XNAP_DT_NeighbourInformation_E_UTRA_Item * data, int lvl);

void __si_xnap_memfree_NeighbourInformation_E_UTRA_Item( SI_XNAP_DT_NeighbourInformation_E_UTRA_Item * data);

int __si_xnap_Encode_NeighbourInformation_E_UTRA_Item( SI_XNAP_DT_NeighbourInformation_E_UTRA_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NeighbourInformation_NR( SI_XNAP_DT_NeighbourInformation_NR ** data);

void __si_xnap_debug_NeighbourInformation_NR( char * key, SI_XNAP_DT_NeighbourInformation_NR * data, int lvl);

void __si_xnap_memfree_NeighbourInformation_NR( SI_XNAP_DT_NeighbourInformation_NR * data);

int __si_xnap_Encode_NeighbourInformation_NR( SI_XNAP_DT_NeighbourInformation_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NeighbourInformationNRItem_measurementTimingConfiguration( SI_XNAP_DT_NeighbourInformationNRItem_measurementTimingConfiguration ** data);

void __si_xnap_init_NeighbourInformationNRItem_measurementTimingConfiguration2( SI_XNAP_DT_NeighbourInformationNRItem_measurementTimingConfiguration ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_NeighbourInformationNRItem_measurementTimingConfiguration( char * key, SI_XNAP_DT_NeighbourInformationNRItem_measurementTimingConfiguration * data, int lvl);

void __si_xnap_memfree_NeighbourInformationNRItem_measurementTimingConfiguration( SI_XNAP_DT_NeighbourInformationNRItem_measurementTimingConfiguration * data);

int __si_xnap_Encode_NeighbourInformationNRItem_measurementTimingConfiguration( SI_XNAP_DT_NeighbourInformationNRItem_measurementTimingConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NeighbourInformation_NR_ModeFDDInfo( SI_XNAP_DT_NeighbourInformation_NR_ModeFDDInfo ** data);

void __si_xnap_debug_NeighbourInformation_NR_ModeFDDInfo( char * key, SI_XNAP_DT_NeighbourInformation_NR_ModeFDDInfo * data, int lvl);

void __si_xnap_memfree_NeighbourInformation_NR_ModeFDDInfo( SI_XNAP_DT_NeighbourInformation_NR_ModeFDDInfo * data);

int __si_xnap_Encode_NeighbourInformation_NR_ModeFDDInfo( SI_XNAP_DT_NeighbourInformation_NR_ModeFDDInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NeighbourInformation_NR_ModeTDDInfo( SI_XNAP_DT_NeighbourInformation_NR_ModeTDDInfo ** data);

void __si_xnap_debug_NeighbourInformation_NR_ModeTDDInfo( char * key, SI_XNAP_DT_NeighbourInformation_NR_ModeTDDInfo * data, int lvl);

void __si_xnap_memfree_NeighbourInformation_NR_ModeTDDInfo( SI_XNAP_DT_NeighbourInformation_NR_ModeTDDInfo * data);

int __si_xnap_Encode_NeighbourInformation_NR_ModeTDDInfo( SI_XNAP_DT_NeighbourInformation_NR_ModeTDDInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NeighbourInformation_NR_ModeInfo( SI_XNAP_DT_NeighbourInformation_NR_ModeInfo ** data);

void __si_xnap_debug_NeighbourInformation_NR_ModeInfo( char * key, SI_XNAP_DT_NeighbourInformation_NR_ModeInfo * data, int lvl);

void __si_xnap_memfree_NeighbourInformation_NR_ModeInfo( SI_XNAP_DT_NeighbourInformation_NR_ModeInfo * data);

int __si_xnap_Encode_NeighbourInformation_NR_ModeInfo( SI_XNAP_DT_NeighbourInformation_NR_ModeInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NeighbourInformation_NR_Item( SI_XNAP_DT_NeighbourInformation_NR_Item ** data);

void __si_xnap_debug_NeighbourInformation_NR_Item( char * key, SI_XNAP_DT_NeighbourInformation_NR_Item * data, int lvl);

void __si_xnap_memfree_NeighbourInformation_NR_Item( SI_XNAP_DT_NeighbourInformation_NR_Item * data);

int __si_xnap_Encode_NeighbourInformation_NR_Item( SI_XNAP_DT_NeighbourInformation_NR_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Neighbour_NG_RAN_Node_List( SI_XNAP_DT_Neighbour_NG_RAN_Node_List ** data);

void __si_xnap_debug_Neighbour_NG_RAN_Node_List( char * key, SI_XNAP_DT_Neighbour_NG_RAN_Node_List * data, int lvl);

void __si_xnap_memfree_Neighbour_NG_RAN_Node_List( SI_XNAP_DT_Neighbour_NG_RAN_Node_List * data);

int __si_xnap_Encode_Neighbour_NG_RAN_Node_List( SI_XNAP_DT_Neighbour_NG_RAN_Node_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Neighbour_NG_RAN_Node_Item( SI_XNAP_DT_Neighbour_NG_RAN_Node_Item ** data);

void __si_xnap_debug_Neighbour_NG_RAN_Node_Item( char * key, SI_XNAP_DT_Neighbour_NG_RAN_Node_Item * data, int lvl);

void __si_xnap_memfree_Neighbour_NG_RAN_Node_Item( SI_XNAP_DT_Neighbour_NG_RAN_Node_Item * data);

int __si_xnap_Encode_Neighbour_NG_RAN_Node_Item( SI_XNAP_DT_Neighbour_NG_RAN_Node_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NRCarrierItem_offsetToCarrier( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_NRCarrierItem_offsetToCarrier( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_NRCarrierItem_offsetToCarrier( SI_XNAP_DT_NRCarrierItem_offsetToCarrier * data);


void __si_xnap_debug_NRCarrierItem_carrierBandwidth( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_NRCarrierItem_carrierBandwidth( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_NRCarrierItem_carrierBandwidth( SI_XNAP_DT_NRCarrierItem_carrierBandwidth * data);


void __si_xnap_init_NRCarrierItem( SI_XNAP_DT_NRCarrierItem ** data);

void __si_xnap_debug_NRCarrierItem( char * key, SI_XNAP_DT_NRCarrierItem * data, int lvl);

void __si_xnap_memfree_NRCarrierItem( SI_XNAP_DT_NRCarrierItem * data);

int __si_xnap_Encode_NRCarrierItem( SI_XNAP_DT_NRCarrierItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRCellPRACHConfig( SI_XNAP_DT_NRCellPRACHConfig ** data);

void __si_xnap_init_NRCellPRACHConfig2( SI_XNAP_DT_NRCellPRACHConfig ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_NRCellPRACHConfig( char * key, SI_XNAP_DT_NRCellPRACHConfig * data, int lvl);

void __si_xnap_memfree_NRCellPRACHConfig( SI_XNAP_DT_NRCellPRACHConfig * data);

int __si_xnap_Encode_NRCellPRACHConfig( SI_XNAP_DT_NRCellPRACHConfig * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NG_RANnode2SSBOffsetsModificationRange( SI_XNAP_DT_NG_RANnode2SSBOffsetsModificationRange ** data);

void __si_xnap_debug_NG_RANnode2SSBOffsetsModificationRange( char * key, SI_XNAP_DT_NG_RANnode2SSBOffsetsModificationRange * data, int lvl);

void __si_xnap_memfree_NG_RANnode2SSBOffsetsModificationRange( SI_XNAP_DT_NG_RANnode2SSBOffsetsModificationRange * data);

int __si_xnap_Encode_NG_RANnode2SSBOffsetsModificationRange( SI_XNAP_DT_NG_RANnode2SSBOffsetsModificationRange * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NodeAssociatedInfoResult( SI_XNAP_DT_NodeAssociatedInfoResult ** data);

void __si_xnap_debug_NodeAssociatedInfoResult( char * key, SI_XNAP_DT_NodeAssociatedInfoResult * data, int lvl);

void __si_xnap_memfree_NodeAssociatedInfoResult( SI_XNAP_DT_NodeAssociatedInfoResult * data);

int __si_xnap_Encode_NodeAssociatedInfoResult( SI_XNAP_DT_NodeAssociatedInfoResult * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NodeMeasurementInitiationResult_List( SI_XNAP_DT_NodeMeasurementInitiationResult_List ** data);

void __si_xnap_debug_NodeMeasurementInitiationResult_List( char * key, SI_XNAP_DT_NodeMeasurementInitiationResult_List * data, int lvl);

void __si_xnap_memfree_NodeMeasurementInitiationResult_List( SI_XNAP_DT_NodeMeasurementInitiationResult_List * data);

int __si_xnap_Encode_NodeMeasurementInitiationResult_List( SI_XNAP_DT_NodeMeasurementInitiationResult_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NodeMeasurementInitiationResultItem_nodemeasurementFailedReportCharacteristics( SI_XNAP_DT_NodeMeasurementInitiationResultItem_nodemeasurementFailedReportCharacteristics ** data);

void __si_xnap_init_NodeMeasurementInitiationResultItem_nodemeasurementFailedReportCharacteristics2( SI_XNAP_DT_NodeMeasurementInitiationResultItem_nodemeasurementFailedReportCharacteristics ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_NodeMeasurementInitiationResultItem_nodemeasurementFailedReportCharacteristics( char * key, SI_XNAP_DT_NodeMeasurementInitiationResultItem_nodemeasurementFailedReportCharacteristics * data, int lvl);

void __si_xnap_memfree_NodeMeasurementInitiationResultItem_nodemeasurementFailedReportCharacteristics( SI_XNAP_DT_NodeMeasurementInitiationResultItem_nodemeasurementFailedReportCharacteristics * data);

int __si_xnap_Encode_NodeMeasurementInitiationResultItem_nodemeasurementFailedReportCharacteristics( SI_XNAP_DT_NodeMeasurementInitiationResultItem_nodemeasurementFailedReportCharacteristics * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NodeMeasurementInitiationResult_Item( SI_XNAP_DT_NodeMeasurementInitiationResult_Item ** data);

void __si_xnap_debug_NodeMeasurementInitiationResult_Item( char * key, SI_XNAP_DT_NodeMeasurementInitiationResult_Item * data, int lvl);

void __si_xnap_memfree_NodeMeasurementInitiationResult_Item( SI_XNAP_DT_NodeMeasurementInitiationResult_Item * data);

int __si_xnap_Encode_NodeMeasurementInitiationResult_Item( SI_XNAP_DT_NodeMeasurementInitiationResult_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_DL_scheduling_PDCCH_CCE_usage( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_DL_scheduling_PDCCH_CCE_usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_DL_scheduling_PDCCH_CCE_usage( SI_XNAP_DT_DL_scheduling_PDCCH_CCE_usage * data);


void __si_xnap_debug_UL_scheduling_PDCCH_CCE_usage( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_UL_scheduling_PDCCH_CCE_usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_UL_scheduling_PDCCH_CCE_usage( SI_XNAP_DT_UL_scheduling_PDCCH_CCE_usage * data);


void __si_xnap_init_NonF1TerminatingBHInformation_List( SI_XNAP_DT_NonF1TerminatingBHInformation_List ** data);

void __si_xnap_debug_NonF1TerminatingBHInformation_List( char * key, SI_XNAP_DT_NonF1TerminatingBHInformation_List * data, int lvl);

void __si_xnap_memfree_NonF1TerminatingBHInformation_List( SI_XNAP_DT_NonF1TerminatingBHInformation_List * data);

int __si_xnap_Encode_NonF1TerminatingBHInformation_List( SI_XNAP_DT_NonF1TerminatingBHInformation_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Non_F1_TerminatingTopologyBHInformation( SI_XNAP_DT_Non_F1_TerminatingTopologyBHInformation ** data);

void __si_xnap_debug_Non_F1_TerminatingTopologyBHInformation( char * key, SI_XNAP_DT_Non_F1_TerminatingTopologyBHInformation * data, int lvl);

void __si_xnap_memfree_Non_F1_TerminatingTopologyBHInformation( SI_XNAP_DT_Non_F1_TerminatingTopologyBHInformation * data);

int __si_xnap_Encode_Non_F1_TerminatingTopologyBHInformation( SI_XNAP_DT_Non_F1_TerminatingTopologyBHInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ULNonF1Terminating_BHInfo( SI_XNAP_DT_ULNonF1Terminating_BHInfo ** data);

void __si_xnap_debug_ULNonF1Terminating_BHInfo( char * key, SI_XNAP_DT_ULNonF1Terminating_BHInfo * data, int lvl);

void __si_xnap_memfree_ULNonF1Terminating_BHInfo( SI_XNAP_DT_ULNonF1Terminating_BHInfo * data);

int __si_xnap_Encode_ULNonF1Terminating_BHInfo( SI_XNAP_DT_ULNonF1Terminating_BHInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NonF1TerminatingBHInformation_Item( SI_XNAP_DT_NonF1TerminatingBHInformation_Item ** data);

void __si_xnap_debug_NonF1TerminatingBHInformation_Item( char * key, SI_XNAP_DT_NonF1TerminatingBHInformation_Item * data, int lvl);

void __si_xnap_memfree_NonF1TerminatingBHInformation_Item( SI_XNAP_DT_NonF1TerminatingBHInformation_Item * data);

int __si_xnap_Encode_NonF1TerminatingBHInformation_Item( SI_XNAP_DT_NonF1TerminatingBHInformation_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NonUPTrafficType( char * key, uint8_t eNonUPTrafficType, int lvl);

int __si_xnap_Encode_NonUPTrafficType( uint8_t eNonUPTrafficType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NonUPTraffic( SI_XNAP_DT_NonUPTraffic ** data);

void __si_xnap_debug_NonUPTraffic( char * key, SI_XNAP_DT_NonUPTraffic * data, int lvl);

void __si_xnap_memfree_NonUPTraffic( SI_XNAP_DT_NonUPTraffic * data);

int __si_xnap_Encode_NonUPTraffic( SI_XNAP_DT_NonUPTraffic * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NoPDUSessionIndication( char * key, uint8_t eNoPDUSessionIndication, int lvl);

int __si_xnap_Encode_NoPDUSessionIndication( uint8_t eNoPDUSessionIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPN_Broadcast_Information_SNPN( SI_XNAP_DT_NPN_Broadcast_Information_SNPN ** data);

void __si_xnap_debug_NPN_Broadcast_Information_SNPN( char * key, SI_XNAP_DT_NPN_Broadcast_Information_SNPN * data, int lvl);

void __si_xnap_memfree_NPN_Broadcast_Information_SNPN( SI_XNAP_DT_NPN_Broadcast_Information_SNPN * data);

int __si_xnap_Encode_NPN_Broadcast_Information_SNPN( SI_XNAP_DT_NPN_Broadcast_Information_SNPN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPN_Broadcast_Information_PNI_NPN( SI_XNAP_DT_NPN_Broadcast_Information_PNI_NPN ** data);

void __si_xnap_debug_NPN_Broadcast_Information_PNI_NPN( char * key, SI_XNAP_DT_NPN_Broadcast_Information_PNI_NPN * data, int lvl);

void __si_xnap_memfree_NPN_Broadcast_Information_PNI_NPN( SI_XNAP_DT_NPN_Broadcast_Information_PNI_NPN * data);

int __si_xnap_Encode_NPN_Broadcast_Information_PNI_NPN( SI_XNAP_DT_NPN_Broadcast_Information_PNI_NPN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPN_Broadcast_Information( SI_XNAP_DT_NPN_Broadcast_Information ** data);

void __si_xnap_debug_NPN_Broadcast_Information( char * key, SI_XNAP_DT_NPN_Broadcast_Information * data, int lvl);

void __si_xnap_memfree_NPN_Broadcast_Information( SI_XNAP_DT_NPN_Broadcast_Information * data);

int __si_xnap_Encode_NPN_Broadcast_Information( SI_XNAP_DT_NPN_Broadcast_Information * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPNMobilityInformation_SNPN( SI_XNAP_DT_NPNMobilityInformation_SNPN ** data);

void __si_xnap_debug_NPNMobilityInformation_SNPN( char * key, SI_XNAP_DT_NPNMobilityInformation_SNPN * data, int lvl);

void __si_xnap_memfree_NPNMobilityInformation_SNPN( SI_XNAP_DT_NPNMobilityInformation_SNPN * data);

int __si_xnap_Encode_NPNMobilityInformation_SNPN( SI_XNAP_DT_NPNMobilityInformation_SNPN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPNMobilityInformation_PNI_NPN( SI_XNAP_DT_NPNMobilityInformation_PNI_NPN ** data);

void __si_xnap_debug_NPNMobilityInformation_PNI_NPN( char * key, SI_XNAP_DT_NPNMobilityInformation_PNI_NPN * data, int lvl);

void __si_xnap_memfree_NPNMobilityInformation_PNI_NPN( SI_XNAP_DT_NPNMobilityInformation_PNI_NPN * data);

int __si_xnap_Encode_NPNMobilityInformation_PNI_NPN( SI_XNAP_DT_NPNMobilityInformation_PNI_NPN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPNMobilityInformation( SI_XNAP_DT_NPNMobilityInformation ** data);

void __si_xnap_debug_NPNMobilityInformation( char * key, SI_XNAP_DT_NPNMobilityInformation * data, int lvl);

void __si_xnap_memfree_NPNMobilityInformation( SI_XNAP_DT_NPNMobilityInformation * data);

int __si_xnap_Encode_NPNMobilityInformation( SI_XNAP_DT_NPNMobilityInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPNPagingAssistanceInformation_PNI_NPN( SI_XNAP_DT_NPNPagingAssistanceInformation_PNI_NPN ** data);

void __si_xnap_debug_NPNPagingAssistanceInformation_PNI_NPN( char * key, SI_XNAP_DT_NPNPagingAssistanceInformation_PNI_NPN * data, int lvl);

void __si_xnap_memfree_NPNPagingAssistanceInformation_PNI_NPN( SI_XNAP_DT_NPNPagingAssistanceInformation_PNI_NPN * data);

int __si_xnap_Encode_NPNPagingAssistanceInformation_PNI_NPN( SI_XNAP_DT_NPNPagingAssistanceInformation_PNI_NPN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPNPagingAssistanceInformation( SI_XNAP_DT_NPNPagingAssistanceInformation ** data);

void __si_xnap_debug_NPNPagingAssistanceInformation( char * key, SI_XNAP_DT_NPNPagingAssistanceInformation * data, int lvl);

void __si_xnap_memfree_NPNPagingAssistanceInformation( SI_XNAP_DT_NPNPagingAssistanceInformation * data);

int __si_xnap_Encode_NPNPagingAssistanceInformation( SI_XNAP_DT_NPNPagingAssistanceInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPN_Support_SNPN( SI_XNAP_DT_NPN_Support_SNPN ** data);

void __si_xnap_debug_NPN_Support_SNPN( char * key, SI_XNAP_DT_NPN_Support_SNPN * data, int lvl);

void __si_xnap_memfree_NPN_Support_SNPN( SI_XNAP_DT_NPN_Support_SNPN * data);

int __si_xnap_Encode_NPN_Support_SNPN( SI_XNAP_DT_NPN_Support_SNPN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPN_Support( SI_XNAP_DT_NPN_Support ** data);

void __si_xnap_debug_NPN_Support( char * key, SI_XNAP_DT_NPN_Support * data, int lvl);

void __si_xnap_memfree_NPN_Support( SI_XNAP_DT_NPN_Support * data);

int __si_xnap_Encode_NPN_Support( SI_XNAP_DT_NPN_Support * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NPRACH_CP_Length( char * key, uint8_t eNPRACH_CP_Length, int lvl);

int __si_xnap_Encode_NPRACH_CP_Length( uint8_t eNPRACH_CP_Length, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPRACHConfigurationFDD_anchorCarrier_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_NPRACHConfig ** data);

void __si_xnap_init_NPRACHConfigurationFDD_anchorCarrier_NPRACHConfig2( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_NPRACHConfig ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_NPRACHConfigurationFDD_anchorCarrier_NPRACHConfig( char * key, SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_NPRACHConfig * data, int lvl);

void __si_xnap_memfree_NPRACHConfigurationFDD_anchorCarrier_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_NPRACHConfig * data);

int __si_xnap_Encode_NPRACHConfigurationFDD_anchorCarrier_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_NPRACHConfig * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPRACHConfigurationFDD_anchorCarrier_EDT_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_EDT_NPRACHConfig ** data);

void __si_xnap_init_NPRACHConfigurationFDD_anchorCarrier_EDT_NPRACHConfig2( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_EDT_NPRACHConfig ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_NPRACHConfigurationFDD_anchorCarrier_EDT_NPRACHConfig( char * key, SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_EDT_NPRACHConfig * data, int lvl);

void __si_xnap_memfree_NPRACHConfigurationFDD_anchorCarrier_EDT_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_EDT_NPRACHConfig * data);

int __si_xnap_Encode_NPRACHConfigurationFDD_anchorCarrier_EDT_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_EDT_NPRACHConfig * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPRACHConfigurationFDD_anchorCarrier_Format2_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_Format2_NPRACHConfig ** data);

void __si_xnap_init_NPRACHConfigurationFDD_anchorCarrier_Format2_NPRACHConfig2( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_Format2_NPRACHConfig ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_NPRACHConfigurationFDD_anchorCarrier_Format2_NPRACHConfig( char * key, SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_Format2_NPRACHConfig * data, int lvl);

void __si_xnap_memfree_NPRACHConfigurationFDD_anchorCarrier_Format2_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_Format2_NPRACHConfig * data);

int __si_xnap_Encode_NPRACHConfigurationFDD_anchorCarrier_Format2_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_Format2_NPRACHConfig * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPRACHConfigurationFDD_anchorCarrier_Format2_EDT_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_Format2_EDT_NPRACHConfig ** data);

void __si_xnap_init_NPRACHConfigurationFDD_anchorCarrier_Format2_EDT_NPRACHConfig2( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_Format2_EDT_NPRACHConfig ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_NPRACHConfigurationFDD_anchorCarrier_Format2_EDT_NPRACHConfig( char * key, SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_Format2_EDT_NPRACHConfig * data, int lvl);

void __si_xnap_memfree_NPRACHConfigurationFDD_anchorCarrier_Format2_EDT_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_Format2_EDT_NPRACHConfig * data);

int __si_xnap_Encode_NPRACHConfigurationFDD_anchorCarrier_Format2_EDT_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_Format2_EDT_NPRACHConfig * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPRACHConfigurationFDD_non_anchorCarrier_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_non_anchorCarrier_NPRACHConfig ** data);

void __si_xnap_init_NPRACHConfigurationFDD_non_anchorCarrier_NPRACHConfig2( SI_XNAP_DT_NPRACHConfigurationFDD_non_anchorCarrier_NPRACHConfig ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_NPRACHConfigurationFDD_non_anchorCarrier_NPRACHConfig( char * key, SI_XNAP_DT_NPRACHConfigurationFDD_non_anchorCarrier_NPRACHConfig * data, int lvl);

void __si_xnap_memfree_NPRACHConfigurationFDD_non_anchorCarrier_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_non_anchorCarrier_NPRACHConfig * data);

int __si_xnap_Encode_NPRACHConfigurationFDD_non_anchorCarrier_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_non_anchorCarrier_NPRACHConfig * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPRACHConfigurationFDD_non_anchorCarrier_Format2_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_non_anchorCarrier_Format2_NPRACHConfig ** data);

void __si_xnap_init_NPRACHConfigurationFDD_non_anchorCarrier_Format2_NPRACHConfig2( SI_XNAP_DT_NPRACHConfigurationFDD_non_anchorCarrier_Format2_NPRACHConfig ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_NPRACHConfigurationFDD_non_anchorCarrier_Format2_NPRACHConfig( char * key, SI_XNAP_DT_NPRACHConfigurationFDD_non_anchorCarrier_Format2_NPRACHConfig * data, int lvl);

void __si_xnap_memfree_NPRACHConfigurationFDD_non_anchorCarrier_Format2_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_non_anchorCarrier_Format2_NPRACHConfig * data);

int __si_xnap_Encode_NPRACHConfigurationFDD_non_anchorCarrier_Format2_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_non_anchorCarrier_Format2_NPRACHConfig * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPRACHConfiguration_FDD( SI_XNAP_DT_NPRACHConfiguration_FDD ** data);

void __si_xnap_debug_NPRACHConfiguration_FDD( char * key, SI_XNAP_DT_NPRACHConfiguration_FDD * data, int lvl);

void __si_xnap_memfree_NPRACHConfiguration_FDD( SI_XNAP_DT_NPRACHConfiguration_FDD * data);

int __si_xnap_Encode_NPRACHConfiguration_FDD( SI_XNAP_DT_NPRACHConfiguration_FDD * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NPRACH_preambleFormat( char * key, uint8_t eNPRACH_preambleFormat, int lvl);

int __si_xnap_Encode_NPRACH_preambleFormat( uint8_t eNPRACH_preambleFormat, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPRACHConfigurationTDD_anchorCarrier_NPRACHConfigTDD( SI_XNAP_DT_NPRACHConfigurationTDD_anchorCarrier_NPRACHConfigTDD ** data);

void __si_xnap_init_NPRACHConfigurationTDD_anchorCarrier_NPRACHConfigTDD2( SI_XNAP_DT_NPRACHConfigurationTDD_anchorCarrier_NPRACHConfigTDD ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_NPRACHConfigurationTDD_anchorCarrier_NPRACHConfigTDD( char * key, SI_XNAP_DT_NPRACHConfigurationTDD_anchorCarrier_NPRACHConfigTDD * data, int lvl);

void __si_xnap_memfree_NPRACHConfigurationTDD_anchorCarrier_NPRACHConfigTDD( SI_XNAP_DT_NPRACHConfigurationTDD_anchorCarrier_NPRACHConfigTDD * data);

int __si_xnap_Encode_NPRACHConfigurationTDD_anchorCarrier_NPRACHConfigTDD( SI_XNAP_DT_NPRACHConfigurationTDD_anchorCarrier_NPRACHConfigTDD * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Non_AnchorCarrierFrequencylist( SI_XNAP_DT_Non_AnchorCarrierFrequencylist ** data);

void __si_xnap_debug_Non_AnchorCarrierFrequencylist( char * key, SI_XNAP_DT_Non_AnchorCarrierFrequencylist * data, int lvl);

void __si_xnap_memfree_Non_AnchorCarrierFrequencylist( SI_XNAP_DT_Non_AnchorCarrierFrequencylist * data);

int __si_xnap_Encode_Non_AnchorCarrierFrequencylist( SI_XNAP_DT_Non_AnchorCarrierFrequencylist * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPRACHConfigurationTDD_non_anchorCarrier_NPRACHConfigTDD( SI_XNAP_DT_NPRACHConfigurationTDD_non_anchorCarrier_NPRACHConfigTDD ** data);

void __si_xnap_init_NPRACHConfigurationTDD_non_anchorCarrier_NPRACHConfigTDD2( SI_XNAP_DT_NPRACHConfigurationTDD_non_anchorCarrier_NPRACHConfigTDD ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_NPRACHConfigurationTDD_non_anchorCarrier_NPRACHConfigTDD( char * key, SI_XNAP_DT_NPRACHConfigurationTDD_non_anchorCarrier_NPRACHConfigTDD * data, int lvl);

void __si_xnap_memfree_NPRACHConfigurationTDD_non_anchorCarrier_NPRACHConfigTDD( SI_XNAP_DT_NPRACHConfigurationTDD_non_anchorCarrier_NPRACHConfigTDD * data);

int __si_xnap_Encode_NPRACHConfigurationTDD_non_anchorCarrier_NPRACHConfigTDD( SI_XNAP_DT_NPRACHConfigurationTDD_non_anchorCarrier_NPRACHConfigTDD * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPRACHConfiguration_TDD( SI_XNAP_DT_NPRACHConfiguration_TDD ** data);

void __si_xnap_debug_NPRACHConfiguration_TDD( char * key, SI_XNAP_DT_NPRACHConfiguration_TDD * data, int lvl);

void __si_xnap_memfree_NPRACHConfiguration_TDD( SI_XNAP_DT_NPRACHConfiguration_TDD * data);

int __si_xnap_Encode_NPRACHConfiguration_TDD( SI_XNAP_DT_NPRACHConfiguration_TDD * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPRACHConfiguration_fdd_or_tdd( SI_XNAP_DT_NPRACHConfiguration_fdd_or_tdd ** data);

void __si_xnap_debug_NPRACHConfiguration_fdd_or_tdd( char * key, SI_XNAP_DT_NPRACHConfiguration_fdd_or_tdd * data, int lvl);

void __si_xnap_memfree_NPRACHConfiguration_fdd_or_tdd( SI_XNAP_DT_NPRACHConfiguration_fdd_or_tdd * data);

int __si_xnap_Encode_NPRACHConfiguration_fdd_or_tdd( SI_XNAP_DT_NPRACHConfiguration_fdd_or_tdd * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NPRACHConfiguration( SI_XNAP_DT_NPRACHConfiguration ** data);

void __si_xnap_debug_NPRACHConfiguration( char * key, SI_XNAP_DT_NPRACHConfiguration * data, int lvl);

void __si_xnap_memfree_NPRACHConfiguration( SI_XNAP_DT_NPRACHConfiguration * data);

int __si_xnap_Encode_NPRACHConfiguration( SI_XNAP_DT_NPRACHConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NonAnchorCarrierFrequencylist_non_anchorCarrierFrquency( SI_XNAP_DT_NonAnchorCarrierFrequencylist_non_anchorCarrierFrquency ** data);

void __si_xnap_init_NonAnchorCarrierFrequencylist_non_anchorCarrierFrquency2( SI_XNAP_DT_NonAnchorCarrierFrequencylist_non_anchorCarrierFrquency ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_NonAnchorCarrierFrequencylist_non_anchorCarrierFrquency( char * key, SI_XNAP_DT_NonAnchorCarrierFrequencylist_non_anchorCarrierFrquency * data, int lvl);

void __si_xnap_memfree_NonAnchorCarrierFrequencylist_non_anchorCarrierFrquency( SI_XNAP_DT_NonAnchorCarrierFrequencylist_non_anchorCarrierFrquency * data);

int __si_xnap_Encode_NonAnchorCarrierFrequencylist_non_anchorCarrierFrquency( SI_XNAP_DT_NonAnchorCarrierFrequencylist_non_anchorCarrierFrquency * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Non_AnchorCarrierFrequencylist_def_213223650( SI_XNAP_DT_Non_AnchorCarrierFrequencylist_def_213223650 ** data);

void __si_xnap_debug_Non_AnchorCarrierFrequencylist_def_213223650( char * key, SI_XNAP_DT_Non_AnchorCarrierFrequencylist_def_213223650 * data, int lvl);

void __si_xnap_memfree_Non_AnchorCarrierFrequencylist_def_213223650( SI_XNAP_DT_Non_AnchorCarrierFrequencylist_def_213223650 * data);

int __si_xnap_Encode_Non_AnchorCarrierFrequencylist_def_213223650( SI_XNAP_DT_Non_AnchorCarrierFrequencylist_def_213223650 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NG_RAN_Cell_Identity_ListinRANPagingArea( SI_XNAP_DT_NG_RAN_Cell_Identity_ListinRANPagingArea ** data);

void __si_xnap_debug_NG_RAN_Cell_Identity_ListinRANPagingArea( char * key, SI_XNAP_DT_NG_RAN_Cell_Identity_ListinRANPagingArea * data, int lvl);

void __si_xnap_memfree_NG_RAN_Cell_Identity_ListinRANPagingArea( SI_XNAP_DT_NG_RAN_Cell_Identity_ListinRANPagingArea * data);

int __si_xnap_Encode_NG_RAN_Cell_Identity_ListinRANPagingArea( SI_XNAP_DT_NG_RAN_Cell_Identity_ListinRANPagingArea * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NR_U_Channel_List( SI_XNAP_DT_NR_U_Channel_List ** data);

void __si_xnap_debug_NR_U_Channel_List( char * key, SI_XNAP_DT_NR_U_Channel_List * data, int lvl);

void __si_xnap_memfree_NR_U_Channel_List( SI_XNAP_DT_NR_U_Channel_List * data);

int __si_xnap_Encode_NR_U_Channel_List( SI_XNAP_DT_NR_U_Channel_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NR_U_ChannelID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_NR_U_ChannelID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_NR_U_ChannelID( SI_XNAP_DT_NR_U_ChannelID * data);


void __si_xnap_debug_ChannelOccupancyTimePercentage( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_ChannelOccupancyTimePercentage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_ChannelOccupancyTimePercentage( SI_XNAP_DT_ChannelOccupancyTimePercentage * data);


void __si_xnap_debug_EnergyDetectionThreshold( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_EnergyDetectionThreshold( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_EnergyDetectionThreshold( SI_XNAP_DT_EnergyDetectionThreshold * data);


void __si_xnap_init_NR_U_Channel_Item( SI_XNAP_DT_NR_U_Channel_Item ** data);

void __si_xnap_debug_NR_U_Channel_Item( char * key, SI_XNAP_DT_NR_U_Channel_Item * data, int lvl);

void __si_xnap_memfree_NR_U_Channel_Item( SI_XNAP_DT_NR_U_Channel_Item * data);

int __si_xnap_Encode_NR_U_Channel_Item( SI_XNAP_DT_NR_U_Channel_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NR_U_ChannelInfo_List( SI_XNAP_DT_NR_U_ChannelInfo_List ** data);

void __si_xnap_debug_NR_U_ChannelInfo_List( char * key, SI_XNAP_DT_NR_U_ChannelInfo_List * data, int lvl);

void __si_xnap_memfree_NR_U_ChannelInfo_List( SI_XNAP_DT_NR_U_ChannelInfo_List * data);

int __si_xnap_Encode_NR_U_ChannelInfo_List( SI_XNAP_DT_NR_U_ChannelInfo_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_Bandwidth( char * key, uint8_t eBandwidth, int lvl);

int __si_xnap_Encode_Bandwidth( uint8_t eBandwidth, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NR_U_ChannelInfo_Item( SI_XNAP_DT_NR_U_ChannelInfo_Item ** data);

void __si_xnap_debug_NR_U_ChannelInfo_Item( char * key, SI_XNAP_DT_NR_U_ChannelInfo_Item * data, int lvl);

void __si_xnap_memfree_NR_U_ChannelInfo_Item( SI_XNAP_DT_NR_U_ChannelInfo_Item * data);

int __si_xnap_Encode_NR_U_ChannelInfo_Item( SI_XNAP_DT_NR_U_ChannelInfo_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRA2XServicesAuthorized( SI_XNAP_DT_NRA2XServicesAuthorized ** data);

void __si_xnap_debug_NRA2XServicesAuthorized( char * key, SI_XNAP_DT_NRA2XServicesAuthorized * data, int lvl);

void __si_xnap_memfree_NRA2XServicesAuthorized( SI_XNAP_DT_NRA2XServicesAuthorized * data);

int __si_xnap_Encode_NRA2XServicesAuthorized( SI_XNAP_DT_NRA2XServicesAuthorized * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NRFrequencyBand( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_NRFrequencyBand( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_NRFrequencyBand( SI_XNAP_DT_NRFrequencyBand * data);


void __si_xnap_init_SupportedSULBandList( SI_XNAP_DT_SupportedSULBandList ** data);

void __si_xnap_debug_SupportedSULBandList( char * key, SI_XNAP_DT_SupportedSULBandList * data, int lvl);

void __si_xnap_memfree_SupportedSULBandList( SI_XNAP_DT_SupportedSULBandList * data);

int __si_xnap_Encode_SupportedSULBandList( SI_XNAP_DT_SupportedSULBandList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRFrequencyBandItem( SI_XNAP_DT_NRFrequencyBandItem ** data);

void __si_xnap_debug_NRFrequencyBandItem( char * key, SI_XNAP_DT_NRFrequencyBandItem * data, int lvl);

void __si_xnap_memfree_NRFrequencyBandItem( SI_XNAP_DT_NRFrequencyBandItem * data);

int __si_xnap_Encode_NRFrequencyBandItem( SI_XNAP_DT_NRFrequencyBandItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRMobilityHistoryReport( SI_XNAP_DT_NRMobilityHistoryReport ** data);

void __si_xnap_init_NRMobilityHistoryReport2( SI_XNAP_DT_NRMobilityHistoryReport ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_NRMobilityHistoryReport( char * key, SI_XNAP_DT_NRMobilityHistoryReport * data, int lvl);

void __si_xnap_memfree_NRMobilityHistoryReport( SI_XNAP_DT_NRMobilityHistoryReport * data);

int __si_xnap_Encode_NRMobilityHistoryReport( SI_XNAP_DT_NRMobilityHistoryReport * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRModeInfoFDD( SI_XNAP_DT_NRModeInfoFDD ** data);

void __si_xnap_debug_NRModeInfoFDD( char * key, SI_XNAP_DT_NRModeInfoFDD * data, int lvl);

void __si_xnap_memfree_NRModeInfoFDD( SI_XNAP_DT_NRModeInfoFDD * data);

int __si_xnap_Encode_NRModeInfoFDD( SI_XNAP_DT_NRModeInfoFDD * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRModeInfoTDD( SI_XNAP_DT_NRModeInfoTDD ** data);

void __si_xnap_debug_NRModeInfoTDD( char * key, SI_XNAP_DT_NRModeInfoTDD * data, int lvl);

void __si_xnap_memfree_NRModeInfoTDD( SI_XNAP_DT_NRModeInfoTDD * data);

int __si_xnap_Encode_NRModeInfoTDD( SI_XNAP_DT_NRModeInfoTDD * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRModeInfo( SI_XNAP_DT_NRModeInfo ** data);

void __si_xnap_debug_NRModeInfo( char * key, SI_XNAP_DT_NRModeInfo * data, int lvl);

void __si_xnap_memfree_NRModeInfo( SI_XNAP_DT_NRModeInfo * data);

int __si_xnap_Encode_NRModeInfo( SI_XNAP_DT_NRModeInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NRPaging_eDRX_Cycle( char * key, uint8_t eNRPaging_eDRX_Cycle, int lvl);

int __si_xnap_Encode_NRPaging_eDRX_Cycle( uint8_t eNRPaging_eDRX_Cycle, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NRPaging_Time_Window( char * key, uint8_t eNRPaging_Time_Window, int lvl);

int __si_xnap_Encode_NRPaging_Time_Window( uint8_t eNRPaging_Time_Window, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRPagingeDRXInformation( SI_XNAP_DT_NRPagingeDRXInformation ** data);

void __si_xnap_debug_NRPagingeDRXInformation( char * key, SI_XNAP_DT_NRPagingeDRXInformation * data, int lvl);

void __si_xnap_memfree_NRPagingeDRXInformation( SI_XNAP_DT_NRPagingeDRXInformation * data);

int __si_xnap_Encode_NRPagingeDRXInformation( SI_XNAP_DT_NRPagingeDRXInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NRPaging_eDRX_Cycle_Inactive( char * key, uint8_t eNRPaging_eDRX_Cycle_Inactive, int lvl);

int __si_xnap_Encode_NRPaging_eDRX_Cycle_Inactive( uint8_t eNRPaging_eDRX_Cycle_Inactive, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRPagingeDRXInformationforRRCINACTIVE( SI_XNAP_DT_NRPagingeDRXInformationforRRCINACTIVE ** data);

void __si_xnap_debug_NRPagingeDRXInformationforRRCINACTIVE( char * key, SI_XNAP_DT_NRPagingeDRXInformationforRRCINACTIVE * data, int lvl);

void __si_xnap_memfree_NRPagingeDRXInformationforRRCINACTIVE( SI_XNAP_DT_NRPagingeDRXInformationforRRCINACTIVE * data);

int __si_xnap_Encode_NRPagingeDRXInformationforRRCINACTIVE( SI_XNAP_DT_NRPagingeDRXInformationforRRCINACTIVE * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NRPaging_long_eDRX_Cycle_Inactive( char * key, uint8_t eNRPaging_long_eDRX_Cycle_Inactive, int lvl);

int __si_xnap_Encode_NRPaging_long_eDRX_Cycle_Inactive( uint8_t eNRPaging_long_eDRX_Cycle_Inactive, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NRPaging_Time_Window_Inactive( char * key, uint8_t eNRPaging_Time_Window_Inactive, int lvl);

int __si_xnap_Encode_NRPaging_Time_Window_Inactive( uint8_t eNRPaging_Time_Window_Inactive, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRPagingLongeDRXInformationforRRCINACTIVE( SI_XNAP_DT_NRPagingLongeDRXInformationforRRCINACTIVE ** data);

void __si_xnap_debug_NRPagingLongeDRXInformationforRRCINACTIVE( char * key, SI_XNAP_DT_NRPagingLongeDRXInformationforRRCINACTIVE * data, int lvl);

void __si_xnap_memfree_NRPagingLongeDRXInformationforRRCINACTIVE( SI_XNAP_DT_NRPagingLongeDRXInformationforRRCINACTIVE * data);

int __si_xnap_Encode_NRPagingLongeDRXInformationforRRCINACTIVE( SI_XNAP_DT_NRPagingLongeDRXInformationforRRCINACTIVE * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NRPPaPositioningInformation_nRPPaTransactionID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_NRPPaPositioningInformation_nRPPaTransactionID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_NRPPaPositioningInformation_nRPPaTransactionID( SI_XNAP_DT_NRPPaPositioningInformation_nRPPaTransactionID * data);


void __si_xnap_init_RoutingID( SI_XNAP_DT_RoutingID ** data);

void __si_xnap_init_RoutingID2( SI_XNAP_DT_RoutingID ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_RoutingID( char * key, SI_XNAP_DT_RoutingID * data, int lvl);

void __si_xnap_memfree_RoutingID( SI_XNAP_DT_RoutingID * data);

int __si_xnap_Encode_RoutingID( SI_XNAP_DT_RoutingID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRPPaPositioningInformation( SI_XNAP_DT_NRPPaPositioningInformation ** data);

void __si_xnap_debug_NRPPaPositioningInformation( char * key, SI_XNAP_DT_NRPPaPositioningInformation * data, int lvl);

void __si_xnap_memfree_NRPPaPositioningInformation( SI_XNAP_DT_NRPPaPositioningInformation * data);

int __si_xnap_Encode_NRPPaPositioningInformation( SI_XNAP_DT_NRPPaPositioningInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Transmission_Bandwidth_asymmetric( SI_XNAP_DT_Transmission_Bandwidth_asymmetric ** data);

void __si_xnap_debug_Transmission_Bandwidth_asymmetric( char * key, SI_XNAP_DT_Transmission_Bandwidth_asymmetric * data, int lvl);

void __si_xnap_memfree_Transmission_Bandwidth_asymmetric( SI_XNAP_DT_Transmission_Bandwidth_asymmetric * data);

int __si_xnap_Encode_Transmission_Bandwidth_asymmetric( SI_XNAP_DT_Transmission_Bandwidth_asymmetric * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NumberOfAntennaPorts_E_UTRA( char * key, uint8_t eNumberOfAntennaPorts_E_UTRA, int lvl);

int __si_xnap_Encode_NumberOfAntennaPorts_E_UTRA( uint8_t eNumberOfAntennaPorts_E_UTRA, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NonGBRResources_Offered( char * key, uint8_t eNonGBRResources_Offered, int lvl);

int __si_xnap_Encode_NonGBRResources_Offered( uint8_t eNonGBRResources_Offered, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRV2XServicesAuthorized( SI_XNAP_DT_NRV2XServicesAuthorized ** data);

void __si_xnap_debug_NRV2XServicesAuthorized( char * key, SI_XNAP_DT_NRV2XServicesAuthorized * data, int lvl);

void __si_xnap_memfree_NRV2XServicesAuthorized( SI_XNAP_DT_NRV2XServicesAuthorized * data);

int __si_xnap_Encode_NRV2XServicesAuthorized( SI_XNAP_DT_NRV2XServicesAuthorized * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_NRUESidelinkAggregateMaximumBitRate( SI_XNAP_DT_NRUESidelinkAggregateMaximumBitRate ** data);

void __si_xnap_debug_NRUESidelinkAggregateMaximumBitRate( char * key, SI_XNAP_DT_NRUESidelinkAggregateMaximumBitRate * data, int lvl);

void __si_xnap_memfree_NRUESidelinkAggregateMaximumBitRate( SI_XNAP_DT_NRUESidelinkAggregateMaximumBitRate * data);

int __si_xnap_Encode_NRUESidelinkAggregateMaximumBitRate( SI_XNAP_DT_NRUESidelinkAggregateMaximumBitRate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_NSAG_ID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_NSAG_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_NSAG_ID( SI_XNAP_DT_NSAG_ID * data);


void __si_xnap_debug_OffsetOfNbiotChannelNumberToEARFCN( char * key, uint8_t eOffsetOfNbiotChannelNumberToEARFCN, int lvl);

int __si_xnap_Encode_OffsetOfNbiotChannelNumberToEARFCN( uint8_t eOffsetOfNbiotChannelNumberToEARFCN, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PositioningInformation_nRPPaTransactionID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_PositioningInformation_nRPPaTransactionID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_PositioningInformation_nRPPaTransactionID( SI_XNAP_DT_PositioningInformation_nRPPaTransactionID * data);


void __si_xnap_init_RequestedSRSTransmissionCharacteristics( SI_XNAP_DT_RequestedSRSTransmissionCharacteristics ** data);

void __si_xnap_init_RequestedSRSTransmissionCharacteristics2( SI_XNAP_DT_RequestedSRSTransmissionCharacteristics ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_RequestedSRSTransmissionCharacteristics( char * key, SI_XNAP_DT_RequestedSRSTransmissionCharacteristics * data, int lvl);

void __si_xnap_memfree_RequestedSRSTransmissionCharacteristics( SI_XNAP_DT_RequestedSRSTransmissionCharacteristics * data);

int __si_xnap_Encode_RequestedSRSTransmissionCharacteristics( SI_XNAP_DT_RequestedSRSTransmissionCharacteristics * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PositioningInformation( SI_XNAP_DT_PositioningInformation ** data);

void __si_xnap_debug_PositioningInformation( char * key, SI_XNAP_DT_PositioningInformation * data, int lvl);

void __si_xnap_memfree_PositioningInformation( SI_XNAP_DT_PositioningInformation * data);

int __si_xnap_Encode_PositioningInformation( SI_XNAP_DT_PositioningInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PagingCause( char * key, uint8_t ePagingCause, int lvl);

int __si_xnap_Encode_PagingCause( uint8_t ePagingCause, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PEIPSassistanceInformation( SI_XNAP_DT_PEIPSassistanceInformation ** data);

void __si_xnap_debug_PEIPSassistanceInformation( char * key, SI_XNAP_DT_PEIPSassistanceInformation * data, int lvl);

void __si_xnap_memfree_PEIPSassistanceInformation( SI_XNAP_DT_PEIPSassistanceInformation * data);

int __si_xnap_Encode_PEIPSassistanceInformation( SI_XNAP_DT_PEIPSassistanceInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PagingDRX( char * key, uint8_t ePagingDRX, int lvl);

int __si_xnap_Encode_PagingDRX( uint8_t ePagingDRX, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PagingPriority( char * key, uint8_t ePagingPriority, int lvl);

int __si_xnap_Encode_PagingPriority( uint8_t ePagingPriority, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PartialListIndicator( char * key, uint8_t ePartialListIndicator, int lvl);

int __si_xnap_Encode_PartialListIndicator( uint8_t ePartialListIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PC5QoSFlowList( SI_XNAP_DT_PC5QoSFlowList ** data);

void __si_xnap_debug_PC5QoSFlowList( char * key, SI_XNAP_DT_PC5QoSFlowList * data, int lvl);

void __si_xnap_memfree_PC5QoSFlowList( SI_XNAP_DT_PC5QoSFlowList * data);

int __si_xnap_Encode_PC5QoSFlowList( SI_XNAP_DT_PC5QoSFlowList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PC5QoSParameters( SI_XNAP_DT_PC5QoSParameters ** data);

void __si_xnap_debug_PC5QoSParameters( char * key, SI_XNAP_DT_PC5QoSParameters * data, int lvl);

void __si_xnap_memfree_PC5QoSParameters( SI_XNAP_DT_PC5QoSParameters * data);

int __si_xnap_Encode_PC5QoSParameters( SI_XNAP_DT_PC5QoSParameters * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PC5FlowBitRates( SI_XNAP_DT_PC5FlowBitRates ** data);

void __si_xnap_debug_PC5FlowBitRates( char * key, SI_XNAP_DT_PC5FlowBitRates * data, int lvl);

void __si_xnap_memfree_PC5FlowBitRates( SI_XNAP_DT_PC5FlowBitRates * data);

int __si_xnap_Encode_PC5FlowBitRates( SI_XNAP_DT_PC5FlowBitRates * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PC5QoSFlowItem( SI_XNAP_DT_PC5QoSFlowItem ** data);

void __si_xnap_debug_PC5QoSFlowItem( char * key, SI_XNAP_DT_PC5QoSFlowItem * data, int lvl);

void __si_xnap_memfree_PC5QoSFlowItem( SI_XNAP_DT_PC5QoSFlowItem * data);

int __si_xnap_Encode_PC5QoSFlowItem( SI_XNAP_DT_PC5QoSFlowItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PDCPChangeIndication_from_S_NG_RAN_node( char * key, uint8_t ePDCPChangeIndication_from_S_NG_RAN_node, int lvl);

int __si_xnap_Encode_PDCPChangeIndication_from_S_NG_RAN_node( uint8_t ePDCPChangeIndication_from_S_NG_RAN_node, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PDCPChangeIndication_from_M_NG_RAN_node( char * key, uint8_t ePDCPChangeIndication_from_M_NG_RAN_node, int lvl);

int __si_xnap_Encode_PDCPChangeIndication_from_M_NG_RAN_node( uint8_t ePDCPChangeIndication_from_M_NG_RAN_node, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDCPChangeIndication( SI_XNAP_DT_PDCPChangeIndication ** data);

void __si_xnap_debug_PDCPChangeIndication( char * key, SI_XNAP_DT_PDCPChangeIndication * data, int lvl);

void __si_xnap_memfree_PDCPChangeIndication( SI_XNAP_DT_PDCPChangeIndication * data);

int __si_xnap_Encode_PDCPChangeIndication( SI_XNAP_DT_PDCPChangeIndication * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PDCPDuplicationConfiguration( char * key, uint8_t ePDCPDuplicationConfiguration, int lvl);

int __si_xnap_Encode_PDCPDuplicationConfiguration( uint8_t ePDCPDuplicationConfiguration, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PDCPSNLength_ulPDCPSNLength( char * key, uint8_t ePDCPSNLength_ulPDCPSNLength, int lvl);

int __si_xnap_Encode_PDCPSNLength_ulPDCPSNLength( uint8_t ePDCPSNLength_ulPDCPSNLength, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PDCPSNLength_dlPDCPSNLength( char * key, uint8_t ePDCPSNLength_dlPDCPSNLength, int lvl);

int __si_xnap_Encode_PDCPSNLength_dlPDCPSNLength( uint8_t ePDCPSNLength_dlPDCPSNLength, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDCPSNLength( SI_XNAP_DT_PDCPSNLength ** data);

void __si_xnap_debug_PDCPSNLength( char * key, SI_XNAP_DT_PDCPSNLength * data, int lvl);

void __si_xnap_memfree_PDCPSNLength( SI_XNAP_DT_PDCPSNLength * data);

int __si_xnap_Encode_PDCPSNLength( SI_XNAP_DT_PDCPSNLength * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PDUSetQoSInformation_pduSetIntegratedHandlingInformation( char * key, uint8_t ePDUSetQoSInformation_pduSetIntegratedHandlingInformation, int lvl);

int __si_xnap_Encode_PDUSetQoSInformation_pduSetIntegratedHandlingInformation( uint8_t ePDUSetQoSInformation_pduSetIntegratedHandlingInformation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSetQoSInformation( SI_XNAP_DT_PDUSetQoSInformation ** data);

void __si_xnap_debug_PDUSetQoSInformation( char * key, SI_XNAP_DT_PDUSetQoSInformation * data, int lvl);

void __si_xnap_memfree_PDUSetQoSInformation( SI_XNAP_DT_PDUSetQoSInformation * data);

int __si_xnap_Encode_PDUSetQoSInformation( SI_XNAP_DT_PDUSetQoSInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSetQoSParameters( SI_XNAP_DT_PDUSetQoSParameters ** data);

void __si_xnap_debug_PDUSetQoSParameters( char * key, SI_XNAP_DT_PDUSetQoSParameters * data, int lvl);

void __si_xnap_memfree_PDUSetQoSParameters( SI_XNAP_DT_PDUSetQoSParameters * data);

int __si_xnap_Encode_PDUSetQoSParameters( SI_XNAP_DT_PDUSetQoSParameters * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PDUSetbasedHandlingIndicator( char * key, uint8_t ePDUSetbasedHandlingIndicator, int lvl);

int __si_xnap_Encode_PDUSetbasedHandlingIndicator( uint8_t ePDUSetbasedHandlingIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionAggregateMaximumBitRate( SI_XNAP_DT_PDUSessionAggregateMaximumBitRate ** data);

void __si_xnap_debug_PDUSessionAggregateMaximumBitRate( char * key, SI_XNAP_DT_PDUSessionAggregateMaximumBitRate * data, int lvl);

void __si_xnap_memfree_PDUSessionAggregateMaximumBitRate( SI_XNAP_DT_PDUSessionAggregateMaximumBitRate * data);

int __si_xnap_Encode_PDUSessionAggregateMaximumBitRate( SI_XNAP_DT_PDUSessionAggregateMaximumBitRate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSession_List( SI_XNAP_DT_PDUSession_List ** data);

void __si_xnap_debug_PDUSession_List( char * key, SI_XNAP_DT_PDUSession_List * data, int lvl);

void __si_xnap_memfree_PDUSession_List( SI_XNAP_DT_PDUSession_List * data);

int __si_xnap_Encode_PDUSession_List( SI_XNAP_DT_PDUSession_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSession_List_withCause( SI_XNAP_DT_PDUSession_List_withCause ** data);

void __si_xnap_debug_PDUSession_List_withCause( char * key, SI_XNAP_DT_PDUSession_List_withCause * data, int lvl);

void __si_xnap_memfree_PDUSession_List_withCause( SI_XNAP_DT_PDUSession_List_withCause * data);

int __si_xnap_Encode_PDUSession_List_withCause( SI_XNAP_DT_PDUSession_List_withCause * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSession_List_withCause_Item( SI_XNAP_DT_PDUSession_List_withCause_Item ** data);

void __si_xnap_debug_PDUSession_List_withCause_Item( char * key, SI_XNAP_DT_PDUSession_List_withCause_Item * data, int lvl);

void __si_xnap_memfree_PDUSession_List_withCause_Item( SI_XNAP_DT_PDUSession_List_withCause_Item * data);

int __si_xnap_Encode_PDUSession_List_withCause_Item( SI_XNAP_DT_PDUSession_List_withCause_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSession_List_withDataForwardingFromTarget( SI_XNAP_DT_PDUSession_List_withDataForwardingFromTarget ** data);

void __si_xnap_debug_PDUSession_List_withDataForwardingFromTarget( char * key, SI_XNAP_DT_PDUSession_List_withDataForwardingFromTarget * data, int lvl);

void __si_xnap_memfree_PDUSession_List_withDataForwardingFromTarget( SI_XNAP_DT_PDUSession_List_withDataForwardingFromTarget * data);

int __si_xnap_Encode_PDUSession_List_withDataForwardingFromTarget( SI_XNAP_DT_PDUSession_List_withDataForwardingFromTarget * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSession_List_withDataForwardingFromTarget_Item( SI_XNAP_DT_PDUSession_List_withDataForwardingFromTarget_Item ** data);

void __si_xnap_debug_PDUSession_List_withDataForwardingFromTarget_Item( char * key, SI_XNAP_DT_PDUSession_List_withDataForwardingFromTarget_Item * data, int lvl);

void __si_xnap_memfree_PDUSession_List_withDataForwardingFromTarget_Item( SI_XNAP_DT_PDUSession_List_withDataForwardingFromTarget_Item * data);

int __si_xnap_Encode_PDUSession_List_withDataForwardingFromTarget_Item( SI_XNAP_DT_PDUSession_List_withDataForwardingFromTarget_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSession_List_withDataForwardingRequest( SI_XNAP_DT_PDUSession_List_withDataForwardingRequest ** data);

void __si_xnap_debug_PDUSession_List_withDataForwardingRequest( char * key, SI_XNAP_DT_PDUSession_List_withDataForwardingRequest * data, int lvl);

void __si_xnap_memfree_PDUSession_List_withDataForwardingRequest( SI_XNAP_DT_PDUSession_List_withDataForwardingRequest * data);

int __si_xnap_Encode_PDUSession_List_withDataForwardingRequest( SI_XNAP_DT_PDUSession_List_withDataForwardingRequest * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSession_List_withDataForwardingRequest_Item( SI_XNAP_DT_PDUSession_List_withDataForwardingRequest_Item ** data);

void __si_xnap_debug_PDUSession_List_withDataForwardingRequest_Item( char * key, SI_XNAP_DT_PDUSession_List_withDataForwardingRequest_Item * data, int lvl);

void __si_xnap_memfree_PDUSession_List_withDataForwardingRequest_Item( SI_XNAP_DT_PDUSession_List_withDataForwardingRequest_Item * data);

int __si_xnap_Encode_PDUSession_List_withDataForwardingRequest_Item( SI_XNAP_DT_PDUSession_List_withDataForwardingRequest_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionsListToBeReleased_UPError( SI_XNAP_DT_PDUSessionsListToBeReleased_UPError ** data);

void __si_xnap_debug_PDUSessionsListToBeReleased_UPError( char * key, SI_XNAP_DT_PDUSessionsListToBeReleased_UPError * data, int lvl);

void __si_xnap_memfree_PDUSessionsListToBeReleased_UPError( SI_XNAP_DT_PDUSessionsListToBeReleased_UPError * data);

int __si_xnap_Encode_PDUSessionsListToBeReleased_UPError( SI_XNAP_DT_PDUSessionsListToBeReleased_UPError * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_UserPlaneErrorIndicator( char * key, uint8_t eUserPlaneErrorIndicator, int lvl);

int __si_xnap_Encode_UserPlaneErrorIndicator( uint8_t eUserPlaneErrorIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionsListToBeReleased_UPError_Item( SI_XNAP_DT_PDUSessionsListToBeReleased_UPError_Item ** data);

void __si_xnap_debug_PDUSessionsListToBeReleased_UPError_Item( char * key, SI_XNAP_DT_PDUSessionsListToBeReleased_UPError_Item * data, int lvl);

void __si_xnap_memfree_PDUSessionsListToBeReleased_UPError_Item( SI_XNAP_DT_PDUSessionsListToBeReleased_UPError_Item * data);

int __si_xnap_Encode_PDUSessionsListToBeReleased_UPError_Item( SI_XNAP_DT_PDUSessionsListToBeReleased_UPError_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PDUSessionResourceAdmittedInfo_dL_NG_U_TNL_Information_Unchanged( char * key, uint8_t ePDUSessionResourceAdmittedInfo_dL_NG_U_TNL_Information_Unchanged, int lvl);

int __si_xnap_Encode_PDUSessionResourceAdmittedInfo_dL_NG_U_TNL_Information_Unchanged( uint8_t ePDUSessionResourceAdmittedInfo_dL_NG_U_TNL_Information_Unchanged, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsAdmitted_List( SI_XNAP_DT_QoSFlowsAdmitted_List ** data);

void __si_xnap_debug_QoSFlowsAdmitted_List( char * key, SI_XNAP_DT_QoSFlowsAdmitted_List * data, int lvl);

void __si_xnap_memfree_QoSFlowsAdmitted_List( SI_XNAP_DT_QoSFlowsAdmitted_List * data);

int __si_xnap_Encode_QoSFlowsAdmitted_List( SI_XNAP_DT_QoSFlowsAdmitted_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlows_List_withCause( SI_XNAP_DT_QoSFlows_List_withCause ** data);

void __si_xnap_debug_QoSFlows_List_withCause( char * key, SI_XNAP_DT_QoSFlows_List_withCause * data, int lvl);

void __si_xnap_memfree_QoSFlows_List_withCause( SI_XNAP_DT_QoSFlows_List_withCause * data);

int __si_xnap_Encode_QoSFlows_List_withCause( SI_XNAP_DT_QoSFlows_List_withCause * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceAdmittedInfo( SI_XNAP_DT_PDUSessionResourceAdmittedInfo ** data);

void __si_xnap_debug_PDUSessionResourceAdmittedInfo( char * key, SI_XNAP_DT_PDUSessionResourceAdmittedInfo * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceAdmittedInfo( SI_XNAP_DT_PDUSessionResourceAdmittedInfo * data);

int __si_xnap_Encode_PDUSessionResourceAdmittedInfo( SI_XNAP_DT_PDUSessionResourceAdmittedInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourcesAdmitted_Item( SI_XNAP_DT_PDUSessionResourcesAdmitted_Item ** data);

void __si_xnap_debug_PDUSessionResourcesAdmitted_Item( char * key, SI_XNAP_DT_PDUSessionResourcesAdmitted_Item * data, int lvl);

void __si_xnap_memfree_PDUSessionResourcesAdmitted_Item( SI_XNAP_DT_PDUSessionResourcesAdmitted_Item * data);

int __si_xnap_Encode_PDUSessionResourcesAdmitted_Item( SI_XNAP_DT_PDUSessionResourcesAdmitted_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourcesNotAdmitted_List( SI_XNAP_DT_PDUSessionResourcesNotAdmitted_List ** data);

void __si_xnap_debug_PDUSessionResourcesNotAdmitted_List( char * key, SI_XNAP_DT_PDUSessionResourcesNotAdmitted_List * data, int lvl);

void __si_xnap_memfree_PDUSessionResourcesNotAdmitted_List( SI_XNAP_DT_PDUSessionResourcesNotAdmitted_List * data);

int __si_xnap_Encode_PDUSessionResourcesNotAdmitted_List( SI_XNAP_DT_PDUSessionResourcesNotAdmitted_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourcesNotAdmitted_Item( SI_XNAP_DT_PDUSessionResourcesNotAdmitted_Item ** data);

void __si_xnap_debug_PDUSessionResourcesNotAdmitted_Item( char * key, SI_XNAP_DT_PDUSessionResourcesNotAdmitted_Item * data, int lvl);

void __si_xnap_memfree_PDUSessionResourcesNotAdmitted_Item( SI_XNAP_DT_PDUSessionResourcesNotAdmitted_Item * data);

int __si_xnap_Encode_PDUSessionResourcesNotAdmitted_Item( SI_XNAP_DT_PDUSessionResourcesNotAdmitted_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourcesToBeSetup_List( SI_XNAP_DT_PDUSessionResourcesToBeSetup_List ** data);

void __si_xnap_debug_PDUSessionResourcesToBeSetup_List( char * key, SI_XNAP_DT_PDUSessionResourcesToBeSetup_List * data, int lvl);

void __si_xnap_memfree_PDUSessionResourcesToBeSetup_List( SI_XNAP_DT_PDUSessionResourcesToBeSetup_List * data);

int __si_xnap_Encode_PDUSessionResourcesToBeSetup_List( SI_XNAP_DT_PDUSessionResourcesToBeSetup_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SNSSAI_sst( SI_XNAP_DT_SNSSAI_sst ** data);

void __si_xnap_init_SNSSAI_sst2( SI_XNAP_DT_SNSSAI_sst ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_SNSSAI_sst( char * key, SI_XNAP_DT_SNSSAI_sst * data, int lvl);

void __si_xnap_memfree_SNSSAI_sst( SI_XNAP_DT_SNSSAI_sst * data);

int __si_xnap_Encode_SNSSAI_sst( SI_XNAP_DT_SNSSAI_sst * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SNSSAI_sd( SI_XNAP_DT_SNSSAI_sd ** data);

void __si_xnap_init_SNSSAI_sd2( SI_XNAP_DT_SNSSAI_sd ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_SNSSAI_sd( char * key, SI_XNAP_DT_SNSSAI_sd * data, int lvl);

void __si_xnap_memfree_SNSSAI_sd( SI_XNAP_DT_SNSSAI_sd * data);

int __si_xnap_Encode_SNSSAI_sd( SI_XNAP_DT_SNSSAI_sd * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_S_NSSAI( SI_XNAP_DT_S_NSSAI ** data);

void __si_xnap_debug_S_NSSAI( char * key, SI_XNAP_DT_S_NSSAI * data, int lvl);

void __si_xnap_memfree_S_NSSAI( SI_XNAP_DT_S_NSSAI * data);

int __si_xnap_Encode_S_NSSAI( SI_XNAP_DT_S_NSSAI * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SecurityIndication_integrityProtectionIndication( char * key, uint8_t eSecurityIndication_integrityProtectionIndication, int lvl);

int __si_xnap_Encode_SecurityIndication_integrityProtectionIndication( uint8_t eSecurityIndication_integrityProtectionIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SecurityIndication_confidentialityProtectionIndication( char * key, uint8_t eSecurityIndication_confidentialityProtectionIndication, int lvl);

int __si_xnap_Encode_SecurityIndication_confidentialityProtectionIndication( uint8_t eSecurityIndication_confidentialityProtectionIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SecurityIndication( SI_XNAP_DT_SecurityIndication ** data);

void __si_xnap_debug_SecurityIndication( char * key, SI_XNAP_DT_SecurityIndication * data, int lvl);

void __si_xnap_memfree_SecurityIndication( SI_XNAP_DT_SecurityIndication * data);

int __si_xnap_Encode_SecurityIndication( SI_XNAP_DT_SecurityIndication * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PDUSessionType( char * key, uint8_t ePDUSessionType, int lvl);

int __si_xnap_Encode_PDUSessionType( uint8_t ePDUSessionType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PDUSessionNetworkInstance( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_PDUSessionNetworkInstance( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_PDUSessionNetworkInstance( SI_XNAP_DT_PDUSessionNetworkInstance * data);


void __si_xnap_init_QoSFlowsToBeSetup_List( SI_XNAP_DT_QoSFlowsToBeSetup_List ** data);

void __si_xnap_debug_QoSFlowsToBeSetup_List( char * key, SI_XNAP_DT_QoSFlowsToBeSetup_List * data, int lvl);

void __si_xnap_memfree_QoSFlowsToBeSetup_List( SI_XNAP_DT_QoSFlowsToBeSetup_List * data);

int __si_xnap_Encode_QoSFlowsToBeSetup_List( SI_XNAP_DT_QoSFlowsToBeSetup_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourcesToBeSetup_Item( SI_XNAP_DT_PDUSessionResourcesToBeSetup_Item ** data);

void __si_xnap_debug_PDUSessionResourcesToBeSetup_Item( char * key, SI_XNAP_DT_PDUSessionResourcesToBeSetup_Item * data, int lvl);

void __si_xnap_memfree_PDUSessionResourcesToBeSetup_Item( SI_XNAP_DT_PDUSessionResourcesToBeSetup_Item * data);

int __si_xnap_Encode_PDUSessionResourcesToBeSetup_Item( SI_XNAP_DT_PDUSessionResourcesToBeSetup_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsToBeSetup_List_Setup_SNterminated( SI_XNAP_DT_QoSFlowsToBeSetup_List_Setup_SNterminated ** data);

void __si_xnap_debug_QoSFlowsToBeSetup_List_Setup_SNterminated( char * key, SI_XNAP_DT_QoSFlowsToBeSetup_List_Setup_SNterminated * data, int lvl);

void __si_xnap_memfree_QoSFlowsToBeSetup_List_Setup_SNterminated( SI_XNAP_DT_QoSFlowsToBeSetup_List_Setup_SNterminated * data);

int __si_xnap_Encode_QoSFlowsToBeSetup_List_Setup_SNterminated( SI_XNAP_DT_QoSFlowsToBeSetup_List_Setup_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceSetupInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceSetupInfo_SNterminated ** data);

void __si_xnap_debug_PDUSessionResourceSetupInfo_SNterminated( char * key, SI_XNAP_DT_PDUSessionResourceSetupInfo_SNterminated * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceSetupInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceSetupInfo_SNterminated * data);

int __si_xnap_Encode_PDUSessionResourceSetupInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceSetupInfo_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsToBeSetup_List_Setup_SNterminated_Item( SI_XNAP_DT_QoSFlowsToBeSetup_List_Setup_SNterminated_Item ** data);

void __si_xnap_debug_QoSFlowsToBeSetup_List_Setup_SNterminated_Item( char * key, SI_XNAP_DT_QoSFlowsToBeSetup_List_Setup_SNterminated_Item * data, int lvl);

void __si_xnap_memfree_QoSFlowsToBeSetup_List_Setup_SNterminated_Item( SI_XNAP_DT_QoSFlowsToBeSetup_List_Setup_SNterminated_Item * data);

int __si_xnap_Encode_QoSFlowsToBeSetup_List_Setup_SNterminated_Item( SI_XNAP_DT_QoSFlowsToBeSetup_List_Setup_SNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsToBeSetupList_SetupResponse_SNterminated( SI_XNAP_DT_DRBsToBeSetupList_SetupResponse_SNterminated ** data);

void __si_xnap_debug_DRBsToBeSetupList_SetupResponse_SNterminated( char * key, SI_XNAP_DT_DRBsToBeSetupList_SetupResponse_SNterminated * data, int lvl);

void __si_xnap_memfree_DRBsToBeSetupList_SetupResponse_SNterminated( SI_XNAP_DT_DRBsToBeSetupList_SetupResponse_SNterminated * data);

int __si_xnap_Encode_DRBsToBeSetupList_SetupResponse_SNterminated( SI_XNAP_DT_DRBsToBeSetupList_SetupResponse_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SecurityResult_integrityProtectionResult( char * key, uint8_t eSecurityResult_integrityProtectionResult, int lvl);

int __si_xnap_Encode_SecurityResult_integrityProtectionResult( uint8_t eSecurityResult_integrityProtectionResult, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SecurityResult_confidentialityProtectionResult( char * key, uint8_t eSecurityResult_confidentialityProtectionResult, int lvl);

int __si_xnap_Encode_SecurityResult_confidentialityProtectionResult( uint8_t eSecurityResult_confidentialityProtectionResult, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SecurityResult( SI_XNAP_DT_SecurityResult ** data);

void __si_xnap_debug_SecurityResult( char * key, SI_XNAP_DT_SecurityResult * data, int lvl);

void __si_xnap_memfree_SecurityResult( SI_XNAP_DT_SecurityResult * data);

int __si_xnap_Encode_SecurityResult( SI_XNAP_DT_SecurityResult * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceSetupResponseInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceSetupResponseInfo_SNterminated ** data);

void __si_xnap_debug_PDUSessionResourceSetupResponseInfo_SNterminated( char * key, SI_XNAP_DT_PDUSessionResourceSetupResponseInfo_SNterminated * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceSetupResponseInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceSetupResponseInfo_SNterminated * data);

int __si_xnap_Encode_PDUSessionResourceSetupResponseInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceSetupResponseInfo_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UPTransportParameters( SI_XNAP_DT_UPTransportParameters ** data);

void __si_xnap_debug_UPTransportParameters( char * key, SI_XNAP_DT_UPTransportParameters * data, int lvl);

void __si_xnap_memfree_UPTransportParameters( SI_XNAP_DT_UPTransportParameters * data);

int __si_xnap_Encode_UPTransportParameters( SI_XNAP_DT_UPTransportParameters * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_UL_UE_Configuration( char * key, uint8_t eUL_UE_Configuration, int lvl);

int __si_xnap_Encode_UL_UE_Configuration( uint8_t eUL_UE_Configuration, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ULConfiguration( SI_XNAP_DT_ULConfiguration ** data);

void __si_xnap_debug_ULConfiguration( char * key, SI_XNAP_DT_ULConfiguration * data, int lvl);

void __si_xnap_memfree_ULConfiguration( SI_XNAP_DT_ULConfiguration * data);

int __si_xnap_Encode_ULConfiguration( SI_XNAP_DT_ULConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsMappedtoDRB_SetupResponse_SNterminated( SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_SNterminated ** data);

void __si_xnap_debug_QoSFlowsMappedtoDRB_SetupResponse_SNterminated( char * key, SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_SNterminated * data, int lvl);

void __si_xnap_memfree_QoSFlowsMappedtoDRB_SetupResponse_SNterminated( SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_SNterminated * data);

int __si_xnap_Encode_QoSFlowsMappedtoDRB_SetupResponse_SNterminated( SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsToBeSetupList_SetupResponse_SNterminated_Item( SI_XNAP_DT_DRBsToBeSetupList_SetupResponse_SNterminated_Item ** data);

void __si_xnap_debug_DRBsToBeSetupList_SetupResponse_SNterminated_Item( char * key, SI_XNAP_DT_DRBsToBeSetupList_SetupResponse_SNterminated_Item * data, int lvl);

void __si_xnap_memfree_DRBsToBeSetupList_SetupResponse_SNterminated_Item( SI_XNAP_DT_DRBsToBeSetupList_SetupResponse_SNterminated_Item * data);

int __si_xnap_Encode_DRBsToBeSetupList_SetupResponse_SNterminated_Item( SI_XNAP_DT_DRBsToBeSetupList_SetupResponse_SNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item( SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item ** data);

void __si_xnap_debug_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item( char * key, SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item * data, int lvl);

void __si_xnap_memfree_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item( SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item * data);

int __si_xnap_Encode_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item( SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsToBeSetupList_Setup_MNterminated( SI_XNAP_DT_DRBsToBeSetupList_Setup_MNterminated ** data);

void __si_xnap_debug_DRBsToBeSetupList_Setup_MNterminated( char * key, SI_XNAP_DT_DRBsToBeSetupList_Setup_MNterminated * data, int lvl);

void __si_xnap_memfree_DRBsToBeSetupList_Setup_MNterminated( SI_XNAP_DT_DRBsToBeSetupList_Setup_MNterminated * data);

int __si_xnap_Encode_DRBsToBeSetupList_Setup_MNterminated( SI_XNAP_DT_DRBsToBeSetupList_Setup_MNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceSetupInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceSetupInfo_MNterminated ** data);

void __si_xnap_debug_PDUSessionResourceSetupInfo_MNterminated( char * key, SI_XNAP_DT_PDUSessionResourceSetupInfo_MNterminated * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceSetupInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceSetupInfo_MNterminated * data);

int __si_xnap_Encode_PDUSessionResourceSetupInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceSetupInfo_MNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsMappedtoDRB_Setup_MNterminated( SI_XNAP_DT_QoSFlowsMappedtoDRB_Setup_MNterminated ** data);

void __si_xnap_debug_QoSFlowsMappedtoDRB_Setup_MNterminated( char * key, SI_XNAP_DT_QoSFlowsMappedtoDRB_Setup_MNterminated * data, int lvl);

void __si_xnap_memfree_QoSFlowsMappedtoDRB_Setup_MNterminated( SI_XNAP_DT_QoSFlowsMappedtoDRB_Setup_MNterminated * data);

int __si_xnap_Encode_QoSFlowsMappedtoDRB_Setup_MNterminated( SI_XNAP_DT_QoSFlowsMappedtoDRB_Setup_MNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsToBeSetupList_Setup_MNterminated_Item( SI_XNAP_DT_DRBsToBeSetupList_Setup_MNterminated_Item ** data);

void __si_xnap_debug_DRBsToBeSetupList_Setup_MNterminated_Item( char * key, SI_XNAP_DT_DRBsToBeSetupList_Setup_MNterminated_Item * data, int lvl);

void __si_xnap_memfree_DRBsToBeSetupList_Setup_MNterminated_Item( SI_XNAP_DT_DRBsToBeSetupList_Setup_MNterminated_Item * data);

int __si_xnap_Encode_DRBsToBeSetupList_Setup_MNterminated_Item( SI_XNAP_DT_DRBsToBeSetupList_Setup_MNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsMappedtoDRB_Setup_MNterminated_Item( SI_XNAP_DT_QoSFlowsMappedtoDRB_Setup_MNterminated_Item ** data);

void __si_xnap_debug_QoSFlowsMappedtoDRB_Setup_MNterminated_Item( char * key, SI_XNAP_DT_QoSFlowsMappedtoDRB_Setup_MNterminated_Item * data, int lvl);

void __si_xnap_memfree_QoSFlowsMappedtoDRB_Setup_MNterminated_Item( SI_XNAP_DT_QoSFlowsMappedtoDRB_Setup_MNterminated_Item * data);

int __si_xnap_Encode_QoSFlowsMappedtoDRB_Setup_MNterminated_Item( SI_XNAP_DT_QoSFlowsMappedtoDRB_Setup_MNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsAdmittedList_SetupResponse_MNterminated( SI_XNAP_DT_DRBsAdmittedList_SetupResponse_MNterminated ** data);

void __si_xnap_debug_DRBsAdmittedList_SetupResponse_MNterminated( char * key, SI_XNAP_DT_DRBsAdmittedList_SetupResponse_MNterminated * data, int lvl);

void __si_xnap_memfree_DRBsAdmittedList_SetupResponse_MNterminated( SI_XNAP_DT_DRBsAdmittedList_SetupResponse_MNterminated * data);

int __si_xnap_Encode_DRBsAdmittedList_SetupResponse_MNterminated( SI_XNAP_DT_DRBsAdmittedList_SetupResponse_MNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceSetupResponseInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceSetupResponseInfo_MNterminated ** data);

void __si_xnap_debug_PDUSessionResourceSetupResponseInfo_MNterminated( char * key, SI_XNAP_DT_PDUSessionResourceSetupResponseInfo_MNterminated * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceSetupResponseInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceSetupResponseInfo_MNterminated * data);

int __si_xnap_Encode_PDUSessionResourceSetupResponseInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceSetupResponseInfo_MNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsAdmittedList_SetupResponse_MNterminated_Item( SI_XNAP_DT_DRBsAdmittedList_SetupResponse_MNterminated_Item ** data);

void __si_xnap_debug_DRBsAdmittedList_SetupResponse_MNterminated_Item( char * key, SI_XNAP_DT_DRBsAdmittedList_SetupResponse_MNterminated_Item * data, int lvl);

void __si_xnap_memfree_DRBsAdmittedList_SetupResponse_MNterminated_Item( SI_XNAP_DT_DRBsAdmittedList_SetupResponse_MNterminated_Item * data);

int __si_xnap_Encode_DRBsAdmittedList_SetupResponse_MNterminated_Item( SI_XNAP_DT_DRBsAdmittedList_SetupResponse_MNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsMappedtoDRB_SetupResponse_MNterminated( SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_MNterminated ** data);

void __si_xnap_debug_QoSFlowsMappedtoDRB_SetupResponse_MNterminated( char * key, SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_MNterminated * data, int lvl);

void __si_xnap_memfree_QoSFlowsMappedtoDRB_SetupResponse_MNterminated( SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_MNterminated * data);

int __si_xnap_Encode_QoSFlowsMappedtoDRB_SetupResponse_MNterminated( SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_MNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item( SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item ** data);

void __si_xnap_debug_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item( char * key, SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item * data, int lvl);

void __si_xnap_memfree_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item( SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item * data);

int __si_xnap_Encode_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item( SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsToBeSetup_List_Modified_SNterminated( SI_XNAP_DT_QoSFlowsToBeSetup_List_Modified_SNterminated ** data);

void __si_xnap_debug_QoSFlowsToBeSetup_List_Modified_SNterminated( char * key, SI_XNAP_DT_QoSFlowsToBeSetup_List_Modified_SNterminated * data, int lvl);

void __si_xnap_memfree_QoSFlowsToBeSetup_List_Modified_SNterminated( SI_XNAP_DT_QoSFlowsToBeSetup_List_Modified_SNterminated * data);

int __si_xnap_Encode_QoSFlowsToBeSetup_List_Modified_SNterminated( SI_XNAP_DT_QoSFlowsToBeSetup_List_Modified_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsToBeModified_List_Modified_SNterminated( SI_XNAP_DT_DRBsToBeModified_List_Modified_SNterminated ** data);

void __si_xnap_debug_DRBsToBeModified_List_Modified_SNterminated( char * key, SI_XNAP_DT_DRBsToBeModified_List_Modified_SNterminated * data, int lvl);

void __si_xnap_memfree_DRBsToBeModified_List_Modified_SNterminated( SI_XNAP_DT_DRBsToBeModified_List_Modified_SNterminated * data);

int __si_xnap_Encode_DRBsToBeModified_List_Modified_SNterminated( SI_XNAP_DT_DRBsToBeModified_List_Modified_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceModificationInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceModificationInfo_SNterminated ** data);

void __si_xnap_debug_PDUSessionResourceModificationInfo_SNterminated( char * key, SI_XNAP_DT_PDUSessionResourceModificationInfo_SNterminated * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceModificationInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceModificationInfo_SNterminated * data);

int __si_xnap_Encode_PDUSessionResourceModificationInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceModificationInfo_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsToBeSetup_List_Modified_SNterminated_Item( SI_XNAP_DT_QoSFlowsToBeSetup_List_Modified_SNterminated_Item ** data);

void __si_xnap_debug_QoSFlowsToBeSetup_List_Modified_SNterminated_Item( char * key, SI_XNAP_DT_QoSFlowsToBeSetup_List_Modified_SNterminated_Item * data, int lvl);

void __si_xnap_memfree_QoSFlowsToBeSetup_List_Modified_SNterminated_Item( SI_XNAP_DT_QoSFlowsToBeSetup_List_Modified_SNterminated_Item * data);

int __si_xnap_Encode_QoSFlowsToBeSetup_List_Modified_SNterminated_Item( SI_XNAP_DT_QoSFlowsToBeSetup_List_Modified_SNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_Reestablishment_Indication( char * key, uint8_t eReestablishment_Indication, int lvl);

int __si_xnap_Encode_Reestablishment_Indication( uint8_t eReestablishment_Indication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RLC_Status( SI_XNAP_DT_RLC_Status ** data);

void __si_xnap_debug_RLC_Status( char * key, SI_XNAP_DT_RLC_Status * data, int lvl);

void __si_xnap_memfree_RLC_Status( SI_XNAP_DT_RLC_Status * data);

int __si_xnap_Encode_RLC_Status( SI_XNAP_DT_RLC_Status * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsToBeModified_List_Modified_SNterminated_Item( SI_XNAP_DT_DRBsToBeModified_List_Modified_SNterminated_Item ** data);

void __si_xnap_debug_DRBsToBeModified_List_Modified_SNterminated_Item( char * key, SI_XNAP_DT_DRBsToBeModified_List_Modified_SNterminated_Item * data, int lvl);

void __si_xnap_memfree_DRBsToBeModified_List_Modified_SNterminated_Item( SI_XNAP_DT_DRBsToBeModified_List_Modified_SNterminated_Item * data);

int __si_xnap_Encode_DRBsToBeModified_List_Modified_SNterminated_Item( SI_XNAP_DT_DRBsToBeModified_List_Modified_SNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsToBeModifiedList_ModificationResponse_SNterminated( SI_XNAP_DT_DRBsToBeModifiedList_ModificationResponse_SNterminated ** data);

void __si_xnap_debug_DRBsToBeModifiedList_ModificationResponse_SNterminated( char * key, SI_XNAP_DT_DRBsToBeModifiedList_ModificationResponse_SNterminated * data, int lvl);

void __si_xnap_memfree_DRBsToBeModifiedList_ModificationResponse_SNterminated( SI_XNAP_DT_DRBsToBeModifiedList_ModificationResponse_SNterminated * data);

int __si_xnap_Encode_DRBsToBeModifiedList_ModificationResponse_SNterminated( SI_XNAP_DT_DRBsToBeModifiedList_ModificationResponse_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceModificationResponseInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceModificationResponseInfo_SNterminated ** data);

void __si_xnap_debug_PDUSessionResourceModificationResponseInfo_SNterminated( char * key, SI_XNAP_DT_PDUSessionResourceModificationResponseInfo_SNterminated * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceModificationResponseInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceModificationResponseInfo_SNterminated * data);

int __si_xnap_Encode_PDUSessionResourceModificationResponseInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceModificationResponseInfo_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item( SI_XNAP_DT_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item ** data);

void __si_xnap_debug_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item( char * key, SI_XNAP_DT_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item * data, int lvl);

void __si_xnap_memfree_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item( SI_XNAP_DT_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item * data);

int __si_xnap_Encode_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item( SI_XNAP_DT_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsToBeModifiedList_Modification_MNterminated( SI_XNAP_DT_DRBsToBeModifiedList_Modification_MNterminated ** data);

void __si_xnap_debug_DRBsToBeModifiedList_Modification_MNterminated( char * key, SI_XNAP_DT_DRBsToBeModifiedList_Modification_MNterminated * data, int lvl);

void __si_xnap_memfree_DRBsToBeModifiedList_Modification_MNterminated( SI_XNAP_DT_DRBsToBeModifiedList_Modification_MNterminated * data);

int __si_xnap_Encode_DRBsToBeModifiedList_Modification_MNterminated( SI_XNAP_DT_DRBsToBeModifiedList_Modification_MNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceModificationInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceModificationInfo_MNterminated ** data);

void __si_xnap_debug_PDUSessionResourceModificationInfo_MNterminated( char * key, SI_XNAP_DT_PDUSessionResourceModificationInfo_MNterminated * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceModificationInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceModificationInfo_MNterminated * data);

int __si_xnap_Encode_PDUSessionResourceModificationInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceModificationInfo_MNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsToBeModifiedList_Modification_MNterminated_Item( SI_XNAP_DT_DRBsToBeModifiedList_Modification_MNterminated_Item ** data);

void __si_xnap_debug_DRBsToBeModifiedList_Modification_MNterminated_Item( char * key, SI_XNAP_DT_DRBsToBeModifiedList_Modification_MNterminated_Item * data, int lvl);

void __si_xnap_memfree_DRBsToBeModifiedList_Modification_MNterminated_Item( SI_XNAP_DT_DRBsToBeModifiedList_Modification_MNterminated_Item * data);

int __si_xnap_Encode_DRBsToBeModifiedList_Modification_MNterminated_Item( SI_XNAP_DT_DRBsToBeModifiedList_Modification_MNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsAdmittedList_ModificationResponse_MNterminated( SI_XNAP_DT_DRBsAdmittedList_ModificationResponse_MNterminated ** data);

void __si_xnap_debug_DRBsAdmittedList_ModificationResponse_MNterminated( char * key, SI_XNAP_DT_DRBsAdmittedList_ModificationResponse_MNterminated * data, int lvl);

void __si_xnap_memfree_DRBsAdmittedList_ModificationResponse_MNterminated( SI_XNAP_DT_DRBsAdmittedList_ModificationResponse_MNterminated * data);

int __si_xnap_Encode_DRBsAdmittedList_ModificationResponse_MNterminated( SI_XNAP_DT_DRBsAdmittedList_ModificationResponse_MNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceModificationResponseInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceModificationResponseInfo_MNterminated ** data);

void __si_xnap_debug_PDUSessionResourceModificationResponseInfo_MNterminated( char * key, SI_XNAP_DT_PDUSessionResourceModificationResponseInfo_MNterminated * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceModificationResponseInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceModificationResponseInfo_MNterminated * data);

int __si_xnap_Encode_PDUSessionResourceModificationResponseInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceModificationResponseInfo_MNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsAdmittedList_ModificationResponse_MNterminated_Item( SI_XNAP_DT_DRBsAdmittedList_ModificationResponse_MNterminated_Item ** data);

void __si_xnap_debug_DRBsAdmittedList_ModificationResponse_MNterminated_Item( char * key, SI_XNAP_DT_DRBsAdmittedList_ModificationResponse_MNterminated_Item * data, int lvl);

void __si_xnap_memfree_DRBsAdmittedList_ModificationResponse_MNterminated_Item( SI_XNAP_DT_DRBsAdmittedList_ModificationResponse_MNterminated_Item * data);

int __si_xnap_Encode_DRBsAdmittedList_ModificationResponse_MNterminated_Item( SI_XNAP_DT_DRBsAdmittedList_ModificationResponse_MNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceChangeRequiredInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceChangeRequiredInfo_SNterminated ** data);

void __si_xnap_debug_PDUSessionResourceChangeRequiredInfo_SNterminated( char * key, SI_XNAP_DT_PDUSessionResourceChangeRequiredInfo_SNterminated * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceChangeRequiredInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceChangeRequiredInfo_SNterminated * data);

int __si_xnap_Encode_PDUSessionResourceChangeRequiredInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceChangeRequiredInfo_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceChangeRequiredInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceChangeRequiredInfo_MNterminated ** data);

void __si_xnap_debug_PDUSessionResourceChangeRequiredInfo_MNterminated( char * key, SI_XNAP_DT_PDUSessionResourceChangeRequiredInfo_MNterminated * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceChangeRequiredInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceChangeRequiredInfo_MNterminated * data);

int __si_xnap_Encode_PDUSessionResourceChangeRequiredInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceChangeRequiredInfo_MNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceChangeConfirmInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceChangeConfirmInfo_MNterminated ** data);

void __si_xnap_debug_PDUSessionResourceChangeConfirmInfo_MNterminated( char * key, SI_XNAP_DT_PDUSessionResourceChangeConfirmInfo_MNterminated * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceChangeConfirmInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceChangeConfirmInfo_MNterminated * data);

int __si_xnap_Encode_PDUSessionResourceChangeConfirmInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceChangeConfirmInfo_MNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsToBeSetup_List_ModRqd_SNterminated( SI_XNAP_DT_DRBsToBeSetup_List_ModRqd_SNterminated ** data);

void __si_xnap_debug_DRBsToBeSetup_List_ModRqd_SNterminated( char * key, SI_XNAP_DT_DRBsToBeSetup_List_ModRqd_SNterminated * data, int lvl);

void __si_xnap_memfree_DRBsToBeSetup_List_ModRqd_SNterminated( SI_XNAP_DT_DRBsToBeSetup_List_ModRqd_SNterminated * data);

int __si_xnap_Encode_DRBsToBeSetup_List_ModRqd_SNterminated( SI_XNAP_DT_DRBsToBeSetup_List_ModRqd_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsToBeModified_List_ModRqd_SNterminated( SI_XNAP_DT_DRBsToBeModified_List_ModRqd_SNterminated ** data);

void __si_xnap_debug_DRBsToBeModified_List_ModRqd_SNterminated( char * key, SI_XNAP_DT_DRBsToBeModified_List_ModRqd_SNterminated * data, int lvl);

void __si_xnap_memfree_DRBsToBeModified_List_ModRqd_SNterminated( SI_XNAP_DT_DRBsToBeModified_List_ModRqd_SNterminated * data);

int __si_xnap_Encode_DRBsToBeModified_List_ModRqd_SNterminated( SI_XNAP_DT_DRBsToBeModified_List_ModRqd_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceModRqdInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceModRqdInfo_SNterminated ** data);

void __si_xnap_debug_PDUSessionResourceModRqdInfo_SNterminated( char * key, SI_XNAP_DT_PDUSessionResourceModRqdInfo_SNterminated * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceModRqdInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceModRqdInfo_SNterminated * data);

int __si_xnap_Encode_PDUSessionResourceModRqdInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceModRqdInfo_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated( SI_XNAP_DT_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated ** data);

void __si_xnap_debug_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated( char * key, SI_XNAP_DT_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated * data, int lvl);

void __si_xnap_memfree_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated( SI_XNAP_DT_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated * data);

int __si_xnap_Encode_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated( SI_XNAP_DT_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsToBeSetup_List_ModRqd_SNterminated_Item( SI_XNAP_DT_DRBsToBeSetup_List_ModRqd_SNterminated_Item ** data);

void __si_xnap_debug_DRBsToBeSetup_List_ModRqd_SNterminated_Item( char * key, SI_XNAP_DT_DRBsToBeSetup_List_ModRqd_SNterminated_Item * data, int lvl);

void __si_xnap_memfree_DRBsToBeSetup_List_ModRqd_SNterminated_Item( SI_XNAP_DT_DRBsToBeSetup_List_ModRqd_SNterminated_Item * data);

int __si_xnap_Encode_DRBsToBeSetup_List_ModRqd_SNterminated_Item( SI_XNAP_DT_DRBsToBeSetup_List_ModRqd_SNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item( SI_XNAP_DT_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item ** data);

void __si_xnap_debug_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item( char * key, SI_XNAP_DT_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item * data, int lvl);

void __si_xnap_memfree_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item( SI_XNAP_DT_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item * data);

int __si_xnap_Encode_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item( SI_XNAP_DT_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated( SI_XNAP_DT_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated ** data);

void __si_xnap_debug_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated( char * key, SI_XNAP_DT_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated * data, int lvl);

void __si_xnap_memfree_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated( SI_XNAP_DT_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated * data);

int __si_xnap_Encode_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated( SI_XNAP_DT_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsToBeModified_List_ModRqd_SNterminated_Item( SI_XNAP_DT_DRBsToBeModified_List_ModRqd_SNterminated_Item ** data);

void __si_xnap_debug_DRBsToBeModified_List_ModRqd_SNterminated_Item( char * key, SI_XNAP_DT_DRBsToBeModified_List_ModRqd_SNterminated_Item * data, int lvl);

void __si_xnap_memfree_DRBsToBeModified_List_ModRqd_SNterminated_Item( SI_XNAP_DT_DRBsToBeModified_List_ModRqd_SNterminated_Item * data);

int __si_xnap_Encode_DRBsToBeModified_List_ModRqd_SNterminated_Item( SI_XNAP_DT_DRBsToBeModified_List_ModRqd_SNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item( SI_XNAP_DT_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item ** data);

void __si_xnap_debug_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item( char * key, SI_XNAP_DT_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item * data, int lvl);

void __si_xnap_memfree_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item( SI_XNAP_DT_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item * data);

int __si_xnap_Encode_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item( SI_XNAP_DT_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsAdmittedList_ModConfirm_SNterminated( SI_XNAP_DT_DRBsAdmittedList_ModConfirm_SNterminated ** data);

void __si_xnap_debug_DRBsAdmittedList_ModConfirm_SNterminated( char * key, SI_XNAP_DT_DRBsAdmittedList_ModConfirm_SNterminated * data, int lvl);

void __si_xnap_memfree_DRBsAdmittedList_ModConfirm_SNterminated( SI_XNAP_DT_DRBsAdmittedList_ModConfirm_SNterminated * data);

int __si_xnap_Encode_DRBsAdmittedList_ModConfirm_SNterminated( SI_XNAP_DT_DRBsAdmittedList_ModConfirm_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceModConfirmInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceModConfirmInfo_SNterminated ** data);

void __si_xnap_debug_PDUSessionResourceModConfirmInfo_SNterminated( char * key, SI_XNAP_DT_PDUSessionResourceModConfirmInfo_SNterminated * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceModConfirmInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceModConfirmInfo_SNterminated * data);

int __si_xnap_Encode_PDUSessionResourceModConfirmInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceModConfirmInfo_SNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsAdmittedList_ModConfirm_SNterminated_Item( SI_XNAP_DT_DRBsAdmittedList_ModConfirm_SNterminated_Item ** data);

void __si_xnap_debug_DRBsAdmittedList_ModConfirm_SNterminated_Item( char * key, SI_XNAP_DT_DRBsAdmittedList_ModConfirm_SNterminated_Item * data, int lvl);

void __si_xnap_memfree_DRBsAdmittedList_ModConfirm_SNterminated_Item( SI_XNAP_DT_DRBsAdmittedList_ModConfirm_SNterminated_Item * data);

int __si_xnap_Encode_DRBsAdmittedList_ModConfirm_SNterminated_Item( SI_XNAP_DT_DRBsAdmittedList_ModConfirm_SNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsToBeModified_List_ModRqd_MNterminated( SI_XNAP_DT_DRBsToBeModified_List_ModRqd_MNterminated ** data);

void __si_xnap_debug_DRBsToBeModified_List_ModRqd_MNterminated( char * key, SI_XNAP_DT_DRBsToBeModified_List_ModRqd_MNterminated * data, int lvl);

void __si_xnap_memfree_DRBsToBeModified_List_ModRqd_MNterminated( SI_XNAP_DT_DRBsToBeModified_List_ModRqd_MNterminated * data);

int __si_xnap_Encode_DRBsToBeModified_List_ModRqd_MNterminated( SI_XNAP_DT_DRBsToBeModified_List_ModRqd_MNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceModRqdInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceModRqdInfo_MNterminated ** data);

void __si_xnap_debug_PDUSessionResourceModRqdInfo_MNterminated( char * key, SI_XNAP_DT_PDUSessionResourceModRqdInfo_MNterminated * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceModRqdInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceModRqdInfo_MNterminated * data);

int __si_xnap_Encode_PDUSessionResourceModRqdInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceModRqdInfo_MNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsToBeModified_List_ModRqd_MNterminated_Item( SI_XNAP_DT_DRBsToBeModified_List_ModRqd_MNterminated_Item ** data);

void __si_xnap_debug_DRBsToBeModified_List_ModRqd_MNterminated_Item( char * key, SI_XNAP_DT_DRBsToBeModified_List_ModRqd_MNterminated_Item * data, int lvl);

void __si_xnap_memfree_DRBsToBeModified_List_ModRqd_MNterminated_Item( SI_XNAP_DT_DRBsToBeModified_List_ModRqd_MNterminated_Item * data);

int __si_xnap_Encode_DRBsToBeModified_List_ModRqd_MNterminated_Item( SI_XNAP_DT_DRBsToBeModified_List_ModRqd_MNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceModConfirmInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceModConfirmInfo_MNterminated ** data);

void __si_xnap_debug_PDUSessionResourceModConfirmInfo_MNterminated( char * key, SI_XNAP_DT_PDUSessionResourceModConfirmInfo_MNterminated * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceModConfirmInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceModConfirmInfo_MNterminated * data);

int __si_xnap_Encode_PDUSessionResourceModConfirmInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceModConfirmInfo_MNterminated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item( SI_XNAP_DT_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item ** data);

void __si_xnap_debug_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item( char * key, SI_XNAP_DT_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item * data, int lvl);

void __si_xnap_memfree_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item( SI_XNAP_DT_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item * data);

int __si_xnap_Encode_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item( SI_XNAP_DT_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceSecondaryRATUsageList( SI_XNAP_DT_PDUSessionResourceSecondaryRATUsageList ** data);

void __si_xnap_debug_PDUSessionResourceSecondaryRATUsageList( char * key, SI_XNAP_DT_PDUSessionResourceSecondaryRATUsageList * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceSecondaryRATUsageList( SI_XNAP_DT_PDUSessionResourceSecondaryRATUsageList * data);

int __si_xnap_Encode_PDUSessionResourceSecondaryRATUsageList( SI_XNAP_DT_PDUSessionResourceSecondaryRATUsageList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PDUSessionUsageReport_rATType( char * key, uint8_t ePDUSessionUsageReport_rATType, int lvl);

int __si_xnap_Encode_PDUSessionUsageReport_rATType( uint8_t ePDUSessionUsageReport_rATType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_VolumeTimedReportList( SI_XNAP_DT_VolumeTimedReportList ** data);

void __si_xnap_debug_VolumeTimedReportList( char * key, SI_XNAP_DT_VolumeTimedReportList * data, int lvl);

void __si_xnap_memfree_VolumeTimedReportList( SI_XNAP_DT_VolumeTimedReportList * data);

int __si_xnap_Encode_VolumeTimedReportList( SI_XNAP_DT_VolumeTimedReportList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionUsageReport( SI_XNAP_DT_PDUSessionUsageReport ** data);

void __si_xnap_debug_PDUSessionUsageReport( char * key, SI_XNAP_DT_PDUSessionUsageReport * data, int lvl);

void __si_xnap_memfree_PDUSessionUsageReport( SI_XNAP_DT_PDUSessionUsageReport * data);

int __si_xnap_Encode_PDUSessionUsageReport( SI_XNAP_DT_PDUSessionUsageReport * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsUsageReportList( SI_XNAP_DT_QoSFlowsUsageReportList ** data);

void __si_xnap_debug_QoSFlowsUsageReportList( char * key, SI_XNAP_DT_QoSFlowsUsageReportList * data, int lvl);

void __si_xnap_memfree_QoSFlowsUsageReportList( SI_XNAP_DT_QoSFlowsUsageReportList * data);

int __si_xnap_Encode_QoSFlowsUsageReportList( SI_XNAP_DT_QoSFlowsUsageReportList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SecondaryRATUsageInformation( SI_XNAP_DT_SecondaryRATUsageInformation ** data);

void __si_xnap_debug_SecondaryRATUsageInformation( char * key, SI_XNAP_DT_SecondaryRATUsageInformation * data, int lvl);

void __si_xnap_memfree_SecondaryRATUsageInformation( SI_XNAP_DT_SecondaryRATUsageInformation * data);

int __si_xnap_Encode_SecondaryRATUsageInformation( SI_XNAP_DT_SecondaryRATUsageInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourceSecondaryRATUsageItem( SI_XNAP_DT_PDUSessionResourceSecondaryRATUsageItem ** data);

void __si_xnap_debug_PDUSessionResourceSecondaryRATUsageItem( char * key, SI_XNAP_DT_PDUSessionResourceSecondaryRATUsageItem * data, int lvl);

void __si_xnap_memfree_PDUSessionResourceSecondaryRATUsageItem( SI_XNAP_DT_PDUSessionResourceSecondaryRATUsageItem * data);

int __si_xnap_Encode_PDUSessionResourceSecondaryRATUsageItem( SI_XNAP_DT_PDUSessionResourceSecondaryRATUsageItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionCommonNetworkInstance( SI_XNAP_DT_PDUSessionCommonNetworkInstance ** data);

void __si_xnap_init_PDUSessionCommonNetworkInstance2( SI_XNAP_DT_PDUSessionCommonNetworkInstance ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_PDUSessionCommonNetworkInstance( char * key, SI_XNAP_DT_PDUSessionCommonNetworkInstance * data, int lvl);

void __si_xnap_memfree_PDUSessionCommonNetworkInstance( SI_XNAP_DT_PDUSessionCommonNetworkInstance * data);

int __si_xnap_Encode_PDUSessionCommonNetworkInstance( SI_XNAP_DT_PDUSessionCommonNetworkInstance * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PDUSession_PairID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_PDUSession_PairID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_PDUSession_PairID( SI_XNAP_DT_PDUSession_PairID * data);


void __si_xnap_init_PosPartialUEContextInfo( SI_XNAP_DT_PosPartialUEContextInfo ** data);

void __si_xnap_debug_PosPartialUEContextInfo( char * key, SI_XNAP_DT_PosPartialUEContextInfo * data, int lvl);

void __si_xnap_memfree_PosPartialUEContextInfo( SI_XNAP_DT_PosPartialUEContextInfo * data);

int __si_xnap_Encode_PosPartialUEContextInfo( SI_XNAP_DT_PosPartialUEContextInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PredictedTrajectoryNGRANCellInfo_predictedTimeUEStaysInCell( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_PredictedTrajectoryNGRANCellInfo_predictedTimeUEStaysInCell( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_PredictedTrajectoryNGRANCellInfo_predictedTimeUEStaysInCell( SI_XNAP_DT_PredictedTrajectoryNGRANCellInfo_predictedTimeUEStaysInCell * data);


void __si_xnap_init_PredictedTrajectoryNGRANCellInfo( SI_XNAP_DT_PredictedTrajectoryNGRANCellInfo ** data);

void __si_xnap_debug_PredictedTrajectoryNGRANCellInfo( char * key, SI_XNAP_DT_PredictedTrajectoryNGRANCellInfo * data, int lvl);

void __si_xnap_memfree_PredictedTrajectoryNGRANCellInfo( SI_XNAP_DT_PredictedTrajectoryNGRANCellInfo * data);

int __si_xnap_Encode_PredictedTrajectoryNGRANCellInfo( SI_XNAP_DT_PredictedTrajectoryNGRANCellInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PredictedTrajectoryCellInfo( SI_XNAP_DT_PredictedTrajectoryCellInfo ** data);

void __si_xnap_debug_PredictedTrajectoryCellInfo( char * key, SI_XNAP_DT_PredictedTrajectoryCellInfo * data, int lvl);

void __si_xnap_memfree_PredictedTrajectoryCellInfo( SI_XNAP_DT_PredictedTrajectoryCellInfo * data);

int __si_xnap_Encode_PredictedTrajectoryCellInfo( SI_XNAP_DT_PredictedTrajectoryCellInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PredictedUETrajectory_Item( SI_XNAP_DT_PredictedUETrajectory_Item ** data);

void __si_xnap_debug_PredictedUETrajectory_Item( char * key, SI_XNAP_DT_PredictedUETrajectory_Item * data, int lvl);

void __si_xnap_memfree_PredictedUETrajectory_Item( SI_XNAP_DT_PredictedUETrajectory_Item * data);

int __si_xnap_Encode_PredictedUETrajectory_Item( SI_XNAP_DT_PredictedUETrajectory_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ProtectedEUTRAResourceIndication_pDCCHRegionLength( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_ProtectedEUTRAResourceIndication_pDCCHRegionLength( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_ProtectedEUTRAResourceIndication_pDCCHRegionLength( SI_XNAP_DT_ProtectedEUTRAResourceIndication_pDCCHRegionLength * data);


void __si_xnap_init_ProtectedE_UTRAResourceList( SI_XNAP_DT_ProtectedE_UTRAResourceList ** data);

void __si_xnap_debug_ProtectedE_UTRAResourceList( char * key, SI_XNAP_DT_ProtectedE_UTRAResourceList * data, int lvl);

void __si_xnap_memfree_ProtectedE_UTRAResourceList( SI_XNAP_DT_ProtectedE_UTRAResourceList * data);

int __si_xnap_Encode_ProtectedE_UTRAResourceList( SI_XNAP_DT_ProtectedE_UTRAResourceList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ProtectedE_UTRAResourceIndication( SI_XNAP_DT_ProtectedE_UTRAResourceIndication ** data);

void __si_xnap_debug_ProtectedE_UTRAResourceIndication( char * key, SI_XNAP_DT_ProtectedE_UTRAResourceIndication * data, int lvl);

void __si_xnap_memfree_ProtectedE_UTRAResourceIndication( SI_XNAP_DT_ProtectedE_UTRAResourceIndication * data);

int __si_xnap_Encode_ProtectedE_UTRAResourceIndication( SI_XNAP_DT_ProtectedE_UTRAResourceIndication * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ProtectedEUTRAResourceItem_resourceType( char * key, uint8_t eProtectedEUTRAResourceItem_resourceType, int lvl);

int __si_xnap_Encode_ProtectedEUTRAResourceItem_resourceType( uint8_t eProtectedEUTRAResourceItem_resourceType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ProtectedEUTRAResourceItem_intra_PRBProtectedResourceFootprint( SI_XNAP_DT_ProtectedEUTRAResourceItem_intra_PRBProtectedResourceFootprint ** data);

void __si_xnap_init_ProtectedEUTRAResourceItem_intra_PRBProtectedResourceFootprint2( SI_XNAP_DT_ProtectedEUTRAResourceItem_intra_PRBProtectedResourceFootprint ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_ProtectedEUTRAResourceItem_intra_PRBProtectedResourceFootprint( char * key, SI_XNAP_DT_ProtectedEUTRAResourceItem_intra_PRBProtectedResourceFootprint * data, int lvl);

void __si_xnap_memfree_ProtectedEUTRAResourceItem_intra_PRBProtectedResourceFootprint( SI_XNAP_DT_ProtectedEUTRAResourceItem_intra_PRBProtectedResourceFootprint * data);

int __si_xnap_Encode_ProtectedEUTRAResourceItem_intra_PRBProtectedResourceFootprint( SI_XNAP_DT_ProtectedEUTRAResourceItem_intra_PRBProtectedResourceFootprint * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ProtectedEUTRAResourceItem_protectedFootprintFrequencyPattern( SI_XNAP_DT_ProtectedEUTRAResourceItem_protectedFootprintFrequencyPattern ** data);

void __si_xnap_init_ProtectedEUTRAResourceItem_protectedFootprintFrequencyPattern2( SI_XNAP_DT_ProtectedEUTRAResourceItem_protectedFootprintFrequencyPattern ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_ProtectedEUTRAResourceItem_protectedFootprintFrequencyPattern( char * key, SI_XNAP_DT_ProtectedEUTRAResourceItem_protectedFootprintFrequencyPattern * data, int lvl);

void __si_xnap_memfree_ProtectedEUTRAResourceItem_protectedFootprintFrequencyPattern( SI_XNAP_DT_ProtectedEUTRAResourceItem_protectedFootprintFrequencyPattern * data);

int __si_xnap_Encode_ProtectedEUTRAResourceItem_protectedFootprintFrequencyPattern( SI_XNAP_DT_ProtectedEUTRAResourceItem_protectedFootprintFrequencyPattern * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ProtectedEUTRAFootprintTimePattern_protectedFootprintTimeperiodicity( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_ProtectedEUTRAFootprintTimePattern_protectedFootprintTimeperiodicity( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_ProtectedEUTRAFootprintTimePattern_protectedFootprintTimeperiodicity( SI_XNAP_DT_ProtectedEUTRAFootprintTimePattern_protectedFootprintTimeperiodicity * data);


void __si_xnap_debug_ProtectedEUTRAFootprintTimePattern_protectedFootrpintStartTime( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_ProtectedEUTRAFootprintTimePattern_protectedFootrpintStartTime( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_ProtectedEUTRAFootprintTimePattern_protectedFootrpintStartTime( SI_XNAP_DT_ProtectedEUTRAFootprintTimePattern_protectedFootrpintStartTime * data);


void __si_xnap_init_ProtectedE_UTRAFootprintTimePattern( SI_XNAP_DT_ProtectedE_UTRAFootprintTimePattern ** data);

void __si_xnap_debug_ProtectedE_UTRAFootprintTimePattern( char * key, SI_XNAP_DT_ProtectedE_UTRAFootprintTimePattern * data, int lvl);

void __si_xnap_memfree_ProtectedE_UTRAFootprintTimePattern( SI_XNAP_DT_ProtectedE_UTRAFootprintTimePattern * data);

int __si_xnap_Encode_ProtectedE_UTRAFootprintTimePattern( SI_XNAP_DT_ProtectedE_UTRAFootprintTimePattern * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ProtectedE_UTRAResource_Item( SI_XNAP_DT_ProtectedE_UTRAResource_Item ** data);

void __si_xnap_debug_ProtectedE_UTRAResource_Item( char * key, SI_XNAP_DT_ProtectedE_UTRAResource_Item * data, int lvl);

void __si_xnap_memfree_ProtectedE_UTRAResource_Item( SI_XNAP_DT_ProtectedE_UTRAResource_Item * data);

int __si_xnap_Encode_ProtectedE_UTRAResource_Item( SI_XNAP_DT_ProtectedE_UTRAResource_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PrivacyIndicator( char * key, uint8_t ePrivacyIndicator, int lvl);

int __si_xnap_Encode_PrivacyIndicator( uint8_t ePrivacyIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PSCellChangeHistory( char * key, uint8_t ePSCellChangeHistory, int lvl);

int __si_xnap_Encode_PSCellChangeHistory( uint8_t ePSCellChangeHistory, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_PSCellHistoryInformationRetrieve( char * key, uint8_t ePSCellHistoryInformationRetrieve, int lvl);

int __si_xnap_Encode_PSCellHistoryInformationRetrieve( uint8_t ePSCellHistoryInformationRetrieve, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PSCellListContainer( SI_XNAP_DT_PSCellListContainer ** data);

void __si_xnap_init_PSCellListContainer2( SI_XNAP_DT_PSCellListContainer ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_PSCellListContainer( char * key, SI_XNAP_DT_PSCellListContainer * data, int lvl);

void __si_xnap_memfree_PSCellListContainer( SI_XNAP_DT_PSCellListContainer * data);

int __si_xnap_Encode_PSCellListContainer( SI_XNAP_DT_PSCellListContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PNI_NPN_AreaScopeofMDT( SI_XNAP_DT_PNI_NPN_AreaScopeofMDT ** data);

void __si_xnap_debug_PNI_NPN_AreaScopeofMDT( char * key, SI_XNAP_DT_PNI_NPN_AreaScopeofMDT * data, int lvl);

void __si_xnap_memfree_PNI_NPN_AreaScopeofMDT( SI_XNAP_DT_PNI_NPN_AreaScopeofMDT * data);

int __si_xnap_Encode_PNI_NPN_AreaScopeofMDT( SI_XNAP_DT_PNI_NPN_AreaScopeofMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PNI_NPNBasedMDT( SI_XNAP_DT_PNI_NPNBasedMDT ** data);

void __si_xnap_debug_PNI_NPNBasedMDT( char * key, SI_XNAP_DT_PNI_NPNBasedMDT * data, int lvl);

void __si_xnap_memfree_PNI_NPNBasedMDT( SI_XNAP_DT_PNI_NPNBasedMDT * data);

int __si_xnap_Encode_PNI_NPNBasedMDT( SI_XNAP_DT_PNI_NPNBasedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEAppLayerMeasInfoList( SI_XNAP_DT_UEAppLayerMeasInfoList ** data);

void __si_xnap_debug_UEAppLayerMeasInfoList( char * key, SI_XNAP_DT_UEAppLayerMeasInfoList * data, int lvl);

void __si_xnap_memfree_UEAppLayerMeasInfoList( SI_XNAP_DT_UEAppLayerMeasInfoList * data);

int __si_xnap_Encode_UEAppLayerMeasInfoList( SI_XNAP_DT_UEAppLayerMeasInfoList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QMCConfigInfo( SI_XNAP_DT_QMCConfigInfo ** data);

void __si_xnap_debug_QMCConfigInfo( char * key, SI_XNAP_DT_QMCConfigInfo * data, int lvl);

void __si_xnap_memfree_QMCConfigInfo( SI_XNAP_DT_QMCConfigInfo * data);

int __si_xnap_Encode_QMCConfigInfo( SI_XNAP_DT_QMCConfigInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QOEReference( SI_XNAP_DT_QOEReference ** data);

void __si_xnap_init_QOEReference2( SI_XNAP_DT_QOEReference ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_QOEReference( char * key, SI_XNAP_DT_QOEReference * data, int lvl);

void __si_xnap_memfree_QOEReference( SI_XNAP_DT_QOEReference * data);

int __si_xnap_Encode_QOEReference( SI_XNAP_DT_QOEReference * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_QOEMeasConfAppLayerID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_QOEMeasConfAppLayerID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_QOEMeasConfAppLayerID( SI_XNAP_DT_QOEMeasConfAppLayerID * data);


void __si_xnap_debug_ServiceType( char * key, uint8_t eServiceType, int lvl);

int __si_xnap_Encode_ServiceType( uint8_t eServiceType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_QOEMeasStatus( char * key, uint8_t eQOEMeasStatus, int lvl);

int __si_xnap_Encode_QOEMeasStatus( uint8_t eQOEMeasStatus, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_S_NSSAIListQoE( SI_XNAP_DT_S_NSSAIListQoE ** data);

void __si_xnap_debug_S_NSSAIListQoE( char * key, SI_XNAP_DT_S_NSSAIListQoE * data, int lvl);

void __si_xnap_memfree_S_NSSAIListQoE( SI_XNAP_DT_S_NSSAIListQoE * data);

int __si_xnap_Encode_S_NSSAIListQoE( SI_XNAP_DT_S_NSSAIListQoE * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEAppLayerMeasConfigInfo( SI_XNAP_DT_UEAppLayerMeasConfigInfo ** data);

void __si_xnap_debug_UEAppLayerMeasConfigInfo( char * key, SI_XNAP_DT_UEAppLayerMeasConfigInfo * data, int lvl);

void __si_xnap_memfree_UEAppLayerMeasConfigInfo( SI_XNAP_DT_UEAppLayerMeasConfigInfo * data);

int __si_xnap_Encode_UEAppLayerMeasConfigInfo( SI_XNAP_DT_UEAppLayerMeasConfigInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEAppLayerMeasInfo_Item( SI_XNAP_DT_UEAppLayerMeasInfo_Item ** data);

void __si_xnap_debug_UEAppLayerMeasInfo_Item( char * key, SI_XNAP_DT_UEAppLayerMeasInfo_Item * data, int lvl);

void __si_xnap_memfree_UEAppLayerMeasInfo_Item( SI_XNAP_DT_UEAppLayerMeasInfo_Item * data);

int __si_xnap_Encode_UEAppLayerMeasInfo_Item( SI_XNAP_DT_UEAppLayerMeasInfo_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MN_to_SN_QMCCoordRequestList( SI_XNAP_DT_MN_to_SN_QMCCoordRequestList ** data);

void __si_xnap_debug_MN_to_SN_QMCCoordRequestList( char * key, SI_XNAP_DT_MN_to_SN_QMCCoordRequestList * data, int lvl);

void __si_xnap_memfree_MN_to_SN_QMCCoordRequestList( SI_XNAP_DT_MN_to_SN_QMCCoordRequestList * data);

int __si_xnap_Encode_MN_to_SN_QMCCoordRequestList( SI_XNAP_DT_MN_to_SN_QMCCoordRequestList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SN_to_MN_QMCCoordRequestList( SI_XNAP_DT_SN_to_MN_QMCCoordRequestList ** data);

void __si_xnap_debug_SN_to_MN_QMCCoordRequestList( char * key, SI_XNAP_DT_SN_to_MN_QMCCoordRequestList * data, int lvl);

void __si_xnap_memfree_SN_to_MN_QMCCoordRequestList( SI_XNAP_DT_SN_to_MN_QMCCoordRequestList * data);

int __si_xnap_Encode_SN_to_MN_QMCCoordRequestList( SI_XNAP_DT_SN_to_MN_QMCCoordRequestList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QMCCoordinationRequest( SI_XNAP_DT_QMCCoordinationRequest ** data);

void __si_xnap_debug_QMCCoordinationRequest( char * key, SI_XNAP_DT_QMCCoordinationRequest * data, int lvl);

void __si_xnap_memfree_QMCCoordinationRequest( SI_XNAP_DT_QMCCoordinationRequest * data);

int __si_xnap_Encode_QMCCoordinationRequest( SI_XNAP_DT_QMCCoordinationRequest * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MNtoSNQMCCoordRequestListItem_qoEReportingPathRequest( char * key, uint8_t eMNtoSNQMCCoordRequestListItem_qoEReportingPathRequest, int lvl);

int __si_xnap_Encode_MNtoSNQMCCoordRequestListItem_qoEReportingPathRequest( uint8_t eMNtoSNQMCCoordRequestListItem_qoEReportingPathRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MNtoSNQMCCoordRequestListItem_rVQoEReportingPathRequest( char * key, uint8_t eMNtoSNQMCCoordRequestListItem_rVQoEReportingPathRequest, int lvl);

int __si_xnap_Encode_MNtoSNQMCCoordRequestListItem_rVQoEReportingPathRequest( uint8_t eMNtoSNQMCCoordRequestListItem_rVQoEReportingPathRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MNtoSNQMCCoordRequestListItem_furtherRVQoEInterestInquiry( char * key, uint8_t eMNtoSNQMCCoordRequestListItem_furtherRVQoEInterestInquiry, int lvl);

int __si_xnap_Encode_MNtoSNQMCCoordRequestListItem_furtherRVQoEInterestInquiry( uint8_t eMNtoSNQMCCoordRequestListItem_furtherRVQoEInterestInquiry, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MNtoSNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry( char * key, uint8_t eMNtoSNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry, int lvl);

int __si_xnap_Encode_MNtoSNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry( uint8_t eMNtoSNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MNtoSNQMCCoordRequestListItem_configReleaseIndication( char * key, uint8_t eMNtoSNQMCCoordRequestListItem_configReleaseIndication, int lvl);

int __si_xnap_Encode_MNtoSNQMCCoordRequestListItem_configReleaseIndication( uint8_t eMNtoSNQMCCoordRequestListItem_configReleaseIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RVQoEReportingPeriodicity( char * key, uint8_t eRVQoEReportingPeriodicity, int lvl);

int __si_xnap_Encode_RVQoEReportingPeriodicity( uint8_t eRVQoEReportingPeriodicity, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RVQoEConfig( SI_XNAP_DT_RVQoEConfig ** data);

void __si_xnap_debug_RVQoEConfig( char * key, SI_XNAP_DT_RVQoEConfig * data, int lvl);

void __si_xnap_memfree_RVQoEConfig( SI_XNAP_DT_RVQoEConfig * data);

int __si_xnap_Encode_RVQoEConfig( SI_XNAP_DT_RVQoEConfig * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MN_to_SN_QMCCoordRequestList_Item( SI_XNAP_DT_MN_to_SN_QMCCoordRequestList_Item ** data);

void __si_xnap_debug_MN_to_SN_QMCCoordRequestList_Item( char * key, SI_XNAP_DT_MN_to_SN_QMCCoordRequestList_Item * data, int lvl);

void __si_xnap_memfree_MN_to_SN_QMCCoordRequestList_Item( SI_XNAP_DT_MN_to_SN_QMCCoordRequestList_Item * data);

int __si_xnap_Encode_MN_to_SN_QMCCoordRequestList_Item( SI_XNAP_DT_MN_to_SN_QMCCoordRequestList_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SNtoMNQMCCoordRequestListItem_qoEReportingPathRequest( char * key, uint8_t eSNtoMNQMCCoordRequestListItem_qoEReportingPathRequest, int lvl);

int __si_xnap_Encode_SNtoMNQMCCoordRequestListItem_qoEReportingPathRequest( uint8_t eSNtoMNQMCCoordRequestListItem_qoEReportingPathRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SNtoMNQMCCoordRequestListItem_rVQoEReportingPathRequest( char * key, uint8_t eSNtoMNQMCCoordRequestListItem_rVQoEReportingPathRequest, int lvl);

int __si_xnap_Encode_SNtoMNQMCCoordRequestListItem_rVQoEReportingPathRequest( uint8_t eSNtoMNQMCCoordRequestListItem_rVQoEReportingPathRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SNtoMNQMCCoordRequestListItem_furtherRVQoEInterestInquiry( char * key, uint8_t eSNtoMNQMCCoordRequestListItem_furtherRVQoEInterestInquiry, int lvl);

int __si_xnap_Encode_SNtoMNQMCCoordRequestListItem_furtherRVQoEInterestInquiry( uint8_t eSNtoMNQMCCoordRequestListItem_furtherRVQoEInterestInquiry, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SNtoMNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry( char * key, uint8_t eSNtoMNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry, int lvl);

int __si_xnap_Encode_SNtoMNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry( uint8_t eSNtoMNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SNtoMNQMCCoordRequestListItem_configReleaseIndication( char * key, uint8_t eSNtoMNQMCCoordRequestListItem_configReleaseIndication, int lvl);

int __si_xnap_Encode_SNtoMNQMCCoordRequestListItem_configReleaseIndication( uint8_t eSNtoMNQMCCoordRequestListItem_configReleaseIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SN_to_MN_QMCCoordRequestList_Item( SI_XNAP_DT_SN_to_MN_QMCCoordRequestList_Item ** data);

void __si_xnap_debug_SN_to_MN_QMCCoordRequestList_Item( char * key, SI_XNAP_DT_SN_to_MN_QMCCoordRequestList_Item * data, int lvl);

void __si_xnap_memfree_SN_to_MN_QMCCoordRequestList_Item( SI_XNAP_DT_SN_to_MN_QMCCoordRequestList_Item * data);

int __si_xnap_Encode_SN_to_MN_QMCCoordRequestList_Item( SI_XNAP_DT_SN_to_MN_QMCCoordRequestList_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MN_to_SN_QMCCoordResponseList( SI_XNAP_DT_MN_to_SN_QMCCoordResponseList ** data);

void __si_xnap_debug_MN_to_SN_QMCCoordResponseList( char * key, SI_XNAP_DT_MN_to_SN_QMCCoordResponseList * data, int lvl);

void __si_xnap_memfree_MN_to_SN_QMCCoordResponseList( SI_XNAP_DT_MN_to_SN_QMCCoordResponseList * data);

int __si_xnap_Encode_MN_to_SN_QMCCoordResponseList( SI_XNAP_DT_MN_to_SN_QMCCoordResponseList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SN_to_MN_QMCCoordResponseList( SI_XNAP_DT_SN_to_MN_QMCCoordResponseList ** data);

void __si_xnap_debug_SN_to_MN_QMCCoordResponseList( char * key, SI_XNAP_DT_SN_to_MN_QMCCoordResponseList * data, int lvl);

void __si_xnap_memfree_SN_to_MN_QMCCoordResponseList( SI_XNAP_DT_SN_to_MN_QMCCoordResponseList * data);

int __si_xnap_Encode_SN_to_MN_QMCCoordResponseList( SI_XNAP_DT_SN_to_MN_QMCCoordResponseList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QMCCoordinationResponse( SI_XNAP_DT_QMCCoordinationResponse ** data);

void __si_xnap_debug_QMCCoordinationResponse( char * key, SI_XNAP_DT_QMCCoordinationResponse * data, int lvl);

void __si_xnap_memfree_QMCCoordinationResponse( SI_XNAP_DT_QMCCoordinationResponse * data);

int __si_xnap_Encode_QMCCoordinationResponse( SI_XNAP_DT_QMCCoordinationResponse * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MNtoSNQMCCoordResponseListItem_qoEConfigSendingPath( char * key, uint8_t eMNtoSNQMCCoordResponseListItem_qoEConfigSendingPath, int lvl);

int __si_xnap_Encode_MNtoSNQMCCoordResponseListItem_qoEConfigSendingPath( uint8_t eMNtoSNQMCCoordResponseListItem_qoEConfigSendingPath, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MNtoSNQMCCoordResponseListItem_qoEReportingPathResponse( char * key, uint8_t eMNtoSNQMCCoordResponseListItem_qoEReportingPathResponse, int lvl);

int __si_xnap_Encode_MNtoSNQMCCoordResponseListItem_qoEReportingPathResponse( uint8_t eMNtoSNQMCCoordResponseListItem_qoEReportingPathResponse, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MNtoSNQMCCoordResponseListItem_rVQoEReportingPathResponse( char * key, uint8_t eMNtoSNQMCCoordResponseListItem_rVQoEReportingPathResponse, int lvl);

int __si_xnap_Encode_MNtoSNQMCCoordResponseListItem_rVQoEReportingPathResponse( uint8_t eMNtoSNQMCCoordResponseListItem_rVQoEReportingPathResponse, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MNtoSNQMCCoordResponseListItem_furtherRVQoEInterestResponse( char * key, uint8_t eMNtoSNQMCCoordResponseListItem_furtherRVQoEInterestResponse, int lvl);

int __si_xnap_Encode_MNtoSNQMCCoordResponseListItem_furtherRVQoEInterestResponse( uint8_t eMNtoSNQMCCoordResponseListItem_furtherRVQoEInterestResponse, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_MNtoSNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse( char * key, uint8_t eMNtoSNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse, int lvl);

int __si_xnap_Encode_MNtoSNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse( uint8_t eMNtoSNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_MN_to_SN_QMCCoordResponseList_Item( SI_XNAP_DT_MN_to_SN_QMCCoordResponseList_Item ** data);

void __si_xnap_debug_MN_to_SN_QMCCoordResponseList_Item( char * key, SI_XNAP_DT_MN_to_SN_QMCCoordResponseList_Item * data, int lvl);

void __si_xnap_memfree_MN_to_SN_QMCCoordResponseList_Item( SI_XNAP_DT_MN_to_SN_QMCCoordResponseList_Item * data);

int __si_xnap_Encode_MN_to_SN_QMCCoordResponseList_Item( SI_XNAP_DT_MN_to_SN_QMCCoordResponseList_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SNtoMNQMCCoordResponseListItem_qoEReportingPathResponse( char * key, uint8_t eSNtoMNQMCCoordResponseListItem_qoEReportingPathResponse, int lvl);

int __si_xnap_Encode_SNtoMNQMCCoordResponseListItem_qoEReportingPathResponse( uint8_t eSNtoMNQMCCoordResponseListItem_qoEReportingPathResponse, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SNtoMNQMCCoordResponseListItem_rVQoEReportingPathResponse( char * key, uint8_t eSNtoMNQMCCoordResponseListItem_rVQoEReportingPathResponse, int lvl);

int __si_xnap_Encode_SNtoMNQMCCoordResponseListItem_rVQoEReportingPathResponse( uint8_t eSNtoMNQMCCoordResponseListItem_rVQoEReportingPathResponse, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SNtoMNQMCCoordResponseListItem_furtherRVQoEInterestResponse( char * key, uint8_t eSNtoMNQMCCoordResponseListItem_furtherRVQoEInterestResponse, int lvl);

int __si_xnap_Encode_SNtoMNQMCCoordResponseListItem_furtherRVQoEInterestResponse( uint8_t eSNtoMNQMCCoordResponseListItem_furtherRVQoEInterestResponse, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SNtoMNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse( char * key, uint8_t eSNtoMNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse, int lvl);

int __si_xnap_Encode_SNtoMNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse( uint8_t eSNtoMNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SN_to_MN_QMCCoordResponseList_Item( SI_XNAP_DT_SN_to_MN_QMCCoordResponseList_Item ** data);

void __si_xnap_debug_SN_to_MN_QMCCoordResponseList_Item( char * key, SI_XNAP_DT_SN_to_MN_QMCCoordResponseList_Item * data, int lvl);

void __si_xnap_memfree_SN_to_MN_QMCCoordResponseList_Item( SI_XNAP_DT_SN_to_MN_QMCCoordResponseList_Item * data);

int __si_xnap_Encode_SN_to_MN_QMCCoordResponseList_Item( SI_XNAP_DT_SN_to_MN_QMCCoordResponseList_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_QoERVQoEReportingPaths_qoEReportingPath( char * key, uint8_t eQoERVQoEReportingPaths_qoEReportingPath, int lvl);

int __si_xnap_Encode_QoERVQoEReportingPaths_qoEReportingPath( uint8_t eQoERVQoEReportingPaths_qoEReportingPath, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_QoERVQoEReportingPaths_rVQoEReportingPath( char * key, uint8_t eQoERVQoEReportingPaths_rVQoEReportingPath, int lvl);

int __si_xnap_Encode_QoERVQoEReportingPaths_rVQoEReportingPath( uint8_t eQoERVQoEReportingPaths_rVQoEReportingPath, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoERVQoEReportingPaths( SI_XNAP_DT_QoERVQoEReportingPaths ** data);

void __si_xnap_debug_QoERVQoEReportingPaths( char * key, SI_XNAP_DT_QoERVQoEReportingPaths * data, int lvl);

void __si_xnap_memfree_QoERVQoEReportingPaths( SI_XNAP_DT_QoERVQoEReportingPaths * data);

int __si_xnap_Encode_QoERVQoEReportingPaths( SI_XNAP_DT_QoERVQoEReportingPaths * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowNotificationControlIndicationInfo( SI_XNAP_DT_QoSFlowNotificationControlIndicationInfo ** data);

void __si_xnap_debug_QoSFlowNotificationControlIndicationInfo( char * key, SI_XNAP_DT_QoSFlowNotificationControlIndicationInfo * data, int lvl);

void __si_xnap_memfree_QoSFlowNotificationControlIndicationInfo( SI_XNAP_DT_QoSFlowNotificationControlIndicationInfo * data);

int __si_xnap_Encode_QoSFlowNotificationControlIndicationInfo( SI_XNAP_DT_QoSFlowNotificationControlIndicationInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_QoSFlowNotifyItem_notificationInformation( char * key, uint8_t eQoSFlowNotifyItem_notificationInformation, int lvl);

int __si_xnap_Encode_QoSFlowNotifyItem_notificationInformation( uint8_t eQoSFlowNotifyItem_notificationInformation, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowNotify_Item( SI_XNAP_DT_QoSFlowNotify_Item ** data);

void __si_xnap_debug_QoSFlowNotify_Item( char * key, SI_XNAP_DT_QoSFlowNotify_Item * data, int lvl);

void __si_xnap_memfree_QoSFlowNotify_Item( SI_XNAP_DT_QoSFlowNotify_Item * data);

int __si_xnap_Encode_QoSFlowNotify_Item( SI_XNAP_DT_QoSFlowNotify_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlow_Item( SI_XNAP_DT_QoSFlow_Item ** data);

void __si_xnap_debug_QoSFlow_Item( char * key, SI_XNAP_DT_QoSFlow_Item * data, int lvl);

void __si_xnap_memfree_QoSFlow_Item( SI_XNAP_DT_QoSFlow_Item * data);

int __si_xnap_Encode_QoSFlow_Item( SI_XNAP_DT_QoSFlow_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowwithCause_Item( SI_XNAP_DT_QoSFlowwithCause_Item ** data);

void __si_xnap_debug_QoSFlowwithCause_Item( char * key, SI_XNAP_DT_QoSFlowwithCause_Item * data, int lvl);

void __si_xnap_memfree_QoSFlowwithCause_Item( SI_XNAP_DT_QoSFlowwithCause_Item * data);

int __si_xnap_Encode_QoSFlowwithCause_Item( SI_XNAP_DT_QoSFlowwithCause_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSMappingInformation_dscp( SI_XNAP_DT_QoSMappingInformation_dscp ** data);

void __si_xnap_init_QoSMappingInformation_dscp2( SI_XNAP_DT_QoSMappingInformation_dscp ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_QoSMappingInformation_dscp( char * key, SI_XNAP_DT_QoSMappingInformation_dscp * data, int lvl);

void __si_xnap_memfree_QoSMappingInformation_dscp( SI_XNAP_DT_QoSMappingInformation_dscp * data);

int __si_xnap_Encode_QoSMappingInformation_dscp( SI_XNAP_DT_QoSMappingInformation_dscp * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSMappingInformation_flow_label( SI_XNAP_DT_QoSMappingInformation_flow_label ** data);

void __si_xnap_init_QoSMappingInformation_flow_label2( SI_XNAP_DT_QoSMappingInformation_flow_label ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_QoSMappingInformation_flow_label( char * key, SI_XNAP_DT_QoSMappingInformation_flow_label * data, int lvl);

void __si_xnap_memfree_QoSMappingInformation_flow_label( SI_XNAP_DT_QoSMappingInformation_flow_label * data);

int __si_xnap_Encode_QoSMappingInformation_flow_label( SI_XNAP_DT_QoSMappingInformation_flow_label * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoS_Mapping_Information( SI_XNAP_DT_QoS_Mapping_Information ** data);

void __si_xnap_debug_QoS_Mapping_Information( char * key, SI_XNAP_DT_QoS_Mapping_Information * data, int lvl);

void __si_xnap_memfree_QoS_Mapping_Information( SI_XNAP_DT_QoS_Mapping_Information * data);

int __si_xnap_Encode_QoS_Mapping_Information( SI_XNAP_DT_QoS_Mapping_Information * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_QoSParaSetNotifyIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_QoSParaSetNotifyIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_QoSParaSetNotifyIndex( SI_XNAP_DT_QoSParaSetNotifyIndex * data);


void __si_xnap_init_QoSFlowsAdmitted_Item( SI_XNAP_DT_QoSFlowsAdmitted_Item ** data);

void __si_xnap_debug_QoSFlowsAdmitted_Item( char * key, SI_XNAP_DT_QoSFlowsAdmitted_Item * data, int lvl);

void __si_xnap_memfree_QoSFlowsAdmitted_Item( SI_XNAP_DT_QoSFlowsAdmitted_Item * data);

int __si_xnap_Encode_QoSFlowsAdmitted_Item( SI_XNAP_DT_QoSFlowsAdmitted_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsToBeSetup_Item( SI_XNAP_DT_QoSFlowsToBeSetup_Item ** data);

void __si_xnap_debug_QoSFlowsToBeSetup_Item( char * key, SI_XNAP_DT_QoSFlowsToBeSetup_Item * data, int lvl);

void __si_xnap_memfree_QoSFlowsToBeSetup_Item( SI_XNAP_DT_QoSFlowsToBeSetup_Item * data);

int __si_xnap_Encode_QoSFlowsToBeSetup_Item( SI_XNAP_DT_QoSFlowsToBeSetup_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_QoSFlowsUsageReportItem_rATType( char * key, uint8_t eQoSFlowsUsageReportItem_rATType, int lvl);

int __si_xnap_Encode_QoSFlowsUsageReportItem_rATType( uint8_t eQoSFlowsUsageReportItem_rATType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsUsageReport_Item( SI_XNAP_DT_QoSFlowsUsageReport_Item ** data);

void __si_xnap_debug_QoSFlowsUsageReport_Item( char * key, SI_XNAP_DT_QoSFlowsUsageReport_Item * data, int lvl);

void __si_xnap_memfree_QoSFlowsUsageReport_Item( SI_XNAP_DT_QoSFlowsUsageReport_Item * data);

int __si_xnap_Encode_QoSFlowsUsageReport_Item( SI_XNAP_DT_QoSFlowsUsageReport_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_QosMonitoringRequest( char * key, uint8_t eQosMonitoringRequest, int lvl);

int __si_xnap_Encode_QosMonitoringRequest( uint8_t eQosMonitoringRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_QoSMonitoringDisabled( char * key, uint8_t eQoSMonitoringDisabled, int lvl);

int __si_xnap_Encode_QoSMonitoringDisabled( uint8_t eQoSMonitoringDisabled, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_QosMonitoringReportingFrequency( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_QosMonitoringReportingFrequency( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_QosMonitoringReportingFrequency( SI_XNAP_DT_QosMonitoringReportingFrequency * data);


void __si_xnap_init_RAReport( SI_XNAP_DT_RAReport ** data);

void __si_xnap_debug_RAReport( char * key, SI_XNAP_DT_RAReport * data, int lvl);

void __si_xnap_memfree_RAReport( SI_XNAP_DT_RAReport * data);

int __si_xnap_Encode_RAReport( SI_XNAP_DT_RAReport * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RAReportContainer( SI_XNAP_DT_RAReportContainer ** data);

void __si_xnap_init_RAReportContainer2( SI_XNAP_DT_RAReportContainer ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_RAReportContainer( char * key, SI_XNAP_DT_RAReportContainer * data, int lvl);

void __si_xnap_memfree_RAReportContainer( SI_XNAP_DT_RAReportContainer * data);

int __si_xnap_Encode_RAReportContainer( SI_XNAP_DT_RAReportContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RAReportList_Item( SI_XNAP_DT_RAReportList_Item ** data);

void __si_xnap_debug_RAReportList_Item( char * key, SI_XNAP_DT_RAReportList_Item * data, int lvl);

void __si_xnap_memfree_RAReportList_Item( SI_XNAP_DT_RAReportList_Item * data);

int __si_xnap_Encode_RAReportList_Item( SI_XNAP_DT_RAReportList_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RANAreaID( SI_XNAP_DT_RANAreaID ** data);

void __si_xnap_debug_RANAreaID( char * key, SI_XNAP_DT_RANAreaID * data, int lvl);

void __si_xnap_memfree_RANAreaID( SI_XNAP_DT_RANAreaID * data);

int __si_xnap_Encode_RANAreaID( SI_XNAP_DT_RANAreaID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RANAreaID_List( SI_XNAP_DT_RANAreaID_List ** data);

void __si_xnap_debug_RANAreaID_List( char * key, SI_XNAP_DT_RANAreaID_List * data, int lvl);

void __si_xnap_memfree_RANAreaID_List( SI_XNAP_DT_RANAreaID_List * data);

int __si_xnap_Encode_RANAreaID_List( SI_XNAP_DT_RANAreaID_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RANPagingAreaChoice( SI_XNAP_DT_RANPagingAreaChoice ** data);

void __si_xnap_debug_RANPagingAreaChoice( char * key, SI_XNAP_DT_RANPagingAreaChoice * data, int lvl);

void __si_xnap_memfree_RANPagingAreaChoice( SI_XNAP_DT_RANPagingAreaChoice * data);

int __si_xnap_Encode_RANPagingAreaChoice( SI_XNAP_DT_RANPagingAreaChoice * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RANPagingArea( SI_XNAP_DT_RANPagingArea ** data);

void __si_xnap_debug_RANPagingArea( char * key, SI_XNAP_DT_RANPagingArea * data, int lvl);

void __si_xnap_memfree_RANPagingArea( SI_XNAP_DT_RANPagingArea * data);

int __si_xnap_Encode_RANPagingArea( SI_XNAP_DT_RANPagingArea * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RANPagingFailure( char * key, uint8_t eRANPagingFailure, int lvl);

int __si_xnap_Encode_RANPagingFailure( uint8_t eRANPagingFailure, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Redcap_Bcast_Information( SI_XNAP_DT_Redcap_Bcast_Information ** data);

void __si_xnap_init_Redcap_Bcast_Information2( SI_XNAP_DT_Redcap_Bcast_Information ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_Redcap_Bcast_Information( char * key, SI_XNAP_DT_Redcap_Bcast_Information * data, int lvl);

void __si_xnap_memfree_Redcap_Bcast_Information( SI_XNAP_DT_Redcap_Bcast_Information * data);

int __si_xnap_Encode_Redcap_Bcast_Information( SI_XNAP_DT_Redcap_Bcast_Information * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RedundantQoSFlowIndicator( char * key, uint8_t eRedundantQoSFlowIndicator, int lvl);

int __si_xnap_Encode_RedundantQoSFlowIndicator( uint8_t eRedundantQoSFlowIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RSN( char * key, uint8_t eRSN, int lvl);

int __si_xnap_Encode_RSN( uint8_t eRSN, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RedundantPDUSessionInformation( SI_XNAP_DT_RedundantPDUSessionInformation ** data);

void __si_xnap_debug_RedundantPDUSessionInformation( char * key, SI_XNAP_DT_RedundantPDUSessionInformation * data, int lvl);

void __si_xnap_memfree_RedundantPDUSessionInformation( SI_XNAP_DT_RedundantPDUSessionInformation * data);

int __si_xnap_Encode_RedundantPDUSessionInformation( SI_XNAP_DT_RedundantPDUSessionInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ReplacingCells_Item( SI_XNAP_DT_ReplacingCells_Item ** data);

void __si_xnap_debug_ReplacingCells_Item( char * key, SI_XNAP_DT_ReplacingCells_Item * data, int lvl);

void __si_xnap_memfree_ReplacingCells_Item( SI_XNAP_DT_ReplacingCells_Item * data);

int __si_xnap_Encode_ReplacingCells_Item( SI_XNAP_DT_ReplacingCells_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ExtendedReportIntervalMDT( char * key, uint8_t eExtendedReportIntervalMDT, int lvl);

int __si_xnap_Encode_ExtendedReportIntervalMDT( uint8_t eExtendedReportIntervalMDT, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ReportCharacteristics( SI_XNAP_DT_ReportCharacteristics ** data);

void __si_xnap_init_ReportCharacteristics2( SI_XNAP_DT_ReportCharacteristics ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_ReportCharacteristics( char * key, SI_XNAP_DT_ReportCharacteristics * data, int lvl);

void __si_xnap_memfree_ReportCharacteristics( SI_XNAP_DT_ReportCharacteristics * data);

int __si_xnap_Encode_ReportCharacteristics( SI_XNAP_DT_ReportCharacteristics * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ReportCharacteristicsForDataCollection( SI_XNAP_DT_ReportCharacteristicsForDataCollection ** data);

void __si_xnap_init_ReportCharacteristicsForDataCollection2( SI_XNAP_DT_ReportCharacteristicsForDataCollection ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_ReportCharacteristicsForDataCollection( char * key, SI_XNAP_DT_ReportCharacteristicsForDataCollection * data, int lvl);

void __si_xnap_memfree_ReportCharacteristicsForDataCollection( SI_XNAP_DT_ReportCharacteristicsForDataCollection * data);

int __si_xnap_Encode_ReportCharacteristicsForDataCollection( SI_XNAP_DT_ReportCharacteristicsForDataCollection * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ReportingPeriodicity( char * key, uint8_t eReportingPeriodicity, int lvl);

int __si_xnap_Encode_ReportingPeriodicity( uint8_t eReportingPeriodicity, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ReportingPeriodicityForDataCollection( char * key, uint8_t eReportingPeriodicityForDataCollection, int lvl);

int __si_xnap_Encode_ReportingPeriodicityForDataCollection( uint8_t eReportingPeriodicityForDataCollection, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RequestedPredictionTime( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_RequestedPredictionTime( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_RequestedPredictionTime( SI_XNAP_DT_RequestedPredictionTime * data);


void __si_xnap_debug_RegistrationRequest( char * key, uint8_t eRegistrationRequest, int lvl);

int __si_xnap_Encode_RegistrationRequest( uint8_t eRegistrationRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RegistrationRequestForDataCollection( char * key, uint8_t eRegistrationRequestForDataCollection, int lvl);

int __si_xnap_Encode_RegistrationRequestForDataCollection( uint8_t eRegistrationRequestForDataCollection, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResetRequestTypeInfo_Full( SI_XNAP_DT_ResetRequestTypeInfo_Full ** data);

void __si_xnap_debug_ResetRequestTypeInfo_Full( char * key, SI_XNAP_DT_ResetRequestTypeInfo_Full * data, int lvl);

void __si_xnap_memfree_ResetRequestTypeInfo_Full( SI_XNAP_DT_ResetRequestTypeInfo_Full * data);

int __si_xnap_Encode_ResetRequestTypeInfo_Full( SI_XNAP_DT_ResetRequestTypeInfo_Full * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResetRequestPartialReleaseList( SI_XNAP_DT_ResetRequestPartialReleaseList ** data);

void __si_xnap_debug_ResetRequestPartialReleaseList( char * key, SI_XNAP_DT_ResetRequestPartialReleaseList * data, int lvl);

void __si_xnap_memfree_ResetRequestPartialReleaseList( SI_XNAP_DT_ResetRequestPartialReleaseList * data);

int __si_xnap_Encode_ResetRequestPartialReleaseList( SI_XNAP_DT_ResetRequestPartialReleaseList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResetRequestTypeInfo_Partial( SI_XNAP_DT_ResetRequestTypeInfo_Partial ** data);

void __si_xnap_debug_ResetRequestTypeInfo_Partial( char * key, SI_XNAP_DT_ResetRequestTypeInfo_Partial * data, int lvl);

void __si_xnap_memfree_ResetRequestTypeInfo_Partial( SI_XNAP_DT_ResetRequestTypeInfo_Partial * data);

int __si_xnap_Encode_ResetRequestTypeInfo_Partial( SI_XNAP_DT_ResetRequestTypeInfo_Partial * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResetRequestTypeInfo( SI_XNAP_DT_ResetRequestTypeInfo ** data);

void __si_xnap_debug_ResetRequestTypeInfo( char * key, SI_XNAP_DT_ResetRequestTypeInfo * data, int lvl);

void __si_xnap_memfree_ResetRequestTypeInfo( SI_XNAP_DT_ResetRequestTypeInfo * data);

int __si_xnap_Encode_ResetRequestTypeInfo( SI_XNAP_DT_ResetRequestTypeInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResetRequestPartialReleaseItem( SI_XNAP_DT_ResetRequestPartialReleaseItem ** data);

void __si_xnap_debug_ResetRequestPartialReleaseItem( char * key, SI_XNAP_DT_ResetRequestPartialReleaseItem * data, int lvl);

void __si_xnap_memfree_ResetRequestPartialReleaseItem( SI_XNAP_DT_ResetRequestPartialReleaseItem * data);

int __si_xnap_Encode_ResetRequestPartialReleaseItem( SI_XNAP_DT_ResetRequestPartialReleaseItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResetResponseTypeInfo_Full( SI_XNAP_DT_ResetResponseTypeInfo_Full ** data);

void __si_xnap_debug_ResetResponseTypeInfo_Full( char * key, SI_XNAP_DT_ResetResponseTypeInfo_Full * data, int lvl);

void __si_xnap_memfree_ResetResponseTypeInfo_Full( SI_XNAP_DT_ResetResponseTypeInfo_Full * data);

int __si_xnap_Encode_ResetResponseTypeInfo_Full( SI_XNAP_DT_ResetResponseTypeInfo_Full * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResetResponsePartialReleaseList( SI_XNAP_DT_ResetResponsePartialReleaseList ** data);

void __si_xnap_debug_ResetResponsePartialReleaseList( char * key, SI_XNAP_DT_ResetResponsePartialReleaseList * data, int lvl);

void __si_xnap_memfree_ResetResponsePartialReleaseList( SI_XNAP_DT_ResetResponsePartialReleaseList * data);

int __si_xnap_Encode_ResetResponsePartialReleaseList( SI_XNAP_DT_ResetResponsePartialReleaseList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResetResponseTypeInfo_Partial( SI_XNAP_DT_ResetResponseTypeInfo_Partial ** data);

void __si_xnap_debug_ResetResponseTypeInfo_Partial( char * key, SI_XNAP_DT_ResetResponseTypeInfo_Partial * data, int lvl);

void __si_xnap_memfree_ResetResponseTypeInfo_Partial( SI_XNAP_DT_ResetResponseTypeInfo_Partial * data);

int __si_xnap_Encode_ResetResponseTypeInfo_Partial( SI_XNAP_DT_ResetResponseTypeInfo_Partial * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResetResponseTypeInfo( SI_XNAP_DT_ResetResponseTypeInfo ** data);

void __si_xnap_debug_ResetResponseTypeInfo( char * key, SI_XNAP_DT_ResetResponseTypeInfo * data, int lvl);

void __si_xnap_memfree_ResetResponseTypeInfo( SI_XNAP_DT_ResetResponseTypeInfo * data);

int __si_xnap_Encode_ResetResponseTypeInfo( SI_XNAP_DT_ResetResponseTypeInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResetResponsePartialReleaseItem( SI_XNAP_DT_ResetResponsePartialReleaseItem ** data);

void __si_xnap_debug_ResetResponsePartialReleaseItem( char * key, SI_XNAP_DT_ResetResponsePartialReleaseItem * data, int lvl);

void __si_xnap_memfree_ResetResponsePartialReleaseItem( SI_XNAP_DT_ResetResponsePartialReleaseItem * data);

int __si_xnap_Encode_ResetResponsePartialReleaseItem( SI_XNAP_DT_ResetResponsePartialReleaseItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RLCDuplicationInformation_rLC_PrimaryIndicator( char * key, uint8_t eRLCDuplicationInformation_rLC_PrimaryIndicator, int lvl);

int __si_xnap_Encode_RLCDuplicationInformation_rLC_PrimaryIndicator( uint8_t eRLCDuplicationInformation_rLC_PrimaryIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RLCDuplicationStateList( SI_XNAP_DT_RLCDuplicationStateList ** data);

void __si_xnap_debug_RLCDuplicationStateList( char * key, SI_XNAP_DT_RLCDuplicationStateList * data, int lvl);

void __si_xnap_memfree_RLCDuplicationStateList( SI_XNAP_DT_RLCDuplicationStateList * data);

int __si_xnap_Encode_RLCDuplicationStateList( SI_XNAP_DT_RLCDuplicationStateList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{RLCDuplicationInformation-ItemExtIEs}}<- Got NULL  L:7520

void __si_xnap_init_RLCDuplicationInformation( SI_XNAP_DT_RLCDuplicationInformation ** data);

void __si_xnap_debug_RLCDuplicationInformation( char * key, SI_XNAP_DT_RLCDuplicationInformation * data, int lvl);

void __si_xnap_memfree_RLCDuplicationInformation( SI_XNAP_DT_RLCDuplicationInformation * data);

int __si_xnap_Encode_RLCDuplicationInformation( SI_XNAP_DT_RLCDuplicationInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RLCDuplicationStateItem_duplicationState( char * key, uint8_t eRLCDuplicationStateItem_duplicationState, int lvl);

int __si_xnap_Encode_RLCDuplicationStateItem_duplicationState( uint8_t eRLCDuplicationStateItem_duplicationState, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{RLCDuplicationState-ItemExtIEs}}<- Got NULL  L:7520

void __si_xnap_init_RLCDuplicationState_Item( SI_XNAP_DT_RLCDuplicationState_Item ** data);

void __si_xnap_debug_RLCDuplicationState_Item( char * key, SI_XNAP_DT_RLCDuplicationState_Item * data, int lvl);

void __si_xnap_memfree_RLCDuplicationState_Item( SI_XNAP_DT_RLCDuplicationState_Item * data);

int __si_xnap_Encode_RLCDuplicationState_Item( SI_XNAP_DT_RLCDuplicationState_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RFSP_Index( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_RFSP_Index( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_RFSP_Index( SI_XNAP_DT_RFSP_Index * data);


void __si_xnap_debug_RRCConfigIndication( char * key, uint8_t eRRCConfigIndication, int lvl);

int __si_xnap_Encode_RRCConfigIndication( uint8_t eRRCConfigIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RRCConnReestab_Indicator( char * key, uint8_t eRRCConnReestab_Indicator, int lvl);

int __si_xnap_Encode_RRCConnReestab_Indicator( uint8_t eRRCConnReestab_Indicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RRCResumeCause( char * key, uint8_t eRRCResumeCause, int lvl);

int __si_xnap_Encode_RRCResumeCause( uint8_t eRRCResumeCause, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RaReportIndicationList( SI_XNAP_DT_RaReportIndicationList ** data);

void __si_xnap_debug_RaReportIndicationList( char * key, SI_XNAP_DT_RaReportIndicationList * data, int lvl);

void __si_xnap_memfree_RaReportIndicationList( SI_XNAP_DT_RaReportIndicationList * data);

int __si_xnap_Encode_RaReportIndicationList( SI_XNAP_DT_RaReportIndicationList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RaReportIndicationList_Item( SI_XNAP_DT_RaReportIndicationList_Item ** data);

void __si_xnap_debug_RaReportIndicationList_Item( char * key, SI_XNAP_DT_RaReportIndicationList_Item * data, int lvl);

void __si_xnap_memfree_RaReportIndicationList_Item( SI_XNAP_DT_RaReportIndicationList_Item * data);

int __si_xnap_Encode_RaReportIndicationList_Item( SI_XNAP_DT_RaReportIndicationList_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RadioResourceStatusNRU_dL_Total_PRB_usage( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_RadioResourceStatusNRU_dL_Total_PRB_usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_RadioResourceStatusNRU_dL_Total_PRB_usage( SI_XNAP_DT_RadioResourceStatusNRU_dL_Total_PRB_usage * data);


void __si_xnap_debug_RadioResourceStatusNRU_uL_Total_PRB_usage( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_RadioResourceStatusNRU_uL_Total_PRB_usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_RadioResourceStatusNRU_uL_Total_PRB_usage( SI_XNAP_DT_RadioResourceStatusNRU_uL_Total_PRB_usage * data);


void __si_xnap_init_RadioResourceStatusNR_U( SI_XNAP_DT_RadioResourceStatusNR_U ** data);

void __si_xnap_debug_RadioResourceStatusNR_U( char * key, SI_XNAP_DT_RadioResourceStatusNR_U * data, int lvl);

void __si_xnap_memfree_RadioResourceStatusNR_U( SI_XNAP_DT_RadioResourceStatusNR_U * data);

int __si_xnap_Encode_RadioResourceStatusNR_U( SI_XNAP_DT_RadioResourceStatusNR_U * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SCGreconfigNotification( char * key, uint8_t eSCGreconfigNotification, int lvl);

int __si_xnap_Encode_SCGreconfigNotification( uint8_t eSCGreconfigNotification, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_S_CPAC_Request( char * key, uint8_t eS_CPAC_Request, int lvl);

int __si_xnap_Encode_S_CPAC_Request( uint8_t eS_CPAC_Request, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_S_CPAC_SecurityConfig_List( SI_XNAP_DT_S_CPAC_SecurityConfig_List ** data);

void __si_xnap_debug_S_CPAC_SecurityConfig_List( char * key, SI_XNAP_DT_S_CPAC_SecurityConfig_List * data, int lvl);

void __si_xnap_memfree_S_CPAC_SecurityConfig_List( SI_XNAP_DT_S_CPAC_SecurityConfig_List * data);

int __si_xnap_Encode_S_CPAC_SecurityConfig_List( SI_XNAP_DT_S_CPAC_SecurityConfig_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_S_CPAC_MultiTargetSN_List( SI_XNAP_DT_S_CPAC_MultiTargetSN_List ** data);

void __si_xnap_debug_S_CPAC_MultiTargetSN_List( char * key, SI_XNAP_DT_S_CPAC_MultiTargetSN_List * data, int lvl);

void __si_xnap_memfree_S_CPAC_MultiTargetSN_List( SI_XNAP_DT_S_CPAC_MultiTargetSN_List * data);

int __si_xnap_Encode_S_CPAC_MultiTargetSN_List( SI_XNAP_DT_S_CPAC_MultiTargetSN_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_S_CPAC_Request_Info( SI_XNAP_DT_S_CPAC_Request_Info ** data);

void __si_xnap_debug_S_CPAC_Request_Info( char * key, SI_XNAP_DT_S_CPAC_Request_Info * data, int lvl);

void __si_xnap_memfree_S_CPAC_Request_Info( SI_XNAP_DT_S_CPAC_Request_Info * data);

int __si_xnap_Encode_S_CPAC_Request_Info( SI_XNAP_DT_S_CPAC_Request_Info * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_S_CPAC_ReferenceConfig_Request( char * key, uint8_t eS_CPAC_ReferenceConfig_Request, int lvl);

int __si_xnap_Encode_S_CPAC_ReferenceConfig_Request( uint8_t eS_CPAC_ReferenceConfig_Request, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_S_NG_RANnode_SecurityKey( SI_XNAP_DT_S_NG_RANnode_SecurityKey ** data);

void __si_xnap_init_S_NG_RANnode_SecurityKey2( SI_XNAP_DT_S_NG_RANnode_SecurityKey ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_S_NG_RANnode_SecurityKey( char * key, SI_XNAP_DT_S_NG_RANnode_SecurityKey * data, int lvl);

void __si_xnap_memfree_S_NG_RANnode_SecurityKey( SI_XNAP_DT_S_NG_RANnode_SecurityKey * data);

int __si_xnap_Encode_S_NG_RANnode_SecurityKey( SI_XNAP_DT_S_NG_RANnode_SecurityKey * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SK_COUNTER( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SK_COUNTER( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SK_COUNTER( SI_XNAP_DT_SK_COUNTER * data);


void __si_xnap_init_S_CPAC_SecurityConfig_Item( SI_XNAP_DT_S_CPAC_SecurityConfig_Item ** data);

void __si_xnap_debug_S_CPAC_SecurityConfig_Item( char * key, SI_XNAP_DT_S_CPAC_SecurityConfig_Item * data, int lvl);

void __si_xnap_memfree_S_CPAC_SecurityConfig_Item( SI_XNAP_DT_S_CPAC_SecurityConfig_Item * data);

int __si_xnap_Encode_S_CPAC_SecurityConfig_Item( SI_XNAP_DT_S_CPAC_SecurityConfig_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SCPACMultiTargetSNItem_recommendedCandidatePSCells( SI_XNAP_DT_SCPACMultiTargetSNItem_recommendedCandidatePSCells ** data);

void __si_xnap_init_SCPACMultiTargetSNItem_recommendedCandidatePSCells2( SI_XNAP_DT_SCPACMultiTargetSNItem_recommendedCandidatePSCells ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_SCPACMultiTargetSNItem_recommendedCandidatePSCells( char * key, SI_XNAP_DT_SCPACMultiTargetSNItem_recommendedCandidatePSCells * data, int lvl);

void __si_xnap_memfree_SCPACMultiTargetSNItem_recommendedCandidatePSCells( SI_XNAP_DT_SCPACMultiTargetSNItem_recommendedCandidatePSCells * data);

int __si_xnap_Encode_SCPACMultiTargetSNItem_recommendedCandidatePSCells( SI_XNAP_DT_SCPACMultiTargetSNItem_recommendedCandidatePSCells * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_S_CPAC_MultiTargetSN_Item( SI_XNAP_DT_S_CPAC_MultiTargetSN_Item ** data);

void __si_xnap_debug_S_CPAC_MultiTargetSN_Item( char * key, SI_XNAP_DT_S_CPAC_MultiTargetSN_Item * data, int lvl);

void __si_xnap_memfree_S_CPAC_MultiTargetSN_Item( SI_XNAP_DT_S_CPAC_MultiTargetSN_Item * data);

int __si_xnap_Encode_S_CPAC_MultiTargetSN_Item( SI_XNAP_DT_S_CPAC_MultiTargetSN_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_S_CPAC_InterSN_ExecutionNotify( char * key, uint8_t eS_CPAC_InterSN_ExecutionNotify, int lvl);

int __si_xnap_Encode_S_CPAC_InterSN_ExecutionNotify( uint8_t eS_CPAC_InterSN_ExecutionNotify, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SecondarydataForwardingInfoFromTarget_Item( SI_XNAP_DT_SecondarydataForwardingInfoFromTarget_Item ** data);

void __si_xnap_debug_SecondarydataForwardingInfoFromTarget_Item( char * key, SI_XNAP_DT_SecondarydataForwardingInfoFromTarget_Item * data, int lvl);

void __si_xnap_memfree_SecondarydataForwardingInfoFromTarget_Item( SI_XNAP_DT_SecondarydataForwardingInfoFromTarget_Item * data);

int __si_xnap_Encode_SecondarydataForwardingInfoFromTarget_Item( SI_XNAP_DT_SecondarydataForwardingInfoFromTarget_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SecondarydataForwardingInfoFromTarget_List( SI_XNAP_DT_SecondarydataForwardingInfoFromTarget_List ** data);

void __si_xnap_debug_SecondarydataForwardingInfoFromTarget_List( char * key, SI_XNAP_DT_SecondarydataForwardingInfoFromTarget_List * data, int lvl);

void __si_xnap_memfree_SecondarydataForwardingInfoFromTarget_List( SI_XNAP_DT_SecondarydataForwardingInfoFromTarget_List * data);

int __si_xnap_Encode_SecondarydataForwardingInfoFromTarget_List( SI_XNAP_DT_SecondarydataForwardingInfoFromTarget_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SCGActivationRequest( char * key, uint8_t eSCGActivationRequest, int lvl);

int __si_xnap_Encode_SCGActivationRequest( uint8_t eSCGActivationRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SCGActivationStatus( char * key, uint8_t eSCGActivationStatus, int lvl);

int __si_xnap_Encode_SCGActivationStatus( uint8_t eSCGActivationStatus, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SCGConfigurationQuery( char * key, uint8_t eSCGConfigurationQuery, int lvl);

int __si_xnap_Encode_SCGConfigurationQuery( uint8_t eSCGConfigurationQuery, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SCGIndicator( char * key, uint8_t eSCGIndicator, int lvl);

int __si_xnap_Encode_SCGIndicator( uint8_t eSCGIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SCGFailureReportContainer( SI_XNAP_DT_SCGFailureReportContainer ** data);

void __si_xnap_init_SCGFailureReportContainer2( SI_XNAP_DT_SCGFailureReportContainer ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_SCGFailureReportContainer( char * key, SI_XNAP_DT_SCGFailureReportContainer * data, int lvl);

void __si_xnap_memfree_SCGFailureReportContainer( SI_XNAP_DT_SCGFailureReportContainer * data);

int __si_xnap_Encode_SCGFailureReportContainer( SI_XNAP_DT_SCGFailureReportContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SDTIndicator( char * key, uint8_t eSDTIndicator, int lvl);

int __si_xnap_Encode_SDTIndicator( uint8_t eSDTIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SDTAssistantInfo( char * key, uint8_t eSDTAssistantInfo, int lvl);

int __si_xnap_Encode_SDTAssistantInfo( uint8_t eSDTAssistantInfo, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SDTSupportRequest( SI_XNAP_DT_SDTSupportRequest ** data);

void __si_xnap_debug_SDTSupportRequest( char * key, SI_XNAP_DT_SDTSupportRequest * data, int lvl);

void __si_xnap_memfree_SDTSupportRequest( SI_XNAP_DT_SDTSupportRequest * data);

int __si_xnap_Encode_SDTSupportRequest( SI_XNAP_DT_SDTSupportRequest * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SDT_Termination_Request( char * key, uint8_t eSDT_Termination_Request, int lvl);

int __si_xnap_Encode_SDT_Termination_Request( uint8_t eSDT_Termination_Request, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SDT_DRBsToBeSetupList( SI_XNAP_DT_SDT_DRBsToBeSetupList ** data);

void __si_xnap_debug_SDT_DRBsToBeSetupList( char * key, SI_XNAP_DT_SDT_DRBsToBeSetupList * data, int lvl);

void __si_xnap_memfree_SDT_DRBsToBeSetupList( SI_XNAP_DT_SDT_DRBsToBeSetupList * data);

int __si_xnap_Encode_SDT_DRBsToBeSetupList( SI_XNAP_DT_SDT_DRBsToBeSetupList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SDT_SRBsToBeSetupList( SI_XNAP_DT_SDT_SRBsToBeSetupList ** data);

void __si_xnap_debug_SDT_SRBsToBeSetupList( char * key, SI_XNAP_DT_SDT_SRBsToBeSetupList * data, int lvl);

void __si_xnap_memfree_SDT_SRBsToBeSetupList( SI_XNAP_DT_SDT_SRBsToBeSetupList * data);

int __si_xnap_Encode_SDT_SRBsToBeSetupList( SI_XNAP_DT_SDT_SRBsToBeSetupList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SDTPartialUEContextInfo( SI_XNAP_DT_SDTPartialUEContextInfo ** data);

void __si_xnap_debug_SDTPartialUEContextInfo( char * key, SI_XNAP_DT_SDTPartialUEContextInfo * data, int lvl);

void __si_xnap_memfree_SDTPartialUEContextInfo( SI_XNAP_DT_SDTPartialUEContextInfo * data);

int __si_xnap_Encode_SDTPartialUEContextInfo( SI_XNAP_DT_SDTPartialUEContextInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SDTDRBsToBeSetupListItem_dRB_RLC_Bearer_Configuration( SI_XNAP_DT_SDTDRBsToBeSetupListItem_dRB_RLC_Bearer_Configuration ** data);

void __si_xnap_init_SDTDRBsToBeSetupListItem_dRB_RLC_Bearer_Configuration2( SI_XNAP_DT_SDTDRBsToBeSetupListItem_dRB_RLC_Bearer_Configuration ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_SDTDRBsToBeSetupListItem_dRB_RLC_Bearer_Configuration( char * key, SI_XNAP_DT_SDTDRBsToBeSetupListItem_dRB_RLC_Bearer_Configuration * data, int lvl);

void __si_xnap_memfree_SDTDRBsToBeSetupListItem_dRB_RLC_Bearer_Configuration( SI_XNAP_DT_SDTDRBsToBeSetupListItem_dRB_RLC_Bearer_Configuration * data);

int __si_xnap_Encode_SDTDRBsToBeSetupListItem_dRB_RLC_Bearer_Configuration( SI_XNAP_DT_SDTDRBsToBeSetupListItem_dRB_RLC_Bearer_Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SDT_DRBsToBeSetupList_Item( SI_XNAP_DT_SDT_DRBsToBeSetupList_Item ** data);

void __si_xnap_debug_SDT_DRBsToBeSetupList_Item( char * key, SI_XNAP_DT_SDT_DRBsToBeSetupList_Item * data, int lvl);

void __si_xnap_memfree_SDT_DRBsToBeSetupList_Item( SI_XNAP_DT_SDT_DRBsToBeSetupList_Item * data);

int __si_xnap_Encode_SDT_DRBsToBeSetupList_Item( SI_XNAP_DT_SDT_DRBsToBeSetupList_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SDTSRBsToBeSetupListItem_sRB_RLC_Bearer_Configuration( SI_XNAP_DT_SDTSRBsToBeSetupListItem_sRB_RLC_Bearer_Configuration ** data);

void __si_xnap_init_SDTSRBsToBeSetupListItem_sRB_RLC_Bearer_Configuration2( SI_XNAP_DT_SDTSRBsToBeSetupListItem_sRB_RLC_Bearer_Configuration ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_SDTSRBsToBeSetupListItem_sRB_RLC_Bearer_Configuration( char * key, SI_XNAP_DT_SDTSRBsToBeSetupListItem_sRB_RLC_Bearer_Configuration * data, int lvl);

void __si_xnap_memfree_SDTSRBsToBeSetupListItem_sRB_RLC_Bearer_Configuration( SI_XNAP_DT_SDTSRBsToBeSetupListItem_sRB_RLC_Bearer_Configuration * data);

int __si_xnap_Encode_SDTSRBsToBeSetupListItem_sRB_RLC_Bearer_Configuration( SI_XNAP_DT_SDTSRBsToBeSetupListItem_sRB_RLC_Bearer_Configuration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SRB_ID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SRB_ID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SRB_ID( SI_XNAP_DT_SRB_ID * data);


void __si_xnap_init_SDT_SRBsToBeSetupList_Item( SI_XNAP_DT_SDT_SRBsToBeSetupList_Item ** data);

void __si_xnap_debug_SDT_SRBsToBeSetupList_Item( char * key, SI_XNAP_DT_SDT_SRBsToBeSetupList_Item * data, int lvl);

void __si_xnap_memfree_SDT_SRBsToBeSetupList_Item( SI_XNAP_DT_SDT_SRBsToBeSetupList_Item * data);

int __si_xnap_Encode_SDT_SRBsToBeSetupList_Item( SI_XNAP_DT_SDT_SRBsToBeSetupList_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SDTDataForwardingDRBList( SI_XNAP_DT_SDTDataForwardingDRBList ** data);

void __si_xnap_debug_SDTDataForwardingDRBList( char * key, SI_XNAP_DT_SDTDataForwardingDRBList * data, int lvl);

void __si_xnap_memfree_SDTDataForwardingDRBList( SI_XNAP_DT_SDTDataForwardingDRBList * data);

int __si_xnap_Encode_SDTDataForwardingDRBList( SI_XNAP_DT_SDTDataForwardingDRBList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SDTDataForwardingDRBList_Item( SI_XNAP_DT_SDTDataForwardingDRBList_Item ** data);

void __si_xnap_debug_SDTDataForwardingDRBList_Item( char * key, SI_XNAP_DT_SDTDataForwardingDRBList_Item * data, int lvl);

void __si_xnap_memfree_SDTDataForwardingDRBList_Item( SI_XNAP_DT_SDTDataForwardingDRBList_Item * data);

int __si_xnap_Encode_SDTDataForwardingDRBList_Item( SI_XNAP_DT_SDTDataForwardingDRBList_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SensorName_uncompensatedBarometricConfig( char * key, uint8_t eSensorName_uncompensatedBarometricConfig, int lvl);

int __si_xnap_Encode_SensorName_uncompensatedBarometricConfig( uint8_t eSensorName_uncompensatedBarometricConfig, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SensorName_ueSpeedConfig( char * key, uint8_t eSensorName_ueSpeedConfig, int lvl);

int __si_xnap_Encode_SensorName_ueSpeedConfig( uint8_t eSensorName_ueSpeedConfig, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SensorName_ueOrientationConfig( char * key, uint8_t eSensorName_ueOrientationConfig, int lvl);

int __si_xnap_Encode_SensorName_ueOrientationConfig( uint8_t eSensorName_ueOrientationConfig, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SensorName( SI_XNAP_DT_SensorName ** data);

void __si_xnap_debug_SensorName( char * key, SI_XNAP_DT_SensorName * data, int lvl);

void __si_xnap_memfree_SensorName( SI_XNAP_DT_SensorName * data);

int __si_xnap_Encode_SensorName( SI_XNAP_DT_SensorName * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCellInformationEUTRA_broadcastPLMNs( SI_XNAP_DT_ServedCellInformationEUTRA_broadcastPLMNs ** data);

void __si_xnap_debug_ServedCellInformationEUTRA_broadcastPLMNs( char * key, SI_XNAP_DT_ServedCellInformationEUTRA_broadcastPLMNs * data, int lvl);

void __si_xnap_memfree_ServedCellInformationEUTRA_broadcastPLMNs( SI_XNAP_DT_ServedCellInformationEUTRA_broadcastPLMNs * data);

int __si_xnap_Encode_ServedCellInformationEUTRA_broadcastPLMNs( SI_XNAP_DT_ServedCellInformationEUTRA_broadcastPLMNs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ServedCellInformationEUTRA_freqBandIndicatorPriority( char * key, uint8_t eServedCellInformationEUTRA_freqBandIndicatorPriority, int lvl);

int __si_xnap_Encode_ServedCellInformationEUTRA_freqBandIndicatorPriority( uint8_t eServedCellInformationEUTRA_freqBandIndicatorPriority, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ServedCellInformationEUTRA_bandwidthReducedSI( char * key, uint8_t eServedCellInformationEUTRA_bandwidthReducedSI, int lvl);

int __si_xnap_Encode_ServedCellInformationEUTRA_bandwidthReducedSI( uint8_t eServedCellInformationEUTRA_bandwidthReducedSI, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCellInformation_E_UTRA_FDDInfo( SI_XNAP_DT_ServedCellInformation_E_UTRA_FDDInfo ** data);

void __si_xnap_debug_ServedCellInformation_E_UTRA_FDDInfo( char * key, SI_XNAP_DT_ServedCellInformation_E_UTRA_FDDInfo * data, int lvl);

void __si_xnap_memfree_ServedCellInformation_E_UTRA_FDDInfo( SI_XNAP_DT_ServedCellInformation_E_UTRA_FDDInfo * data);

int __si_xnap_Encode_ServedCellInformation_E_UTRA_FDDInfo( SI_XNAP_DT_ServedCellInformation_E_UTRA_FDDInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ServedCellInformationEUTRATDDInfo_subframeAssignmnet( char * key, uint8_t eServedCellInformationEUTRATDDInfo_subframeAssignmnet, int lvl);

int __si_xnap_Encode_ServedCellInformationEUTRATDDInfo_subframeAssignmnet( uint8_t eServedCellInformationEUTRATDDInfo_subframeAssignmnet, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SpecialSubframePatterns_E_UTRA( char * key, uint8_t eSpecialSubframePatterns_E_UTRA, int lvl);

int __si_xnap_Encode_SpecialSubframePatterns_E_UTRA( uint8_t eSpecialSubframePatterns_E_UTRA, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SpecialSubframeInfo_E_UTRA( SI_XNAP_DT_SpecialSubframeInfo_E_UTRA ** data);

void __si_xnap_debug_SpecialSubframeInfo_E_UTRA( char * key, SI_XNAP_DT_SpecialSubframeInfo_E_UTRA * data, int lvl);

void __si_xnap_memfree_SpecialSubframeInfo_E_UTRA( SI_XNAP_DT_SpecialSubframeInfo_E_UTRA * data);

int __si_xnap_Encode_SpecialSubframeInfo_E_UTRA( SI_XNAP_DT_SpecialSubframeInfo_E_UTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCellInformation_E_UTRA_TDDInfo( SI_XNAP_DT_ServedCellInformation_E_UTRA_TDDInfo ** data);

void __si_xnap_debug_ServedCellInformation_E_UTRA_TDDInfo( char * key, SI_XNAP_DT_ServedCellInformation_E_UTRA_TDDInfo * data, int lvl);

void __si_xnap_memfree_ServedCellInformation_E_UTRA_TDDInfo( SI_XNAP_DT_ServedCellInformation_E_UTRA_TDDInfo * data);

int __si_xnap_Encode_ServedCellInformation_E_UTRA_TDDInfo( SI_XNAP_DT_ServedCellInformation_E_UTRA_TDDInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCellInformation_E_UTRA_ModeInfo( SI_XNAP_DT_ServedCellInformation_E_UTRA_ModeInfo ** data);

void __si_xnap_debug_ServedCellInformation_E_UTRA_ModeInfo( char * key, SI_XNAP_DT_ServedCellInformation_E_UTRA_ModeInfo * data, int lvl);

void __si_xnap_memfree_ServedCellInformation_E_UTRA_ModeInfo( SI_XNAP_DT_ServedCellInformation_E_UTRA_ModeInfo * data);

int __si_xnap_Encode_ServedCellInformation_E_UTRA_ModeInfo( SI_XNAP_DT_ServedCellInformation_E_UTRA_ModeInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCellInformation_E_UTRA( SI_XNAP_DT_ServedCellInformation_E_UTRA ** data);

void __si_xnap_debug_ServedCellInformation_E_UTRA( char * key, SI_XNAP_DT_ServedCellInformation_E_UTRA * data, int lvl);

void __si_xnap_memfree_ServedCellInformation_E_UTRA( SI_XNAP_DT_ServedCellInformation_E_UTRA * data);

int __si_xnap_Encode_ServedCellInformation_E_UTRA( SI_XNAP_DT_ServedCellInformation_E_UTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCellInformation_E_UTRA_perBPLMN( SI_XNAP_DT_ServedCellInformation_E_UTRA_perBPLMN ** data);

void __si_xnap_debug_ServedCellInformation_E_UTRA_perBPLMN( char * key, SI_XNAP_DT_ServedCellInformation_E_UTRA_perBPLMN * data, int lvl);

void __si_xnap_memfree_ServedCellInformation_E_UTRA_perBPLMN( SI_XNAP_DT_ServedCellInformation_E_UTRA_perBPLMN * data);

int __si_xnap_Encode_ServedCellInformation_E_UTRA_perBPLMN( SI_XNAP_DT_ServedCellInformation_E_UTRA_perBPLMN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCells_E_UTRA( SI_XNAP_DT_ServedCells_E_UTRA ** data);

void __si_xnap_debug_ServedCells_E_UTRA( char * key, SI_XNAP_DT_ServedCells_E_UTRA * data, int lvl);

void __si_xnap_memfree_ServedCells_E_UTRA( SI_XNAP_DT_ServedCells_E_UTRA * data);

int __si_xnap_Encode_ServedCells_E_UTRA( SI_XNAP_DT_ServedCells_E_UTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCells_E_UTRA_Item( SI_XNAP_DT_ServedCells_E_UTRA_Item ** data);

void __si_xnap_debug_ServedCells_E_UTRA_Item( char * key, SI_XNAP_DT_ServedCells_E_UTRA_Item * data, int lvl);

void __si_xnap_memfree_ServedCells_E_UTRA_Item( SI_XNAP_DT_ServedCells_E_UTRA_Item * data);

int __si_xnap_Encode_ServedCells_E_UTRA_Item( SI_XNAP_DT_ServedCells_E_UTRA_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCellsToUpdateEUTRA_served_Cells_ToDelete_E_UTRA( SI_XNAP_DT_ServedCellsToUpdateEUTRA_served_Cells_ToDelete_E_UTRA ** data);

void __si_xnap_debug_ServedCellsToUpdateEUTRA_served_Cells_ToDelete_E_UTRA( char * key, SI_XNAP_DT_ServedCellsToUpdateEUTRA_served_Cells_ToDelete_E_UTRA * data, int lvl);

void __si_xnap_memfree_ServedCellsToUpdateEUTRA_served_Cells_ToDelete_E_UTRA( SI_XNAP_DT_ServedCellsToUpdateEUTRA_served_Cells_ToDelete_E_UTRA * data);

int __si_xnap_Encode_ServedCellsToUpdateEUTRA_served_Cells_ToDelete_E_UTRA( SI_XNAP_DT_ServedCellsToUpdateEUTRA_served_Cells_ToDelete_E_UTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCells_ToModify_E_UTRA( SI_XNAP_DT_ServedCells_ToModify_E_UTRA ** data);

void __si_xnap_debug_ServedCells_ToModify_E_UTRA( char * key, SI_XNAP_DT_ServedCells_ToModify_E_UTRA * data, int lvl);

void __si_xnap_memfree_ServedCells_ToModify_E_UTRA( SI_XNAP_DT_ServedCells_ToModify_E_UTRA * data);

int __si_xnap_Encode_ServedCells_ToModify_E_UTRA( SI_XNAP_DT_ServedCells_ToModify_E_UTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCellsToUpdate_E_UTRA( SI_XNAP_DT_ServedCellsToUpdate_E_UTRA ** data);

void __si_xnap_debug_ServedCellsToUpdate_E_UTRA( char * key, SI_XNAP_DT_ServedCellsToUpdate_E_UTRA * data, int lvl);

void __si_xnap_memfree_ServedCellsToUpdate_E_UTRA( SI_XNAP_DT_ServedCellsToUpdate_E_UTRA * data);

int __si_xnap_Encode_ServedCellsToUpdate_E_UTRA( SI_XNAP_DT_ServedCellsToUpdate_E_UTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ServedCellsToModifyEUTRAItem_deactivation_indication( char * key, uint8_t eServedCellsToModifyEUTRAItem_deactivation_indication, int lvl);

int __si_xnap_Encode_ServedCellsToModifyEUTRAItem_deactivation_indication( uint8_t eServedCellsToModifyEUTRAItem_deactivation_indication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCells_ToModify_E_UTRA_Item( SI_XNAP_DT_ServedCells_ToModify_E_UTRA_Item ** data);

void __si_xnap_debug_ServedCells_ToModify_E_UTRA_Item( char * key, SI_XNAP_DT_ServedCells_ToModify_E_UTRA_Item * data, int lvl);

void __si_xnap_memfree_ServedCells_ToModify_E_UTRA_Item( SI_XNAP_DT_ServedCells_ToModify_E_UTRA_Item * data);

int __si_xnap_Encode_ServedCells_ToModify_E_UTRA_Item( SI_XNAP_DT_ServedCells_ToModify_E_UTRA_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCellInformationNR_measurementTimingConfiguration( SI_XNAP_DT_ServedCellInformationNR_measurementTimingConfiguration ** data);

void __si_xnap_init_ServedCellInformationNR_measurementTimingConfiguration2( SI_XNAP_DT_ServedCellInformationNR_measurementTimingConfiguration ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_ServedCellInformationNR_measurementTimingConfiguration( char * key, SI_XNAP_DT_ServedCellInformationNR_measurementTimingConfiguration * data, int lvl);

void __si_xnap_memfree_ServedCellInformationNR_measurementTimingConfiguration( SI_XNAP_DT_ServedCellInformationNR_measurementTimingConfiguration * data);

int __si_xnap_Encode_ServedCellInformationNR_measurementTimingConfiguration( SI_XNAP_DT_ServedCellInformationNR_measurementTimingConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCellInformation_NR( SI_XNAP_DT_ServedCellInformation_NR ** data);

void __si_xnap_debug_ServedCellInformation_NR( char * key, SI_XNAP_DT_ServedCellInformation_NR * data, int lvl);

void __si_xnap_memfree_ServedCellInformation_NR( SI_XNAP_DT_ServedCellInformation_NR * data);

int __si_xnap_Encode_ServedCellInformation_NR( SI_XNAP_DT_ServedCellInformation_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SFNOffset_sFN_Time_Offset( SI_XNAP_DT_SFNOffset_sFN_Time_Offset ** data);

void __si_xnap_init_SFNOffset_sFN_Time_Offset2( SI_XNAP_DT_SFNOffset_sFN_Time_Offset ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_SFNOffset_sFN_Time_Offset( char * key, SI_XNAP_DT_SFNOffset_sFN_Time_Offset * data, int lvl);

void __si_xnap_memfree_SFNOffset_sFN_Time_Offset( SI_XNAP_DT_SFNOffset_sFN_Time_Offset * data);

int __si_xnap_Encode_SFNOffset_sFN_Time_Offset( SI_XNAP_DT_SFNOffset_sFN_Time_Offset * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SFN_Offset( SI_XNAP_DT_SFN_Offset ** data);

void __si_xnap_debug_SFN_Offset( char * key, SI_XNAP_DT_SFN_Offset * data, int lvl);

void __si_xnap_memfree_SFN_Offset( SI_XNAP_DT_SFN_Offset * data);

int __si_xnap_Encode_SFN_Offset( SI_XNAP_DT_SFN_Offset * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCells_NR( SI_XNAP_DT_ServedCells_NR ** data);

void __si_xnap_debug_ServedCells_NR( char * key, SI_XNAP_DT_ServedCells_NR * data, int lvl);

void __si_xnap_memfree_ServedCells_NR( SI_XNAP_DT_ServedCells_NR * data);

int __si_xnap_Encode_ServedCells_NR( SI_XNAP_DT_ServedCells_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCells_NR_Item( SI_XNAP_DT_ServedCells_NR_Item ** data);

void __si_xnap_debug_ServedCells_NR_Item( char * key, SI_XNAP_DT_ServedCells_NR_Item * data, int lvl);

void __si_xnap_memfree_ServedCells_NR_Item( SI_XNAP_DT_ServedCells_NR_Item * data);

int __si_xnap_Encode_ServedCells_NR_Item( SI_XNAP_DT_ServedCells_NR_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCells_ToModify_NR( SI_XNAP_DT_ServedCells_ToModify_NR ** data);

void __si_xnap_debug_ServedCells_ToModify_NR( char * key, SI_XNAP_DT_ServedCells_ToModify_NR * data, int lvl);

void __si_xnap_memfree_ServedCells_ToModify_NR( SI_XNAP_DT_ServedCells_ToModify_NR * data);

int __si_xnap_Encode_ServedCells_ToModify_NR( SI_XNAP_DT_ServedCells_ToModify_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ServedCellsToModifyNRItem_deactivation_indication( char * key, uint8_t eServedCellsToModifyNRItem_deactivation_indication, int lvl);

int __si_xnap_Encode_ServedCellsToModifyNRItem_deactivation_indication( uint8_t eServedCellsToModifyNRItem_deactivation_indication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCells_ToModify_NR_Item( SI_XNAP_DT_ServedCells_ToModify_NR_Item ** data);

void __si_xnap_debug_ServedCells_ToModify_NR_Item( char * key, SI_XNAP_DT_ServedCells_ToModify_NR_Item * data, int lvl);

void __si_xnap_memfree_ServedCells_ToModify_NR_Item( SI_XNAP_DT_ServedCells_ToModify_NR_Item * data);

int __si_xnap_Encode_ServedCells_ToModify_NR_Item( SI_XNAP_DT_ServedCells_ToModify_NR_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCellSpecificInfoReq_NR( SI_XNAP_DT_ServedCellSpecificInfoReq_NR ** data);

void __si_xnap_debug_ServedCellSpecificInfoReq_NR( char * key, SI_XNAP_DT_ServedCellSpecificInfoReq_NR * data, int lvl);

void __si_xnap_memfree_ServedCellSpecificInfoReq_NR( SI_XNAP_DT_ServedCellSpecificInfoReq_NR * data);

int __si_xnap_Encode_ServedCellSpecificInfoReq_NR( SI_XNAP_DT_ServedCellSpecificInfoReq_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ServedCellSpecificInfoReqNRItem_additionalMTCListRequestIndicator( char * key, uint8_t eServedCellSpecificInfoReqNRItem_additionalMTCListRequestIndicator, int lvl);

int __si_xnap_Encode_ServedCellSpecificInfoReqNRItem_additionalMTCListRequestIndicator( uint8_t eServedCellSpecificInfoReqNRItem_additionalMTCListRequestIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCellSpecificInfoReq_NR_Item( SI_XNAP_DT_ServedCellSpecificInfoReq_NR_Item ** data);

void __si_xnap_debug_ServedCellSpecificInfoReq_NR_Item( char * key, SI_XNAP_DT_ServedCellSpecificInfoReq_NR_Item * data, int lvl);

void __si_xnap_memfree_ServedCellSpecificInfoReq_NR_Item( SI_XNAP_DT_ServedCellSpecificInfoReq_NR_Item * data);

int __si_xnap_Encode_ServedCellSpecificInfoReq_NR_Item( SI_XNAP_DT_ServedCellSpecificInfoReq_NR_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCellsToUpdateNR_served_Cells_ToDelete_NR( SI_XNAP_DT_ServedCellsToUpdateNR_served_Cells_ToDelete_NR ** data);

void __si_xnap_debug_ServedCellsToUpdateNR_served_Cells_ToDelete_NR( char * key, SI_XNAP_DT_ServedCellsToUpdateNR_served_Cells_ToDelete_NR * data, int lvl);

void __si_xnap_memfree_ServedCellsToUpdateNR_served_Cells_ToDelete_NR( SI_XNAP_DT_ServedCellsToUpdateNR_served_Cells_ToDelete_NR * data);

int __si_xnap_Encode_ServedCellsToUpdateNR_served_Cells_ToDelete_NR( SI_XNAP_DT_ServedCellsToUpdateNR_served_Cells_ToDelete_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCellsToUpdate_NR( SI_XNAP_DT_ServedCellsToUpdate_NR ** data);

void __si_xnap_debug_ServedCellsToUpdate_NR( char * key, SI_XNAP_DT_ServedCellsToUpdate_NR * data, int lvl);

void __si_xnap_memfree_ServedCellsToUpdate_NR( SI_XNAP_DT_ServedCellsToUpdate_NR * data);

int __si_xnap_Encode_ServedCellsToUpdate_NR( SI_XNAP_DT_ServedCellsToUpdate_NR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SNSSAIAvailableCapacity_List( SI_XNAP_DT_SNSSAIAvailableCapacity_List ** data);

void __si_xnap_debug_SNSSAIAvailableCapacity_List( char * key, SI_XNAP_DT_SNSSAIAvailableCapacity_List * data, int lvl);

void __si_xnap_memfree_SNSSAIAvailableCapacity_List( SI_XNAP_DT_SNSSAIAvailableCapacity_List * data);

int __si_xnap_Encode_SNSSAIAvailableCapacity_List( SI_XNAP_DT_SNSSAIAvailableCapacity_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SliceAvailableCapacity_Item( SI_XNAP_DT_SliceAvailableCapacity_Item ** data);

void __si_xnap_debug_SliceAvailableCapacity_Item( char * key, SI_XNAP_DT_SliceAvailableCapacity_Item * data, int lvl);

void __si_xnap_memfree_SliceAvailableCapacity_Item( SI_XNAP_DT_SliceAvailableCapacity_Item * data);

int __si_xnap_Encode_SliceAvailableCapacity_Item( SI_XNAP_DT_SliceAvailableCapacity_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueDownlink( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueDownlink( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueDownlink( SI_XNAP_DT_SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueDownlink * data);


void __si_xnap_debug_SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueUplink( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueUplink( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueUplink( SI_XNAP_DT_SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueUplink * data);


void __si_xnap_init_SNSSAIAvailableCapacity_Item( SI_XNAP_DT_SNSSAIAvailableCapacity_Item ** data);

void __si_xnap_debug_SNSSAIAvailableCapacity_Item( char * key, SI_XNAP_DT_SNSSAIAvailableCapacity_Item * data, int lvl);

void __si_xnap_memfree_SNSSAIAvailableCapacity_Item( SI_XNAP_DT_SNSSAIAvailableCapacity_Item * data);

int __si_xnap_Encode_SNSSAIAvailableCapacity_Item( SI_XNAP_DT_SNSSAIAvailableCapacity_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SliceRadioResourceStatus_List( SI_XNAP_DT_SliceRadioResourceStatus_List ** data);

void __si_xnap_debug_SliceRadioResourceStatus_List( char * key, SI_XNAP_DT_SliceRadioResourceStatus_List * data, int lvl);

void __si_xnap_memfree_SliceRadioResourceStatus_List( SI_XNAP_DT_SliceRadioResourceStatus_List * data);

int __si_xnap_Encode_SliceRadioResourceStatus_List( SI_XNAP_DT_SliceRadioResourceStatus_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SNSSAIRadioResourceStatus_List( SI_XNAP_DT_SNSSAIRadioResourceStatus_List ** data);

void __si_xnap_debug_SNSSAIRadioResourceStatus_List( char * key, SI_XNAP_DT_SNSSAIRadioResourceStatus_List * data, int lvl);

void __si_xnap_memfree_SNSSAIRadioResourceStatus_List( SI_XNAP_DT_SNSSAIRadioResourceStatus_List * data);

int __si_xnap_Encode_SNSSAIRadioResourceStatus_List( SI_XNAP_DT_SNSSAIRadioResourceStatus_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SliceRadioResourceStatus_Item( SI_XNAP_DT_SliceRadioResourceStatus_Item ** data);

void __si_xnap_debug_SliceRadioResourceStatus_Item( char * key, SI_XNAP_DT_SliceRadioResourceStatus_Item * data, int lvl);

void __si_xnap_memfree_SliceRadioResourceStatus_Item( SI_XNAP_DT_SliceRadioResourceStatus_Item * data);

int __si_xnap_Encode_SliceRadioResourceStatus_Item( SI_XNAP_DT_SliceRadioResourceStatus_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SLPositioning_Ranging_Authorized( char * key, uint8_t eSLPositioning_Ranging_Authorized, int lvl);

int __si_xnap_Encode_SLPositioning_Ranging_Authorized( uint8_t eSLPositioning_Ranging_Authorized, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RSPPQoSFlowList( SI_XNAP_DT_RSPPQoSFlowList ** data);

void __si_xnap_debug_RSPPQoSFlowList( char * key, SI_XNAP_DT_RSPPQoSFlowList * data, int lvl);

void __si_xnap_memfree_RSPPQoSFlowList( SI_XNAP_DT_RSPPQoSFlowList * data);

int __si_xnap_Encode_RSPPQoSFlowList( SI_XNAP_DT_RSPPQoSFlowList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RSPP_transport_QoS_parameters( SI_XNAP_DT_RSPP_transport_QoS_parameters ** data);

void __si_xnap_debug_RSPP_transport_QoS_parameters( char * key, SI_XNAP_DT_RSPP_transport_QoS_parameters * data, int lvl);

void __si_xnap_memfree_RSPP_transport_QoS_parameters( SI_XNAP_DT_RSPP_transport_QoS_parameters * data);

int __si_xnap_Encode_RSPP_transport_QoS_parameters( SI_XNAP_DT_RSPP_transport_QoS_parameters * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SLPositioning_Ranging_Services_Info( SI_XNAP_DT_SLPositioning_Ranging_Services_Info ** data);

void __si_xnap_debug_SLPositioning_Ranging_Services_Info( char * key, SI_XNAP_DT_SLPositioning_Ranging_Services_Info * data, int lvl);

void __si_xnap_memfree_SLPositioning_Ranging_Services_Info( SI_XNAP_DT_SLPositioning_Ranging_Services_Info * data);

int __si_xnap_Encode_SLPositioning_Ranging_Services_Info( SI_XNAP_DT_SLPositioning_Ranging_Services_Info * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RSPPFlowBitRates( SI_XNAP_DT_RSPPFlowBitRates ** data);

void __si_xnap_debug_RSPPFlowBitRates( char * key, SI_XNAP_DT_RSPPFlowBitRates * data, int lvl);

void __si_xnap_memfree_RSPPFlowBitRates( SI_XNAP_DT_RSPPFlowBitRates * data);

int __si_xnap_Encode_RSPPFlowBitRates( SI_XNAP_DT_RSPPFlowBitRates * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RSPPQoSFlowItem( SI_XNAP_DT_RSPPQoSFlowItem ** data);

void __si_xnap_debug_RSPPQoSFlowItem( char * key, SI_XNAP_DT_RSPPQoSFlowItem * data, int lvl);

void __si_xnap_memfree_RSPPQoSFlowItem( SI_XNAP_DT_RSPPQoSFlowItem * data);

int __si_xnap_Encode_RSPPQoSFlowItem( SI_XNAP_DT_RSPPQoSFlowItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_Slice_DL_GBR_PRB_Usage( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_Slice_DL_GBR_PRB_Usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_Slice_DL_GBR_PRB_Usage( SI_XNAP_DT_Slice_DL_GBR_PRB_Usage * data);


void __si_xnap_debug_Slice_UL_GBR_PRB_Usage( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_Slice_UL_GBR_PRB_Usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_Slice_UL_GBR_PRB_Usage( SI_XNAP_DT_Slice_UL_GBR_PRB_Usage * data);


void __si_xnap_debug_Slice_DL_non_GBR_PRB_Usage( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_Slice_DL_non_GBR_PRB_Usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_Slice_DL_non_GBR_PRB_Usage( SI_XNAP_DT_Slice_DL_non_GBR_PRB_Usage * data);


void __si_xnap_debug_Slice_UL_non_GBR_PRB_Usage( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_Slice_UL_non_GBR_PRB_Usage( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_Slice_UL_non_GBR_PRB_Usage( SI_XNAP_DT_Slice_UL_non_GBR_PRB_Usage * data);


void __si_xnap_debug_Slice_DL_Total_PRB_Allocation( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_Slice_DL_Total_PRB_Allocation( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_Slice_DL_Total_PRB_Allocation( SI_XNAP_DT_Slice_DL_Total_PRB_Allocation * data);


void __si_xnap_debug_Slice_UL_Total_PRB_Allocation( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_Slice_UL_Total_PRB_Allocation( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_Slice_UL_Total_PRB_Allocation( SI_XNAP_DT_Slice_UL_Total_PRB_Allocation * data);


void __si_xnap_init_SNSSAIRadioResourceStatus_Item( SI_XNAP_DT_SNSSAIRadioResourceStatus_Item ** data);

void __si_xnap_debug_SNSSAIRadioResourceStatus_Item( char * key, SI_XNAP_DT_SNSSAIRadioResourceStatus_Item * data, int lvl);

void __si_xnap_memfree_SNSSAIRadioResourceStatus_Item( SI_XNAP_DT_SNSSAIRadioResourceStatus_Item * data);

int __si_xnap_Encode_SNSSAIRadioResourceStatus_Item( SI_XNAP_DT_SNSSAIRadioResourceStatus_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SNSSAI_list( SI_XNAP_DT_SNSSAI_list ** data);

void __si_xnap_debug_SNSSAI_list( char * key, SI_XNAP_DT_SNSSAI_list * data, int lvl);

void __si_xnap_memfree_SNSSAI_list( SI_XNAP_DT_SNSSAI_list * data);

int __si_xnap_Encode_SNSSAI_list( SI_XNAP_DT_SNSSAI_list * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SliceToReport_List_Item( SI_XNAP_DT_SliceToReport_List_Item ** data);

void __si_xnap_debug_SliceToReport_List_Item( char * key, SI_XNAP_DT_SliceToReport_List_Item * data, int lvl);

void __si_xnap_memfree_SliceToReport_List_Item( SI_XNAP_DT_SliceToReport_List_Item * data);

int __si_xnap_Encode_SliceToReport_List_Item( SI_XNAP_DT_SliceToReport_List_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SNSSAI_Item( SI_XNAP_DT_SNSSAI_Item ** data);

void __si_xnap_debug_SNSSAI_Item( char * key, SI_XNAP_DT_SNSSAI_Item * data, int lvl);

void __si_xnap_memfree_SNSSAI_Item( SI_XNAP_DT_SNSSAI_Item * data);

int __si_xnap_Encode_SNSSAI_Item( SI_XNAP_DT_SNSSAI_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SlotConfigurationListItem_slotIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SlotConfigurationListItem_slotIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SlotConfigurationListItem_slotIndex( SI_XNAP_DT_SlotConfigurationListItem_slotIndex * data);


void __si_xnap_init_SymbolAllocation_in_Slot_AllDL( SI_XNAP_DT_SymbolAllocation_in_Slot_AllDL ** data);

void __si_xnap_debug_SymbolAllocation_in_Slot_AllDL( char * key, SI_XNAP_DT_SymbolAllocation_in_Slot_AllDL * data, int lvl);

void __si_xnap_memfree_SymbolAllocation_in_Slot_AllDL( SI_XNAP_DT_SymbolAllocation_in_Slot_AllDL * data);

int __si_xnap_Encode_SymbolAllocation_in_Slot_AllDL( SI_XNAP_DT_SymbolAllocation_in_Slot_AllDL * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SymbolAllocation_in_Slot_AllUL( SI_XNAP_DT_SymbolAllocation_in_Slot_AllUL ** data);

void __si_xnap_debug_SymbolAllocation_in_Slot_AllUL( char * key, SI_XNAP_DT_SymbolAllocation_in_Slot_AllUL * data, int lvl);

void __si_xnap_memfree_SymbolAllocation_in_Slot_AllUL( SI_XNAP_DT_SymbolAllocation_in_Slot_AllUL * data);

int __si_xnap_Encode_SymbolAllocation_in_Slot_AllUL( SI_XNAP_DT_SymbolAllocation_in_Slot_AllUL * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SymbolAllocationinSlotBothDLandUL_numberofDLSymbols( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SymbolAllocationinSlotBothDLandUL_numberofDLSymbols( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SymbolAllocationinSlotBothDLandUL_numberofDLSymbols( SI_XNAP_DT_SymbolAllocationinSlotBothDLandUL_numberofDLSymbols * data);


void __si_xnap_debug_SymbolAllocationinSlotBothDLandUL_numberofULSymbols( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SymbolAllocationinSlotBothDLandUL_numberofULSymbols( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SymbolAllocationinSlotBothDLandUL_numberofULSymbols( SI_XNAP_DT_SymbolAllocationinSlotBothDLandUL_numberofULSymbols * data);


void __si_xnap_init_SymbolAllocation_in_Slot_BothDLandUL( SI_XNAP_DT_SymbolAllocation_in_Slot_BothDLandUL ** data);

void __si_xnap_debug_SymbolAllocation_in_Slot_BothDLandUL( char * key, SI_XNAP_DT_SymbolAllocation_in_Slot_BothDLandUL * data, int lvl);

void __si_xnap_memfree_SymbolAllocation_in_Slot_BothDLandUL( SI_XNAP_DT_SymbolAllocation_in_Slot_BothDLandUL * data);

int __si_xnap_Encode_SymbolAllocation_in_Slot_BothDLandUL( SI_XNAP_DT_SymbolAllocation_in_Slot_BothDLandUL * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SymbolAllocation_in_Slot( SI_XNAP_DT_SymbolAllocation_in_Slot ** data);

void __si_xnap_debug_SymbolAllocation_in_Slot( char * key, SI_XNAP_DT_SymbolAllocation_in_Slot * data, int lvl);

void __si_xnap_memfree_SymbolAllocation_in_Slot( SI_XNAP_DT_SymbolAllocation_in_Slot * data);

int __si_xnap_Encode_SymbolAllocation_in_Slot( SI_XNAP_DT_SymbolAllocation_in_Slot * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SlotConfiguration_List_Item( SI_XNAP_DT_SlotConfiguration_List_Item ** data);

void __si_xnap_debug_SlotConfiguration_List_Item( char * key, SI_XNAP_DT_SlotConfiguration_List_Item * data, int lvl);

void __si_xnap_memfree_SlotConfiguration_List_Item( SI_XNAP_DT_SlotConfiguration_List_Item * data);

int __si_xnap_Encode_SlotConfiguration_List_Item( SI_XNAP_DT_SlotConfiguration_List_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_S_NG_RANnode_Addition_Trigger_Ind( char * key, uint8_t eS_NG_RANnode_Addition_Trigger_Ind, int lvl);

int __si_xnap_Encode_S_NG_RANnode_Addition_Trigger_Ind( uint8_t eS_NG_RANnode_Addition_Trigger_Ind, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SNMobilityInformation( SI_XNAP_DT_SNMobilityInformation ** data);

void __si_xnap_init_SNMobilityInformation2( SI_XNAP_DT_SNMobilityInformation ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_SNMobilityInformation( char * key, SI_XNAP_DT_SNMobilityInformation * data, int lvl);

void __si_xnap_memfree_SNMobilityInformation( SI_XNAP_DT_SNMobilityInformation * data);

int __si_xnap_Encode_SNMobilityInformation( SI_XNAP_DT_SNMobilityInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SNPNIdentity( SI_XNAP_DT_SNPNIdentity ** data);

void __si_xnap_debug_SNPNIdentity( char * key, SI_XNAP_DT_SNPNIdentity * data, int lvl);

void __si_xnap_memfree_SNPNIdentity( SI_XNAP_DT_SNPNIdentity * data);

int __si_xnap_Encode_SNPNIdentity( SI_XNAP_DT_SNPNIdentity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SNTriggered( char * key, uint8_t eSNTriggered, int lvl);

int __si_xnap_Encode_SNTriggered( uint8_t eSNTriggered, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SpectrumSharingGroupID( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SpectrumSharingGroupID( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SpectrumSharingGroupID( SI_XNAP_DT_SpectrumSharingGroupID * data);


void __si_xnap_debug_SplitSessionIndicator( char * key, uint8_t eSplitSessionIndicator, int lvl);

int __si_xnap_Encode_SplitSessionIndicator( uint8_t eSplitSessionIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SplitSRBsTypes( char * key, uint8_t eSplitSRBsTypes, int lvl);

int __si_xnap_Encode_SplitSRBsTypes( uint8_t eSplitSRBsTypes, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SPRAvailability( char * key, uint8_t eSPRAvailability, int lvl);

int __si_xnap_Encode_SPRAvailability( uint8_t eSPRAvailability, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SRSPositioningConfigOrActivationRequest( char * key, uint8_t eSRSPositioningConfigOrActivationRequest, int lvl);

int __si_xnap_Encode_SRSPositioningConfigOrActivationRequest( uint8_t eSRSPositioningConfigOrActivationRequest, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SRSConfiguration( SI_XNAP_DT_SRSConfiguration ** data);

void __si_xnap_init_SRSConfiguration2( SI_XNAP_DT_SRSConfiguration ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_SRSConfiguration( char * key, SI_XNAP_DT_SRSConfiguration * data, int lvl);

void __si_xnap_memfree_SRSConfiguration( SI_XNAP_DT_SRSConfiguration * data);

int __si_xnap_Encode_SRSConfiguration( SI_XNAP_DT_SRSConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SSBAreaCapacityValueListItem_sSBIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SSBAreaCapacityValueListItem_sSBIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SSBAreaCapacityValueListItem_sSBIndex( SI_XNAP_DT_SSBAreaCapacityValueListItem_sSBIndex * data);


void __si_xnap_debug_SSBAreaCapacityValueListItem_ssbAreaCapacityValue( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SSBAreaCapacityValueListItem_ssbAreaCapacityValue( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SSBAreaCapacityValueListItem_ssbAreaCapacityValue( SI_XNAP_DT_SSBAreaCapacityValueListItem_ssbAreaCapacityValue * data);


void __si_xnap_init_SSBAreaCapacityValue_List_Item( SI_XNAP_DT_SSBAreaCapacityValue_List_Item ** data);

void __si_xnap_debug_SSBAreaCapacityValue_List_Item( char * key, SI_XNAP_DT_SSBAreaCapacityValue_List_Item * data, int lvl);

void __si_xnap_memfree_SSBAreaCapacityValue_List_Item( SI_XNAP_DT_SSBAreaCapacityValue_List_Item * data);

int __si_xnap_Encode_SSBAreaCapacityValue_List_Item( SI_XNAP_DT_SSBAreaCapacityValue_List_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SSBAreaRadioResourceStatusListItem_sSBIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SSBAreaRadioResourceStatusListItem_sSBIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SSBAreaRadioResourceStatusListItem_sSBIndex( SI_XNAP_DT_SSBAreaRadioResourceStatusListItem_sSBIndex * data);


void __si_xnap_init_SSBAreaRadioResourceStatus_List_Item( SI_XNAP_DT_SSBAreaRadioResourceStatus_List_Item ** data);

void __si_xnap_debug_SSBAreaRadioResourceStatus_List_Item( char * key, SI_XNAP_DT_SSBAreaRadioResourceStatus_List_Item * data, int lvl);

void __si_xnap_memfree_SSBAreaRadioResourceStatus_List_Item( SI_XNAP_DT_SSBAreaRadioResourceStatus_List_Item * data);

int __si_xnap_Encode_SSBAreaRadioResourceStatus_List_Item( SI_XNAP_DT_SSBAreaRadioResourceStatus_List_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SSBCoverageModificationListItem_sSBIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SSBCoverageModificationListItem_sSBIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SSBCoverageModificationListItem_sSBIndex( SI_XNAP_DT_SSBCoverageModificationListItem_sSBIndex * data);


void __si_xnap_debug_SSBCoverageModificationListItem_sSBCoverageState( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SSBCoverageModificationListItem_sSBCoverageState( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SSBCoverageModificationListItem_sSBCoverageState( SI_XNAP_DT_SSBCoverageModificationListItem_sSBCoverageState * data);


void __si_xnap_init_SSB_Coverage_Modification_List_Item( SI_XNAP_DT_SSB_Coverage_Modification_List_Item ** data);

void __si_xnap_debug_SSB_Coverage_Modification_List_Item( char * key, SI_XNAP_DT_SSB_Coverage_Modification_List_Item * data, int lvl);

void __si_xnap_memfree_SSB_Coverage_Modification_List_Item( SI_XNAP_DT_SSB_Coverage_Modification_List_Item * data);

int __si_xnap_Encode_SSB_Coverage_Modification_List_Item( SI_XNAP_DT_SSB_Coverage_Modification_List_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SSBPositionsInBurst_shortBitmap( SI_XNAP_DT_SSBPositionsInBurst_shortBitmap ** data);

void __si_xnap_init_SSBPositionsInBurst_shortBitmap2( SI_XNAP_DT_SSBPositionsInBurst_shortBitmap ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_SSBPositionsInBurst_shortBitmap( char * key, SI_XNAP_DT_SSBPositionsInBurst_shortBitmap * data, int lvl);

void __si_xnap_memfree_SSBPositionsInBurst_shortBitmap( SI_XNAP_DT_SSBPositionsInBurst_shortBitmap * data);

int __si_xnap_Encode_SSBPositionsInBurst_shortBitmap( SI_XNAP_DT_SSBPositionsInBurst_shortBitmap * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SSBPositionsInBurst_mediumBitmap( SI_XNAP_DT_SSBPositionsInBurst_mediumBitmap ** data);

void __si_xnap_init_SSBPositionsInBurst_mediumBitmap2( SI_XNAP_DT_SSBPositionsInBurst_mediumBitmap ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_SSBPositionsInBurst_mediumBitmap( char * key, SI_XNAP_DT_SSBPositionsInBurst_mediumBitmap * data, int lvl);

void __si_xnap_memfree_SSBPositionsInBurst_mediumBitmap( SI_XNAP_DT_SSBPositionsInBurst_mediumBitmap * data);

int __si_xnap_Encode_SSBPositionsInBurst_mediumBitmap( SI_XNAP_DT_SSBPositionsInBurst_mediumBitmap * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SSBPositionsInBurst_longBitmap( SI_XNAP_DT_SSBPositionsInBurst_longBitmap ** data);

void __si_xnap_init_SSBPositionsInBurst_longBitmap2( SI_XNAP_DT_SSBPositionsInBurst_longBitmap ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_SSBPositionsInBurst_longBitmap( char * key, SI_XNAP_DT_SSBPositionsInBurst_longBitmap * data, int lvl);

void __si_xnap_memfree_SSBPositionsInBurst_longBitmap( SI_XNAP_DT_SSBPositionsInBurst_longBitmap * data);

int __si_xnap_Encode_SSBPositionsInBurst_longBitmap( SI_XNAP_DT_SSBPositionsInBurst_longBitmap * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SSB_PositionsInBurst( SI_XNAP_DT_SSB_PositionsInBurst ** data);

void __si_xnap_debug_SSB_PositionsInBurst( char * key, SI_XNAP_DT_SSB_PositionsInBurst * data, int lvl);

void __si_xnap_memfree_SSB_PositionsInBurst( SI_XNAP_DT_SSB_PositionsInBurst * data);

int __si_xnap_Encode_SSB_PositionsInBurst( SI_XNAP_DT_SSB_PositionsInBurst * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SSBOffsets_List( SI_XNAP_DT_SSBOffsets_List ** data);

void __si_xnap_debug_SSBOffsets_List( char * key, SI_XNAP_DT_SSBOffsets_List * data, int lvl);

void __si_xnap_memfree_SSBOffsets_List( SI_XNAP_DT_SSBOffsets_List * data);

int __si_xnap_Encode_SSBOffsets_List( SI_XNAP_DT_SSBOffsets_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SSBOffsetInformation_sSBIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SSBOffsetInformation_sSBIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SSBOffsetInformation_sSBIndex( SI_XNAP_DT_SSBOffsetInformation_sSBIndex * data);


void __si_xnap_init_SSBOffsetInformation( SI_XNAP_DT_SSBOffsetInformation ** data);

void __si_xnap_debug_SSBOffsetInformation( char * key, SI_XNAP_DT_SSBOffsetInformation * data, int lvl);

void __si_xnap_memfree_SSBOffsetInformation( SI_XNAP_DT_SSBOffsetInformation * data);

int __si_xnap_Encode_SSBOffsetInformation( SI_XNAP_DT_SSBOffsetInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SSBOffsets_Item( SI_XNAP_DT_SSBOffsets_Item ** data);

void __si_xnap_debug_SSBOffsets_Item( char * key, SI_XNAP_DT_SSBOffsets_Item * data, int lvl);

void __si_xnap_memfree_SSBOffsets_Item( SI_XNAP_DT_SSBOffsets_Item * data);

int __si_xnap_Encode_SSBOffsets_Item( SI_XNAP_DT_SSBOffsets_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SSBOffsetModificationRange_sSBIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SSBOffsetModificationRange_sSBIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SSBOffsetModificationRange_sSBIndex( SI_XNAP_DT_SSBOffsetModificationRange_sSBIndex * data);


void __si_xnap_init_SSBOffsetModificationRange( SI_XNAP_DT_SSBOffsetModificationRange ** data);

void __si_xnap_debug_SSBOffsetModificationRange( char * key, SI_XNAP_DT_SSBOffsetModificationRange * data, int lvl);

void __si_xnap_memfree_SSBOffsetModificationRange( SI_XNAP_DT_SSBOffsetModificationRange * data);

int __si_xnap_Encode_SSBOffsetModificationRange( SI_XNAP_DT_SSBOffsetModificationRange * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SSBToReportListItem_sSBIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SSBToReportListItem_sSBIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SSBToReportListItem_sSBIndex( SI_XNAP_DT_SSBToReportListItem_sSBIndex * data);


void __si_xnap_init_SSBToReport_List_Item( SI_XNAP_DT_SSBToReport_List_Item ** data);

void __si_xnap_debug_SSBToReport_List_Item( char * key, SI_XNAP_DT_SSBToReport_List_Item * data, int lvl);

void __si_xnap_memfree_SSBToReport_List_Item( SI_XNAP_DT_SSBToReport_List_Item * data);

int __si_xnap_Encode_SSBToReport_List_Item( SI_XNAP_DT_SSBToReport_List_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SuccessfulHOReportInformation( SI_XNAP_DT_SuccessfulHOReportInformation ** data);

void __si_xnap_debug_SuccessfulHOReportInformation( char * key, SI_XNAP_DT_SuccessfulHOReportInformation * data, int lvl);

void __si_xnap_memfree_SuccessfulHOReportInformation( SI_XNAP_DT_SuccessfulHOReportInformation * data);

int __si_xnap_Encode_SuccessfulHOReportInformation( SI_XNAP_DT_SuccessfulHOReportInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SuccessfulHOReportContainer( SI_XNAP_DT_SuccessfulHOReportContainer ** data);

void __si_xnap_init_SuccessfulHOReportContainer2( SI_XNAP_DT_SuccessfulHOReportContainer ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_SuccessfulHOReportContainer( char * key, SI_XNAP_DT_SuccessfulHOReportContainer * data, int lvl);

void __si_xnap_memfree_SuccessfulHOReportContainer( SI_XNAP_DT_SuccessfulHOReportContainer * data);

int __si_xnap_Encode_SuccessfulHOReportContainer( SI_XNAP_DT_SuccessfulHOReportContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SuccessfulHOReportList_Item( SI_XNAP_DT_SuccessfulHOReportList_Item ** data);

void __si_xnap_debug_SuccessfulHOReportList_Item( char * key, SI_XNAP_DT_SuccessfulHOReportList_Item * data, int lvl);

void __si_xnap_memfree_SuccessfulHOReportList_Item( SI_XNAP_DT_SuccessfulHOReportList_Item * data);

int __si_xnap_Encode_SuccessfulHOReportList_Item( SI_XNAP_DT_SuccessfulHOReportList_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SuccessfulPSCellChangeReportInformation( SI_XNAP_DT_SuccessfulPSCellChangeReportInformation ** data);

void __si_xnap_debug_SuccessfulPSCellChangeReportInformation( char * key, SI_XNAP_DT_SuccessfulPSCellChangeReportInformation * data, int lvl);

void __si_xnap_memfree_SuccessfulPSCellChangeReportInformation( SI_XNAP_DT_SuccessfulPSCellChangeReportInformation * data);

int __si_xnap_Encode_SuccessfulPSCellChangeReportInformation( SI_XNAP_DT_SuccessfulPSCellChangeReportInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SuccessfulPSCellChangeReportContainer( SI_XNAP_DT_SuccessfulPSCellChangeReportContainer ** data);

void __si_xnap_init_SuccessfulPSCellChangeReportContainer2( SI_XNAP_DT_SuccessfulPSCellChangeReportContainer ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_SuccessfulPSCellChangeReportContainer( char * key, SI_XNAP_DT_SuccessfulPSCellChangeReportContainer * data, int lvl);

void __si_xnap_memfree_SuccessfulPSCellChangeReportContainer( SI_XNAP_DT_SuccessfulPSCellChangeReportContainer * data);

int __si_xnap_Encode_SuccessfulPSCellChangeReportContainer( SI_XNAP_DT_SuccessfulPSCellChangeReportContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SuccessfulPSCellChangeReportList_Item( SI_XNAP_DT_SuccessfulPSCellChangeReportList_Item ** data);

void __si_xnap_debug_SuccessfulPSCellChangeReportList_Item( char * key, SI_XNAP_DT_SuccessfulPSCellChangeReportList_Item * data, int lvl);

void __si_xnap_memfree_SuccessfulPSCellChangeReportList_Item( SI_XNAP_DT_SuccessfulPSCellChangeReportList_Item * data);

int __si_xnap_Encode_SuccessfulPSCellChangeReportList_Item( SI_XNAP_DT_SuccessfulPSCellChangeReportList_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SUL_FrequencyBand( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SUL_FrequencyBand( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SUL_FrequencyBand( SI_XNAP_DT_SUL_FrequencyBand * data);


void __si_xnap_init_Supported_MBS_FSA_ID_List( SI_XNAP_DT_Supported_MBS_FSA_ID_List ** data);

void __si_xnap_debug_Supported_MBS_FSA_ID_List( char * key, SI_XNAP_DT_Supported_MBS_FSA_ID_List * data, int lvl);

void __si_xnap_memfree_Supported_MBS_FSA_ID_List( SI_XNAP_DT_Supported_MBS_FSA_ID_List * data);

int __si_xnap_Encode_Supported_MBS_FSA_ID_List( SI_XNAP_DT_Supported_MBS_FSA_ID_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SupportedSULBandItem( SI_XNAP_DT_SupportedSULBandItem ** data);

void __si_xnap_debug_SupportedSULBandItem( char * key, SI_XNAP_DT_SupportedSULBandItem * data, int lvl);

void __si_xnap_memfree_SupportedSULBandItem( SI_XNAP_DT_SupportedSULBandItem * data);

int __si_xnap_Encode_SupportedSULBandItem( SI_XNAP_DT_SupportedSULBandItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SurvivalTime( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SurvivalTime( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SurvivalTime( SI_XNAP_DT_SurvivalTime * data);


void __si_xnap_init_SNPN_CellIdListforMDT( SI_XNAP_DT_SNPN_CellIdListforMDT ** data);

void __si_xnap_debug_SNPN_CellIdListforMDT( char * key, SI_XNAP_DT_SNPN_CellIdListforMDT * data, int lvl);

void __si_xnap_memfree_SNPN_CellIdListforMDT( SI_XNAP_DT_SNPN_CellIdListforMDT * data);

int __si_xnap_Encode_SNPN_CellIdListforMDT( SI_XNAP_DT_SNPN_CellIdListforMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SNPN_CellBasedMDT( SI_XNAP_DT_SNPN_CellBasedMDT ** data);

void __si_xnap_debug_SNPN_CellBasedMDT( char * key, SI_XNAP_DT_SNPN_CellBasedMDT * data, int lvl);

void __si_xnap_memfree_SNPN_CellBasedMDT( SI_XNAP_DT_SNPN_CellBasedMDT * data);

int __si_xnap_Encode_SNPN_CellBasedMDT( SI_XNAP_DT_SNPN_CellBasedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SNPN_CellIdforMDT_Item( SI_XNAP_DT_SNPN_CellIdforMDT_Item ** data);

void __si_xnap_debug_SNPN_CellIdforMDT_Item( char * key, SI_XNAP_DT_SNPN_CellIdforMDT_Item * data, int lvl);

void __si_xnap_memfree_SNPN_CellIdforMDT_Item( SI_XNAP_DT_SNPN_CellIdforMDT_Item * data);

int __si_xnap_Encode_SNPN_CellIdforMDT_Item( SI_XNAP_DT_SNPN_CellIdforMDT_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SNPN_TAIListforMDT( SI_XNAP_DT_SNPN_TAIListforMDT ** data);

void __si_xnap_debug_SNPN_TAIListforMDT( char * key, SI_XNAP_DT_SNPN_TAIListforMDT * data, int lvl);

void __si_xnap_memfree_SNPN_TAIListforMDT( SI_XNAP_DT_SNPN_TAIListforMDT * data);

int __si_xnap_Encode_SNPN_TAIListforMDT( SI_XNAP_DT_SNPN_TAIListforMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SNPN_TAIBasedMDT( SI_XNAP_DT_SNPN_TAIBasedMDT ** data);

void __si_xnap_debug_SNPN_TAIBasedMDT( char * key, SI_XNAP_DT_SNPN_TAIBasedMDT * data, int lvl);

void __si_xnap_memfree_SNPN_TAIBasedMDT( SI_XNAP_DT_SNPN_TAIBasedMDT * data);

int __si_xnap_Encode_SNPN_TAIBasedMDT( SI_XNAP_DT_SNPN_TAIBasedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SNPN_TAIforMDT_Item( SI_XNAP_DT_SNPN_TAIforMDT_Item ** data);

void __si_xnap_debug_SNPN_TAIforMDT_Item( char * key, SI_XNAP_DT_SNPN_TAIforMDT_Item * data, int lvl);

void __si_xnap_memfree_SNPN_TAIforMDT_Item( SI_XNAP_DT_SNPN_TAIforMDT_Item * data);

int __si_xnap_Encode_SNPN_TAIforMDT_Item( SI_XNAP_DT_SNPN_TAIforMDT_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SNPNListforMDT( SI_XNAP_DT_SNPNListforMDT ** data);

void __si_xnap_debug_SNPNListforMDT( char * key, SI_XNAP_DT_SNPNListforMDT * data, int lvl);

void __si_xnap_memfree_SNPNListforMDT( SI_XNAP_DT_SNPNListforMDT * data);

int __si_xnap_Encode_SNPNListforMDT( SI_XNAP_DT_SNPNListforMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SNPN_BasedMDT( SI_XNAP_DT_SNPN_BasedMDT ** data);

void __si_xnap_debug_SNPN_BasedMDT( char * key, SI_XNAP_DT_SNPN_BasedMDT * data, int lvl);

void __si_xnap_memfree_SNPN_BasedMDT( SI_XNAP_DT_SNPN_BasedMDT * data);

int __si_xnap_Encode_SNPN_BasedMDT( SI_XNAP_DT_SNPN_BasedMDT * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SNPNforMDT_Item( SI_XNAP_DT_SNPNforMDT_Item ** data);

void __si_xnap_debug_SNPNforMDT_Item( char * key, SI_XNAP_DT_SNPNforMDT_Item * data, int lvl);

void __si_xnap_memfree_SNPNforMDT_Item( SI_XNAP_DT_SNPNforMDT_Item * data);

int __si_xnap_Encode_SNPNforMDT_Item( SI_XNAP_DT_SNPNforMDT_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TAIforMDT_Item( SI_XNAP_DT_TAIforMDT_Item ** data);

void __si_xnap_debug_TAIforMDT_Item( char * key, SI_XNAP_DT_TAIforMDT_Item * data, int lvl);

void __si_xnap_memfree_TAIforMDT_Item( SI_XNAP_DT_TAIforMDT_Item * data);

int __si_xnap_Encode_TAIforMDT_Item( SI_XNAP_DT_TAIforMDT_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TAINSAGSupportList( SI_XNAP_DT_TAINSAGSupportList ** data);

void __si_xnap_debug_TAINSAGSupportList( char * key, SI_XNAP_DT_TAINSAGSupportList * data, int lvl);

void __si_xnap_memfree_TAINSAGSupportList( SI_XNAP_DT_TAINSAGSupportList * data);

int __si_xnap_Encode_TAINSAGSupportList( SI_XNAP_DT_TAINSAGSupportList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TAINSAGSupportItem( SI_XNAP_DT_TAINSAGSupportItem ** data);

void __si_xnap_debug_TAINSAGSupportItem( char * key, SI_XNAP_DT_TAINSAGSupportItem * data, int lvl);

void __si_xnap_memfree_TAINSAGSupportItem( SI_XNAP_DT_TAINSAGSupportItem * data);

int __si_xnap_Encode_TAINSAGSupportItem( SI_XNAP_DT_TAINSAGSupportItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TAISliceUnavailableCellList( SI_XNAP_DT_TAISliceUnavailableCellList ** data);

void __si_xnap_debug_TAISliceUnavailableCellList( char * key, SI_XNAP_DT_TAISliceUnavailableCellList * data, int lvl);

void __si_xnap_memfree_TAISliceUnavailableCellList( SI_XNAP_DT_TAISliceUnavailableCellList * data);

int __si_xnap_Encode_TAISliceUnavailableCellList( SI_XNAP_DT_TAISliceUnavailableCellList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UnavailableNRCellList( SI_XNAP_DT_UnavailableNRCellList ** data);

void __si_xnap_debug_UnavailableNRCellList( char * key, SI_XNAP_DT_UnavailableNRCellList * data, int lvl);

void __si_xnap_memfree_UnavailableNRCellList( SI_XNAP_DT_UnavailableNRCellList * data);

int __si_xnap_Encode_UnavailableNRCellList( SI_XNAP_DT_UnavailableNRCellList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UnavailableCellList( SI_XNAP_DT_UnavailableCellList ** data);

void __si_xnap_debug_UnavailableCellList( char * key, SI_XNAP_DT_UnavailableCellList * data, int lvl);

void __si_xnap_memfree_UnavailableCellList( SI_XNAP_DT_UnavailableCellList * data);

int __si_xnap_Encode_UnavailableCellList( SI_XNAP_DT_UnavailableCellList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_AvailableNRCellList( SI_XNAP_DT_AvailableNRCellList ** data);

void __si_xnap_debug_AvailableNRCellList( char * key, SI_XNAP_DT_AvailableNRCellList * data, int lvl);

void __si_xnap_memfree_AvailableNRCellList( SI_XNAP_DT_AvailableNRCellList * data);

int __si_xnap_Encode_AvailableNRCellList( SI_XNAP_DT_AvailableNRCellList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_AvailableCellList( SI_XNAP_DT_AvailableCellList ** data);

void __si_xnap_debug_AvailableCellList( char * key, SI_XNAP_DT_AvailableCellList * data, int lvl);

void __si_xnap_memfree_AvailableCellList( SI_XNAP_DT_AvailableCellList * data);

int __si_xnap_Encode_AvailableCellList( SI_XNAP_DT_AvailableCellList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SliceAvailabilityList( SI_XNAP_DT_SliceAvailabilityList ** data);

void __si_xnap_debug_SliceAvailabilityList( char * key, SI_XNAP_DT_SliceAvailabilityList * data, int lvl);

void __si_xnap_memfree_SliceAvailabilityList( SI_XNAP_DT_SliceAvailabilityList * data);

int __si_xnap_Encode_SliceAvailabilityList( SI_XNAP_DT_SliceAvailabilityList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TAISliceUnavailableCellItem( SI_XNAP_DT_TAISliceUnavailableCellItem ** data);

void __si_xnap_debug_TAISliceUnavailableCellItem( char * key, SI_XNAP_DT_TAISliceUnavailableCellItem * data, int lvl);

void __si_xnap_memfree_TAISliceUnavailableCellItem( SI_XNAP_DT_TAISliceUnavailableCellItem * data);

int __si_xnap_Encode_TAISliceUnavailableCellItem( SI_XNAP_DT_TAISliceUnavailableCellItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TAISupport_List( SI_XNAP_DT_TAISupport_List ** data);

void __si_xnap_debug_TAISupport_List( char * key, SI_XNAP_DT_TAISupport_List * data, int lvl);

void __si_xnap_memfree_TAISupport_List( SI_XNAP_DT_TAISupport_List * data);

int __si_xnap_Encode_TAISupport_List( SI_XNAP_DT_TAISupport_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TAISupportItem_broadcastPLMNs( SI_XNAP_DT_TAISupportItem_broadcastPLMNs ** data);

void __si_xnap_debug_TAISupportItem_broadcastPLMNs( char * key, SI_XNAP_DT_TAISupportItem_broadcastPLMNs * data, int lvl);

void __si_xnap_memfree_TAISupportItem_broadcastPLMNs( SI_XNAP_DT_TAISupportItem_broadcastPLMNs * data);

int __si_xnap_Encode_TAISupportItem_broadcastPLMNs( SI_XNAP_DT_TAISupportItem_broadcastPLMNs * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TAISupport_Item( SI_XNAP_DT_TAISupport_Item ** data);

void __si_xnap_debug_TAISupport_Item( char * key, SI_XNAP_DT_TAISupport_Item * data, int lvl);

void __si_xnap_memfree_TAISupport_Item( SI_XNAP_DT_TAISupport_Item * data);

int __si_xnap_Encode_TAISupport_Item( SI_XNAP_DT_TAISupport_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TAI_Item( SI_XNAP_DT_TAI_Item ** data);

void __si_xnap_debug_TAI_Item( char * key, SI_XNAP_DT_TAI_Item * data, int lvl);

void __si_xnap_memfree_TAI_Item( SI_XNAP_DT_TAI_Item * data);

int __si_xnap_Encode_TAI_Item( SI_XNAP_DT_TAI_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TargetCellinEUTRAN( SI_XNAP_DT_TargetCellinEUTRAN ** data);

void __si_xnap_init_TargetCellinEUTRAN2( SI_XNAP_DT_TargetCellinEUTRAN ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_TargetCellinEUTRAN( char * key, SI_XNAP_DT_TargetCellinEUTRAN * data, int lvl);

void __si_xnap_memfree_TargetCellinEUTRAN( SI_XNAP_DT_TargetCellinEUTRAN * data);

int __si_xnap_Encode_TargetCellinEUTRAN( SI_XNAP_DT_TargetCellinEUTRAN * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TDDULDLConfigurationCommonNR( SI_XNAP_DT_TDDULDLConfigurationCommonNR ** data);

void __si_xnap_init_TDDULDLConfigurationCommonNR2( SI_XNAP_DT_TDDULDLConfigurationCommonNR ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_TDDULDLConfigurationCommonNR( char * key, SI_XNAP_DT_TDDULDLConfigurationCommonNR * data, int lvl);

void __si_xnap_memfree_TDDULDLConfigurationCommonNR( SI_XNAP_DT_TDDULDLConfigurationCommonNR * data);

int __si_xnap_Encode_TDDULDLConfigurationCommonNR( SI_XNAP_DT_TDDULDLConfigurationCommonNR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TargetCellList( SI_XNAP_DT_TargetCellList ** data);

void __si_xnap_debug_TargetCellList( char * key, SI_XNAP_DT_TargetCellList * data, int lvl);

void __si_xnap_memfree_TargetCellList( SI_XNAP_DT_TargetCellList * data);

int __si_xnap_Encode_TargetCellList( SI_XNAP_DT_TargetCellList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TargetCellList_Item( SI_XNAP_DT_TargetCellList_Item ** data);

void __si_xnap_debug_TargetCellList_Item( char * key, SI_XNAP_DT_TargetCellList_Item * data, int lvl);

void __si_xnap_memfree_TargetCellList_Item( SI_XNAP_DT_TargetCellList_Item * data);

int __si_xnap_Encode_TargetCellList_Item( SI_XNAP_DT_TargetCellList_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_TimeSinceFailure( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_TimeSinceFailure( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_TimeSinceFailure( SI_XNAP_DT_TimeSinceFailure * data);


void __si_xnap_debug_TimeSynchronizationAssistanceInformation_timeDistributionIndication( char * key, uint8_t eTimeSynchronizationAssistanceInformation_timeDistributionIndication, int lvl);

int __si_xnap_Encode_TimeSynchronizationAssistanceInformation_timeDistributionIndication( uint8_t eTimeSynchronizationAssistanceInformation_timeDistributionIndication, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_TimeSynchronizationAssistanceInformation_uuTimeSynchronizationErrorBudget( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_TimeSynchronizationAssistanceInformation_uuTimeSynchronizationErrorBudget( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_TimeSynchronizationAssistanceInformation_uuTimeSynchronizationErrorBudget( SI_XNAP_DT_TimeSynchronizationAssistanceInformation_uuTimeSynchronizationErrorBudget * data);


void __si_xnap_init_TimeSynchronizationAssistanceInformation( SI_XNAP_DT_TimeSynchronizationAssistanceInformation ** data);

void __si_xnap_debug_TimeSynchronizationAssistanceInformation( char * key, SI_XNAP_DT_TimeSynchronizationAssistanceInformation * data, int lvl);

void __si_xnap_memfree_TimeSynchronizationAssistanceInformation( SI_XNAP_DT_TimeSynchronizationAssistanceInformation * data);

int __si_xnap_Encode_TimeSynchronizationAssistanceInformation( SI_XNAP_DT_TimeSynchronizationAssistanceInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_TimeToWait( char * key, uint8_t eTimeToWait, int lvl);

int __si_xnap_Encode_TimeToWait( uint8_t eTimeToWait, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TNLConfigurationInfo( SI_XNAP_DT_TNLConfigurationInfo ** data);

void __si_xnap_debug_TNLConfigurationInfo( char * key, SI_XNAP_DT_TNLConfigurationInfo * data, int lvl);

void __si_xnap_memfree_TNLConfigurationInfo( SI_XNAP_DT_TNLConfigurationInfo * data);

int __si_xnap_Encode_TNLConfigurationInfo( SI_XNAP_DT_TNLConfigurationInfo * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TNLA_To_Add_List( SI_XNAP_DT_TNLA_To_Add_List ** data);

void __si_xnap_debug_TNLA_To_Add_List( char * key, SI_XNAP_DT_TNLA_To_Add_List * data, int lvl);

void __si_xnap_memfree_TNLA_To_Add_List( SI_XNAP_DT_TNLA_To_Add_List * data);

int __si_xnap_Encode_TNLA_To_Add_List( SI_XNAP_DT_TNLA_To_Add_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_TNLAssociationUsage( char * key, uint8_t eTNLAssociationUsage, int lvl);

int __si_xnap_Encode_TNLAssociationUsage( uint8_t eTNLAssociationUsage, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TNLA_To_Add_Item( SI_XNAP_DT_TNLA_To_Add_Item ** data);

void __si_xnap_debug_TNLA_To_Add_Item( char * key, SI_XNAP_DT_TNLA_To_Add_Item * data, int lvl);

void __si_xnap_memfree_TNLA_To_Add_Item( SI_XNAP_DT_TNLA_To_Add_Item * data);

int __si_xnap_Encode_TNLA_To_Add_Item( SI_XNAP_DT_TNLA_To_Add_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TNLA_To_Update_List( SI_XNAP_DT_TNLA_To_Update_List ** data);

void __si_xnap_debug_TNLA_To_Update_List( char * key, SI_XNAP_DT_TNLA_To_Update_List * data, int lvl);

void __si_xnap_memfree_TNLA_To_Update_List( SI_XNAP_DT_TNLA_To_Update_List * data);

int __si_xnap_Encode_TNLA_To_Update_List( SI_XNAP_DT_TNLA_To_Update_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TNLA_To_Update_Item( SI_XNAP_DT_TNLA_To_Update_Item ** data);

void __si_xnap_debug_TNLA_To_Update_Item( char * key, SI_XNAP_DT_TNLA_To_Update_Item * data, int lvl);

void __si_xnap_memfree_TNLA_To_Update_Item( SI_XNAP_DT_TNLA_To_Update_Item * data);

int __si_xnap_Encode_TNLA_To_Update_Item( SI_XNAP_DT_TNLA_To_Update_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TNLA_To_Remove_List( SI_XNAP_DT_TNLA_To_Remove_List ** data);

void __si_xnap_debug_TNLA_To_Remove_List( char * key, SI_XNAP_DT_TNLA_To_Remove_List * data, int lvl);

void __si_xnap_memfree_TNLA_To_Remove_List( SI_XNAP_DT_TNLA_To_Remove_List * data);

int __si_xnap_Encode_TNLA_To_Remove_List( SI_XNAP_DT_TNLA_To_Remove_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TNLA_To_Remove_Item( SI_XNAP_DT_TNLA_To_Remove_Item ** data);

void __si_xnap_debug_TNLA_To_Remove_Item( char * key, SI_XNAP_DT_TNLA_To_Remove_Item * data, int lvl);

void __si_xnap_memfree_TNLA_To_Remove_Item( SI_XNAP_DT_TNLA_To_Remove_Item * data);

int __si_xnap_Encode_TNLA_To_Remove_Item( SI_XNAP_DT_TNLA_To_Remove_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TNLA_Setup_List( SI_XNAP_DT_TNLA_Setup_List ** data);

void __si_xnap_debug_TNLA_Setup_List( char * key, SI_XNAP_DT_TNLA_Setup_List * data, int lvl);

void __si_xnap_memfree_TNLA_Setup_List( SI_XNAP_DT_TNLA_Setup_List * data);

int __si_xnap_Encode_TNLA_Setup_List( SI_XNAP_DT_TNLA_Setup_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TNLA_Setup_Item( SI_XNAP_DT_TNLA_Setup_Item ** data);

void __si_xnap_debug_TNLA_Setup_Item( char * key, SI_XNAP_DT_TNLA_Setup_Item * data, int lvl);

void __si_xnap_memfree_TNLA_Setup_Item( SI_XNAP_DT_TNLA_Setup_Item * data);

int __si_xnap_Encode_TNLA_Setup_Item( SI_XNAP_DT_TNLA_Setup_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TNLA_Failed_To_Setup_List( SI_XNAP_DT_TNLA_Failed_To_Setup_List ** data);

void __si_xnap_debug_TNLA_Failed_To_Setup_List( char * key, SI_XNAP_DT_TNLA_Failed_To_Setup_List * data, int lvl);

void __si_xnap_memfree_TNLA_Failed_To_Setup_List( SI_XNAP_DT_TNLA_Failed_To_Setup_List * data);

int __si_xnap_Encode_TNLA_Failed_To_Setup_List( SI_XNAP_DT_TNLA_Failed_To_Setup_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TNLA_Failed_To_Setup_Item( SI_XNAP_DT_TNLA_Failed_To_Setup_Item ** data);

void __si_xnap_debug_TNLA_Failed_To_Setup_Item( char * key, SI_XNAP_DT_TNLA_Failed_To_Setup_Item * data, int lvl);

void __si_xnap_memfree_TNLA_Failed_To_Setup_Item( SI_XNAP_DT_TNLA_Failed_To_Setup_Item * data);

int __si_xnap_Encode_TNLA_Failed_To_Setup_Item( SI_XNAP_DT_TNLA_Failed_To_Setup_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TraceActivation_interfaces_to_trace( SI_XNAP_DT_TraceActivation_interfaces_to_trace ** data);

void __si_xnap_init_TraceActivation_interfaces_to_trace2( SI_XNAP_DT_TraceActivation_interfaces_to_trace ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_TraceActivation_interfaces_to_trace( char * key, SI_XNAP_DT_TraceActivation_interfaces_to_trace * data, int lvl);

void __si_xnap_memfree_TraceActivation_interfaces_to_trace( SI_XNAP_DT_TraceActivation_interfaces_to_trace * data);

int __si_xnap_Encode_TraceActivation_interfaces_to_trace( SI_XNAP_DT_TraceActivation_interfaces_to_trace * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_Trace_Depth( char * key, uint8_t eTrace_Depth, int lvl);

int __si_xnap_Encode_Trace_Depth( uint8_t eTrace_Depth, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TraceActivation( SI_XNAP_DT_TraceActivation ** data);

void __si_xnap_debug_TraceActivation( char * key, SI_XNAP_DT_TraceActivation * data, int lvl);

void __si_xnap_memfree_TraceActivation( SI_XNAP_DT_TraceActivation * data);

int __si_xnap_Encode_TraceActivation( SI_XNAP_DT_TraceActivation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_TrafficIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_TrafficIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_TrafficIndex( SI_XNAP_DT_TrafficIndex * data);


void __si_xnap_init_TrafficProfile( SI_XNAP_DT_TrafficProfile ** data);

void __si_xnap_debug_TrafficProfile( char * key, SI_XNAP_DT_TrafficProfile * data, int lvl);

void __si_xnap_memfree_TrafficProfile( SI_XNAP_DT_TrafficProfile * data);

int __si_xnap_Encode_TrafficProfile( SI_XNAP_DT_TrafficProfile * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficToBeRelease_List( SI_XNAP_DT_TrafficToBeRelease_List ** data);

void __si_xnap_debug_TrafficToBeRelease_List( char * key, SI_XNAP_DT_TrafficToBeRelease_List * data, int lvl);

void __si_xnap_memfree_TrafficToBeRelease_List( SI_XNAP_DT_TrafficToBeRelease_List * data);

int __si_xnap_Encode_TrafficToBeRelease_List( SI_XNAP_DT_TrafficToBeRelease_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficReleaseType( SI_XNAP_DT_TrafficReleaseType ** data);

void __si_xnap_debug_TrafficReleaseType( char * key, SI_XNAP_DT_TrafficReleaseType * data, int lvl);

void __si_xnap_memfree_TrafficReleaseType( SI_XNAP_DT_TrafficReleaseType * data);

int __si_xnap_Encode_TrafficReleaseType( SI_XNAP_DT_TrafficReleaseType * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficToBeReleaseInformation( SI_XNAP_DT_TrafficToBeReleaseInformation ** data);

void __si_xnap_debug_TrafficToBeReleaseInformation( char * key, SI_XNAP_DT_TrafficToBeReleaseInformation * data, int lvl);

void __si_xnap_memfree_TrafficToBeReleaseInformation( SI_XNAP_DT_TrafficToBeReleaseInformation * data);

int __si_xnap_Encode_TrafficToBeReleaseInformation( SI_XNAP_DT_TrafficToBeReleaseInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficToBeRelease_Item( SI_XNAP_DT_TrafficToBeRelease_Item ** data);

void __si_xnap_debug_TrafficToBeRelease_Item( char * key, SI_XNAP_DT_TrafficToBeRelease_Item * data, int lvl);

void __si_xnap_memfree_TrafficToBeRelease_Item( SI_XNAP_DT_TrafficToBeRelease_Item * data);

int __si_xnap_Encode_TrafficToBeRelease_Item( SI_XNAP_DT_TrafficToBeRelease_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_TSCAssistanceInformation_periodicity( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_TSCAssistanceInformation_periodicity( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_TSCAssistanceInformation_periodicity( SI_XNAP_DT_TSCAssistanceInformation_periodicity * data);


void __si_xnap_init_TSCAssistanceInformation_burstArrivalTime( SI_XNAP_DT_TSCAssistanceInformation_burstArrivalTime ** data);

void __si_xnap_init_TSCAssistanceInformation_burstArrivalTime2( SI_XNAP_DT_TSCAssistanceInformation_burstArrivalTime ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_TSCAssistanceInformation_burstArrivalTime( char * key, SI_XNAP_DT_TSCAssistanceInformation_burstArrivalTime * data, int lvl);

void __si_xnap_memfree_TSCAssistanceInformation_burstArrivalTime( SI_XNAP_DT_TSCAssistanceInformation_burstArrivalTime * data);

int __si_xnap_Encode_TSCAssistanceInformation_burstArrivalTime( SI_XNAP_DT_TSCAssistanceInformation_burstArrivalTime * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TSCAssistanceInformation( SI_XNAP_DT_TSCAssistanceInformation ** data);

void __si_xnap_debug_TSCAssistanceInformation( char * key, SI_XNAP_DT_TSCAssistanceInformation * data, int lvl);

void __si_xnap_memfree_TSCAssistanceInformation( SI_XNAP_DT_TSCAssistanceInformation * data);

int __si_xnap_Encode_TSCAssistanceInformation( SI_XNAP_DT_TSCAssistanceInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TSCTrafficCharacteristics( SI_XNAP_DT_TSCTrafficCharacteristics ** data);

void __si_xnap_debug_TSCTrafficCharacteristics( char * key, SI_XNAP_DT_TSCTrafficCharacteristics * data, int lvl);

void __si_xnap_memfree_TSCTrafficCharacteristics( SI_XNAP_DT_TSCTrafficCharacteristics * data);

int __si_xnap_Encode_TSCTrafficCharacteristics( SI_XNAP_DT_TSCTrafficCharacteristics * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEAggregateMaximumBitRate( SI_XNAP_DT_UEAggregateMaximumBitRate ** data);

void __si_xnap_debug_UEAggregateMaximumBitRate( char * key, SI_XNAP_DT_UEAggregateMaximumBitRate * data, int lvl);

void __si_xnap_memfree_UEAggregateMaximumBitRate( SI_XNAP_DT_UEAggregateMaximumBitRate * data);

int __si_xnap_Encode_UEAggregateMaximumBitRate( SI_XNAP_DT_UEAggregateMaximumBitRate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_UEContextKeptIndicator( char * key, uint8_t eUEContextKeptIndicator, int lvl);

int __si_xnap_Encode_UEContextKeptIndicator( uint8_t eUEContextKeptIndicator, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEContextIDforRRCResume( SI_XNAP_DT_UEContextIDforRRCResume ** data);

void __si_xnap_debug_UEContextIDforRRCResume( char * key, SI_XNAP_DT_UEContextIDforRRCResume * data, int lvl);

void __si_xnap_memfree_UEContextIDforRRCResume( SI_XNAP_DT_UEContextIDforRRCResume * data);

int __si_xnap_Encode_UEContextIDforRRCResume( SI_XNAP_DT_UEContextIDforRRCResume * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEContextIDforRRCReestablishment( SI_XNAP_DT_UEContextIDforRRCReestablishment ** data);

void __si_xnap_debug_UEContextIDforRRCReestablishment( char * key, SI_XNAP_DT_UEContextIDforRRCReestablishment * data, int lvl);

void __si_xnap_memfree_UEContextIDforRRCReestablishment( SI_XNAP_DT_UEContextIDforRRCReestablishment * data);

int __si_xnap_Encode_UEContextIDforRRCReestablishment( SI_XNAP_DT_UEContextIDforRRCReestablishment * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEContextID( SI_XNAP_DT_UEContextID ** data);

void __si_xnap_debug_UEContextID( char * key, SI_XNAP_DT_UEContextID * data, int lvl);

void __si_xnap_memfree_UEContextID( SI_XNAP_DT_UEContextID * data);

int __si_xnap_Encode_UEContextID( SI_XNAP_DT_UEContextID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEContextInfoRetrUECtxtResp_rrc_Context( SI_XNAP_DT_UEContextInfoRetrUECtxtResp_rrc_Context ** data);

void __si_xnap_init_UEContextInfoRetrUECtxtResp_rrc_Context2( SI_XNAP_DT_UEContextInfoRetrUECtxtResp_rrc_Context ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_UEContextInfoRetrUECtxtResp_rrc_Context( char * key, SI_XNAP_DT_UEContextInfoRetrUECtxtResp_rrc_Context * data, int lvl);

void __si_xnap_memfree_UEContextInfoRetrUECtxtResp_rrc_Context( SI_XNAP_DT_UEContextInfoRetrUECtxtResp_rrc_Context * data);

int __si_xnap_Encode_UEContextInfoRetrUECtxtResp_rrc_Context( SI_XNAP_DT_UEContextInfoRetrUECtxtResp_rrc_Context * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UESecurityCapabilities_nr_EncyptionAlgorithms( SI_XNAP_DT_UESecurityCapabilities_nr_EncyptionAlgorithms ** data);

void __si_xnap_init_UESecurityCapabilities_nr_EncyptionAlgorithms2( SI_XNAP_DT_UESecurityCapabilities_nr_EncyptionAlgorithms ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_UESecurityCapabilities_nr_EncyptionAlgorithms( char * key, SI_XNAP_DT_UESecurityCapabilities_nr_EncyptionAlgorithms * data, int lvl);

void __si_xnap_memfree_UESecurityCapabilities_nr_EncyptionAlgorithms( SI_XNAP_DT_UESecurityCapabilities_nr_EncyptionAlgorithms * data);

int __si_xnap_Encode_UESecurityCapabilities_nr_EncyptionAlgorithms( SI_XNAP_DT_UESecurityCapabilities_nr_EncyptionAlgorithms * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UESecurityCapabilities_nr_IntegrityProtectionAlgorithms( SI_XNAP_DT_UESecurityCapabilities_nr_IntegrityProtectionAlgorithms ** data);

void __si_xnap_init_UESecurityCapabilities_nr_IntegrityProtectionAlgorithms2( SI_XNAP_DT_UESecurityCapabilities_nr_IntegrityProtectionAlgorithms ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_UESecurityCapabilities_nr_IntegrityProtectionAlgorithms( char * key, SI_XNAP_DT_UESecurityCapabilities_nr_IntegrityProtectionAlgorithms * data, int lvl);

void __si_xnap_memfree_UESecurityCapabilities_nr_IntegrityProtectionAlgorithms( SI_XNAP_DT_UESecurityCapabilities_nr_IntegrityProtectionAlgorithms * data);

int __si_xnap_Encode_UESecurityCapabilities_nr_IntegrityProtectionAlgorithms( SI_XNAP_DT_UESecurityCapabilities_nr_IntegrityProtectionAlgorithms * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UESecurityCapabilities_e_utra_EncyptionAlgorithms( SI_XNAP_DT_UESecurityCapabilities_e_utra_EncyptionAlgorithms ** data);

void __si_xnap_init_UESecurityCapabilities_e_utra_EncyptionAlgorithms2( SI_XNAP_DT_UESecurityCapabilities_e_utra_EncyptionAlgorithms ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_UESecurityCapabilities_e_utra_EncyptionAlgorithms( char * key, SI_XNAP_DT_UESecurityCapabilities_e_utra_EncyptionAlgorithms * data, int lvl);

void __si_xnap_memfree_UESecurityCapabilities_e_utra_EncyptionAlgorithms( SI_XNAP_DT_UESecurityCapabilities_e_utra_EncyptionAlgorithms * data);

int __si_xnap_Encode_UESecurityCapabilities_e_utra_EncyptionAlgorithms( SI_XNAP_DT_UESecurityCapabilities_e_utra_EncyptionAlgorithms * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UESecurityCapabilities_e_utra_IntegrityProtectionAlgorithms( SI_XNAP_DT_UESecurityCapabilities_e_utra_IntegrityProtectionAlgorithms ** data);

void __si_xnap_init_UESecurityCapabilities_e_utra_IntegrityProtectionAlgorithms2( SI_XNAP_DT_UESecurityCapabilities_e_utra_IntegrityProtectionAlgorithms ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_UESecurityCapabilities_e_utra_IntegrityProtectionAlgorithms( char * key, SI_XNAP_DT_UESecurityCapabilities_e_utra_IntegrityProtectionAlgorithms * data, int lvl);

void __si_xnap_memfree_UESecurityCapabilities_e_utra_IntegrityProtectionAlgorithms( SI_XNAP_DT_UESecurityCapabilities_e_utra_IntegrityProtectionAlgorithms * data);

int __si_xnap_Encode_UESecurityCapabilities_e_utra_IntegrityProtectionAlgorithms( SI_XNAP_DT_UESecurityCapabilities_e_utra_IntegrityProtectionAlgorithms * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UESecurityCapabilities( SI_XNAP_DT_UESecurityCapabilities ** data);

void __si_xnap_debug_UESecurityCapabilities( char * key, SI_XNAP_DT_UESecurityCapabilities * data, int lvl);

void __si_xnap_memfree_UESecurityCapabilities( SI_XNAP_DT_UESecurityCapabilities * data);

int __si_xnap_Encode_UESecurityCapabilities( SI_XNAP_DT_UESecurityCapabilities * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEContextInfoRetrUECtxtResp( SI_XNAP_DT_UEContextInfoRetrUECtxtResp ** data);

void __si_xnap_debug_UEContextInfoRetrUECtxtResp( char * key, SI_XNAP_DT_UEContextInfoRetrUECtxtResp * data, int lvl);

void __si_xnap_memfree_UEContextInfoRetrUECtxtResp( SI_XNAP_DT_UEContextInfoRetrUECtxtResp * data);

int __si_xnap_Encode_UEContextInfoRetrUECtxtResp( SI_XNAP_DT_UEContextInfoRetrUECtxtResp * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEHistoryInformation( SI_XNAP_DT_UEHistoryInformation ** data);

void __si_xnap_debug_UEHistoryInformation( char * key, SI_XNAP_DT_UEHistoryInformation * data, int lvl);

void __si_xnap_memfree_UEHistoryInformation( SI_XNAP_DT_UEHistoryInformation * data);

int __si_xnap_Encode_UEHistoryInformation( SI_XNAP_DT_UEHistoryInformation * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEHistoryInformationFromTheUE( SI_XNAP_DT_UEHistoryInformationFromTheUE ** data);

void __si_xnap_debug_UEHistoryInformationFromTheUE( char * key, SI_XNAP_DT_UEHistoryInformationFromTheUE * data, int lvl);

void __si_xnap_memfree_UEHistoryInformationFromTheUE( SI_XNAP_DT_UEHistoryInformationFromTheUE * data);

int __si_xnap_Encode_UEHistoryInformationFromTheUE( SI_XNAP_DT_UEHistoryInformationFromTheUE * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEIdentityIndexValue_indexLength10( SI_XNAP_DT_UEIdentityIndexValue_indexLength10 ** data);

void __si_xnap_init_UEIdentityIndexValue_indexLength102( SI_XNAP_DT_UEIdentityIndexValue_indexLength10 ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_UEIdentityIndexValue_indexLength10( char * key, SI_XNAP_DT_UEIdentityIndexValue_indexLength10 * data, int lvl);

void __si_xnap_memfree_UEIdentityIndexValue_indexLength10( SI_XNAP_DT_UEIdentityIndexValue_indexLength10 * data);

int __si_xnap_Encode_UEIdentityIndexValue_indexLength10( SI_XNAP_DT_UEIdentityIndexValue_indexLength10 * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEIdentityIndexValue( SI_XNAP_DT_UEIdentityIndexValue ** data);

void __si_xnap_debug_UEIdentityIndexValue( char * key, SI_XNAP_DT_UEIdentityIndexValue * data, int lvl);

void __si_xnap_memfree_UEIdentityIndexValue( SI_XNAP_DT_UEIdentityIndexValue * data);

int __si_xnap_Encode_UEIdentityIndexValue( SI_XNAP_DT_UEIdentityIndexValue * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEIdentityIndexList_MBSGroupPaging( SI_XNAP_DT_UEIdentityIndexList_MBSGroupPaging ** data);

void __si_xnap_debug_UEIdentityIndexList_MBSGroupPaging( char * key, SI_XNAP_DT_UEIdentityIndexList_MBSGroupPaging * data, int lvl);

void __si_xnap_memfree_UEIdentityIndexList_MBSGroupPaging( SI_XNAP_DT_UEIdentityIndexList_MBSGroupPaging * data);

int __si_xnap_Encode_UEIdentityIndexList_MBSGroupPaging( SI_XNAP_DT_UEIdentityIndexList_MBSGroupPaging * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEIdentityIndexListMBSGroupPagingValue_uEIdentityIndexValueMBSGroupPaging( SI_XNAP_DT_UEIdentityIndexListMBSGroupPagingValue_uEIdentityIndexValueMBSGroupPaging ** data);

void __si_xnap_init_UEIdentityIndexListMBSGroupPagingValue_uEIdentityIndexValueMBSGroupPaging2( SI_XNAP_DT_UEIdentityIndexListMBSGroupPagingValue_uEIdentityIndexValueMBSGroupPaging ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_UEIdentityIndexListMBSGroupPagingValue_uEIdentityIndexValueMBSGroupPaging( char * key, SI_XNAP_DT_UEIdentityIndexListMBSGroupPagingValue_uEIdentityIndexValueMBSGroupPaging * data, int lvl);

void __si_xnap_memfree_UEIdentityIndexListMBSGroupPagingValue_uEIdentityIndexValueMBSGroupPaging( SI_XNAP_DT_UEIdentityIndexListMBSGroupPagingValue_uEIdentityIndexValueMBSGroupPaging * data);

int __si_xnap_Encode_UEIdentityIndexListMBSGroupPagingValue_uEIdentityIndexValueMBSGroupPaging( SI_XNAP_DT_UEIdentityIndexListMBSGroupPagingValue_uEIdentityIndexValueMBSGroupPaging * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEIdentityIndexList_MBSGroupPagingValue( SI_XNAP_DT_UEIdentityIndexList_MBSGroupPagingValue ** data);

void __si_xnap_debug_UEIdentityIndexList_MBSGroupPagingValue( char * key, SI_XNAP_DT_UEIdentityIndexList_MBSGroupPagingValue * data, int lvl);

void __si_xnap_memfree_UEIdentityIndexList_MBSGroupPagingValue( SI_XNAP_DT_UEIdentityIndexList_MBSGroupPagingValue * data);

int __si_xnap_Encode_UEIdentityIndexList_MBSGroupPagingValue( SI_XNAP_DT_UEIdentityIndexList_MBSGroupPagingValue * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_UESpecificDRX( char * key, uint8_t eUESpecificDRX, int lvl);

int __si_xnap_Encode_UESpecificDRX( uint8_t eUESpecificDRX, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEIdentityIndexList_MBSGroupPaging_Item( SI_XNAP_DT_UEIdentityIndexList_MBSGroupPaging_Item ** data);

void __si_xnap_debug_UEIdentityIndexList_MBSGroupPaging_Item( char * key, SI_XNAP_DT_UEIdentityIndexList_MBSGroupPaging_Item * data, int lvl);

void __si_xnap_memfree_UEIdentityIndexList_MBSGroupPaging_Item( SI_XNAP_DT_UEIdentityIndexList_MBSGroupPaging_Item * data);

int __si_xnap_Encode_UEIdentityIndexList_MBSGroupPaging_Item( SI_XNAP_DT_UEIdentityIndexList_MBSGroupPaging_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UERadioCapabilityForPagingOfNR( SI_XNAP_DT_UERadioCapabilityForPagingOfNR ** data);

void __si_xnap_init_UERadioCapabilityForPagingOfNR2( SI_XNAP_DT_UERadioCapabilityForPagingOfNR ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_UERadioCapabilityForPagingOfNR( char * key, SI_XNAP_DT_UERadioCapabilityForPagingOfNR * data, int lvl);

void __si_xnap_memfree_UERadioCapabilityForPagingOfNR( SI_XNAP_DT_UERadioCapabilityForPagingOfNR * data);

int __si_xnap_Encode_UERadioCapabilityForPagingOfNR( SI_XNAP_DT_UERadioCapabilityForPagingOfNR * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UERadioCapabilityForPagingOfEUTRA( SI_XNAP_DT_UERadioCapabilityForPagingOfEUTRA ** data);

void __si_xnap_init_UERadioCapabilityForPagingOfEUTRA2( SI_XNAP_DT_UERadioCapabilityForPagingOfEUTRA ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_UERadioCapabilityForPagingOfEUTRA( char * key, SI_XNAP_DT_UERadioCapabilityForPagingOfEUTRA * data, int lvl);

void __si_xnap_memfree_UERadioCapabilityForPagingOfEUTRA( SI_XNAP_DT_UERadioCapabilityForPagingOfEUTRA * data);

int __si_xnap_Encode_UERadioCapabilityForPagingOfEUTRA( SI_XNAP_DT_UERadioCapabilityForPagingOfEUTRA * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UERadioCapabilityForPaging( SI_XNAP_DT_UERadioCapabilityForPaging ** data);

void __si_xnap_debug_UERadioCapabilityForPaging( char * key, SI_XNAP_DT_UERadioCapabilityForPaging * data, int lvl);

void __si_xnap_memfree_UERadioCapabilityForPaging( SI_XNAP_DT_UERadioCapabilityForPaging * data);

int __si_xnap_Encode_UERadioCapabilityForPaging( SI_XNAP_DT_UERadioCapabilityForPaging * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UERadioCapabilityID( SI_XNAP_DT_UERadioCapabilityID ** data);

void __si_xnap_init_UERadioCapabilityID2( SI_XNAP_DT_UERadioCapabilityID ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_UERadioCapabilityID( char * key, SI_XNAP_DT_UERadioCapabilityID * data, int lvl);

void __si_xnap_memfree_UERadioCapabilityID( SI_XNAP_DT_UERadioCapabilityID * data);

int __si_xnap_Encode_UERadioCapabilityID( SI_XNAP_DT_UERadioCapabilityID * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UERANPagingIdentity_i_RNTI_full( SI_XNAP_DT_UERANPagingIdentity_i_RNTI_full ** data);

void __si_xnap_init_UERANPagingIdentity_i_RNTI_full2( SI_XNAP_DT_UERANPagingIdentity_i_RNTI_full ** data, u_char * cstr, uint32_t len, int bitslen);

void __si_xnap_debug_UERANPagingIdentity_i_RNTI_full( char * key, SI_XNAP_DT_UERANPagingIdentity_i_RNTI_full * data, int lvl);

void __si_xnap_memfree_UERANPagingIdentity_i_RNTI_full( SI_XNAP_DT_UERANPagingIdentity_i_RNTI_full * data);

int __si_xnap_Encode_UERANPagingIdentity_i_RNTI_full( SI_XNAP_DT_UERANPagingIdentity_i_RNTI_full * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UERANPagingIdentity( SI_XNAP_DT_UERANPagingIdentity ** data);

void __si_xnap_debug_UERANPagingIdentity( char * key, SI_XNAP_DT_UERANPagingIdentity * data, int lvl);

void __si_xnap_memfree_UERANPagingIdentity( SI_XNAP_DT_UERANPagingIdentity * data);

int __si_xnap_Encode_UERANPagingIdentity( SI_XNAP_DT_UERANPagingIdentity * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UERLFReportContainerLTEExtendBand( SI_XNAP_DT_UERLFReportContainerLTEExtendBand ** data);

void __si_xnap_init_UERLFReportContainerLTEExtendBand2( SI_XNAP_DT_UERLFReportContainerLTEExtendBand ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_UERLFReportContainerLTEExtendBand( char * key, SI_XNAP_DT_UERLFReportContainerLTEExtendBand * data, int lvl);

void __si_xnap_memfree_UERLFReportContainerLTEExtendBand( SI_XNAP_DT_UERLFReportContainerLTEExtendBand * data);

int __si_xnap_Encode_UERLFReportContainerLTEExtendBand( SI_XNAP_DT_UERLFReportContainerLTEExtendBand * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UERLFReportContainerLTEExtension( SI_XNAP_DT_UERLFReportContainerLTEExtension ** data);

void __si_xnap_debug_UERLFReportContainerLTEExtension( char * key, SI_XNAP_DT_UERLFReportContainerLTEExtension * data, int lvl);

void __si_xnap_memfree_UERLFReportContainerLTEExtension( SI_XNAP_DT_UERLFReportContainerLTEExtension * data);

int __si_xnap_Encode_UERLFReportContainerLTEExtension( SI_XNAP_DT_UERLFReportContainerLTEExtension * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UESliceMaximumBitRateList( SI_XNAP_DT_UESliceMaximumBitRateList ** data);

void __si_xnap_debug_UESliceMaximumBitRateList( char * key, SI_XNAP_DT_UESliceMaximumBitRateList * data, int lvl);

void __si_xnap_memfree_UESliceMaximumBitRateList( SI_XNAP_DT_UESliceMaximumBitRateList * data);

int __si_xnap_Encode_UESliceMaximumBitRateList( SI_XNAP_DT_UESliceMaximumBitRateList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UESliceMaximumBitRate_Item( SI_XNAP_DT_UESliceMaximumBitRate_Item ** data);

void __si_xnap_debug_UESliceMaximumBitRate_Item( char * key, SI_XNAP_DT_UESliceMaximumBitRate_Item * data, int lvl);

void __si_xnap_memfree_UESliceMaximumBitRate_Item( SI_XNAP_DT_UESliceMaximumBitRate_Item * data);

int __si_xnap_Encode_UESliceMaximumBitRate_Item( SI_XNAP_DT_UESliceMaximumBitRate_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ULForwardingProposal( char * key, uint8_t eULForwardingProposal, int lvl);

int __si_xnap_Encode_ULForwardingProposal( uint8_t eULForwardingProposal, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UPTransportParametersItem( SI_XNAP_DT_UPTransportParametersItem ** data);

void __si_xnap_debug_UPTransportParametersItem( char * key, SI_XNAP_DT_UPTransportParametersItem * data, int lvl);

void __si_xnap_memfree_UPTransportParametersItem( SI_XNAP_DT_UPTransportParametersItem * data);

int __si_xnap_Encode_UPTransportParametersItem( SI_XNAP_DT_UPTransportParametersItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_UserPlaneTrafficActivityReport( char * key, uint8_t eUserPlaneTrafficActivityReport, int lvl);

int __si_xnap_Encode_UserPlaneTrafficActivityReport( uint8_t eUserPlaneTrafficActivityReport, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_UserPlaneFailureType( char * key, uint8_t eUserPlaneFailureType, int lvl);

int __si_xnap_Encode_UserPlaneFailureType( uint8_t eUserPlaneFailureType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UserPlaneFailureIndication( SI_XNAP_DT_UserPlaneFailureIndication ** data);

void __si_xnap_debug_UserPlaneFailureIndication( char * key, SI_XNAP_DT_UserPlaneFailureIndication * data, int lvl);

void __si_xnap_memfree_UserPlaneFailureIndication( SI_XNAP_DT_UserPlaneFailureIndication * data);

int __si_xnap_Encode_UserPlaneFailureIndication( SI_XNAP_DT_UserPlaneFailureIndication * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_URIaddress( SI_XNAP_DT_URIaddress ** data);

void __si_xnap_init_URIaddress2( SI_XNAP_DT_URIaddress ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_URIaddress( char * key, SI_XNAP_DT_URIaddress * data, int lvl);

void __si_xnap_memfree_URIaddress( SI_XNAP_DT_URIaddress * data);

int __si_xnap_Encode_URIaddress( SI_XNAP_DT_URIaddress * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEAssociatedInfoResult_List( SI_XNAP_DT_UEAssociatedInfoResult_List ** data);

void __si_xnap_debug_UEAssociatedInfoResult_List( char * key, SI_XNAP_DT_UEAssociatedInfoResult_List * data, int lvl);

void __si_xnap_memfree_UEAssociatedInfoResult_List( SI_XNAP_DT_UEAssociatedInfoResult_List * data);

int __si_xnap_Encode_UEAssociatedInfoResult_List( SI_XNAP_DT_UEAssociatedInfoResult_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEPerformance( SI_XNAP_DT_UEPerformance ** data);

void __si_xnap_debug_UEPerformance( char * key, SI_XNAP_DT_UEPerformance * data, int lvl);

void __si_xnap_memfree_UEPerformance( SI_XNAP_DT_UEPerformance * data);

int __si_xnap_Encode_UEPerformance( SI_XNAP_DT_UEPerformance * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEAssociatedInfoResult_Item( SI_XNAP_DT_UEAssociatedInfoResult_Item ** data);

void __si_xnap_debug_UEAssociatedInfoResult_Item( char * key, SI_XNAP_DT_UEAssociatedInfoResult_Item * data, int lvl);

void __si_xnap_memfree_UEAssociatedInfoResult_Item( SI_XNAP_DT_UEAssociatedInfoResult_Item * data);

int __si_xnap_Encode_UEAssociatedInfoResult_Item( SI_XNAP_DT_UEAssociatedInfoResult_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_UEPerformanceCollectionConfiguration_collectionTimeDurationForUEPerformance( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_UEPerformanceCollectionConfiguration_collectionTimeDurationForUEPerformance( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_UEPerformanceCollectionConfiguration_collectionTimeDurationForUEPerformance( SI_XNAP_DT_UEPerformanceCollectionConfiguration_collectionTimeDurationForUEPerformance * data);


void __si_xnap_init_UEPerformanceCollectionConfiguration( SI_XNAP_DT_UEPerformanceCollectionConfiguration ** data);

void __si_xnap_debug_UEPerformanceCollectionConfiguration( char * key, SI_XNAP_DT_UEPerformanceCollectionConfiguration * data, int lvl);

void __si_xnap_memfree_UEPerformanceCollectionConfiguration( SI_XNAP_DT_UEPerformanceCollectionConfiguration * data);

int __si_xnap_Encode_UEPerformanceCollectionConfiguration( SI_XNAP_DT_UEPerformanceCollectionConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_UETrajectoryCollectionConfiguration_collectionTimeDurationForUETrajectory( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_UETrajectoryCollectionConfiguration_collectionTimeDurationForUETrajectory( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_UETrajectoryCollectionConfiguration_collectionTimeDurationForUETrajectory( SI_XNAP_DT_UETrajectoryCollectionConfiguration_collectionTimeDurationForUETrajectory * data);


void __si_xnap_debug_UETrajectoryCollectionConfiguration_numberOfVisitedCells( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_UETrajectoryCollectionConfiguration_numberOfVisitedCells( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_UETrajectoryCollectionConfiguration_numberOfVisitedCells( SI_XNAP_DT_UETrajectoryCollectionConfiguration_numberOfVisitedCells * data);


void __si_xnap_init_UETrajectoryCollectionConfiguration( SI_XNAP_DT_UETrajectoryCollectionConfiguration ** data);

void __si_xnap_debug_UETrajectoryCollectionConfiguration( char * key, SI_XNAP_DT_UETrajectoryCollectionConfiguration * data, int lvl);

void __si_xnap_memfree_UETrajectoryCollectionConfiguration( SI_XNAP_DT_UETrajectoryCollectionConfiguration * data);

int __si_xnap_Encode_UETrajectoryCollectionConfiguration( SI_XNAP_DT_UETrajectoryCollectionConfiguration * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_VolumeTimedReportItem_startTimeStamp( SI_XNAP_DT_VolumeTimedReportItem_startTimeStamp ** data);

void __si_xnap_init_VolumeTimedReportItem_startTimeStamp2( SI_XNAP_DT_VolumeTimedReportItem_startTimeStamp ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_VolumeTimedReportItem_startTimeStamp( char * key, SI_XNAP_DT_VolumeTimedReportItem_startTimeStamp * data, int lvl);

void __si_xnap_memfree_VolumeTimedReportItem_startTimeStamp( SI_XNAP_DT_VolumeTimedReportItem_startTimeStamp * data);

int __si_xnap_Encode_VolumeTimedReportItem_startTimeStamp( SI_XNAP_DT_VolumeTimedReportItem_startTimeStamp * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_VolumeTimedReportItem_endTimeStamp( SI_XNAP_DT_VolumeTimedReportItem_endTimeStamp ** data);

void __si_xnap_init_VolumeTimedReportItem_endTimeStamp2( SI_XNAP_DT_VolumeTimedReportItem_endTimeStamp ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_VolumeTimedReportItem_endTimeStamp( char * key, SI_XNAP_DT_VolumeTimedReportItem_endTimeStamp * data, int lvl);

void __si_xnap_memfree_VolumeTimedReportItem_endTimeStamp( SI_XNAP_DT_VolumeTimedReportItem_endTimeStamp * data);

int __si_xnap_Encode_VolumeTimedReportItem_endTimeStamp( SI_XNAP_DT_VolumeTimedReportItem_endTimeStamp * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_VolumeTimedReportItem_usageCountUL( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_VolumeTimedReportItem_usageCountUL( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_VolumeTimedReportItem_usageCountUL( SI_XNAP_DT_VolumeTimedReportItem_usageCountUL * data);


void __si_xnap_debug_VolumeTimedReportItem_usageCountDL( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_VolumeTimedReportItem_usageCountDL( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_VolumeTimedReportItem_usageCountDL( SI_XNAP_DT_VolumeTimedReportItem_usageCountDL * data);


void __si_xnap_init_VolumeTimedReport_Item( SI_XNAP_DT_VolumeTimedReport_Item ** data);

void __si_xnap_debug_VolumeTimedReport_Item( char * key, SI_XNAP_DT_VolumeTimedReport_Item * data, int lvl);

void __si_xnap_memfree_VolumeTimedReport_Item( SI_XNAP_DT_VolumeTimedReport_Item * data);

int __si_xnap_Encode_VolumeTimedReport_Item( SI_XNAP_DT_VolumeTimedReport_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_WLANName( SI_XNAP_DT_WLANName ** data);

void __si_xnap_init_WLANName2( SI_XNAP_DT_WLANName ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_WLANName( char * key, SI_XNAP_DT_WLANName * data, int lvl);

void __si_xnap_memfree_WLANName( SI_XNAP_DT_WLANName * data);

int __si_xnap_Encode_WLANName( SI_XNAP_DT_WLANName * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_XnBenefitValue( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_XnBenefitValue( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_XnBenefitValue( SI_XNAP_DT_XnBenefitValue * data);


void __si_xnap_debug_XR_Bcast_Information( char * key, uint8_t eXR_Bcast_Information, int lvl);

int __si_xnap_Encode_XR_Bcast_Information( uint8_t eXR_Bcast_Information, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_FirstDLCount( SI_XNAP_DT_FirstDLCount ** data);

void __si_xnap_debug_FirstDLCount( char * key, SI_XNAP_DT_FirstDLCount * data, int lvl);

void __si_xnap_memfree_FirstDLCount( SI_XNAP_DT_FirstDLCount * data);

int __si_xnap_Encode_FirstDLCount( SI_XNAP_DT_FirstDLCount * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DLDiscarding( SI_XNAP_DT_DLDiscarding ** data);

void __si_xnap_debug_DLDiscarding( char * key, SI_XNAP_DT_DLDiscarding * data, int lvl);

void __si_xnap_memfree_DLDiscarding( SI_XNAP_DT_DLDiscarding * data);

int __si_xnap_Encode_DLDiscarding( SI_XNAP_DT_DLDiscarding * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ProcedureStageChoice( SI_XNAP_DT_ProcedureStageChoice ** data);

void __si_xnap_debug_ProcedureStageChoice( char * key, SI_XNAP_DT_ProcedureStageChoice * data, int lvl);

void __si_xnap_memfree_ProcedureStageChoice( SI_XNAP_DT_ProcedureStageChoice * data);

int __si_xnap_Encode_ProcedureStageChoice( SI_XNAP_DT_ProcedureStageChoice * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RequestedFastMCGRecoveryViaSRB3( char * key, uint8_t eRequestedFastMCGRecoveryViaSRB3, int lvl);

int __si_xnap_Encode_RequestedFastMCGRecoveryViaSRB3( uint8_t eRequestedFastMCGRecoveryViaSRB3, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_AvailableFastMCGRecoveryViaSRB3( char * key, uint8_t eAvailableFastMCGRecoveryViaSRB3, int lvl);

int __si_xnap_Encode_AvailableFastMCGRecoveryViaSRB3( uint8_t eAvailableFastMCGRecoveryViaSRB3, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Configuration_successfully_applied_m_NG_RANNode_to_S_NG_RANNode_Container( SI_XNAP_DT_Configuration_successfully_applied_m_NG_RANNode_to_S_NG_RANNode_Container ** data);

void __si_xnap_init_Configuration_successfully_applied_m_NG_RANNode_to_S_NG_RANNode_Container2( SI_XNAP_DT_Configuration_successfully_applied_m_NG_RANNode_to_S_NG_RANNode_Container ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_Configuration_successfully_applied_m_NG_RANNode_to_S_NG_RANNode_Container( char * key, SI_XNAP_DT_Configuration_successfully_applied_m_NG_RANNode_to_S_NG_RANNode_Container * data, int lvl);

void __si_xnap_memfree_Configuration_successfully_applied_m_NG_RANNode_to_S_NG_RANNode_Container( SI_XNAP_DT_Configuration_successfully_applied_m_NG_RANNode_to_S_NG_RANNode_Container * data);

int __si_xnap_Encode_Configuration_successfully_applied_m_NG_RANNode_to_S_NG_RANNode_Container( SI_XNAP_DT_Configuration_successfully_applied_m_NG_RANNode_to_S_NG_RANNode_Container * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Configuration_successfully_applied( SI_XNAP_DT_Configuration_successfully_applied ** data);

void __si_xnap_debug_Configuration_successfully_applied( char * key, SI_XNAP_DT_Configuration_successfully_applied * data, int lvl);

void __si_xnap_memfree_Configuration_successfully_applied( SI_XNAP_DT_Configuration_successfully_applied * data);

int __si_xnap_Encode_Configuration_successfully_applied( SI_XNAP_DT_Configuration_successfully_applied * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Configuration_rejected_by_M_NG_RANNode_m_NG_RANNode_to_S_NG_RANNode_Container( SI_XNAP_DT_Configuration_rejected_by_M_NG_RANNode_m_NG_RANNode_to_S_NG_RANNode_Container ** data);

void __si_xnap_init_Configuration_rejected_by_M_NG_RANNode_m_NG_RANNode_to_S_NG_RANNode_Container2( SI_XNAP_DT_Configuration_rejected_by_M_NG_RANNode_m_NG_RANNode_to_S_NG_RANNode_Container ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_Configuration_rejected_by_M_NG_RANNode_m_NG_RANNode_to_S_NG_RANNode_Container( char * key, SI_XNAP_DT_Configuration_rejected_by_M_NG_RANNode_m_NG_RANNode_to_S_NG_RANNode_Container * data, int lvl);

void __si_xnap_memfree_Configuration_rejected_by_M_NG_RANNode_m_NG_RANNode_to_S_NG_RANNode_Container( SI_XNAP_DT_Configuration_rejected_by_M_NG_RANNode_m_NG_RANNode_to_S_NG_RANNode_Container * data);

int __si_xnap_Encode_Configuration_rejected_by_M_NG_RANNode_m_NG_RANNode_to_S_NG_RANNode_Container( SI_XNAP_DT_Configuration_rejected_by_M_NG_RANNode_m_NG_RANNode_to_S_NG_RANNode_Container * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_Configuration_rejected_by_M_NG_RANNode( SI_XNAP_DT_Configuration_rejected_by_M_NG_RANNode ** data);

void __si_xnap_debug_Configuration_rejected_by_M_NG_RANNode( char * key, SI_XNAP_DT_Configuration_rejected_by_M_NG_RANNode * data, int lvl);

void __si_xnap_memfree_Configuration_rejected_by_M_NG_RANNode( SI_XNAP_DT_Configuration_rejected_by_M_NG_RANNode * data);

int __si_xnap_Encode_Configuration_rejected_by_M_NG_RANNode( SI_XNAP_DT_Configuration_rejected_by_M_NG_RANNode * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResponseType_ReconfComplete( SI_XNAP_DT_ResponseType_ReconfComplete ** data);

void __si_xnap_debug_ResponseType_ReconfComplete( char * key, SI_XNAP_DT_ResponseType_ReconfComplete * data, int lvl);

void __si_xnap_memfree_ResponseType_ReconfComplete( SI_XNAP_DT_ResponseType_ReconfComplete * data);

int __si_xnap_Encode_ResponseType_ReconfComplete( SI_XNAP_DT_ResponseType_ReconfComplete * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_RequestedFastMCGRecoveryViaSRB3Release( char * key, uint8_t eRequestedFastMCGRecoveryViaSRB3Release, int lvl);

int __si_xnap_Encode_RequestedFastMCGRecoveryViaSRB3Release( uint8_t eRequestedFastMCGRecoveryViaSRB3Release, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_Src_SN_to_Tgt_SNQMCInfoInquiry( char * key, uint8_t eSrc_SN_to_Tgt_SNQMCInfoInquiry, int lvl);

int __si_xnap_Encode_Src_SN_to_Tgt_SNQMCInfoInquiry( uint8_t eSrc_SN_to_Tgt_SNQMCInfoInquiry, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_ReleaseFastMCGRecoveryViaSRB3( char * key, uint8_t eReleaseFastMCGRecoveryViaSRB3, int lvl);

int __si_xnap_Encode_ReleaseFastMCGRecoveryViaSRB3( uint8_t eReleaseFastMCGRecoveryViaSRB3, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ConfigurationUpdate-gNB<- Got NULL  L:7520

//TODO: DataType ->ConfigurationUpdate-ng-eNB<- Got NULL  L:7520

void __si_xnap_init_ConfigurationUpdateInitiatingNodeChoice( SI_XNAP_DT_ConfigurationUpdateInitiatingNodeChoice ** data);

void __si_xnap_debug_ConfigurationUpdateInitiatingNodeChoice( char * key, SI_XNAP_DT_ConfigurationUpdateInitiatingNodeChoice * data, int lvl);

void __si_xnap_memfree_ConfigurationUpdateInitiatingNodeChoice( SI_XNAP_DT_ConfigurationUpdateInitiatingNodeChoice * data);

int __si_xnap_Encode_ConfigurationUpdateInitiatingNodeChoice( SI_XNAP_DT_ConfigurationUpdateInitiatingNodeChoice * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RespondingNodeTypeConfigUpdateAck_ng_eNB( SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck_ng_eNB ** data);

void __si_xnap_debug_RespondingNodeTypeConfigUpdateAck_ng_eNB( char * key, SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck_ng_eNB * data, int lvl);

void __si_xnap_memfree_RespondingNodeTypeConfigUpdateAck_ng_eNB( SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck_ng_eNB * data);

int __si_xnap_Encode_RespondingNodeTypeConfigUpdateAck_ng_eNB( SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck_ng_eNB * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RespondingNodeTypeConfigUpdateAck_gNB( SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck_gNB ** data);

void __si_xnap_debug_RespondingNodeTypeConfigUpdateAck_gNB( char * key, SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck_gNB * data, int lvl);

void __si_xnap_memfree_RespondingNodeTypeConfigUpdateAck_gNB( SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck_gNB * data);

int __si_xnap_Encode_RespondingNodeTypeConfigUpdateAck_gNB( SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck_gNB * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RespondingNodeTypeConfigUpdateAck( SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck ** data);

void __si_xnap_debug_RespondingNodeTypeConfigUpdateAck( char * key, SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck * data, int lvl);

void __si_xnap_memfree_RespondingNodeTypeConfigUpdateAck( SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck * data);

int __si_xnap_Encode_RespondingNodeTypeConfigUpdateAck( SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResourceCoordRequest_ng_eNB_initiated_listofE_UTRACells( SI_XNAP_DT_ResourceCoordRequest_ng_eNB_initiated_listofE_UTRACells ** data);

void __si_xnap_debug_ResourceCoordRequest_ng_eNB_initiated_listofE_UTRACells( char * key, SI_XNAP_DT_ResourceCoordRequest_ng_eNB_initiated_listofE_UTRACells * data, int lvl);

void __si_xnap_memfree_ResourceCoordRequest_ng_eNB_initiated_listofE_UTRACells( SI_XNAP_DT_ResourceCoordRequest_ng_eNB_initiated_listofE_UTRACells * data);

int __si_xnap_Encode_ResourceCoordRequest_ng_eNB_initiated_listofE_UTRACells( SI_XNAP_DT_ResourceCoordRequest_ng_eNB_initiated_listofE_UTRACells * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResourceCoordRequest_ng_eNB_initiated( SI_XNAP_DT_ResourceCoordRequest_ng_eNB_initiated ** data);

void __si_xnap_debug_ResourceCoordRequest_ng_eNB_initiated( char * key, SI_XNAP_DT_ResourceCoordRequest_ng_eNB_initiated * data, int lvl);

void __si_xnap_memfree_ResourceCoordRequest_ng_eNB_initiated( SI_XNAP_DT_ResourceCoordRequest_ng_eNB_initiated * data);

int __si_xnap_Encode_ResourceCoordRequest_ng_eNB_initiated( SI_XNAP_DT_ResourceCoordRequest_ng_eNB_initiated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResourceCoordRequest_gNB_initiated_listofE_UTRACells( SI_XNAP_DT_ResourceCoordRequest_gNB_initiated_listofE_UTRACells ** data);

void __si_xnap_debug_ResourceCoordRequest_gNB_initiated_listofE_UTRACells( char * key, SI_XNAP_DT_ResourceCoordRequest_gNB_initiated_listofE_UTRACells * data, int lvl);

void __si_xnap_memfree_ResourceCoordRequest_gNB_initiated_listofE_UTRACells( SI_XNAP_DT_ResourceCoordRequest_gNB_initiated_listofE_UTRACells * data);

int __si_xnap_Encode_ResourceCoordRequest_gNB_initiated_listofE_UTRACells( SI_XNAP_DT_ResourceCoordRequest_gNB_initiated_listofE_UTRACells * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResourceCoordRequest_gNB_initiated_listofNRCells( SI_XNAP_DT_ResourceCoordRequest_gNB_initiated_listofNRCells ** data);

void __si_xnap_debug_ResourceCoordRequest_gNB_initiated_listofNRCells( char * key, SI_XNAP_DT_ResourceCoordRequest_gNB_initiated_listofNRCells * data, int lvl);

void __si_xnap_memfree_ResourceCoordRequest_gNB_initiated_listofNRCells( SI_XNAP_DT_ResourceCoordRequest_gNB_initiated_listofNRCells * data);

int __si_xnap_Encode_ResourceCoordRequest_gNB_initiated_listofNRCells( SI_XNAP_DT_ResourceCoordRequest_gNB_initiated_listofNRCells * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResourceCoordRequest_gNB_initiated( SI_XNAP_DT_ResourceCoordRequest_gNB_initiated ** data);

void __si_xnap_debug_ResourceCoordRequest_gNB_initiated( char * key, SI_XNAP_DT_ResourceCoordRequest_gNB_initiated * data, int lvl);

void __si_xnap_memfree_ResourceCoordRequest_gNB_initiated( SI_XNAP_DT_ResourceCoordRequest_gNB_initiated * data);

int __si_xnap_Encode_ResourceCoordRequest_gNB_initiated( SI_XNAP_DT_ResourceCoordRequest_gNB_initiated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_InitiatingNodeType_ResourceCoordRequest( SI_XNAP_DT_InitiatingNodeType_ResourceCoordRequest ** data);

void __si_xnap_debug_InitiatingNodeType_ResourceCoordRequest( char * key, SI_XNAP_DT_InitiatingNodeType_ResourceCoordRequest * data, int lvl);

void __si_xnap_memfree_InitiatingNodeType_ResourceCoordRequest( SI_XNAP_DT_InitiatingNodeType_ResourceCoordRequest * data);

int __si_xnap_Encode_InitiatingNodeType_ResourceCoordRequest( SI_XNAP_DT_InitiatingNodeType_ResourceCoordRequest * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResourceCoordResponse_ng_eNB_initiated_listofE_UTRACells( SI_XNAP_DT_ResourceCoordResponse_ng_eNB_initiated_listofE_UTRACells ** data);

void __si_xnap_debug_ResourceCoordResponse_ng_eNB_initiated_listofE_UTRACells( char * key, SI_XNAP_DT_ResourceCoordResponse_ng_eNB_initiated_listofE_UTRACells * data, int lvl);

void __si_xnap_memfree_ResourceCoordResponse_ng_eNB_initiated_listofE_UTRACells( SI_XNAP_DT_ResourceCoordResponse_ng_eNB_initiated_listofE_UTRACells * data);

int __si_xnap_Encode_ResourceCoordResponse_ng_eNB_initiated_listofE_UTRACells( SI_XNAP_DT_ResourceCoordResponse_ng_eNB_initiated_listofE_UTRACells * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResourceCoordResponse_ng_eNB_initiated( SI_XNAP_DT_ResourceCoordResponse_ng_eNB_initiated ** data);

void __si_xnap_debug_ResourceCoordResponse_ng_eNB_initiated( char * key, SI_XNAP_DT_ResourceCoordResponse_ng_eNB_initiated * data, int lvl);

void __si_xnap_memfree_ResourceCoordResponse_ng_eNB_initiated( SI_XNAP_DT_ResourceCoordResponse_ng_eNB_initiated * data);

int __si_xnap_Encode_ResourceCoordResponse_ng_eNB_initiated( SI_XNAP_DT_ResourceCoordResponse_ng_eNB_initiated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResourceCoordResponse_gNB_initiated_listofNRCells( SI_XNAP_DT_ResourceCoordResponse_gNB_initiated_listofNRCells ** data);

void __si_xnap_debug_ResourceCoordResponse_gNB_initiated_listofNRCells( char * key, SI_XNAP_DT_ResourceCoordResponse_gNB_initiated_listofNRCells * data, int lvl);

void __si_xnap_memfree_ResourceCoordResponse_gNB_initiated_listofNRCells( SI_XNAP_DT_ResourceCoordResponse_gNB_initiated_listofNRCells * data);

int __si_xnap_Encode_ResourceCoordResponse_gNB_initiated_listofNRCells( SI_XNAP_DT_ResourceCoordResponse_gNB_initiated_listofNRCells * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResourceCoordResponse_gNB_initiated( SI_XNAP_DT_ResourceCoordResponse_gNB_initiated ** data);

void __si_xnap_debug_ResourceCoordResponse_gNB_initiated( char * key, SI_XNAP_DT_ResourceCoordResponse_gNB_initiated * data, int lvl);

void __si_xnap_memfree_ResourceCoordResponse_gNB_initiated( SI_XNAP_DT_ResourceCoordResponse_gNB_initiated * data);

int __si_xnap_Encode_ResourceCoordResponse_gNB_initiated( SI_XNAP_DT_ResourceCoordResponse_gNB_initiated * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_RespondingNodeType_ResourceCoordResponse( SI_XNAP_DT_RespondingNodeType_ResourceCoordResponse ** data);

void __si_xnap_debug_RespondingNodeType_ResourceCoordResponse( char * key, SI_XNAP_DT_RespondingNodeType_ResourceCoordResponse * data, int lvl);

void __si_xnap_memfree_RespondingNodeType_ResourceCoordResponse( SI_XNAP_DT_RespondingNodeType_ResourceCoordResponse * data);

int __si_xnap_Encode_RespondingNodeType_ResourceCoordResponse( SI_XNAP_DT_RespondingNodeType_ResourceCoordResponse * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCellsToActivate_nr_cells( SI_XNAP_DT_ServedCellsToActivate_nr_cells ** data);

void __si_xnap_debug_ServedCellsToActivate_nr_cells( char * key, SI_XNAP_DT_ServedCellsToActivate_nr_cells * data, int lvl);

void __si_xnap_memfree_ServedCellsToActivate_nr_cells( SI_XNAP_DT_ServedCellsToActivate_nr_cells * data);

int __si_xnap_Encode_ServedCellsToActivate_nr_cells( SI_XNAP_DT_ServedCellsToActivate_nr_cells * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCellsToActivate_e_utra_cells( SI_XNAP_DT_ServedCellsToActivate_e_utra_cells ** data);

void __si_xnap_debug_ServedCellsToActivate_e_utra_cells( char * key, SI_XNAP_DT_ServedCellsToActivate_e_utra_cells * data, int lvl);

void __si_xnap_memfree_ServedCellsToActivate_e_utra_cells( SI_XNAP_DT_ServedCellsToActivate_e_utra_cells * data);

int __si_xnap_Encode_ServedCellsToActivate_e_utra_cells( SI_XNAP_DT_ServedCellsToActivate_e_utra_cells * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ServedCellsToActivate( SI_XNAP_DT_ServedCellsToActivate ** data);

void __si_xnap_debug_ServedCellsToActivate( char * key, SI_XNAP_DT_ServedCellsToActivate * data, int lvl);

void __si_xnap_memfree_ServedCellsToActivate( SI_XNAP_DT_ServedCellsToActivate * data);

int __si_xnap_Encode_ServedCellsToActivate( SI_XNAP_DT_ServedCellsToActivate * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ActivatedServedCells_nr_cells( SI_XNAP_DT_ActivatedServedCells_nr_cells ** data);

void __si_xnap_debug_ActivatedServedCells_nr_cells( char * key, SI_XNAP_DT_ActivatedServedCells_nr_cells * data, int lvl);

void __si_xnap_memfree_ActivatedServedCells_nr_cells( SI_XNAP_DT_ActivatedServedCells_nr_cells * data);

int __si_xnap_Encode_ActivatedServedCells_nr_cells( SI_XNAP_DT_ActivatedServedCells_nr_cells * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ActivatedServedCells_e_utra_cells( SI_XNAP_DT_ActivatedServedCells_e_utra_cells ** data);

void __si_xnap_debug_ActivatedServedCells_e_utra_cells( char * key, SI_XNAP_DT_ActivatedServedCells_e_utra_cells * data, int lvl);

void __si_xnap_memfree_ActivatedServedCells_e_utra_cells( SI_XNAP_DT_ActivatedServedCells_e_utra_cells * data);

int __si_xnap_Encode_ActivatedServedCells_e_utra_cells( SI_XNAP_DT_ActivatedServedCells_e_utra_cells * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ActivatedServedCells( SI_XNAP_DT_ActivatedServedCells ** data);

void __si_xnap_debug_ActivatedServedCells( char * key, SI_XNAP_DT_ActivatedServedCells * data, int lvl);

void __si_xnap_memfree_ActivatedServedCells( SI_XNAP_DT_ActivatedServedCells * data);

int __si_xnap_Encode_ActivatedServedCells( SI_XNAP_DT_ActivatedServedCells * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEContextInfoHORequest_rrc_Context( SI_XNAP_DT_UEContextInfoHORequest_rrc_Context ** data);

void __si_xnap_init_UEContextInfoHORequest_rrc_Context2( SI_XNAP_DT_UEContextInfoHORequest_rrc_Context ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_UEContextInfoHORequest_rrc_Context( char * key, SI_XNAP_DT_UEContextInfoHORequest_rrc_Context * data, int lvl);

void __si_xnap_memfree_UEContextInfoHORequest_rrc_Context( SI_XNAP_DT_UEContextInfoHORequest_rrc_Context * data);

int __si_xnap_Encode_UEContextInfoHORequest_rrc_Context( SI_XNAP_DT_UEContextInfoHORequest_rrc_Context * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEContextInfoHORequest( SI_XNAP_DT_UEContextInfoHORequest ** data);

void __si_xnap_debug_UEContextInfoHORequest( char * key, SI_XNAP_DT_UEContextInfoHORequest * data, int lvl);

void __si_xnap_memfree_UEContextInfoHORequest( SI_XNAP_DT_UEContextInfoHORequest * data);

int __si_xnap_Encode_UEContextInfoHORequest( SI_XNAP_DT_UEContextInfoHORequest * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEContextRefAtSN_HORequest( SI_XNAP_DT_UEContextRefAtSN_HORequest ** data);

void __si_xnap_debug_UEContextRefAtSN_HORequest( char * key, SI_XNAP_DT_UEContextRefAtSN_HORequest * data, int lvl);

void __si_xnap_memfree_UEContextRefAtSN_HORequest( SI_XNAP_DT_UEContextRefAtSN_HORequest * data);

int __si_xnap_Encode_UEContextRefAtSN_HORequest( SI_XNAP_DT_UEContextRefAtSN_HORequest * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionToBeAddedAddReq( SI_XNAP_DT_PDUSessionToBeAddedAddReq ** data);

void __si_xnap_debug_PDUSessionToBeAddedAddReq( char * key, SI_XNAP_DT_PDUSessionToBeAddedAddReq * data, int lvl);

void __si_xnap_memfree_PDUSessionToBeAddedAddReq( SI_XNAP_DT_PDUSessionToBeAddedAddReq * data);

int __si_xnap_Encode_PDUSessionToBeAddedAddReq( SI_XNAP_DT_PDUSessionToBeAddedAddReq * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionToBeAddedAddReq_Item( SI_XNAP_DT_PDUSessionToBeAddedAddReq_Item ** data);

void __si_xnap_debug_PDUSessionToBeAddedAddReq_Item( char * key, SI_XNAP_DT_PDUSessionToBeAddedAddReq_Item * data, int lvl);

void __si_xnap_memfree_PDUSessionToBeAddedAddReq_Item( SI_XNAP_DT_PDUSessionToBeAddedAddReq_Item * data);

int __si_xnap_Encode_PDUSessionToBeAddedAddReq_Item( SI_XNAP_DT_PDUSessionToBeAddedAddReq_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionAdmittedAddedAddReqAck( SI_XNAP_DT_PDUSessionAdmittedAddedAddReqAck ** data);

void __si_xnap_debug_PDUSessionAdmittedAddedAddReqAck( char * key, SI_XNAP_DT_PDUSessionAdmittedAddedAddReqAck * data, int lvl);

void __si_xnap_memfree_PDUSessionAdmittedAddedAddReqAck( SI_XNAP_DT_PDUSessionAdmittedAddedAddReqAck * data);

int __si_xnap_Encode_PDUSessionAdmittedAddedAddReqAck( SI_XNAP_DT_PDUSessionAdmittedAddedAddReqAck * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionAdmittedAddedAddReqAck_Item( SI_XNAP_DT_PDUSessionAdmittedAddedAddReqAck_Item ** data);

void __si_xnap_debug_PDUSessionAdmittedAddedAddReqAck_Item( char * key, SI_XNAP_DT_PDUSessionAdmittedAddedAddReqAck_Item * data, int lvl);

void __si_xnap_memfree_PDUSessionAdmittedAddedAddReqAck_Item( SI_XNAP_DT_PDUSessionAdmittedAddedAddReqAck_Item * data);

int __si_xnap_Encode_PDUSessionAdmittedAddedAddReqAck_Item( SI_XNAP_DT_PDUSessionAdmittedAddedAddReqAck_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionNotAdmittedAddReqAck( SI_XNAP_DT_PDUSessionNotAdmittedAddReqAck ** data);

void __si_xnap_debug_PDUSessionNotAdmittedAddReqAck( char * key, SI_XNAP_DT_PDUSessionNotAdmittedAddReqAck * data, int lvl);

void __si_xnap_memfree_PDUSessionNotAdmittedAddReqAck( SI_XNAP_DT_PDUSessionNotAdmittedAddReqAck * data);

int __si_xnap_Encode_PDUSessionNotAdmittedAddReqAck( SI_XNAP_DT_PDUSessionNotAdmittedAddReqAck * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ResponseInfo_ReconfCompl( SI_XNAP_DT_ResponseInfo_ReconfCompl ** data);

void __si_xnap_debug_ResponseInfo_ReconfCompl( char * key, SI_XNAP_DT_ResponseInfo_ReconfCompl * data, int lvl);

void __si_xnap_memfree_ResponseInfo_ReconfCompl( SI_XNAP_DT_ResponseInfo_ReconfCompl * data);

int __si_xnap_Encode_ResponseInfo_ReconfCompl( SI_XNAP_DT_ResponseInfo_ReconfCompl * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionsToBeAdded_SNModRequest_List( SI_XNAP_DT_PDUSessionsToBeAdded_SNModRequest_List ** data);

void __si_xnap_debug_PDUSessionsToBeAdded_SNModRequest_List( char * key, SI_XNAP_DT_PDUSessionsToBeAdded_SNModRequest_List * data, int lvl);

void __si_xnap_memfree_PDUSessionsToBeAdded_SNModRequest_List( SI_XNAP_DT_PDUSessionsToBeAdded_SNModRequest_List * data);

int __si_xnap_Encode_PDUSessionsToBeAdded_SNModRequest_List( SI_XNAP_DT_PDUSessionsToBeAdded_SNModRequest_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionsToBeModified_SNModRequest_List( SI_XNAP_DT_PDUSessionsToBeModified_SNModRequest_List ** data);

void __si_xnap_debug_PDUSessionsToBeModified_SNModRequest_List( char * key, SI_XNAP_DT_PDUSessionsToBeModified_SNModRequest_List * data, int lvl);

void __si_xnap_memfree_PDUSessionsToBeModified_SNModRequest_List( SI_XNAP_DT_PDUSessionsToBeModified_SNModRequest_List * data);

int __si_xnap_Encode_PDUSessionsToBeModified_SNModRequest_List( SI_XNAP_DT_PDUSessionsToBeModified_SNModRequest_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionsToBeReleased_SNModRequest_List( SI_XNAP_DT_PDUSessionsToBeReleased_SNModRequest_List ** data);

void __si_xnap_debug_PDUSessionsToBeReleased_SNModRequest_List( char * key, SI_XNAP_DT_PDUSessionsToBeReleased_SNModRequest_List * data, int lvl);

void __si_xnap_memfree_PDUSessionsToBeReleased_SNModRequest_List( SI_XNAP_DT_PDUSessionsToBeReleased_SNModRequest_List * data);

int __si_xnap_Encode_PDUSessionsToBeReleased_SNModRequest_List( SI_XNAP_DT_PDUSessionsToBeReleased_SNModRequest_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEContextInfo_SNModRequest( SI_XNAP_DT_UEContextInfo_SNModRequest ** data);

void __si_xnap_debug_UEContextInfo_SNModRequest( char * key, SI_XNAP_DT_UEContextInfo_SNModRequest * data, int lvl);

void __si_xnap_memfree_UEContextInfo_SNModRequest( SI_XNAP_DT_UEContextInfo_SNModRequest * data);

int __si_xnap_Encode_UEContextInfo_SNModRequest( SI_XNAP_DT_UEContextInfo_SNModRequest * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionsToBeAdded_SNModRequest_Item( SI_XNAP_DT_PDUSessionsToBeAdded_SNModRequest_Item ** data);

void __si_xnap_debug_PDUSessionsToBeAdded_SNModRequest_Item( char * key, SI_XNAP_DT_PDUSessionsToBeAdded_SNModRequest_Item * data, int lvl);

void __si_xnap_memfree_PDUSessionsToBeAdded_SNModRequest_Item( SI_XNAP_DT_PDUSessionsToBeAdded_SNModRequest_Item * data);

int __si_xnap_Encode_PDUSessionsToBeAdded_SNModRequest_Item( SI_XNAP_DT_PDUSessionsToBeAdded_SNModRequest_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionsToBeModified_SNModRequest_Item( SI_XNAP_DT_PDUSessionsToBeModified_SNModRequest_Item ** data);

void __si_xnap_debug_PDUSessionsToBeModified_SNModRequest_Item( char * key, SI_XNAP_DT_PDUSessionsToBeModified_SNModRequest_Item * data, int lvl);

void __si_xnap_memfree_PDUSessionsToBeModified_SNModRequest_Item( SI_XNAP_DT_PDUSessionsToBeModified_SNModRequest_Item * data);

int __si_xnap_Encode_PDUSessionsToBeModified_SNModRequest_Item( SI_XNAP_DT_PDUSessionsToBeModified_SNModRequest_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionAdmittedToBeAddedSNModResponse( SI_XNAP_DT_PDUSessionAdmittedToBeAddedSNModResponse ** data);

void __si_xnap_debug_PDUSessionAdmittedToBeAddedSNModResponse( char * key, SI_XNAP_DT_PDUSessionAdmittedToBeAddedSNModResponse * data, int lvl);

void __si_xnap_memfree_PDUSessionAdmittedToBeAddedSNModResponse( SI_XNAP_DT_PDUSessionAdmittedToBeAddedSNModResponse * data);

int __si_xnap_Encode_PDUSessionAdmittedToBeAddedSNModResponse( SI_XNAP_DT_PDUSessionAdmittedToBeAddedSNModResponse * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionAdmittedToBeModifiedSNModResponse( SI_XNAP_DT_PDUSessionAdmittedToBeModifiedSNModResponse ** data);

void __si_xnap_debug_PDUSessionAdmittedToBeModifiedSNModResponse( char * key, SI_XNAP_DT_PDUSessionAdmittedToBeModifiedSNModResponse * data, int lvl);

void __si_xnap_memfree_PDUSessionAdmittedToBeModifiedSNModResponse( SI_XNAP_DT_PDUSessionAdmittedToBeModifiedSNModResponse * data);

int __si_xnap_Encode_PDUSessionAdmittedToBeModifiedSNModResponse( SI_XNAP_DT_PDUSessionAdmittedToBeModifiedSNModResponse * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionAdmittedToBeReleasedSNModResponse( SI_XNAP_DT_PDUSessionAdmittedToBeReleasedSNModResponse ** data);

void __si_xnap_debug_PDUSessionAdmittedToBeReleasedSNModResponse( char * key, SI_XNAP_DT_PDUSessionAdmittedToBeReleasedSNModResponse * data, int lvl);

void __si_xnap_memfree_PDUSessionAdmittedToBeReleasedSNModResponse( SI_XNAP_DT_PDUSessionAdmittedToBeReleasedSNModResponse * data);

int __si_xnap_Encode_PDUSessionAdmittedToBeReleasedSNModResponse( SI_XNAP_DT_PDUSessionAdmittedToBeReleasedSNModResponse * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionAdmitted_SNModResponse( SI_XNAP_DT_PDUSessionAdmitted_SNModResponse ** data);

void __si_xnap_debug_PDUSessionAdmitted_SNModResponse( char * key, SI_XNAP_DT_PDUSessionAdmitted_SNModResponse * data, int lvl);

void __si_xnap_memfree_PDUSessionAdmitted_SNModResponse( SI_XNAP_DT_PDUSessionAdmitted_SNModResponse * data);

int __si_xnap_Encode_PDUSessionAdmitted_SNModResponse( SI_XNAP_DT_PDUSessionAdmitted_SNModResponse * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionAdmittedToBeAddedSNModResponse_Item( SI_XNAP_DT_PDUSessionAdmittedToBeAddedSNModResponse_Item ** data);

void __si_xnap_debug_PDUSessionAdmittedToBeAddedSNModResponse_Item( char * key, SI_XNAP_DT_PDUSessionAdmittedToBeAddedSNModResponse_Item * data, int lvl);

void __si_xnap_memfree_PDUSessionAdmittedToBeAddedSNModResponse_Item( SI_XNAP_DT_PDUSessionAdmittedToBeAddedSNModResponse_Item * data);

int __si_xnap_Encode_PDUSessionAdmittedToBeAddedSNModResponse_Item( SI_XNAP_DT_PDUSessionAdmittedToBeAddedSNModResponse_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionAdmittedToBeModifiedSNModResponse_Item( SI_XNAP_DT_PDUSessionAdmittedToBeModifiedSNModResponse_Item ** data);

void __si_xnap_debug_PDUSessionAdmittedToBeModifiedSNModResponse_Item( char * key, SI_XNAP_DT_PDUSessionAdmittedToBeModifiedSNModResponse_Item * data, int lvl);

void __si_xnap_memfree_PDUSessionAdmittedToBeModifiedSNModResponse_Item( SI_XNAP_DT_PDUSessionAdmittedToBeModifiedSNModResponse_Item * data);

int __si_xnap_Encode_PDUSessionAdmittedToBeModifiedSNModResponse_Item( SI_XNAP_DT_PDUSessionAdmittedToBeModifiedSNModResponse_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionNotAdmitted_SNModResponse( SI_XNAP_DT_PDUSessionNotAdmitted_SNModResponse ** data);

void __si_xnap_debug_PDUSessionNotAdmitted_SNModResponse( char * key, SI_XNAP_DT_PDUSessionNotAdmitted_SNModResponse * data, int lvl);

void __si_xnap_memfree_PDUSessionNotAdmitted_SNModResponse( SI_XNAP_DT_PDUSessionNotAdmitted_SNModResponse * data);

int __si_xnap_Encode_PDUSessionNotAdmitted_SNModResponse( SI_XNAP_DT_PDUSessionNotAdmitted_SNModResponse * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionDataForwarding_SNModResponse( SI_XNAP_DT_PDUSessionDataForwarding_SNModResponse ** data);

void __si_xnap_debug_PDUSessionDataForwarding_SNModResponse( char * key, SI_XNAP_DT_PDUSessionDataForwarding_SNModResponse * data, int lvl);

void __si_xnap_memfree_PDUSessionDataForwarding_SNModResponse( SI_XNAP_DT_PDUSessionDataForwarding_SNModResponse * data);

int __si_xnap_Encode_PDUSessionDataForwarding_SNModResponse( SI_XNAP_DT_PDUSessionDataForwarding_SNModResponse * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionToBeModifiedSNModRequired( SI_XNAP_DT_PDUSessionToBeModifiedSNModRequired ** data);

void __si_xnap_debug_PDUSessionToBeModifiedSNModRequired( char * key, SI_XNAP_DT_PDUSessionToBeModifiedSNModRequired * data, int lvl);

void __si_xnap_memfree_PDUSessionToBeModifiedSNModRequired( SI_XNAP_DT_PDUSessionToBeModifiedSNModRequired * data);

int __si_xnap_Encode_PDUSessionToBeModifiedSNModRequired( SI_XNAP_DT_PDUSessionToBeModifiedSNModRequired * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionToBeModifiedSNModRequired_Item( SI_XNAP_DT_PDUSessionToBeModifiedSNModRequired_Item ** data);

void __si_xnap_debug_PDUSessionToBeModifiedSNModRequired_Item( char * key, SI_XNAP_DT_PDUSessionToBeModifiedSNModRequired_Item * data, int lvl);

void __si_xnap_memfree_PDUSessionToBeModifiedSNModRequired_Item( SI_XNAP_DT_PDUSessionToBeModifiedSNModRequired_Item * data);

int __si_xnap_Encode_PDUSessionToBeModifiedSNModRequired_Item( SI_XNAP_DT_PDUSessionToBeModifiedSNModRequired_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionToBeReleasedSNModRequired( SI_XNAP_DT_PDUSessionToBeReleasedSNModRequired ** data);

void __si_xnap_debug_PDUSessionToBeReleasedSNModRequired( char * key, SI_XNAP_DT_PDUSessionToBeReleasedSNModRequired * data, int lvl);

void __si_xnap_memfree_PDUSessionToBeReleasedSNModRequired( SI_XNAP_DT_PDUSessionToBeReleasedSNModRequired * data);

int __si_xnap_Encode_PDUSessionToBeReleasedSNModRequired( SI_XNAP_DT_PDUSessionToBeReleasedSNModRequired * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionAdmittedModSNModConfirm( SI_XNAP_DT_PDUSessionAdmittedModSNModConfirm ** data);

void __si_xnap_debug_PDUSessionAdmittedModSNModConfirm( char * key, SI_XNAP_DT_PDUSessionAdmittedModSNModConfirm * data, int lvl);

void __si_xnap_memfree_PDUSessionAdmittedModSNModConfirm( SI_XNAP_DT_PDUSessionAdmittedModSNModConfirm * data);

int __si_xnap_Encode_PDUSessionAdmittedModSNModConfirm( SI_XNAP_DT_PDUSessionAdmittedModSNModConfirm * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionAdmittedModSNModConfirm_Item( SI_XNAP_DT_PDUSessionAdmittedModSNModConfirm_Item ** data);

void __si_xnap_debug_PDUSessionAdmittedModSNModConfirm_Item( char * key, SI_XNAP_DT_PDUSessionAdmittedModSNModConfirm_Item * data, int lvl);

void __si_xnap_memfree_PDUSessionAdmittedModSNModConfirm_Item( SI_XNAP_DT_PDUSessionAdmittedModSNModConfirm_Item * data);

int __si_xnap_Encode_PDUSessionAdmittedModSNModConfirm_Item( SI_XNAP_DT_PDUSessionAdmittedModSNModConfirm_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionReleasedSNModConfirm( SI_XNAP_DT_PDUSessionReleasedSNModConfirm ** data);

void __si_xnap_debug_PDUSessionReleasedSNModConfirm( char * key, SI_XNAP_DT_PDUSessionReleasedSNModConfirm * data, int lvl);

void __si_xnap_memfree_PDUSessionReleasedSNModConfirm( SI_XNAP_DT_PDUSessionReleasedSNModConfirm * data);

int __si_xnap_Encode_PDUSessionReleasedSNModConfirm( SI_XNAP_DT_PDUSessionReleasedSNModConfirm * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionToBeReleasedList_RelReqAck( SI_XNAP_DT_PDUSessionToBeReleasedList_RelReqAck ** data);

void __si_xnap_debug_PDUSessionToBeReleasedList_RelReqAck( char * key, SI_XNAP_DT_PDUSessionToBeReleasedList_RelReqAck * data, int lvl);

void __si_xnap_memfree_PDUSessionToBeReleasedList_RelReqAck( SI_XNAP_DT_PDUSessionToBeReleasedList_RelReqAck * data);

int __si_xnap_Encode_PDUSessionToBeReleasedList_RelReqAck( SI_XNAP_DT_PDUSessionToBeReleasedList_RelReqAck * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionToBeReleasedList_RelRqd( SI_XNAP_DT_PDUSessionToBeReleasedList_RelRqd ** data);

void __si_xnap_debug_PDUSessionToBeReleasedList_RelRqd( char * key, SI_XNAP_DT_PDUSessionToBeReleasedList_RelRqd * data, int lvl);

void __si_xnap_memfree_PDUSessionToBeReleasedList_RelRqd( SI_XNAP_DT_PDUSessionToBeReleasedList_RelRqd * data);

int __si_xnap_Encode_PDUSessionToBeReleasedList_RelRqd( SI_XNAP_DT_PDUSessionToBeReleasedList_RelRqd * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionReleasedList_RelConf( SI_XNAP_DT_PDUSessionReleasedList_RelConf ** data);

void __si_xnap_debug_PDUSessionReleasedList_RelConf( char * key, SI_XNAP_DT_PDUSessionReleasedList_RelConf * data, int lvl);

void __si_xnap_memfree_PDUSessionReleasedList_RelConf( SI_XNAP_DT_PDUSessionReleasedList_RelConf * data);

int __si_xnap_Encode_PDUSessionReleasedList_RelConf( SI_XNAP_DT_PDUSessionReleasedList_RelConf * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BearersSubjectToCounterCheck_List( SI_XNAP_DT_BearersSubjectToCounterCheck_List ** data);

void __si_xnap_debug_BearersSubjectToCounterCheck_List( char * key, SI_XNAP_DT_BearersSubjectToCounterCheck_List * data, int lvl);

void __si_xnap_memfree_BearersSubjectToCounterCheck_List( SI_XNAP_DT_BearersSubjectToCounterCheck_List * data);

int __si_xnap_Encode_BearersSubjectToCounterCheck_List( SI_XNAP_DT_BearersSubjectToCounterCheck_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_BearersSubjectToCounterCheck_Item_ul_count( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_BearersSubjectToCounterCheck_Item_ul_count( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_BearersSubjectToCounterCheck_Item_ul_count( SI_XNAP_DT_BearersSubjectToCounterCheck_Item_ul_count * data);


void __si_xnap_debug_BearersSubjectToCounterCheck_Item_dl_count( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_BearersSubjectToCounterCheck_Item_dl_count( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_BearersSubjectToCounterCheck_Item_dl_count( SI_XNAP_DT_BearersSubjectToCounterCheck_Item_dl_count * data);


void __si_xnap_init_BearersSubjectToCounterCheck_Item( SI_XNAP_DT_BearersSubjectToCounterCheck_Item ** data);

void __si_xnap_debug_BearersSubjectToCounterCheck_Item( char * key, SI_XNAP_DT_BearersSubjectToCounterCheck_Item * data, int lvl);

void __si_xnap_memfree_BearersSubjectToCounterCheck_Item( SI_XNAP_DT_BearersSubjectToCounterCheck_Item * data);

int __si_xnap_Encode_BearersSubjectToCounterCheck_Item( SI_XNAP_DT_BearersSubjectToCounterCheck_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSession_SNChangeRequired_List( SI_XNAP_DT_PDUSession_SNChangeRequired_List ** data);

void __si_xnap_debug_PDUSession_SNChangeRequired_List( char * key, SI_XNAP_DT_PDUSession_SNChangeRequired_List * data, int lvl);

void __si_xnap_memfree_PDUSession_SNChangeRequired_List( SI_XNAP_DT_PDUSession_SNChangeRequired_List * data);

int __si_xnap_Encode_PDUSession_SNChangeRequired_List( SI_XNAP_DT_PDUSession_SNChangeRequired_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSession_SNChangeRequired_Item( SI_XNAP_DT_PDUSession_SNChangeRequired_Item ** data);

void __si_xnap_debug_PDUSession_SNChangeRequired_Item( char * key, SI_XNAP_DT_PDUSession_SNChangeRequired_Item * data, int lvl);

void __si_xnap_memfree_PDUSession_SNChangeRequired_Item( SI_XNAP_DT_PDUSession_SNChangeRequired_Item * data);

int __si_xnap_Encode_PDUSession_SNChangeRequired_Item( SI_XNAP_DT_PDUSession_SNChangeRequired_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSession_SNChangeConfirm_List( SI_XNAP_DT_PDUSession_SNChangeConfirm_List ** data);

void __si_xnap_debug_PDUSession_SNChangeConfirm_List( char * key, SI_XNAP_DT_PDUSession_SNChangeConfirm_List * data, int lvl);

void __si_xnap_memfree_PDUSession_SNChangeConfirm_List( SI_XNAP_DT_PDUSession_SNChangeConfirm_List * data);

int __si_xnap_Encode_PDUSession_SNChangeConfirm_List( SI_XNAP_DT_PDUSession_SNChangeConfirm_List * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSession_SNChangeConfirm_Item( SI_XNAP_DT_PDUSession_SNChangeConfirm_Item ** data);

void __si_xnap_debug_PDUSession_SNChangeConfirm_Item( char * key, SI_XNAP_DT_PDUSession_SNChangeConfirm_Item * data, int lvl);

void __si_xnap_memfree_PDUSession_SNChangeConfirm_Item( SI_XNAP_DT_PDUSession_SNChangeConfirm_Item * data);

int __si_xnap_Encode_PDUSession_SNChangeConfirm_Item( SI_XNAP_DT_PDUSession_SNChangeConfirm_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SplitSRB_RRCTransfer_rrcContainer( SI_XNAP_DT_SplitSRB_RRCTransfer_rrcContainer ** data);

void __si_xnap_init_SplitSRB_RRCTransfer_rrcContainer2( SI_XNAP_DT_SplitSRB_RRCTransfer_rrcContainer ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_SplitSRB_RRCTransfer_rrcContainer( char * key, SI_XNAP_DT_SplitSRB_RRCTransfer_rrcContainer * data, int lvl);

void __si_xnap_memfree_SplitSRB_RRCTransfer_rrcContainer( SI_XNAP_DT_SplitSRB_RRCTransfer_rrcContainer * data);

int __si_xnap_Encode_SplitSRB_RRCTransfer_rrcContainer( SI_XNAP_DT_SplitSRB_RRCTransfer_rrcContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SplitSRB_RRCTransfer_srbType( char * key, uint8_t eSplitSRB_RRCTransfer_srbType, int lvl);

int __si_xnap_Encode_SplitSRB_RRCTransfer_srbType( uint8_t eSplitSRB_RRCTransfer_srbType, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SplitSRB_RRCTransfer( SI_XNAP_DT_SplitSRB_RRCTransfer ** data);

void __si_xnap_debug_SplitSRB_RRCTransfer( char * key, SI_XNAP_DT_SplitSRB_RRCTransfer * data, int lvl);

void __si_xnap_memfree_SplitSRB_RRCTransfer( SI_XNAP_DT_SplitSRB_RRCTransfer * data);

int __si_xnap_Encode_SplitSRB_RRCTransfer( SI_XNAP_DT_SplitSRB_RRCTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEReportRRCTransfer_rrcContainer( SI_XNAP_DT_UEReportRRCTransfer_rrcContainer ** data);

void __si_xnap_init_UEReportRRCTransfer_rrcContainer2( SI_XNAP_DT_UEReportRRCTransfer_rrcContainer ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_UEReportRRCTransfer_rrcContainer( char * key, SI_XNAP_DT_UEReportRRCTransfer_rrcContainer * data, int lvl);

void __si_xnap_memfree_UEReportRRCTransfer_rrcContainer( SI_XNAP_DT_UEReportRRCTransfer_rrcContainer * data);

int __si_xnap_Encode_UEReportRRCTransfer_rrcContainer( SI_XNAP_DT_UEReportRRCTransfer_rrcContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_UEReportRRCTransfer( SI_XNAP_DT_UEReportRRCTransfer ** data);

void __si_xnap_debug_UEReportRRCTransfer( char * key, SI_XNAP_DT_UEReportRRCTransfer * data, int lvl);

void __si_xnap_memfree_UEReportRRCTransfer( SI_XNAP_DT_UEReportRRCTransfer * data);

int __si_xnap_Encode_UEReportRRCTransfer( SI_XNAP_DT_UEReportRRCTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_FastMCGRecoveryRRCTransfer_rrcContainer( SI_XNAP_DT_FastMCGRecoveryRRCTransfer_rrcContainer ** data);

void __si_xnap_init_FastMCGRecoveryRRCTransfer_rrcContainer2( SI_XNAP_DT_FastMCGRecoveryRRCTransfer_rrcContainer ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_FastMCGRecoveryRRCTransfer_rrcContainer( char * key, SI_XNAP_DT_FastMCGRecoveryRRCTransfer_rrcContainer * data, int lvl);

void __si_xnap_memfree_FastMCGRecoveryRRCTransfer_rrcContainer( SI_XNAP_DT_FastMCGRecoveryRRCTransfer_rrcContainer * data);

int __si_xnap_Encode_FastMCGRecoveryRRCTransfer_rrcContainer( SI_XNAP_DT_FastMCGRecoveryRRCTransfer_rrcContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_FastMCGRecoveryRRCTransfer( SI_XNAP_DT_FastMCGRecoveryRRCTransfer ** data);

void __si_xnap_debug_FastMCGRecoveryRRCTransfer( char * key, SI_XNAP_DT_FastMCGRecoveryRRCTransfer * data, int lvl);

void __si_xnap_memfree_FastMCGRecoveryRRCTransfer( SI_XNAP_DT_FastMCGRecoveryRRCTransfer * data);

int __si_xnap_Encode_FastMCGRecoveryRRCTransfer( SI_XNAP_DT_FastMCGRecoveryRRCTransfer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SDT_SRB_between_NewNode_OldNode_rrcContainer( SI_XNAP_DT_SDT_SRB_between_NewNode_OldNode_rrcContainer ** data);

void __si_xnap_init_SDT_SRB_between_NewNode_OldNode_rrcContainer2( SI_XNAP_DT_SDT_SRB_between_NewNode_OldNode_rrcContainer ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_SDT_SRB_between_NewNode_OldNode_rrcContainer( char * key, SI_XNAP_DT_SDT_SRB_between_NewNode_OldNode_rrcContainer * data, int lvl);

void __si_xnap_memfree_SDT_SRB_between_NewNode_OldNode_rrcContainer( SI_XNAP_DT_SDT_SRB_between_NewNode_OldNode_rrcContainer * data);

int __si_xnap_Encode_SDT_SRB_between_NewNode_OldNode_rrcContainer( SI_XNAP_DT_SDT_SRB_between_NewNode_OldNode_rrcContainer * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_SDT_SRB_between_NewNode_OldNode( SI_XNAP_DT_SDT_SRB_between_NewNode_OldNode ** data);

void __si_xnap_debug_SDT_SRB_between_NewNode_OldNode( char * key, SI_XNAP_DT_SDT_SRB_between_NewNode_OldNode * data, int lvl);

void __si_xnap_memfree_SDT_SRB_between_NewNode_OldNode( SI_XNAP_DT_SDT_SRB_between_NewNode_OldNode * data);

int __si_xnap_Encode_SDT_SRB_between_NewNode_OldNode( SI_XNAP_DT_SDT_SRB_between_NewNode_OldNode * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoE_Measurement_Results_qOEReference( SI_XNAP_DT_QoE_Measurement_Results_qOEReference ** data);

void __si_xnap_init_QoE_Measurement_Results_qOEReference2( SI_XNAP_DT_QoE_Measurement_Results_qOEReference ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_QoE_Measurement_Results_qOEReference( char * key, SI_XNAP_DT_QoE_Measurement_Results_qOEReference * data, int lvl);

void __si_xnap_memfree_QoE_Measurement_Results_qOEReference( SI_XNAP_DT_QoE_Measurement_Results_qOEReference * data);

int __si_xnap_Encode_QoE_Measurement_Results_qOEReference( SI_XNAP_DT_QoE_Measurement_Results_qOEReference * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoE_Measurement_Results_rrcContainerForRVQoEReport( SI_XNAP_DT_QoE_Measurement_Results_rrcContainerForRVQoEReport ** data);

void __si_xnap_init_QoE_Measurement_Results_rrcContainerForRVQoEReport2( SI_XNAP_DT_QoE_Measurement_Results_rrcContainerForRVQoEReport ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_QoE_Measurement_Results_rrcContainerForRVQoEReport( char * key, SI_XNAP_DT_QoE_Measurement_Results_rrcContainerForRVQoEReport * data, int lvl);

void __si_xnap_memfree_QoE_Measurement_Results_rrcContainerForRVQoEReport( SI_XNAP_DT_QoE_Measurement_Results_rrcContainerForRVQoEReport * data);

int __si_xnap_Encode_QoE_Measurement_Results_rrcContainerForRVQoEReport( SI_XNAP_DT_QoE_Measurement_Results_rrcContainerForRVQoEReport * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoE_Measurement_Results_rrcContainerForQoEReport( SI_XNAP_DT_QoE_Measurement_Results_rrcContainerForQoEReport ** data);

void __si_xnap_init_QoE_Measurement_Results_rrcContainerForQoEReport2( SI_XNAP_DT_QoE_Measurement_Results_rrcContainerForQoEReport ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_QoE_Measurement_Results_rrcContainerForQoEReport( char * key, SI_XNAP_DT_QoE_Measurement_Results_rrcContainerForQoEReport * data, int lvl);

void __si_xnap_memfree_QoE_Measurement_Results_rrcContainerForQoEReport( SI_XNAP_DT_QoE_Measurement_Results_rrcContainerForQoEReport * data);

int __si_xnap_Encode_QoE_Measurement_Results_rrcContainerForQoEReport( SI_XNAP_DT_QoE_Measurement_Results_rrcContainerForQoEReport * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_QoE_Measurement_Results_appLayerSessionStatus( char * key, uint8_t eQoE_Measurement_Results_appLayerSessionStatus, int lvl);

int __si_xnap_Encode_QoE_Measurement_Results_appLayerSessionStatus( uint8_t eQoE_Measurement_Results_appLayerSessionStatus, int isExt, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoE_Measurement_Results( SI_XNAP_DT_QoE_Measurement_Results ** data);

void __si_xnap_debug_QoE_Measurement_Results( char * key, SI_XNAP_DT_QoE_Measurement_Results * data, int lvl);

void __si_xnap_memfree_QoE_Measurement_Results( SI_XNAP_DT_QoE_Measurement_Results * data);

int __si_xnap_Encode_QoE_Measurement_Results( SI_XNAP_DT_QoE_Measurement_Results * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourcesNotifyList( SI_XNAP_DT_PDUSessionResourcesNotifyList ** data);

void __si_xnap_debug_PDUSessionResourcesNotifyList( char * key, SI_XNAP_DT_PDUSessionResourcesNotifyList * data, int lvl);

void __si_xnap_memfree_PDUSessionResourcesNotifyList( SI_XNAP_DT_PDUSessionResourcesNotifyList * data);

int __si_xnap_Encode_PDUSessionResourcesNotifyList( SI_XNAP_DT_PDUSessionResourcesNotifyList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourcesNotify_Item( SI_XNAP_DT_PDUSessionResourcesNotify_Item ** data);

void __si_xnap_debug_PDUSessionResourcesNotify_Item( char * key, SI_XNAP_DT_PDUSessionResourcesNotify_Item * data, int lvl);

void __si_xnap_memfree_PDUSessionResourcesNotify_Item( SI_XNAP_DT_PDUSessionResourcesNotify_Item * data);

int __si_xnap_Encode_PDUSessionResourcesNotify_Item( SI_XNAP_DT_PDUSessionResourcesNotify_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourcesActivityNotifyList( SI_XNAP_DT_PDUSessionResourcesActivityNotifyList ** data);

void __si_xnap_debug_PDUSessionResourcesActivityNotifyList( char * key, SI_XNAP_DT_PDUSessionResourcesActivityNotifyList * data, int lvl);

void __si_xnap_memfree_PDUSessionResourcesActivityNotifyList( SI_XNAP_DT_PDUSessionResourcesActivityNotifyList * data);

int __si_xnap_Encode_PDUSessionResourcesActivityNotifyList( SI_XNAP_DT_PDUSessionResourcesActivityNotifyList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsActivityNotifyList( SI_XNAP_DT_QoSFlowsActivityNotifyList ** data);

void __si_xnap_debug_QoSFlowsActivityNotifyList( char * key, SI_XNAP_DT_QoSFlowsActivityNotifyList * data, int lvl);

void __si_xnap_memfree_QoSFlowsActivityNotifyList( SI_XNAP_DT_QoSFlowsActivityNotifyList * data);

int __si_xnap_Encode_QoSFlowsActivityNotifyList( SI_XNAP_DT_QoSFlowsActivityNotifyList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_PDUSessionResourcesActivityNotify_Item( SI_XNAP_DT_PDUSessionResourcesActivityNotify_Item ** data);

void __si_xnap_debug_PDUSessionResourcesActivityNotify_Item( char * key, SI_XNAP_DT_PDUSessionResourcesActivityNotify_Item * data, int lvl);

void __si_xnap_memfree_PDUSessionResourcesActivityNotify_Item( SI_XNAP_DT_PDUSessionResourcesActivityNotify_Item * data);

int __si_xnap_Encode_PDUSessionResourcesActivityNotify_Item( SI_XNAP_DT_PDUSessionResourcesActivityNotify_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_QoSFlowsActivityNotifyItem( SI_XNAP_DT_QoSFlowsActivityNotifyItem ** data);

void __si_xnap_debug_QoSFlowsActivityNotifyItem( char * key, SI_XNAP_DT_QoSFlowsActivityNotifyItem * data, int lvl);

void __si_xnap_memfree_QoSFlowsActivityNotifyItem( SI_XNAP_DT_QoSFlowsActivityNotifyItem * data);

int __si_xnap_Encode_QoSFlowsActivityNotifyItem( SI_XNAP_DT_QoSFlowsActivityNotifyItem * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ToBeActivatedNRCellsAndSSBsList( SI_XNAP_DT_ToBeActivatedNRCellsAndSSBsList ** data);

void __si_xnap_debug_ToBeActivatedNRCellsAndSSBsList( char * key, SI_XNAP_DT_ToBeActivatedNRCellsAndSSBsList * data, int lvl);

void __si_xnap_memfree_ToBeActivatedNRCellsAndSSBsList( SI_XNAP_DT_ToBeActivatedNRCellsAndSSBsList * data);

int __si_xnap_Encode_ToBeActivatedNRCellsAndSSBsList( SI_XNAP_DT_ToBeActivatedNRCellsAndSSBsList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ToBeActivatedNRCellsAndSSBs_Item_sSBstobeActivatedList( SI_XNAP_DT_ToBeActivatedNRCellsAndSSBs_Item_sSBstobeActivatedList ** data);

void __si_xnap_debug_ToBeActivatedNRCellsAndSSBs_Item_sSBstobeActivatedList( char * key, SI_XNAP_DT_ToBeActivatedNRCellsAndSSBs_Item_sSBstobeActivatedList * data, int lvl);

void __si_xnap_memfree_ToBeActivatedNRCellsAndSSBs_Item_sSBstobeActivatedList( SI_XNAP_DT_ToBeActivatedNRCellsAndSSBs_Item_sSBstobeActivatedList * data);

int __si_xnap_Encode_ToBeActivatedNRCellsAndSSBs_Item_sSBstobeActivatedList( SI_XNAP_DT_ToBeActivatedNRCellsAndSSBs_Item_sSBstobeActivatedList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ToBeActivatedNRCellsAndSSBs_Item( SI_XNAP_DT_ToBeActivatedNRCellsAndSSBs_Item ** data);

void __si_xnap_debug_ToBeActivatedNRCellsAndSSBs_Item( char * key, SI_XNAP_DT_ToBeActivatedNRCellsAndSSBs_Item * data, int lvl);

void __si_xnap_memfree_ToBeActivatedNRCellsAndSSBs_Item( SI_XNAP_DT_ToBeActivatedNRCellsAndSSBs_Item * data);

int __si_xnap_Encode_ToBeActivatedNRCellsAndSSBs_Item( SI_XNAP_DT_ToBeActivatedNRCellsAndSSBs_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SSBsToBeActivated_Item_ssbIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SSBsToBeActivated_Item_ssbIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SSBsToBeActivated_Item_ssbIndex( SI_XNAP_DT_SSBsToBeActivated_Item_ssbIndex * data);


void __si_xnap_init_SSBsToBeActivated_Item( SI_XNAP_DT_SSBsToBeActivated_Item ** data);

void __si_xnap_debug_SSBsToBeActivated_Item( char * key, SI_XNAP_DT_SSBsToBeActivated_Item * data, int lvl);

void __si_xnap_memfree_SSBsToBeActivated_Item( SI_XNAP_DT_SSBsToBeActivated_Item * data);

int __si_xnap_Encode_SSBsToBeActivated_Item( SI_XNAP_DT_SSBsToBeActivated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ActivatedNRCellsAndSSBsList( SI_XNAP_DT_ActivatedNRCellsAndSSBsList ** data);

void __si_xnap_debug_ActivatedNRCellsAndSSBsList( char * key, SI_XNAP_DT_ActivatedNRCellsAndSSBsList * data, int lvl);

void __si_xnap_memfree_ActivatedNRCellsAndSSBsList( SI_XNAP_DT_ActivatedNRCellsAndSSBsList * data);

int __si_xnap_Encode_ActivatedNRCellsAndSSBsList( SI_XNAP_DT_ActivatedNRCellsAndSSBsList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ActivatedNRCellsAndSSBs_Item_sSBsActivatedList( SI_XNAP_DT_ActivatedNRCellsAndSSBs_Item_sSBsActivatedList ** data);

void __si_xnap_debug_ActivatedNRCellsAndSSBs_Item_sSBsActivatedList( char * key, SI_XNAP_DT_ActivatedNRCellsAndSSBs_Item_sSBsActivatedList * data, int lvl);

void __si_xnap_memfree_ActivatedNRCellsAndSSBs_Item_sSBsActivatedList( SI_XNAP_DT_ActivatedNRCellsAndSSBs_Item_sSBsActivatedList * data);

int __si_xnap_Encode_ActivatedNRCellsAndSSBs_Item_sSBsActivatedList( SI_XNAP_DT_ActivatedNRCellsAndSSBs_Item_sSBsActivatedList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ActivatedNRCellsAndSSBs_Item( SI_XNAP_DT_ActivatedNRCellsAndSSBs_Item ** data);

void __si_xnap_debug_ActivatedNRCellsAndSSBs_Item( char * key, SI_XNAP_DT_ActivatedNRCellsAndSSBs_Item * data, int lvl);

void __si_xnap_memfree_ActivatedNRCellsAndSSBs_Item( SI_XNAP_DT_ActivatedNRCellsAndSSBs_Item * data);

int __si_xnap_Encode_ActivatedNRCellsAndSSBs_Item( SI_XNAP_DT_ActivatedNRCellsAndSSBs_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_debug_SSBsActivated_Item_ssbIndex( char * key, unsigned long long int data, int lvl);

int __si_xnap_Encode_SSBsActivated_Item_ssbIndex( unsigned long long int data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_memfree_SSBsActivated_Item_ssbIndex( SI_XNAP_DT_SSBsActivated_Item_ssbIndex * data);


void __si_xnap_init_SSBsActivated_Item( SI_XNAP_DT_SSBsActivated_Item ** data);

void __si_xnap_debug_SSBsActivated_Item( char * key, SI_XNAP_DT_SSBsActivated_Item * data, int lvl);

void __si_xnap_memfree_SSBsActivated_Item( SI_XNAP_DT_SSBsActivated_Item * data);

int __si_xnap_Encode_SSBsActivated_Item( SI_XNAP_DT_SSBsActivated_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficToBeAddedList( SI_XNAP_DT_TrafficToBeAddedList ** data);

void __si_xnap_debug_TrafficToBeAddedList( char * key, SI_XNAP_DT_TrafficToBeAddedList * data, int lvl);

void __si_xnap_memfree_TrafficToBeAddedList( SI_XNAP_DT_TrafficToBeAddedList * data);

int __si_xnap_Encode_TrafficToBeAddedList( SI_XNAP_DT_TrafficToBeAddedList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficToBeAdded_Item( SI_XNAP_DT_TrafficToBeAdded_Item ** data);

void __si_xnap_debug_TrafficToBeAdded_Item( char * key, SI_XNAP_DT_TrafficToBeAdded_Item * data, int lvl);

void __si_xnap_memfree_TrafficToBeAdded_Item( SI_XNAP_DT_TrafficToBeAdded_Item * data);

int __si_xnap_Encode_TrafficToBeAdded_Item( SI_XNAP_DT_TrafficToBeAdded_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficToBeModifiedList( SI_XNAP_DT_TrafficToBeModifiedList ** data);

void __si_xnap_debug_TrafficToBeModifiedList( char * key, SI_XNAP_DT_TrafficToBeModifiedList * data, int lvl);

void __si_xnap_memfree_TrafficToBeModifiedList( SI_XNAP_DT_TrafficToBeModifiedList * data);

int __si_xnap_Encode_TrafficToBeModifiedList( SI_XNAP_DT_TrafficToBeModifiedList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficToBeModified_Item( SI_XNAP_DT_TrafficToBeModified_Item ** data);

void __si_xnap_debug_TrafficToBeModified_Item( char * key, SI_XNAP_DT_TrafficToBeModified_Item * data, int lvl);

void __si_xnap_memfree_TrafficToBeModified_Item( SI_XNAP_DT_TrafficToBeModified_Item * data);

int __si_xnap_Encode_TrafficToBeModified_Item( SI_XNAP_DT_TrafficToBeModified_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficAddedList( SI_XNAP_DT_TrafficAddedList ** data);

void __si_xnap_debug_TrafficAddedList( char * key, SI_XNAP_DT_TrafficAddedList * data, int lvl);

void __si_xnap_memfree_TrafficAddedList( SI_XNAP_DT_TrafficAddedList * data);

int __si_xnap_Encode_TrafficAddedList( SI_XNAP_DT_TrafficAddedList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficAdded_Item( SI_XNAP_DT_TrafficAdded_Item ** data);

void __si_xnap_debug_TrafficAdded_Item( char * key, SI_XNAP_DT_TrafficAdded_Item * data, int lvl);

void __si_xnap_memfree_TrafficAdded_Item( SI_XNAP_DT_TrafficAdded_Item * data);

int __si_xnap_Encode_TrafficAdded_Item( SI_XNAP_DT_TrafficAdded_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficModifiedList( SI_XNAP_DT_TrafficModifiedList ** data);

void __si_xnap_debug_TrafficModifiedList( char * key, SI_XNAP_DT_TrafficModifiedList * data, int lvl);

void __si_xnap_memfree_TrafficModifiedList( SI_XNAP_DT_TrafficModifiedList * data);

int __si_xnap_Encode_TrafficModifiedList( SI_XNAP_DT_TrafficModifiedList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficModified_Item( SI_XNAP_DT_TrafficModified_Item ** data);

void __si_xnap_debug_TrafficModified_Item( char * key, SI_XNAP_DT_TrafficModified_Item * data, int lvl);

void __si_xnap_memfree_TrafficModified_Item( SI_XNAP_DT_TrafficModified_Item * data);

int __si_xnap_Encode_TrafficModified_Item( SI_XNAP_DT_TrafficModified_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficNotAddedList( SI_XNAP_DT_TrafficNotAddedList ** data);

void __si_xnap_debug_TrafficNotAddedList( char * key, SI_XNAP_DT_TrafficNotAddedList * data, int lvl);

void __si_xnap_memfree_TrafficNotAddedList( SI_XNAP_DT_TrafficNotAddedList * data);

int __si_xnap_Encode_TrafficNotAddedList( SI_XNAP_DT_TrafficNotAddedList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficNotAdded_Item( SI_XNAP_DT_TrafficNotAdded_Item ** data);

void __si_xnap_debug_TrafficNotAdded_Item( char * key, SI_XNAP_DT_TrafficNotAdded_Item * data, int lvl);

void __si_xnap_memfree_TrafficNotAdded_Item( SI_XNAP_DT_TrafficNotAdded_Item * data);

int __si_xnap_Encode_TrafficNotAdded_Item( SI_XNAP_DT_TrafficNotAdded_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficNotModifiedList( SI_XNAP_DT_TrafficNotModifiedList ** data);

void __si_xnap_debug_TrafficNotModifiedList( char * key, SI_XNAP_DT_TrafficNotModifiedList * data, int lvl);

void __si_xnap_memfree_TrafficNotModifiedList( SI_XNAP_DT_TrafficNotModifiedList * data);

int __si_xnap_Encode_TrafficNotModifiedList( SI_XNAP_DT_TrafficNotModifiedList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficNotModified_Item( SI_XNAP_DT_TrafficNotModified_Item ** data);

void __si_xnap_debug_TrafficNotModified_Item( char * key, SI_XNAP_DT_TrafficNotModified_Item * data, int lvl);

void __si_xnap_memfree_TrafficNotModified_Item( SI_XNAP_DT_TrafficNotModified_Item * data);

int __si_xnap_Encode_TrafficNotModified_Item( SI_XNAP_DT_TrafficNotModified_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficReleasedList( SI_XNAP_DT_TrafficReleasedList ** data);

void __si_xnap_debug_TrafficReleasedList( char * key, SI_XNAP_DT_TrafficReleasedList * data, int lvl);

void __si_xnap_memfree_TrafficReleasedList( SI_XNAP_DT_TrafficReleasedList * data);

int __si_xnap_Encode_TrafficReleasedList( SI_XNAP_DT_TrafficReleasedList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficReleased_Item( SI_XNAP_DT_TrafficReleased_Item ** data);

void __si_xnap_debug_TrafficReleased_Item( char * key, SI_XNAP_DT_TrafficReleased_Item * data, int lvl);

void __si_xnap_memfree_TrafficReleased_Item( SI_XNAP_DT_TrafficReleased_Item * data);

int __si_xnap_Encode_TrafficReleased_Item( SI_XNAP_DT_TrafficReleased_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficRequiredToBeModifiedList( SI_XNAP_DT_TrafficRequiredToBeModifiedList ** data);

void __si_xnap_debug_TrafficRequiredToBeModifiedList( char * key, SI_XNAP_DT_TrafficRequiredToBeModifiedList * data, int lvl);

void __si_xnap_memfree_TrafficRequiredToBeModifiedList( SI_XNAP_DT_TrafficRequiredToBeModifiedList * data);

int __si_xnap_Encode_TrafficRequiredToBeModifiedList( SI_XNAP_DT_TrafficRequiredToBeModifiedList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficRequiredToBeModified_Item( SI_XNAP_DT_TrafficRequiredToBeModified_Item ** data);

void __si_xnap_debug_TrafficRequiredToBeModified_Item( char * key, SI_XNAP_DT_TrafficRequiredToBeModified_Item * data, int lvl);

void __si_xnap_memfree_TrafficRequiredToBeModified_Item( SI_XNAP_DT_TrafficRequiredToBeModified_Item * data);

int __si_xnap_Encode_TrafficRequiredToBeModified_Item( SI_XNAP_DT_TrafficRequiredToBeModified_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABTNLAddressToBeReleasedList( SI_XNAP_DT_IABTNLAddressToBeReleasedList ** data);

void __si_xnap_debug_IABTNLAddressToBeReleasedList( char * key, SI_XNAP_DT_IABTNLAddressToBeReleasedList * data, int lvl);

void __si_xnap_memfree_IABTNLAddressToBeReleasedList( SI_XNAP_DT_IABTNLAddressToBeReleasedList * data);

int __si_xnap_Encode_IABTNLAddressToBeReleasedList( SI_XNAP_DT_IABTNLAddressToBeReleasedList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_IABTNLAddressToBeReleased_Item( SI_XNAP_DT_IABTNLAddressToBeReleased_Item ** data);

void __si_xnap_debug_IABTNLAddressToBeReleased_Item( char * key, SI_XNAP_DT_IABTNLAddressToBeReleased_Item * data, int lvl);

void __si_xnap_memfree_IABTNLAddressToBeReleased_Item( SI_XNAP_DT_IABTNLAddressToBeReleased_Item * data);

int __si_xnap_Encode_IABTNLAddressToBeReleased_Item( SI_XNAP_DT_IABTNLAddressToBeReleased_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficRequiredModifiedList( SI_XNAP_DT_TrafficRequiredModifiedList ** data);

void __si_xnap_debug_TrafficRequiredModifiedList( char * key, SI_XNAP_DT_TrafficRequiredModifiedList * data, int lvl);

void __si_xnap_memfree_TrafficRequiredModifiedList( SI_XNAP_DT_TrafficRequiredModifiedList * data);

int __si_xnap_Encode_TrafficRequiredModifiedList( SI_XNAP_DT_TrafficRequiredModifiedList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_TrafficRequiredModified_Item( SI_XNAP_DT_TrafficRequiredModified_Item ** data);

void __si_xnap_debug_TrafficRequiredModified_Item( char * key, SI_XNAP_DT_TrafficRequiredModified_Item * data, int lvl);

void __si_xnap_memfree_TrafficRequiredModified_Item( SI_XNAP_DT_TrafficRequiredModified_Item * data);

int __si_xnap_Encode_TrafficRequiredModified_Item( SI_XNAP_DT_TrafficRequiredModified_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BoundaryNodeCellsList( SI_XNAP_DT_BoundaryNodeCellsList ** data);

void __si_xnap_debug_BoundaryNodeCellsList( char * key, SI_XNAP_DT_BoundaryNodeCellsList * data, int lvl);

void __si_xnap_memfree_BoundaryNodeCellsList( SI_XNAP_DT_BoundaryNodeCellsList * data);

int __si_xnap_Encode_BoundaryNodeCellsList( SI_XNAP_DT_BoundaryNodeCellsList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_BoundaryNodeCellsList_Item( SI_XNAP_DT_BoundaryNodeCellsList_Item ** data);

void __si_xnap_debug_BoundaryNodeCellsList_Item( char * key, SI_XNAP_DT_BoundaryNodeCellsList_Item * data, int lvl);

void __si_xnap_memfree_BoundaryNodeCellsList_Item( SI_XNAP_DT_BoundaryNodeCellsList_Item * data);

int __si_xnap_Encode_BoundaryNodeCellsList_Item( SI_XNAP_DT_BoundaryNodeCellsList_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ParentNodeCellsList( SI_XNAP_DT_ParentNodeCellsList ** data);

void __si_xnap_debug_ParentNodeCellsList( char * key, SI_XNAP_DT_ParentNodeCellsList * data, int lvl);

void __si_xnap_memfree_ParentNodeCellsList( SI_XNAP_DT_ParentNodeCellsList * data);

int __si_xnap_Encode_ParentNodeCellsList( SI_XNAP_DT_ParentNodeCellsList * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_ParentNodeCellsList_Item( SI_XNAP_DT_ParentNodeCellsList_Item ** data);

void __si_xnap_debug_ParentNodeCellsList_Item( char * key, SI_XNAP_DT_ParentNodeCellsList_Item * data, int lvl);

void __si_xnap_memfree_ParentNodeCellsList_Item( SI_XNAP_DT_ParentNodeCellsList_Item * data);

int __si_xnap_Encode_ParentNodeCellsList_Item( SI_XNAP_DT_ParentNodeCellsList_Item * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

void __si_xnap_init_DefaultOctetString( SI_XNAP_DT_DefaultOctetString ** data);

void __si_xnap_init_DefaultOctetString2( SI_XNAP_DT_DefaultOctetString ** data, u_char * cstr, uint32_t len);

void __si_xnap_debug_DefaultOctetString( char * key, SI_XNAP_DT_DefaultOctetString * data, int lvl);

void __si_xnap_memfree_DefaultOctetString( SI_XNAP_DT_DefaultOctetString * data);

int __si_xnap_Encode_DefaultOctetString( SI_XNAP_DT_DefaultOctetString * data, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType -><- Got NULL L:7659

int __si_xnap_Decode_Criticality( uint8_t * eCriticality,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Presence( uint8_t * ePresence,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PrivateIEID_local( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PrivateIE_ID( SI_XNAP_DT_PrivateIE_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NULL( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ProcedureCode( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ProtocolIE_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TriggeringMessage( uint8_t * eTriggeringMessage,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_A2XPC5QoSFlowList( SI_XNAP_DT_A2XPC5QoSFlowList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BitRate( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_A2XPC5QoSParameters( SI_XNAP_DT_A2XPC5QoSParameters ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FiveQI( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_A2XPC5FlowBitRates( SI_XNAP_DT_A2XPC5FlowBitRates ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Range( uint8_t * eRange,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_A2XPC5QoSFlowItem( SI_XNAP_DT_A2XPC5QoSFlowItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated( SI_XNAP_DT_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFLowsAcceptedToBeForwarded_List( SI_XNAP_DT_QoSFLowsAcceptedToBeForwarded_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TransportLayerAddress( SI_XNAP_DT_TransportLayerAddress ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GTP_TEID( SI_XNAP_DT_GTP_TEID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GTPtunnelTransportLayerInformation( SI_XNAP_DT_GTPtunnelTransportLayerInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UPTransportLayerInformation( SI_XNAP_DT_UPTransportLayerInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DataForwardingResponseDRBItemList( SI_XNAP_DT_DataForwardingResponseDRBItemList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DataForwardingInfoFromTargetNGRANnode( SI_XNAP_DT_DataForwardingInfoFromTargetNGRANnode ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceChangeConfirmInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceChangeConfirmInfo_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item( SI_XNAP_DT_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AveragePacketDelayValue( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AveragePacketDelay( SI_XNAP_DT_AveragePacketDelay ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AdditionLocationInformation( uint8_t * eAdditionLocationInformation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Additional_PDCP_Duplication_TNL_List( SI_XNAP_DT_Additional_PDCP_Duplication_TNL_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Additional_PDCP_Duplication_TNL_Item( SI_XNAP_DT_Additional_PDCP_Duplication_TNL_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Additional_UL_NG_U_TNLatUPF_Item( SI_XNAP_DT_Additional_UL_NG_U_TNLatUPF_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Additional_UL_NG_U_TNLatUPF_List( SI_XNAP_DT_Additional_UL_NG_U_TNLatUPF_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Additional_Measurement_Timing_Configuration_List( SI_XNAP_DT_Additional_Measurement_Timing_Configuration_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AdditionalMeasurementTimingConfigurationItem_additionalMeasurementTimingConfigurationIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CSI_RS_MTC_Configuration_List( SI_XNAP_DT_CSI_RS_MTC_Configuration_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Additional_Measurement_Timing_Configuration_Item( SI_XNAP_DT_Additional_Measurement_Timing_Configuration_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ActivationIDforCellActivation( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_QoSFlowsToAdd_List( SI_XNAP_DT_MBS_QoSFlowsToAdd_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_ServiceAreaCell_List( SI_XNAP_DT_MBS_ServiceAreaCell_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_ServiceAreaTAI_List( SI_XNAP_DT_MBS_ServiceAreaTAI_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_ServiceAreaInformation( SI_XNAP_DT_MBS_ServiceAreaInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_ServiceAreaInformationList( SI_XNAP_DT_MBS_ServiceAreaInformationList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_ServiceArea( SI_XNAP_DT_MBS_ServiceArea ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_MappingandDataForwardingRequestInfofromSource( SI_XNAP_DT_MBS_MappingandDataForwardingRequestInfofromSource ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Active_MBS_SessionInformation( SI_XNAP_DT_Active_MBS_SessionInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Measurement_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DataCollectionID( SI_XNAP_DT_DataCollectionID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AerialControllerUE( uint8_t * eAerialControllerUE,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AerialUE( uint8_t * eAerialUE,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AerialUESubscriptionInformation( uint8_t * eAerialUESubscriptionInformation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AllocationandRetentionPriority_priorityLevel( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AllocationandRetentionPriority_pre_emption_capability( uint8_t * eAllocationandRetentionPriority_pre_emption_capability,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AllocationandRetentionPriority_pre_emption_vulnerability( uint8_t * eAllocationandRetentionPriority_pre_emption_vulnerability,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AllocationandRetentionPriority( SI_XNAP_DT_AllocationandRetentionPriority ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ActivationSFN( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AllowedCAG_ID_List_perPLMN( SI_XNAP_DT_AllowedCAG_ID_List_perPLMN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AllowedPNI_NPN_ID_List( SI_XNAP_DT_AllowedPNI_NPN_ID_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PLMN_Identity( SI_XNAP_DT_PLMN_Identity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PNI_NPN_Restricted_Information( uint8_t * ePNI_NPN_Restricted_Information,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AllowedPNI_NPN_ID_Item( SI_XNAP_DT_AllowedPNI_NPN_ID_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AllTrafficIndication( uint8_t * eAllTrafficIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AlternativeQoSParaSetList( SI_XNAP_DT_AlternativeQoSParaSetList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSParaSetIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PacketDelayBudget( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PER_Scalar( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PER_Exponent( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PacketErrorRate( SI_XNAP_DT_PacketErrorRate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AlternativeQoSParaSetItem( SI_XNAP_DT_AlternativeQoSParaSetItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AMF_Region_Information( SI_XNAP_DT_AMF_Region_Information ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GlobalAMFRegionInformation_amf_region_id( SI_XNAP_DT_GlobalAMFRegionInformation_amf_region_id ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GlobalAMF_Region_Information( SI_XNAP_DT_GlobalAMF_Region_Information ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AMF_UE_NGAP_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AreaOfInterestInformation( SI_XNAP_DT_AreaOfInterestInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ListOfTAIsinAoI( SI_XNAP_DT_ListOfTAIsinAoI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ListOfCells( SI_XNAP_DT_ListOfCells ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ListOfRANNodesinAoI( SI_XNAP_DT_ListOfRANNodesinAoI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RequestReferenceID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AreaOfInterest_Item( SI_XNAP_DT_AreaOfInterest_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellIdListforMDT_NR( SI_XNAP_DT_CellIdListforMDT_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellBasedMDT_NR( SI_XNAP_DT_CellBasedMDT_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TAListforMDT( SI_XNAP_DT_TAListforMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TABasedMDT( SI_XNAP_DT_TABasedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TAIListforMDT( SI_XNAP_DT_TAIListforMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TAIBasedMDT( SI_XNAP_DT_TAIBasedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AreaScopeOfMDT_NR( SI_XNAP_DT_AreaScopeOfMDT_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellIdListforMDT_EUTRA( SI_XNAP_DT_CellIdListforMDT_EUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellBasedMDT_EUTRA( SI_XNAP_DT_CellBasedMDT_EUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AreaScopeOfMDT_EUTRA( SI_XNAP_DT_AreaScopeOfMDT_EUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AreaScopeOfNeighCellsList( SI_XNAP_DT_AreaScopeOfNeighCellsList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRARFCN( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRSCS( uint8_t * eNRSCS,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRNRB( uint8_t * eNRNRB,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRTransmissionBandwidth( SI_XNAP_DT_NRTransmissionBandwidth ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SUL_Information( SI_XNAP_DT_SUL_Information ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRFrequencyBand_List( SI_XNAP_DT_NRFrequencyBand_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRFrequencyInfo( SI_XNAP_DT_NRFrequencyInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PCIListForMDT( SI_XNAP_DT_PCIListForMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AreaScopeOfNeighCellsItem( SI_XNAP_DT_AreaScopeOfNeighCellsItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellIdListforQMC( SI_XNAP_DT_CellIdListforQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellBasedQMC( SI_XNAP_DT_CellBasedQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TAListforQMC( SI_XNAP_DT_TAListforQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TABasedQMC( SI_XNAP_DT_TABasedQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TAIListforQMC( SI_XNAP_DT_TAIListforQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TAIBasedQMC( SI_XNAP_DT_TAIBasedQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PLMNListforQMC( SI_XNAP_DT_PLMNListforQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PLMNAreaBasedQMC( SI_XNAP_DT_PLMNAreaBasedQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AreaScopeOfQMC( SI_XNAP_DT_AreaScopeOfQMC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ASSecurityInformation_key_NG_RAN_Star( SI_XNAP_DT_ASSecurityInformation_key_NG_RAN_Star ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ASSecurityInformation_ncc( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AS_SecurityInformation( SI_XNAP_DT_AS_SecurityInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RANPagingAttemptInfo_pagingAttemptCount( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RANPagingAttemptInfo_intendedNumberOfPagingAttempts( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RANPagingAttemptInfo_nextPagingAreaScope( uint8_t * eRANPagingAttemptInfo_nextPagingAreaScope,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RANPagingAttemptInfo( SI_XNAP_DT_RANPagingAttemptInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AssistanceDataForRANPaging( SI_XNAP_DT_AssistanceDataForRANPaging ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AssistanceInformationQoE_Meas( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Associated_QoSFlowInfo_List( SI_XNAP_DT_Associated_QoSFlowInfo_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowIdentifier( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Associated_QoSFlowInfo_Item( SI_XNAP_DT_Associated_QoSFlowInfo_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AvailableCapacity( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AvailableRRCConnectionCapacityValue( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AvailableRVQoEMetrics_applicationLayerBufferLevelList( uint8_t * eAvailableRVQoEMetrics_applicationLayerBufferLevelList,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AvailableRVQoEMetrics_playoutDelayForMediaStartup( uint8_t * eAvailableRVQoEMetrics_playoutDelayForMediaStartup,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AvailableRVQoEMetrics( SI_XNAP_DT_AvailableRVQoEMetrics ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AveragingWindow( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BAPAddress( SI_XNAP_DT_BAPAddress ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BAPPathID( SI_XNAP_DT_BAPPathID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BAPRoutingID( SI_XNAP_DT_BAPRoutingID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BeamMeasurementIndicationM1( uint8_t * eBeamMeasurementIndicationM1,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BeamMeasurementsReportQuantity_rSRP( uint8_t * eBeamMeasurementsReportQuantity_rSRP,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BeamMeasurementsReportQuantity_rSRQ( uint8_t * eBeamMeasurementsReportQuantity_rSRQ,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BeamMeasurementsReportQuantity_sINR( uint8_t * eBeamMeasurementsReportQuantity_sINR,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BeamMeasurementsReportQuantity( SI_XNAP_DT_BeamMeasurementsReportQuantity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MaxNrofRS_IndexesToReport( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BeamMeasurementsReportConfiguration( SI_XNAP_DT_BeamMeasurementsReportConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BHInfoIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BHInfoList( SI_XNAP_DT_BHInfoList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BHInfo_Item( SI_XNAP_DT_BHInfo_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BHRLCChannelID( SI_XNAP_DT_BHRLCChannelID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BAPControlPDURLCCH_List( SI_XNAP_DT_BAPControlPDURLCCH_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BAPControlPDURLCCH_Item( SI_XNAP_DT_BAPControlPDURLCCH_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BarringExemptionforEmerCallInfo( uint8_t * eBarringExemptionforEmerCallInfo,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BluetoothMeasurementConfiguration_bt_rssi( uint8_t * eBluetoothMeasurementConfiguration_bt_rssi,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BluetoothMeasConfig( uint8_t * eBluetoothMeasConfig,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BluetoothMeasConfigNameList( SI_XNAP_DT_BluetoothMeasConfigNameList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BluetoothMeasurementConfiguration( SI_XNAP_DT_BluetoothMeasurementConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BluetoothName( SI_XNAP_DT_BluetoothName ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BPLMN_ID_Info_EUTRA( SI_XNAP_DT_BPLMN_ID_Info_EUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BroadcastEUTRAPLMNs( SI_XNAP_DT_BroadcastEUTRAPLMNs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TAC( SI_XNAP_DT_TAC ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_E_UTRA_Cell_Identity( SI_XNAP_DT_E_UTRA_Cell_Identity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RANAC( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BPLMN_ID_Info_EUTRA_Item( SI_XNAP_DT_BPLMN_ID_Info_EUTRA_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BPLMN_ID_Info_NR( SI_XNAP_DT_BPLMN_ID_Info_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BroadcastPLMNs( SI_XNAP_DT_BroadcastPLMNs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NR_Cell_Identity( SI_XNAP_DT_NR_Cell_Identity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BPLMN_ID_Info_NR_Item( SI_XNAP_DT_BPLMN_ID_Info_NR_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BroadcastCAG_Identifier_List( SI_XNAP_DT_BroadcastCAG_Identifier_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CAG_Identifier( SI_XNAP_DT_CAG_Identifier ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BroadcastCAG_Identifier_Item( SI_XNAP_DT_BroadcastCAG_Identifier_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BroadcastNID_List( SI_XNAP_DT_BroadcastNID_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NID( SI_XNAP_DT_NID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BroadcastNID_Item( SI_XNAP_DT_BroadcastNID_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SliceSupport_List( SI_XNAP_DT_SliceSupport_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BroadcastPLMNinTAISupport_Item( SI_XNAP_DT_BroadcastPLMNinTAISupport_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BroadcastPNI_NPN_ID_Information( SI_XNAP_DT_BroadcastPNI_NPN_ID_Information ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BroadcastPNI_NPN_ID_Information_Item( SI_XNAP_DT_BroadcastPNI_NPN_ID_Information_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BroadcastSNPNID_List( SI_XNAP_DT_BroadcastSNPNID_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BroadcastSNPNID( SI_XNAP_DT_BroadcastSNPNID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CandidateRelayUEInfoList( SI_XNAP_DT_CandidateRelayUEInfoList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CandidateRelayUEInfoItem_candidateRelayUEID( SI_XNAP_DT_CandidateRelayUEInfoItem_candidateRelayUEID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CandidateRelayUEInfoItem( SI_XNAP_DT_CandidateRelayUEInfoItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CapacityValue( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBAreaCapacityValue_List( SI_XNAP_DT_SSBAreaCapacityValue_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CapacityValueInfo( SI_XNAP_DT_CapacityValueInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CauseRadioNetworkLayer( uint8_t * eCauseRadioNetworkLayer,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CauseTransportLayer( uint8_t * eCauseTransportLayer,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CauseProtocol( uint8_t * eCauseProtocol,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CauseMisc( uint8_t * eCauseMisc,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Cause( SI_XNAP_DT_Cause ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellAssistanceInfoNR_limitedNR_List( SI_XNAP_DT_CellAssistanceInfoNR_limitedNR_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellAssistanceInfoNR_full_List( uint8_t * eCellAssistanceInfoNR_full_List,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellAssistanceInfo_NR( SI_XNAP_DT_CellAssistanceInfo_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MaximumCellListSize( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellAndCapacityAssistanceInfo_NR( SI_XNAP_DT_CellAndCapacityAssistanceInfo_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellAssistanceInfoEUTRA_limitedEUTRA_List( SI_XNAP_DT_CellAssistanceInfoEUTRA_limitedEUTRA_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellAssistanceInfoEUTRA_full_List( uint8_t * eCellAssistanceInfoEUTRA_full_List,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellAssistanceInfo_EUTRA( SI_XNAP_DT_CellAssistanceInfo_EUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellAndCapacityAssistanceInfo_EUTRA( SI_XNAP_DT_CellAndCapacityAssistanceInfo_EUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellCapacityClassValue( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellDeploymentStatusIndicator( uint8_t * eCellDeploymentStatusIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellGroupID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellMeasurementResult( SI_XNAP_DT_CellMeasurementResult ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NG_RAN_Cell_Identity( SI_XNAP_DT_NG_RAN_Cell_Identity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GlobalNG_RANCell_ID( SI_XNAP_DT_GlobalNG_RANCell_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DL_GBR_PRB_usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UL_GBR_PRB_usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DL_non_GBR_PRB_usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UL_non_GBR_PRB_usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DL_Total_PRB_usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UL_Total_PRB_usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NG_eNB_RadioResourceStatus( SI_XNAP_DT_NG_eNB_RadioResourceStatus ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBAreaRadioResourceStatus_List( SI_XNAP_DT_SSBAreaRadioResourceStatus_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GNB_RadioResourceStatus( SI_XNAP_DT_GNB_RadioResourceStatus ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RadioResourceStatus( SI_XNAP_DT_RadioResourceStatus ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_OfferedCapacity( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TNLCapacityIndicator( SI_XNAP_DT_TNLCapacityIndicator ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CompositeAvailableCapacity( SI_XNAP_DT_CompositeAvailableCapacity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CompositeAvailableCapacityGroup( SI_XNAP_DT_CompositeAvailableCapacityGroup ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SliceAvailableCapacity( SI_XNAP_DT_SliceAvailableCapacity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NumberofActiveUEs( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NoofRRCConnections( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RRCConnections( SI_XNAP_DT_RRCConnections ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellMeasurementResult_Item( SI_XNAP_DT_CellMeasurementResult_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ReplacingCells( SI_XNAP_DT_ReplacingCells ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellReplacingInfo( SI_XNAP_DT_CellReplacingInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellToReport( SI_XNAP_DT_CellToReport ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBToReport_List( SI_XNAP_DT_SSBToReport_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SliceToReport_List( SI_XNAP_DT_SliceToReport_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellToReport_Item( SI_XNAP_DT_CellToReport_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellToReportForDataCollection_List( SI_XNAP_DT_CellToReportForDataCollection_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellToReportForDataCollection_Item( SI_XNAP_DT_CellToReportForDataCollection_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellBasedUETrajectoryPrediction( SI_XNAP_DT_CellBasedUETrajectoryPrediction ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellMeasurementInitiationResult_List( SI_XNAP_DT_CellMeasurementInitiationResult_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellMeasurementFailureCause_List( SI_XNAP_DT_CellMeasurementFailureCause_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellMeasurementInitiationResult_Item( SI_XNAP_DT_CellMeasurementInitiationResult_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellMeasurementResultForDataCollection_List( SI_XNAP_DT_CellMeasurementResultForDataCollection_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellInfoResultForDataCollection_Item( SI_XNAP_DT_CellInfoResultForDataCollection_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Cell_Type_Choice( SI_XNAP_DT_Cell_Type_Choice ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellMeasurementFailureCauseItem_cellmeasurementFailedReportCharacteristics( SI_XNAP_DT_CellMeasurementFailureCauseItem_cellmeasurementFailedReportCharacteristics ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellMeasurementFailureCause_Item( SI_XNAP_DT_CellMeasurementFailureCause_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHOCandidateCell_List( SI_XNAP_DT_CHOCandidateCell_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHOConfiguration( SI_XNAP_DT_CHOConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHOExecutionCondition_List( SI_XNAP_DT_CHOExecutionCondition_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHOCandidateCell_Item( SI_XNAP_DT_CHOCandidateCell_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MeasObjectContainer( SI_XNAP_DT_MeasObjectContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ReportConfigContainer( SI_XNAP_DT_ReportConfigContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHOExecutionCondition_Item( SI_XNAP_DT_CHOExecutionCondition_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ClockQualityAcceptanceCriteria_synchronisationState( SI_XNAP_DT_ClockQualityAcceptanceCriteria_synchronisationState ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ClockQualityAcceptanceCriteria_traceabletoUTC( uint8_t * eClockQualityAcceptanceCriteria_traceabletoUTC,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ClockQualityAcceptanceCriteria_traceabletoGNSS( uint8_t * eClockQualityAcceptanceCriteria_traceabletoGNSS,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ClockQualityAcceptanceCriteria_clockFrequencyStability( SI_XNAP_DT_ClockQualityAcceptanceCriteria_clockFrequencyStability ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ClockQualityAcceptanceCriteria_clockAccuracy( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ClockQualityAcceptanceCriteria_parentTimeSource( SI_XNAP_DT_ClockQualityAcceptanceCriteria_parentTimeSource ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ClockQualityAcceptanceCriteria( SI_XNAP_DT_ClockQualityAcceptanceCriteria ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ClockQualityDetailLevel( SI_XNAP_DT_ClockQualityDetailLevel ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ClockQualityReportingControlInfo( SI_XNAP_DT_ClockQualityReportingControlInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CapabilityForBATAdaptation( uint8_t * eCapabilityForBATAdaptation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ControlPlaneTrafficType( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHO_MRDC_EarlyDataForwarding( uint8_t * eCHO_MRDC_EarlyDataForwarding,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHO_MRDC_Indicator( uint8_t * eCHO_MRDC_Indicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHOtrigger( uint8_t * eCHOtrigger,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NG_RANnodeUEXnAPID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHOinformation_Req( SI_XNAP_DT_CHOinformation_Req ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHO_HandoverWindowStart( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHO_HandoverWindowDuration( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHOTimeBasedInformation( SI_XNAP_DT_CHOTimeBasedInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NR_CGI( SI_XNAP_DT_NR_CGI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_E_UTRA_CGI( SI_XNAP_DT_E_UTRA_CGI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Target_CGI( SI_XNAP_DT_Target_CGI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MaxCHOpreparations( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHOinformation_Ack( SI_XNAP_DT_CHOinformation_Ack ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GNBIDChoice_gnb_ID( SI_XNAP_DT_GNBIDChoice_gnb_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GNB_ID_Choice( SI_XNAP_DT_GNB_ID_Choice ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GlobalgNB_ID( SI_XNAP_DT_GlobalgNB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ENBIDChoice_enb_ID_macro( SI_XNAP_DT_ENBIDChoice_enb_ID_macro ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ENBIDChoice_enb_ID_shortmacro( SI_XNAP_DT_ENBIDChoice_enb_ID_shortmacro ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ENBIDChoice_enb_ID_longmacro( SI_XNAP_DT_ENBIDChoice_enb_ID_longmacro ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ENB_ID_Choice( SI_XNAP_DT_ENB_ID_Choice ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GlobalngeNB_ID( SI_XNAP_DT_GlobalngeNB_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GlobalNG_RANNode_ID( SI_XNAP_DT_GlobalNG_RANNode_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHO_Probability( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHOinformation_AddReq( SI_XNAP_DT_CHOinformation_AddReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHOinformation_AddReqAck( SI_XNAP_DT_CHOinformation_AddReqAck ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHOinformationModReq_conditionalReconfig( uint8_t * eCHOinformationModReq_conditionalReconfig,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHOinformation_ModReq( SI_XNAP_DT_CHOinformation_ModReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHO_Maxnoof_CondReconfig( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHO_CPAC_Config_Indicator( uint8_t * eCHO_CPAC_Config_Indicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHO_target_SN_node_list( SI_XNAP_DT_CHO_target_SN_node_list ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHO_CPAC_Information( SI_XNAP_DT_CHO_CPAC_Information ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourcesAdmitted_List( SI_XNAP_DT_PDUSessionResourcesAdmitted_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHO_Candidate_PSCells_list( SI_XNAP_DT_CHO_Candidate_PSCells_list ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHO_target_SN_node_Item( SI_XNAP_DT_CHO_target_SN_node_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHOCandidatePSCellsItem_target2source_NG_RANNode_Container( SI_XNAP_DT_CHOCandidatePSCellsItem_target2source_NG_RANNode_Container ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CHO_Candidate_PSCells_Item( SI_XNAP_DT_CHO_Candidate_PSCells_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CNsubgroupID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CompleteCandidateConfig_Indicator( uint8_t * eCompleteCandidateConfig_Indicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Conditional_Reconfig_List( SI_XNAP_DT_Conditional_Reconfig_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Conditional_Reconfig_Item( SI_XNAP_DT_Conditional_Reconfig_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ConfiguredTACIndication( uint8_t * eConfiguredTACIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ConnectivitySupport_eNDC_Support( uint8_t * eConnectivitySupport_eNDC_Support,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Connectivity_Support( SI_XNAP_DT_Connectivity_Support ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ContainerAppLayerMeasConfig( SI_XNAP_DT_ContainerAppLayerMeasConfig ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_COUNTPDCPSN12_pdcp_SN12( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_COUNTPDCPSN12_hfn_PDCP_SN12( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_COUNT_PDCP_SN12( SI_XNAP_DT_COUNT_PDCP_SN12 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_COUNTPDCPSN18_pdcp_SN18( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_COUNTPDCPSN18_hfn_PDCP_SN18( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_COUNT_PDCP_SN18( SI_XNAP_DT_COUNT_PDCP_SN18 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CoverageModificationCause( uint8_t * eCoverageModificationCause,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Coverage_Modification_List( SI_XNAP_DT_Coverage_Modification_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CoverageModificationListItem_cellCoverageState( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GlobalCell_ID( SI_XNAP_DT_GlobalCell_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSB_Coverage_Modification_List( SI_XNAP_DT_SSB_Coverage_Modification_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Coverage_Modification_List_Item( SI_XNAP_DT_Coverage_Modification_List_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPTransportLayerInformation( SI_XNAP_DT_CPTransportLayerInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPACcandidatePSCells_list( SI_XNAP_DT_CPACcandidatePSCells_list ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPACcandidatePSCells_item( SI_XNAP_DT_CPACcandidatePSCells_item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPACcandidatePSCells_wotherInfo_list( SI_XNAP_DT_CPACcandidatePSCells_wotherInfo_list ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPACcandidatePSCells_wotherInfo_item( SI_XNAP_DT_CPACcandidatePSCells_wotherInfo_item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPACCandidateCell_List( SI_XNAP_DT_CPACCandidateCell_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPACConfiguration( SI_XNAP_DT_CPACConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPACExecutionCondition_List( SI_XNAP_DT_CPACExecutionCondition_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPACCandidateCell_Item( SI_XNAP_DT_CPACCandidateCell_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPACExecutionCondition_Item( SI_XNAP_DT_CPACExecutionCondition_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPCindicator( uint8_t * eCPCindicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPAInformationRequest_max_no_of_pscells( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPAInformationRequest( SI_XNAP_DT_CPAInformationRequest ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPAInformationAck( SI_XNAP_DT_CPAInformationAck ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPC_target_SN_required_list( SI_XNAP_DT_CPC_target_SN_required_list ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPCInformationRequired( SI_XNAP_DT_CPCInformationRequired ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPCtargetSNrequiredlistItem_max_no_of_pscells( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPCtargetSNrequiredlistItem_sN_to_MN_Container( SI_XNAP_DT_CPCtargetSNrequiredlistItem_sN_to_MN_Container ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPC_target_SN_required_list_Item( SI_XNAP_DT_CPC_target_SN_required_list_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPC_target_SN_confirm_list( SI_XNAP_DT_CPC_target_SN_confirm_list ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPCInformationConfirm( SI_XNAP_DT_CPCInformationConfirm ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPC_target_SN_confirm_list_Item( SI_XNAP_DT_CPC_target_SN_confirm_list_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPAInformationModReq_max_no_of_pscells( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPAInformationModReq( SI_XNAP_DT_CPAInformationModReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPAInformationModReqAck( SI_XNAP_DT_CPAInformationModReqAck ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPC_DataForwarding_Indicator( uint8_t * eCPC_DataForwarding_Indicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPAC_Preparation_Type( uint8_t * eCPAC_Preparation_Type,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPACInformationModRequired( SI_XNAP_DT_CPACInformationModRequired ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPC_target_SN_mod_list( SI_XNAP_DT_CPC_target_SN_mod_list ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPCInformationUpdate( SI_XNAP_DT_CPCInformationUpdate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPCInformationUpdatePSCells_list( SI_XNAP_DT_CPCInformationUpdatePSCells_list ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPC_target_SN_mod_item( SI_XNAP_DT_CPC_target_SN_mod_item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CPCInformationUpdatePSCells_item( SI_XNAP_DT_CPCInformationUpdatePSCells_item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CriticalityDiagnostics_IE_List( SI_XNAP_DT_CriticalityDiagnostics_IE_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CriticalityDiagnostics( SI_XNAP_DT_CriticalityDiagnostics ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TypeOfError( uint8_t * eTypeOfError,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CriticalityDiagnostics_IE_List_def_2106595569( SI_XNAP_DT_CriticalityDiagnostics_IE_List_def_2106595569 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_C_RNTI( SI_XNAP_DT_C_RNTI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CSIRSMTCConfigurationItem_csi_RS_Index( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CSIRSMTCConfigurationItem_csi_RS_Status( uint8_t * eCSIRSMTCConfigurationItem_csi_RS_Status,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CSI_RS_Neighbour_List( SI_XNAP_DT_CSI_RS_Neighbour_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CSI_RS_MTC_Configuration_Item( SI_XNAP_DT_CSI_RS_MTC_Configuration_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CSI_RS_MTC_Neighbour_List( SI_XNAP_DT_CSI_RS_MTC_Neighbour_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CSI_RS_Neighbour_Item( SI_XNAP_DT_CSI_RS_Neighbour_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CSIRSMTCNeighbourItem_csi_RS_Index( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CSI_RS_MTC_Neighbour_Item( SI_XNAP_DT_CSI_RS_MTC_Neighbour_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CyclicPrefix_E_UTRA_DL( uint8_t * eCyclicPrefix_E_UTRA_DL,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CyclicPrefix_E_UTRA_UL( uint8_t * eCyclicPrefix_E_UTRA_UL,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CSI_RSTransmissionIndication( uint8_t * eCSI_RSTransmissionIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CAGListforMDT( SI_XNAP_DT_CAGListforMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CAGListforMDTItem( SI_XNAP_DT_CAGListforMDTItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_XnUAddressInfoperPDUSession_List( SI_XNAP_DT_XnUAddressInfoperPDUSession_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSession_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceBearerSetupCompleteInfoSNterminated_dRBsToBeSetupList( SI_XNAP_DT_PDUSessionResourceBearerSetupCompleteInfoSNterminated_dRBsToBeSetupList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceBearerSetupCompleteInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceBearerSetupCompleteInfo_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_XnUAddressInfoperPDUSession_Item( SI_XNAP_DT_XnUAddressInfoperPDUSession_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DataForwardingInfoFromTargetE_UTRANnode_List( SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DataForwardingInfoFromTargetE_UTRANnode( SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsToBeForwarded_List( SI_XNAP_DT_QoSFlowsToBeForwarded_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DataForwardingInfoFromTargetE_UTRANnode_Item( SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsToBeForwarded_Item( SI_XNAP_DT_QoSFlowsToBeForwarded_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFLowsAcceptedToBeForwarded_Item( SI_XNAP_DT_QoSFLowsAcceptedToBeForwarded_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFLowsToBeForwarded_List( SI_XNAP_DT_QoSFLowsToBeForwarded_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBToQoSFlowMapping_List( SI_XNAP_DT_DRBToQoSFlowMapping_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DataforwardingandOffloadingInfofromSource( SI_XNAP_DT_DataforwardingandOffloadingInfofromSource ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DLForwarding( uint8_t * eDLForwarding,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ULForwarding( uint8_t * eULForwarding,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFLowsToBeForwarded_Item( SI_XNAP_DT_QoSFLowsToBeForwarded_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRB_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DataForwardingResponseDRBItem( SI_XNAP_DT_DataForwardingResponseDRBItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DataTrafficResources( SI_XNAP_DT_DataTrafficResources ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SharedResourceType_UL_OnlySharing( SI_XNAP_DT_SharedResourceType_UL_OnlySharing ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged( SI_XNAP_DT_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SharedResourceType_ULDL_Sharing_UL_Resources( SI_XNAP_DT_SharedResourceType_ULDL_Sharing_UL_Resources ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged( SI_XNAP_DT_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SharedResourceType_ULDL_Sharing_DL_Resources( SI_XNAP_DT_SharedResourceType_ULDL_Sharing_DL_Resources ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SharedResourceType_ULDL_Sharing( SI_XNAP_DT_SharedResourceType_ULDL_Sharing ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SharedResourceType( SI_XNAP_DT_SharedResourceType ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ReservedSubframePattern_subframeType( uint8_t * eReservedSubframePattern_subframeType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ReservedSubframePattern_reservedSubframePattern( SI_XNAP_DT_ReservedSubframePattern_reservedSubframePattern ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBSFNControlRegionLength( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ReservedSubframePattern( SI_XNAP_DT_ReservedSubframePattern ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DataTrafficResourceIndication( SI_XNAP_DT_DataTrafficResourceIndication ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DAPSRequestInfo_dapsIndicator( uint8_t * eDAPSRequestInfo_dapsIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DAPSRequestInfo( SI_XNAP_DT_DAPSRequestInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DAPSResponseInfo_List( SI_XNAP_DT_DAPSResponseInfo_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DAPSResponseInfoItem_dapsResponseIndicator( uint8_t * eDAPSResponseInfoItem_dapsResponseIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DAPSResponseInfo_Item( SI_XNAP_DT_DAPSResponseInfo_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DeliveryStatus( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DesiredActNotificationLevel( uint8_t * eDesiredActNotificationLevel,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DefaultDRB_Allowed( uint8_t * eDefaultDRB_Allowed,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DirectForwardingPathAvailability( uint8_t * eDirectForwardingPathAvailability,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DirectForwardingPathAvailabilityWithSourceMN( uint8_t * eDirectForwardingPathAvailabilityWithSourceMN,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DLCountChoice( SI_XNAP_DT_DLCountChoice ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DL_GBR_PRB_usage_for_MIMO( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DL_non_GBR_PRB_usage_for_MIMO( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DLF1Terminating_BHInfo( SI_XNAP_DT_DLF1Terminating_BHInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DLLBTFailureInformationRequest( uint8_t * eDLLBTFailureInformationRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DLLBTFailureInformationList( SI_XNAP_DT_DLLBTFailureInformationList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DLLBTFailureInformationListItem_numberOfDLLBTFailures( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DLLBTFailureInformationList_Item( SI_XNAP_DT_DLLBTFailureInformationList_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABQoSMappingInformation_dscp( SI_XNAP_DT_IABQoSMappingInformation_dscp ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABQoSMappingInformation_flow_label( SI_XNAP_DT_IABQoSMappingInformation_flow_label ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IAB_QoS_Mapping_Information( SI_XNAP_DT_IAB_QoS_Mapping_Information ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DLNonF1Terminating_BHInfo( SI_XNAP_DT_DLNonF1Terminating_BHInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DL_Total_PRB_usage_for_MIMO( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRB_List( SI_XNAP_DT_DRB_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRB_List_withCause( SI_XNAP_DT_DRB_List_withCause ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RLCMode( uint8_t * eRLCMode,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRB_List_withCause_Item( SI_XNAP_DT_DRB_List_withCause_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRB_Number( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsSubjectToDLDiscarding_List( SI_XNAP_DT_DRBsSubjectToDLDiscarding_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsSubjectToDLDiscarding_Item( SI_XNAP_DT_DRBsSubjectToDLDiscarding_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsSubjectToEarlyStatusTransfer_List( SI_XNAP_DT_DRBsSubjectToEarlyStatusTransfer_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsSubjectToEarlyStatusTransfer_Item( SI_XNAP_DT_DRBsSubjectToEarlyStatusTransfer_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsSubjectToStatusTransfer_List( SI_XNAP_DT_DRBsSubjectToStatusTransfer_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBBStatusTransfer12bitsSN_receiveStatusofPDCPSDU( SI_XNAP_DT_DRBBStatusTransfer12bitsSN_receiveStatusofPDCPSDU ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBBStatusTransfer12bitsSN( SI_XNAP_DT_DRBBStatusTransfer12bitsSN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBBStatusTransfer18bitsSN_receiveStatusofPDCPSDU( SI_XNAP_DT_DRBBStatusTransfer18bitsSN_receiveStatusofPDCPSDU ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBBStatusTransfer18bitsSN( SI_XNAP_DT_DRBBStatusTransfer18bitsSN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBBStatusTransferChoice( SI_XNAP_DT_DRBBStatusTransferChoice ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsSubjectToStatusTransfer_Item( SI_XNAP_DT_DRBsSubjectToStatusTransfer_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlows_List( SI_XNAP_DT_QoSFlows_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBToQoSFlowMapping_Item( SI_XNAP_DT_DRBToQoSFlowMapping_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DUF_Slot_Config_List( SI_XNAP_DT_DUF_Slot_Config_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Permutation( uint8_t * ePermutation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExplicitFormat_noofDownlinkSymbols( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExplicitFormat_noofUplinkSymbols( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExplicitFormat( SI_XNAP_DT_ExplicitFormat ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DUFSlotformatIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ImplicitFormat( SI_XNAP_DT_ImplicitFormat ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DUF_Slot_Config_Item( SI_XNAP_DT_DUF_Slot_Config_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DUFTransmissionPeriodicity( uint8_t * eDUFTransmissionPeriodicity,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DU_RX_MT_RX( uint8_t * eDU_RX_MT_RX,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DU_TX_MT_TX( uint8_t * eDU_TX_MT_TX,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DU_RX_MT_TX( uint8_t * eDU_RX_MT_TX,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DU_TX_MT_RX( uint8_t * eDU_TX_MT_RX,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DuplicationActivation( uint8_t * eDuplicationActivation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Dynamic5QIDescriptor_delayCritical( uint8_t * eDynamic5QIDescriptor_delayCritical,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PriorityLevelQoS( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MaximumDataBurstVolume( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Dynamic5QIDescriptor( SI_XNAP_DT_Dynamic5QIDescriptor ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EarlyMeasurement( uint8_t * eEarlyMeasurement,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ECNMarkingAtRANRequest( uint8_t * eECNMarkingAtRANRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ECNMarkingAtUPFRequest( uint8_t * eECNMarkingAtUPFRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CongestionInformationRequest( uint8_t * eCongestionInformationRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ECNMarkingorCongestionInformationReportingRequest( SI_XNAP_DT_ECNMarkingorCongestionInformationReportingRequest ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EnergyCost( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EquivalentSNPNs( SI_XNAP_DT_EquivalentSNPNs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_E_RAB_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_E_UTRAARFCN( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ERedcap_Bcast_Information( SI_XNAP_DT_ERedcap_Bcast_Information ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_E_UTRAFrequencyBandIndicator( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_E_UTRAMultibandInfoList( SI_XNAP_DT_E_UTRAMultibandInfoList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EUTRAPaging_eDRX_Cycle( uint8_t * eEUTRAPaging_eDRX_Cycle,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EUTRAPaging_Time_Window( uint8_t * eEUTRAPaging_Time_Window,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EUTRAPagingeDRXInformation( SI_XNAP_DT_EUTRAPagingeDRXInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_E_UTRAPCI( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EUTRAPRACHConfiguration_rootSequenceIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EUTRAPRACHConfiguration_zeroCorrelationIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EUTRAPRACHConfiguration_highSpeedFlag( uint8_t * eEUTRAPRACHConfiguration_highSpeedFlag,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EUTRAPRACHConfiguration_prach_FreqOffset( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EUTRAPRACHConfiguration_prach_ConfigIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_E_UTRAPRACHConfiguration( SI_XNAP_DT_E_UTRAPRACHConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_E_UTRATransmissionBandwidth( uint8_t * eE_UTRATransmissionBandwidth,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PortNumber( SI_XNAP_DT_PortNumber ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EndpointIPAddressAndPort( SI_XNAP_DT_EndpointIPAddressAndPort ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EventTypeTrigger_outOfCoverage( uint8_t * eEventTypeTrigger_outOfCoverage,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Threshold_RSRP( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Threshold_RSRQ( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MeasurementThresholdL1LoggedMDT( SI_XNAP_DT_MeasurementThresholdL1LoggedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Hysteresis( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TimeToTrigger( uint8_t * eTimeToTrigger,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EventL1( SI_XNAP_DT_EventL1 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EventTypeTrigger( SI_XNAP_DT_EventTypeTrigger ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LoggedEventTriggeredConfig( SI_XNAP_DT_LoggedEventTriggeredConfig ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EventTriggered( SI_XNAP_DT_EventTriggered ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EventType( uint8_t * eEventType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExcessPacketDelayThresholdConfiguration( SI_XNAP_DT_ExcessPacketDelayThresholdConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExcessPacketDelayThresholdValue( uint8_t * eExcessPacketDelayThresholdValue,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExcessPacketDelayThresholdItem( SI_XNAP_DT_ExcessPacketDelayThresholdItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExpectedActivityPeriod( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExpectedHOInterval( uint8_t * eExpectedHOInterval,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExpectedIdlePeriod( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SourceOfUEActivityBehaviourInformation( uint8_t * eSourceOfUEActivityBehaviourInformation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExpectedUEActivityBehaviour( SI_XNAP_DT_ExpectedUEActivityBehaviour ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExpectedUEMobility( uint8_t * eExpectedUEMobility,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExpectedUEMovingTrajectory( SI_XNAP_DT_ExpectedUEMovingTrajectory ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExpectedUEBehaviour( SI_XNAP_DT_ExpectedUEBehaviour ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExpectedUEMovingTrajectoryItem_timeStayedInCell( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExpectedUEMovingTrajectoryItem( SI_XNAP_DT_ExpectedUEMovingTrajectoryItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExtendedRATRestrictionInformation_primaryRATRestriction( SI_XNAP_DT_ExtendedRATRestrictionInformation_primaryRATRestriction ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExtendedRATRestrictionInformation_secondaryRATRestriction( SI_XNAP_DT_ExtendedRATRestrictionInformation_secondaryRATRestriction ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExtendedRATRestrictionInformation( SI_XNAP_DT_ExtendedRATRestrictionInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExtendedPacketDelayBudget( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExtendedSliceSupportList( SI_XNAP_DT_ExtendedSliceSupportList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExtendedUEIdentityIndexValue( SI_XNAP_DT_ExtendedUEIdentityIndexValue ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExtTLAs( SI_XNAP_DT_ExtTLAs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GTPTLAs( SI_XNAP_DT_GTPTLAs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExtTLA_Item( SI_XNAP_DT_ExtTLA_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GTPTLA_Item( SI_XNAP_DT_GTPTLA_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_F1CTrafficContainer( SI_XNAP_DT_F1CTrafficContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_F1_terminatingIAB_donorIndicator( uint8_t * eF1_terminatingIAB_donorIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_F1TerminatingBHInformation_List( SI_XNAP_DT_F1TerminatingBHInformation_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_F1_TerminatingTopologyBHInformation( SI_XNAP_DT_F1_TerminatingTopologyBHInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABTNLAddress_iPv4Address( SI_XNAP_DT_IABTNLAddress_iPv4Address ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABTNLAddress_iPv6Address( SI_XNAP_DT_IABTNLAddress_iPv6Address ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABTNLAddress_iPv6Prefix( SI_XNAP_DT_IABTNLAddress_iPv6Prefix ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABTNLAddress( SI_XNAP_DT_IABTNLAddress ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ULF1Terminating_BHInfo( SI_XNAP_DT_ULF1Terminating_BHInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_F1TerminatingBHInformation_Item( SI_XNAP_DT_F1TerminatingBHInformation_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FiveGCMobilityRestrictionListContainer( SI_XNAP_DT_FiveGCMobilityRestrictionListContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FiveGProSeDirectDiscovery( uint8_t * eFiveGProSeDirectDiscovery,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FiveGProSeDirectCommunication( uint8_t * eFiveGProSeDirectCommunication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FiveGProSeLayer2UEtoNetworkRelay( uint8_t * eFiveGProSeLayer2UEtoNetworkRelay,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FiveGProSeLayer3UEtoNetworkRelay( uint8_t * eFiveGProSeLayer3UEtoNetworkRelay,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FiveGProSeLayer2RemoteUE( uint8_t * eFiveGProSeLayer2RemoteUE,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FiveGProSeAuthorized( SI_XNAP_DT_FiveGProSeAuthorized ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FiveGProSeLayer2Multipath( uint8_t * eFiveGProSeLayer2Multipath,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FiveGProSeLayer2UEtoUERelay( uint8_t * eFiveGProSeLayer2UEtoUERelay,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FiveGProSeLayer2UEtoUERemote( uint8_t * eFiveGProSeLayer2UEtoUERemote,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FiveGProSePC5QoSFlowList( SI_XNAP_DT_FiveGProSePC5QoSFlowList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FiveGProSePC5QoSParameters( SI_XNAP_DT_FiveGProSePC5QoSParameters ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FiveGProSePC5FlowBitRates( SI_XNAP_DT_FiveGProSePC5FlowBitRates ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FiveGProSePC5QoSFlowItem( SI_XNAP_DT_FiveGProSePC5QoSFlowItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Flows_Mapped_To_DRB_List( SI_XNAP_DT_Flows_Mapped_To_DRB_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NonDynamic5QIDescriptor( SI_XNAP_DT_NonDynamic5QIDescriptor ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSCharacteristics( SI_XNAP_DT_QoSCharacteristics ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GBRQoSFlowInfo_notificationControl( uint8_t * eGBRQoSFlowInfo_notificationControl,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PacketLossRate( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GBRQoSFlowInfo( SI_XNAP_DT_GBRQoSFlowInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ReflectiveQoSAttribute( uint8_t * eReflectiveQoSAttribute,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowLevelQoSParameters_additionalQoSflowInfo( uint8_t * eQoSFlowLevelQoSParameters_additionalQoSflowInfo,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowLevelQoSParameters( SI_XNAP_DT_QoSFlowLevelQoSParameters ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowMappingIndication( uint8_t * eQoSFlowMappingIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Flows_Mapped_To_DRB_Item( SI_XNAP_DT_Flows_Mapped_To_DRB_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FreqDomainHSNAconfiguration_List( SI_XNAP_DT_FreqDomainHSNAconfiguration_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FreqDomainHSNAconfigurationListItem_rBsetIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FreqDomainSlotHSNAconfiguration_List( SI_XNAP_DT_FreqDomainSlotHSNAconfiguration_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FreqDomainHSNAconfiguration_List_Item( SI_XNAP_DT_FreqDomainHSNAconfiguration_List_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FreqDomainSlotHSNAconfigurationListItem_slotIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_HSNADownlink( uint8_t * eHSNADownlink,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_HSNAUplink( uint8_t * eHSNAUplink,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_HSNAFlexible( uint8_t * eHSNAFlexible,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FreqDomainSlotHSNAconfiguration_List_Item( SI_XNAP_DT_FreqDomainSlotHSNAconfiguration_List_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FrequencyShift7p5khz( uint8_t * eFrequencyShift7p5khz,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSB_subcarrierSpacing( uint8_t * eSSB_subcarrierSpacing,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_HSNATransmissionPeriodicity( uint8_t * eHSNATransmissionPeriodicity,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_HSNASlotConfigList( SI_XNAP_DT_HSNASlotConfigList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RBsetConfiguration_rBsetSize( uint8_t * eRBsetConfiguration_rBsetSize,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RBsetConfiguration_numberofRBSets( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RBsetConfiguration( SI_XNAP_DT_RBsetConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NACellResourceConfigurationList( SI_XNAP_DT_NACellResourceConfigurationList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GNB_DU_Cell_Resource_Configuration( SI_XNAP_DT_GNB_DU_Cell_Resource_Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GUAMI_amf_region_id( SI_XNAP_DT_GUAMI_amf_region_id ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GUAMI_amf_set_id( SI_XNAP_DT_GUAMI_amf_set_id ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GUAMI_amf_pointer( SI_XNAP_DT_GUAMI_amf_pointer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GUAMI( SI_XNAP_DT_GUAMI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_HandoverReportType( uint8_t * eHandoverReportType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_HashedUEIdentityIndexValue( SI_XNAP_DT_HashedUEIdentityIndexValue ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_HSNASlotConfigItem( SI_XNAP_DT_HSNASlotConfigItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABCellInformation_cSI_RS_Configuration( SI_XNAP_DT_IABCellInformation_cSI_RS_Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABCellInformation_sR_Configuration( SI_XNAP_DT_IABCellInformation_sR_Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABCellInformation_pDCCH_ConfigSIB1( SI_XNAP_DT_IABCellInformation_pDCCH_ConfigSIB1 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABCellInformation_sCS_Common( SI_XNAP_DT_IABCellInformation_sCS_Common ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRCarrierList( SI_XNAP_DT_NRCarrierList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IAB_DU_Cell_Resource_Configuration_TDD_Info( SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_TDD_Info ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IAB_DU_Cell_Resource_Configuration_FDD_Info( SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_FDD_Info ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IAB_DU_Cell_Resource_Configuration_Mode_Info( SI_XNAP_DT_IAB_DU_Cell_Resource_Configuration_Mode_Info ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IAB_STC_Info_List( SI_XNAP_DT_IAB_STC_Info_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IAB_STC_Info( SI_XNAP_DT_IAB_STC_Info ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RACH_Config_Common( SI_XNAP_DT_RACH_Config_Common ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RACH_Config_Common_IAB( SI_XNAP_DT_RACH_Config_Common_IAB ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IAB_MT_Cell_List( SI_XNAP_DT_IAB_MT_Cell_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MultiplexingInfo( SI_XNAP_DT_MultiplexingInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABCellInformation( SI_XNAP_DT_IABCellInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IAB_MT_Cell_List_Item( SI_XNAP_DT_IAB_MT_Cell_List_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABNodeIndication( uint8_t * eIABNodeIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSB_freqInfo( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSB_transmissionPeriodicity( uint8_t * eSSB_transmissionPeriodicity,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSB_transmissionTimingOffset( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBtransmissionBitmap_shortBitmap( SI_XNAP_DT_SSBtransmissionBitmap_shortBitmap ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBtransmissionBitmap_mediumBitmap( SI_XNAP_DT_SSBtransmissionBitmap_mediumBitmap ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBtransmissionBitmap_longBitmap( SI_XNAP_DT_SSBtransmissionBitmap_longBitmap ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSB_transmissionBitmap( SI_XNAP_DT_SSB_transmissionBitmap ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IAB_STC_Info_Item( SI_XNAP_DT_IAB_STC_Info_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedAllTraffic( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1_C( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedF1_U( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABTNLAddressesRequested_tNLAddressesOrPrefixesRequestedNoNF1( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABTNLAddressesRequested( SI_XNAP_DT_IABTNLAddressesRequested ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABIPv6RequestType( SI_XNAP_DT_IABIPv6RequestType ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABTNLAddressToRemove_List( SI_XNAP_DT_IABTNLAddressToRemove_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IAB_TNL_Address_Request( SI_XNAP_DT_IAB_TNL_Address_Request ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABAllocatedTNLAddress_List( SI_XNAP_DT_IABAllocatedTNLAddress_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IAB_TNL_Address_Response( SI_XNAP_DT_IAB_TNL_Address_Response ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABTNLAddressUsage( uint8_t * eIABTNLAddressUsage,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABAllocatedTNLAddress_Item( SI_XNAP_DT_IABAllocatedTNLAddress_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABTNLAddressToRemove_Item( SI_XNAP_DT_IABTNLAddressToRemove_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABTNLAddressException( SI_XNAP_DT_IABTNLAddressException ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{IABTNLAddress-ItemExtIEs}}<- Got NULL L:7659

int __si_xnap_Decode_IABTNLAddress_Item( SI_XNAP_DT_IABTNLAddress_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MeasurementsToActivate( SI_XNAP_DT_MeasurementsToActivate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_M1ReportingTrigger( uint8_t * eM1ReportingTrigger,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Threshold_SINR( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MeasurementThresholdA2( SI_XNAP_DT_MeasurementThresholdA2 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_M1ThresholdEventA2( SI_XNAP_DT_M1ThresholdEventA2 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ReportIntervalMDT( uint8_t * eReportIntervalMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ReportAmountMDT( uint8_t * eReportAmountMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_M1PeriodicReporting( SI_XNAP_DT_M1PeriodicReporting ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_M1Configuration( SI_XNAP_DT_M1Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_M4period( uint8_t * eM4period,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Links_to_log( uint8_t * eLinks_to_log,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_M4Configuration( SI_XNAP_DT_M4Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_M5period( uint8_t * eM5period,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_M5Configuration( SI_XNAP_DT_M5Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MDT_Location_Info( SI_XNAP_DT_MDT_Location_Info ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_M6report_Interval( uint8_t * eM6report_Interval,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_M6Configuration( SI_XNAP_DT_M6Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_M7period( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_M7Configuration( SI_XNAP_DT_M7Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_WLANMeasConfig( uint8_t * eWLANMeasConfig,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_WLANMeasConfigNameList( SI_XNAP_DT_WLANMeasConfigNameList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_WLANMeasurementConfiguration_wlan_rssi( uint8_t * eWLANMeasurementConfiguration_wlan_rssi,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_WLANMeasurementConfiguration_wlan_rtt( uint8_t * eWLANMeasurementConfiguration_wlan_rtt,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_WLANMeasurementConfiguration( SI_XNAP_DT_WLANMeasurementConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SensorMeasConfig( uint8_t * eSensorMeasConfig,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SensorMeasConfigNameList( SI_XNAP_DT_SensorMeasConfigNameList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SensorMeasurementConfiguration( SI_XNAP_DT_SensorMeasurementConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ImmediateMDT_NR( SI_XNAP_DT_ImmediateMDT_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRPCI( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NG_RAN_CellPCI( SI_XNAP_DT_NG_RAN_CellPCI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MAC_I( SI_XNAP_DT_MAC_I ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RRCReestab_Initiated_Reporting_wo_UERLFReport( SI_XNAP_DT_RRCReestab_Initiated_Reporting_wo_UERLFReport ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UERLFReportContainerNR( SI_XNAP_DT_UERLFReportContainerNR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UERLFReportContainerLTE( SI_XNAP_DT_UERLFReportContainerLTE ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UERLFReportContainer( SI_XNAP_DT_UERLFReportContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RRCReestab_Initiated_Reporting_with_UERLFReport( SI_XNAP_DT_RRCReestab_Initiated_Reporting_with_UERLFReport ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RRCReestab_Initiated_Reporting( SI_XNAP_DT_RRCReestab_Initiated_Reporting ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RRCReestab_initiated( SI_XNAP_DT_RRCReestab_initiated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RRCSetup_Initiated_Reporting_with_UERLFReport( SI_XNAP_DT_RRCSetup_Initiated_Reporting_with_UERLFReport ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RRCSetup_Initiated_Reporting( SI_XNAP_DT_RRCSetup_Initiated_Reporting ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RRCSetup_initiated( SI_XNAP_DT_RRCSetup_initiated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_InitiatingCondition_FailureIndication( SI_XNAP_DT_InitiatingCondition_FailureIndication ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRCyclicPrefix( uint8_t * eNRCyclicPrefix,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRDL_ULTransmissionPeriodicity( uint8_t * eNRDL_ULTransmissionPeriodicity,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SlotConfiguration_List( SI_XNAP_DT_SlotConfiguration_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IntendedTDD_DL_ULConfiguration_NR( SI_XNAP_DT_IntendedTDD_DL_ULConfiguration_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_InterfaceInstanceIndication( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IRNTI_i_RNTI_full( SI_XNAP_DT_IRNTI_i_RNTI_full ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IRNTI_i_RNTI_short( SI_XNAP_DT_IRNTI_i_RNTI_short ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_I_RNTI( SI_XNAP_DT_I_RNTI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABAuthorizationStatus( uint8_t * eIABAuthorizationStatus,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FullIRNTIProfileList_full_I_RNTI_Profile_0( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_0 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FullIRNTIProfileList_full_I_RNTI_Profile_1( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_1 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FullIRNTIProfileList_full_I_RNTI_Profile_2( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_2 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FullIRNTIProfileList_full_I_RNTI_Profile_3( SI_XNAP_DT_FullIRNTIProfileList_full_I_RNTI_Profile_3 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Full_I_RNTI_Profile_List( SI_XNAP_DT_Full_I_RNTI_Profile_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ShortIRNTIProfileList_short_I_RNTI_Profile_0( SI_XNAP_DT_ShortIRNTIProfileList_short_I_RNTI_Profile_0 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ShortIRNTIProfileList_short_I_RNTI_Profile_1( SI_XNAP_DT_ShortIRNTIProfileList_short_I_RNTI_Profile_1 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Short_I_RNTI_Profile_List( SI_XNAP_DT_Short_I_RNTI_Profile_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Local_NG_RAN_Node_Identifier( SI_XNAP_DT_Local_NG_RAN_Node_Identifier ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Full_and_Short_I_RNTI_Profile_List( SI_XNAP_DT_Full_and_Short_I_RNTI_Profile_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LastVisitedNGRANCellInformation( SI_XNAP_DT_LastVisitedNGRANCellInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LastVisitedEUTRANCellInformation( SI_XNAP_DT_LastVisitedEUTRANCellInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LastVisitedUTRANCellInformation( SI_XNAP_DT_LastVisitedUTRANCellInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LastVisitedGERANCellInformation( SI_XNAP_DT_LastVisitedGERANCellInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LastVisitedCell_Item( SI_XNAP_DT_LastVisitedCell_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LastVisitedPSCellInformation( SI_XNAP_DT_LastVisitedPSCellInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LastVisitedPSCellList( SI_XNAP_DT_LastVisitedPSCellList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LastVisitedPSCellList_Item( SI_XNAP_DT_LastVisitedPSCellList_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SCGUEHistoryInformation( SI_XNAP_DT_SCGUEHistoryInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LCID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CellsinAoI_Item( SI_XNAP_DT_CellsinAoI_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_GlobalNG_RANNodesinAoI_Item( SI_XNAP_DT_GlobalNG_RANNodesinAoI_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TAIsinAoI_Item( SI_XNAP_DT_TAIsinAoI_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LocationInformationSNReporting( uint8_t * eLocationInformationSNReporting,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ReportArea( uint8_t * eReportArea,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LocationReportingInformation( SI_XNAP_DT_LocationReportingInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LoggingInterval( uint8_t * eLoggingInterval,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LoggingDuration( uint8_t * eLoggingDuration,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Periodical( SI_XNAP_DT_Periodical ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ReportType( SI_XNAP_DT_ReportType ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LoggedMDT_NR( SI_XNAP_DT_LoggedMDT_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LowerLayerPresenceStatusChange( uint8_t * eLowerLayerPresenceStatusChange,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LTEA2XServicesAuthorized( SI_XNAP_DT_LTEA2XServicesAuthorized ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_VehicleUE( uint8_t * eVehicleUE,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PedestrianUE( uint8_t * ePedestrianUE,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LTEV2XServicesAuthorized( SI_XNAP_DT_LTEV2XServicesAuthorized ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_LTEUESidelinkAggregateMaximumBitRate( SI_XNAP_DT_LTEUESidelinkAggregateMaximumBitRate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBSCommServiceType( uint8_t * eMBSCommServiceType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NG_RANTraceID( SI_XNAP_DT_NG_RANTraceID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_S_BasedMDT( SI_XNAP_DT_S_BasedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MDTAlignmentInfo( SI_XNAP_DT_MDTAlignmentInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MeasCollectionEntityIPAddress( SI_XNAP_DT_MeasCollectionEntityIPAddress ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_M4ReportAmountMDT( uint8_t * eM4ReportAmountMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_M5ReportAmountMDT( uint8_t * eM5ReportAmountMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_M6ReportAmountMDT( uint8_t * eM6ReportAmountMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_M7ReportAmountMDT( uint8_t * eM7ReportAmountMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MaskedIMEISV( SI_XNAP_DT_MaskedIMEISV ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MaxIPrate( uint8_t * eMaxIPrate,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MaximumIPdatarate( SI_XNAP_DT_MaximumIPdatarate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBSFNSubframeAllocationEUTRA_oneframe( SI_XNAP_DT_MBSFNSubframeAllocationEUTRA_oneframe ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBSFNSubframeAllocationEUTRA_fourframes( SI_XNAP_DT_MBSFNSubframeAllocationEUTRA_fourframes ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBSFNSubframeAllocation_E_UTRA( SI_XNAP_DT_MBSFNSubframeAllocation_E_UTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBSFNSubframeInfo_E_UTRA( SI_XNAP_DT_MBSFNSubframeInfo_E_UTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod( uint8_t * eMBSFNSubframeInfoEUTRAItem_radioframeAllocationPeriod,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBSFNSubframeInfoEUTRAItem_radioframeAllocationOffset( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBSFNSubframeInfo_E_UTRA_Item( SI_XNAP_DT_MBSFNSubframeInfo_E_UTRA_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_FrequencySelectionArea_Identity( SI_XNAP_DT_MBS_FrequencySelectionArea_Identity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_Area_Session_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MRB_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_QoSFlow_List( SI_XNAP_DT_MBS_QoSFlow_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MRBProgressInformation_pdcp_SN12( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MRBProgressInformation_pdcp_SN18( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MRB_ProgressInformation( SI_XNAP_DT_MRB_ProgressInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_MappingandDataForwardingRequestInfofromSource_Item( SI_XNAP_DT_MBS_MappingandDataForwardingRequestInfofromSource_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_DataForwarding_Indicator( uint8_t * eMBS_DataForwarding_Indicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_DataForwardingResponseInfofromTarget( SI_XNAP_DT_MBS_DataForwardingResponseInfofromTarget ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_DataForwardingResponseInfofromTarget_Item( SI_XNAP_DT_MBS_DataForwardingResponseInfofromTarget_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_QoSFlowsToAdd_Item( SI_XNAP_DT_MBS_QoSFlowsToAdd_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_ServiceAreaInformation_Item( SI_XNAP_DT_MBS_ServiceAreaInformation_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_ServiceAreaTAI_Item( SI_XNAP_DT_MBS_ServiceAreaTAI_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TMGI( SI_XNAP_DT_TMGI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_Session_ID( SI_XNAP_DT_MBS_Session_ID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_AssistanceInformation( uint8_t * eMBS_AssistanceInformation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_SessionAssociatedInformation( SI_XNAP_DT_MBS_SessionAssociatedInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_SessionAssociatedInformation_Item( SI_XNAP_DT_MBS_SessionAssociatedInformation_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_SessionInformation_List( SI_XNAP_DT_MBS_SessionInformation_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_SessionInformation_Item( SI_XNAP_DT_MBS_SessionInformation_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_SessionInformationResponse_List( SI_XNAP_DT_MBS_SessionInformationResponse_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MBS_SessionInformationResponse_Item( SI_XNAP_DT_MBS_SessionInformationResponse_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MDT_Activation( uint8_t * eMDT_Activation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MDTMode_NR_Extension( SI_XNAP_DT_MDTMode_NR_Extension ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MDTMode_NR( SI_XNAP_DT_MDTMode_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MDTPLMNList( SI_XNAP_DT_MDTPLMNList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MDT_Configuration_NR( SI_XNAP_DT_MDT_Configuration_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MDTMode_EUTRA( SI_XNAP_DT_MDTMode_EUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MDT_Configuration_EUTRA( SI_XNAP_DT_MDT_Configuration_EUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MDT_Configuration( SI_XNAP_DT_MDT_Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MN_only_MDT_collection( uint8_t * eMN_only_MDT_collection,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MDTPLMNModificationList( SI_XNAP_DT_MDTPLMNModificationList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UL_GBR_PRB_usage_for_MIMO( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UL_non_GBR_PRB_usage_for_MIMO( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UL_Total_PRB_usage_for_MIMO( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MIMOPRBusageInformation( SI_XNAP_DT_MIMOPRBusageInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MobileIAB_AuthorizationStatus( uint8_t * eMobileIAB_AuthorizationStatus,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MobileIABCell( uint8_t * eMobileIABCell,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MobilityInformation( SI_XNAP_DT_MobilityInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MobilityParametersModificationRange_handoverTriggerChangeLowerLimit( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MobilityParametersModificationRange_handoverTriggerChangeUpperLimit( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MobilityParametersModificationRange( SI_XNAP_DT_MobilityParametersModificationRange ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MobilityParametersInformation_handoverTriggerChange( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MobilityParametersInformation( SI_XNAP_DT_MobilityParametersInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MobilityRestrictionList_equivalent_PLMNs( SI_XNAP_DT_MobilityRestrictionList_equivalent_PLMNs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RAT_RestrictionsList( SI_XNAP_DT_RAT_RestrictionsList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ForbiddenAreaList( SI_XNAP_DT_ForbiddenAreaList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServiceAreaList( SI_XNAP_DT_ServiceAreaList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MobilityRestrictionList( SI_XNAP_DT_MobilityRestrictionList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CNTypeRestrictionsForEquivalent( SI_XNAP_DT_CNTypeRestrictionsForEquivalent ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CNTypeRestrictionsForEquivalentItem_cn_Type( uint8_t * eCNTypeRestrictionsForEquivalentItem_cn_Type,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CNTypeRestrictionsForEquivalentItem( SI_XNAP_DT_CNTypeRestrictionsForEquivalentItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_CNTypeRestrictionsForServing( uint8_t * eCNTypeRestrictionsForServing,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RAT_RestrictionInformation( SI_XNAP_DT_RAT_RestrictionInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RAT_RestrictionsItem( SI_XNAP_DT_RAT_RestrictionsItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ForbiddenAreaItem_forbidden_TACs( SI_XNAP_DT_ForbiddenAreaItem_forbidden_TACs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ForbiddenAreaItem( SI_XNAP_DT_ForbiddenAreaItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServiceAreaItem_allowed_TACs_ServiceArea( SI_XNAP_DT_ServiceAreaItem_allowed_TACs_ServiceArea ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServiceAreaItem_not_allowed_TACs_ServiceArea( SI_XNAP_DT_ServiceAreaItem_not_allowed_TACs_ServiceArea ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServiceAreaItem( SI_XNAP_DT_ServiceAreaItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EUTRAResourceCoordinationInfo_ul_coordination_info( SI_XNAP_DT_EUTRAResourceCoordinationInfo_ul_coordination_info ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EUTRAResourceCoordinationInfo_dl_coordination_info( SI_XNAP_DT_EUTRAResourceCoordinationInfo_dl_coordination_info ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_E_UTRA_CoordinationAssistanceInfo( uint8_t * eE_UTRA_CoordinationAssistanceInfo,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_E_UTRA_ResourceCoordinationInfo( SI_XNAP_DT_E_UTRA_ResourceCoordinationInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRResourceCoordinationInfo_ul_coordination_info( SI_XNAP_DT_NRResourceCoordinationInfo_ul_coordination_info ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRResourceCoordinationInfo_dl_coordination_info( SI_XNAP_DT_NRResourceCoordinationInfo_dl_coordination_info ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NR_CoordinationAssistanceInfo( uint8_t * eNR_CoordinationAssistanceInfo,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NR_ResourceCoordinationInfo( SI_XNAP_DT_NR_ResourceCoordinationInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NG_RAN_Node_ResourceCoordinationInfo( SI_XNAP_DT_NG_RAN_Node_ResourceCoordinationInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MR_DC_ResourceCoordinationInfo( SI_XNAP_DT_MR_DC_ResourceCoordinationInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MessageOversizeNotification( SI_XNAP_DT_MessageOversizeNotification ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MT_SDT_Indicator( uint8_t * eMT_SDT_Indicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MT_SDT_DataSize( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MT_SDT_Information( SI_XNAP_DT_MT_SDT_Information ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MeasuredUETrajectory( SI_XNAP_DT_MeasuredUETrajectory ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MeasuredTrajectoryNGRANCellInfo_timeUEStaysInCell( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MeasuredTrajectoryNGRANCellInfo( SI_XNAP_DT_MeasuredTrajectoryNGRANCellInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MeasuredTrajectoryCellInfo( SI_XNAP_DT_MeasuredTrajectoryCellInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MeasuredUETrajectory_Item( SI_XNAP_DT_MeasuredUETrajectory_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_N6JitterInformation_n6JitterLowerBound( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_N6JitterInformation_n6JitterUpperBound( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{N6JitterInformationExtIEs}}<- Got NULL L:7659

int __si_xnap_Decode_N6JitterInformation( SI_XNAP_DT_N6JitterInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NACellResourceConfigurationItem_nAdownlink( uint8_t * eNACellResourceConfigurationItem_nAdownlink,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NACellResourceConfigurationItem_nAuplink( uint8_t * eNACellResourceConfigurationItem_nAuplink,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NACellResourceConfigurationItem_nAflexible( uint8_t * eNACellResourceConfigurationItem_nAflexible,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NACellResourceConfiguration_Item( SI_XNAP_DT_NACellResourceConfiguration_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NBIoT_UL_DL_AlignmentOffset( uint8_t * eNBIoT_UL_DL_AlignmentOffset,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NEDCTDMPattern_subframeAssignment( uint8_t * eNEDCTDMPattern_subframeAssignment,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NEDCTDMPattern_harqOffset( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NE_DC_TDM_Pattern( SI_XNAP_DT_NE_DC_TDM_Pattern ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NeighbourInformation_E_UTRA( SI_XNAP_DT_NeighbourInformation_E_UTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NeighbourInformation_E_UTRA_Item( SI_XNAP_DT_NeighbourInformation_E_UTRA_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NeighbourInformation_NR( SI_XNAP_DT_NeighbourInformation_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NeighbourInformationNRItem_measurementTimingConfiguration( SI_XNAP_DT_NeighbourInformationNRItem_measurementTimingConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NeighbourInformation_NR_ModeFDDInfo( SI_XNAP_DT_NeighbourInformation_NR_ModeFDDInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NeighbourInformation_NR_ModeTDDInfo( SI_XNAP_DT_NeighbourInformation_NR_ModeTDDInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NeighbourInformation_NR_ModeInfo( SI_XNAP_DT_NeighbourInformation_NR_ModeInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NeighbourInformation_NR_Item( SI_XNAP_DT_NeighbourInformation_NR_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Neighbour_NG_RAN_Node_List( SI_XNAP_DT_Neighbour_NG_RAN_Node_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Neighbour_NG_RAN_Node_Item( SI_XNAP_DT_Neighbour_NG_RAN_Node_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRCarrierItem_offsetToCarrier( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRCarrierItem_carrierBandwidth( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRCarrierItem( SI_XNAP_DT_NRCarrierItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRCellPRACHConfig( SI_XNAP_DT_NRCellPRACHConfig ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NG_RANnode2SSBOffsetsModificationRange( SI_XNAP_DT_NG_RANnode2SSBOffsetsModificationRange ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NodeAssociatedInfoResult( SI_XNAP_DT_NodeAssociatedInfoResult ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NodeMeasurementInitiationResult_List( SI_XNAP_DT_NodeMeasurementInitiationResult_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NodeMeasurementInitiationResultItem_nodemeasurementFailedReportCharacteristics( SI_XNAP_DT_NodeMeasurementInitiationResultItem_nodemeasurementFailedReportCharacteristics ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NodeMeasurementInitiationResult_Item( SI_XNAP_DT_NodeMeasurementInitiationResult_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DL_scheduling_PDCCH_CCE_usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UL_scheduling_PDCCH_CCE_usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NonF1TerminatingBHInformation_List( SI_XNAP_DT_NonF1TerminatingBHInformation_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Non_F1_TerminatingTopologyBHInformation( SI_XNAP_DT_Non_F1_TerminatingTopologyBHInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ULNonF1Terminating_BHInfo( SI_XNAP_DT_ULNonF1Terminating_BHInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NonF1TerminatingBHInformation_Item( SI_XNAP_DT_NonF1TerminatingBHInformation_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NonUPTrafficType( uint8_t * eNonUPTrafficType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NonUPTraffic( SI_XNAP_DT_NonUPTraffic ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NoPDUSessionIndication( uint8_t * eNoPDUSessionIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPN_Broadcast_Information_SNPN( SI_XNAP_DT_NPN_Broadcast_Information_SNPN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPN_Broadcast_Information_PNI_NPN( SI_XNAP_DT_NPN_Broadcast_Information_PNI_NPN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPN_Broadcast_Information( SI_XNAP_DT_NPN_Broadcast_Information ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPNMobilityInformation_SNPN( SI_XNAP_DT_NPNMobilityInformation_SNPN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPNMobilityInformation_PNI_NPN( SI_XNAP_DT_NPNMobilityInformation_PNI_NPN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPNMobilityInformation( SI_XNAP_DT_NPNMobilityInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPNPagingAssistanceInformation_PNI_NPN( SI_XNAP_DT_NPNPagingAssistanceInformation_PNI_NPN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPNPagingAssistanceInformation( SI_XNAP_DT_NPNPagingAssistanceInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPN_Support_SNPN( SI_XNAP_DT_NPN_Support_SNPN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPN_Support( SI_XNAP_DT_NPN_Support ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPRACH_CP_Length( uint8_t * eNPRACH_CP_Length,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPRACHConfigurationFDD_anchorCarrier_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_NPRACHConfig ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPRACHConfigurationFDD_anchorCarrier_EDT_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_EDT_NPRACHConfig ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPRACHConfigurationFDD_anchorCarrier_Format2_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_Format2_NPRACHConfig ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPRACHConfigurationFDD_anchorCarrier_Format2_EDT_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_anchorCarrier_Format2_EDT_NPRACHConfig ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPRACHConfigurationFDD_non_anchorCarrier_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_non_anchorCarrier_NPRACHConfig ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPRACHConfigurationFDD_non_anchorCarrier_Format2_NPRACHConfig( SI_XNAP_DT_NPRACHConfigurationFDD_non_anchorCarrier_Format2_NPRACHConfig ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPRACHConfiguration_FDD( SI_XNAP_DT_NPRACHConfiguration_FDD ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPRACH_preambleFormat( uint8_t * eNPRACH_preambleFormat,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPRACHConfigurationTDD_anchorCarrier_NPRACHConfigTDD( SI_XNAP_DT_NPRACHConfigurationTDD_anchorCarrier_NPRACHConfigTDD ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Non_AnchorCarrierFrequencylist( SI_XNAP_DT_Non_AnchorCarrierFrequencylist ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPRACHConfigurationTDD_non_anchorCarrier_NPRACHConfigTDD( SI_XNAP_DT_NPRACHConfigurationTDD_non_anchorCarrier_NPRACHConfigTDD ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPRACHConfiguration_TDD( SI_XNAP_DT_NPRACHConfiguration_TDD ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPRACHConfiguration_fdd_or_tdd( SI_XNAP_DT_NPRACHConfiguration_fdd_or_tdd ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NPRACHConfiguration( SI_XNAP_DT_NPRACHConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NonAnchorCarrierFrequencylist_non_anchorCarrierFrquency( SI_XNAP_DT_NonAnchorCarrierFrequencylist_non_anchorCarrierFrquency ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Non_AnchorCarrierFrequencylist_def_213223650( SI_XNAP_DT_Non_AnchorCarrierFrequencylist_def_213223650 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NG_RAN_Cell_Identity_ListinRANPagingArea( SI_XNAP_DT_NG_RAN_Cell_Identity_ListinRANPagingArea ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NR_U_Channel_List( SI_XNAP_DT_NR_U_Channel_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NR_U_ChannelID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ChannelOccupancyTimePercentage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_EnergyDetectionThreshold( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NR_U_Channel_Item( SI_XNAP_DT_NR_U_Channel_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NR_U_ChannelInfo_List( SI_XNAP_DT_NR_U_ChannelInfo_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Bandwidth( uint8_t * eBandwidth,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NR_U_ChannelInfo_Item( SI_XNAP_DT_NR_U_ChannelInfo_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRA2XServicesAuthorized( SI_XNAP_DT_NRA2XServicesAuthorized ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRFrequencyBand( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SupportedSULBandList( SI_XNAP_DT_SupportedSULBandList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRFrequencyBandItem( SI_XNAP_DT_NRFrequencyBandItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRMobilityHistoryReport( SI_XNAP_DT_NRMobilityHistoryReport ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRModeInfoFDD( SI_XNAP_DT_NRModeInfoFDD ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRModeInfoTDD( SI_XNAP_DT_NRModeInfoTDD ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRModeInfo( SI_XNAP_DT_NRModeInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRPaging_eDRX_Cycle( uint8_t * eNRPaging_eDRX_Cycle,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRPaging_Time_Window( uint8_t * eNRPaging_Time_Window,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRPagingeDRXInformation( SI_XNAP_DT_NRPagingeDRXInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRPaging_eDRX_Cycle_Inactive( uint8_t * eNRPaging_eDRX_Cycle_Inactive,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRPagingeDRXInformationforRRCINACTIVE( SI_XNAP_DT_NRPagingeDRXInformationforRRCINACTIVE ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRPaging_long_eDRX_Cycle_Inactive( uint8_t * eNRPaging_long_eDRX_Cycle_Inactive,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRPaging_Time_Window_Inactive( uint8_t * eNRPaging_Time_Window_Inactive,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRPagingLongeDRXInformationforRRCINACTIVE( SI_XNAP_DT_NRPagingLongeDRXInformationforRRCINACTIVE ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRPPaPositioningInformation_nRPPaTransactionID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RoutingID( SI_XNAP_DT_RoutingID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRPPaPositioningInformation( SI_XNAP_DT_NRPPaPositioningInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Transmission_Bandwidth_asymmetric( SI_XNAP_DT_Transmission_Bandwidth_asymmetric ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NumberOfAntennaPorts_E_UTRA( uint8_t * eNumberOfAntennaPorts_E_UTRA,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NonGBRResources_Offered( uint8_t * eNonGBRResources_Offered,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRV2XServicesAuthorized( SI_XNAP_DT_NRV2XServicesAuthorized ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NRUESidelinkAggregateMaximumBitRate( SI_XNAP_DT_NRUESidelinkAggregateMaximumBitRate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_NSAG_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_OffsetOfNbiotChannelNumberToEARFCN( uint8_t * eOffsetOfNbiotChannelNumberToEARFCN,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PositioningInformation_nRPPaTransactionID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RequestedSRSTransmissionCharacteristics( SI_XNAP_DT_RequestedSRSTransmissionCharacteristics ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PositioningInformation( SI_XNAP_DT_PositioningInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PagingCause( uint8_t * ePagingCause,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PEIPSassistanceInformation( SI_XNAP_DT_PEIPSassistanceInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PagingDRX( uint8_t * ePagingDRX,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PagingPriority( uint8_t * ePagingPriority,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PartialListIndicator( uint8_t * ePartialListIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PC5QoSFlowList( SI_XNAP_DT_PC5QoSFlowList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PC5QoSParameters( SI_XNAP_DT_PC5QoSParameters ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PC5FlowBitRates( SI_XNAP_DT_PC5FlowBitRates ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PC5QoSFlowItem( SI_XNAP_DT_PC5QoSFlowItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDCPChangeIndication_from_S_NG_RAN_node( uint8_t * ePDCPChangeIndication_from_S_NG_RAN_node,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDCPChangeIndication_from_M_NG_RAN_node( uint8_t * ePDCPChangeIndication_from_M_NG_RAN_node,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDCPChangeIndication( SI_XNAP_DT_PDCPChangeIndication ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDCPDuplicationConfiguration( uint8_t * ePDCPDuplicationConfiguration,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDCPSNLength_ulPDCPSNLength( uint8_t * ePDCPSNLength_ulPDCPSNLength,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDCPSNLength_dlPDCPSNLength( uint8_t * ePDCPSNLength_dlPDCPSNLength,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDCPSNLength( SI_XNAP_DT_PDCPSNLength ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSetQoSInformation_pduSetIntegratedHandlingInformation( uint8_t * ePDUSetQoSInformation_pduSetIntegratedHandlingInformation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSetQoSInformation( SI_XNAP_DT_PDUSetQoSInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSetQoSParameters( SI_XNAP_DT_PDUSetQoSParameters ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSetbasedHandlingIndicator( uint8_t * ePDUSetbasedHandlingIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionAggregateMaximumBitRate( SI_XNAP_DT_PDUSessionAggregateMaximumBitRate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSession_List( SI_XNAP_DT_PDUSession_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSession_List_withCause( SI_XNAP_DT_PDUSession_List_withCause ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSession_List_withCause_Item( SI_XNAP_DT_PDUSession_List_withCause_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSession_List_withDataForwardingFromTarget( SI_XNAP_DT_PDUSession_List_withDataForwardingFromTarget ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSession_List_withDataForwardingFromTarget_Item( SI_XNAP_DT_PDUSession_List_withDataForwardingFromTarget_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSession_List_withDataForwardingRequest( SI_XNAP_DT_PDUSession_List_withDataForwardingRequest ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSession_List_withDataForwardingRequest_Item( SI_XNAP_DT_PDUSession_List_withDataForwardingRequest_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionsListToBeReleased_UPError( SI_XNAP_DT_PDUSessionsListToBeReleased_UPError ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UserPlaneErrorIndicator( uint8_t * eUserPlaneErrorIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionsListToBeReleased_UPError_Item( SI_XNAP_DT_PDUSessionsListToBeReleased_UPError_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceAdmittedInfo_dL_NG_U_TNL_Information_Unchanged( uint8_t * ePDUSessionResourceAdmittedInfo_dL_NG_U_TNL_Information_Unchanged,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsAdmitted_List( SI_XNAP_DT_QoSFlowsAdmitted_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlows_List_withCause( SI_XNAP_DT_QoSFlows_List_withCause ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceAdmittedInfo( SI_XNAP_DT_PDUSessionResourceAdmittedInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourcesAdmitted_Item( SI_XNAP_DT_PDUSessionResourcesAdmitted_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourcesNotAdmitted_List( SI_XNAP_DT_PDUSessionResourcesNotAdmitted_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourcesNotAdmitted_Item( SI_XNAP_DT_PDUSessionResourcesNotAdmitted_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourcesToBeSetup_List( SI_XNAP_DT_PDUSessionResourcesToBeSetup_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNSSAI_sst( SI_XNAP_DT_SNSSAI_sst ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNSSAI_sd( SI_XNAP_DT_SNSSAI_sd ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_S_NSSAI( SI_XNAP_DT_S_NSSAI ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SecurityIndication_integrityProtectionIndication( uint8_t * eSecurityIndication_integrityProtectionIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SecurityIndication_confidentialityProtectionIndication( uint8_t * eSecurityIndication_confidentialityProtectionIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SecurityIndication( SI_XNAP_DT_SecurityIndication ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionType( uint8_t * ePDUSessionType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionNetworkInstance( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsToBeSetup_List( SI_XNAP_DT_QoSFlowsToBeSetup_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourcesToBeSetup_Item( SI_XNAP_DT_PDUSessionResourcesToBeSetup_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsToBeSetup_List_Setup_SNterminated( SI_XNAP_DT_QoSFlowsToBeSetup_List_Setup_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceSetupInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceSetupInfo_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsToBeSetup_List_Setup_SNterminated_Item( SI_XNAP_DT_QoSFlowsToBeSetup_List_Setup_SNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsToBeSetupList_SetupResponse_SNterminated( SI_XNAP_DT_DRBsToBeSetupList_SetupResponse_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SecurityResult_integrityProtectionResult( uint8_t * eSecurityResult_integrityProtectionResult,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SecurityResult_confidentialityProtectionResult( uint8_t * eSecurityResult_confidentialityProtectionResult,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SecurityResult( SI_XNAP_DT_SecurityResult ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceSetupResponseInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceSetupResponseInfo_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UPTransportParameters( SI_XNAP_DT_UPTransportParameters ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UL_UE_Configuration( uint8_t * eUL_UE_Configuration,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ULConfiguration( SI_XNAP_DT_ULConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsMappedtoDRB_SetupResponse_SNterminated( SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsToBeSetupList_SetupResponse_SNterminated_Item( SI_XNAP_DT_DRBsToBeSetupList_SetupResponse_SNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item( SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsToBeSetupList_Setup_MNterminated( SI_XNAP_DT_DRBsToBeSetupList_Setup_MNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceSetupInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceSetupInfo_MNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsMappedtoDRB_Setup_MNterminated( SI_XNAP_DT_QoSFlowsMappedtoDRB_Setup_MNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsToBeSetupList_Setup_MNterminated_Item( SI_XNAP_DT_DRBsToBeSetupList_Setup_MNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsMappedtoDRB_Setup_MNterminated_Item( SI_XNAP_DT_QoSFlowsMappedtoDRB_Setup_MNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsAdmittedList_SetupResponse_MNterminated( SI_XNAP_DT_DRBsAdmittedList_SetupResponse_MNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceSetupResponseInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceSetupResponseInfo_MNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsAdmittedList_SetupResponse_MNterminated_Item( SI_XNAP_DT_DRBsAdmittedList_SetupResponse_MNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsMappedtoDRB_SetupResponse_MNterminated( SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_MNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item( SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsToBeSetup_List_Modified_SNterminated( SI_XNAP_DT_QoSFlowsToBeSetup_List_Modified_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsToBeModified_List_Modified_SNterminated( SI_XNAP_DT_DRBsToBeModified_List_Modified_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceModificationInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceModificationInfo_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsToBeSetup_List_Modified_SNterminated_Item( SI_XNAP_DT_QoSFlowsToBeSetup_List_Modified_SNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Reestablishment_Indication( uint8_t * eReestablishment_Indication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RLC_Status( SI_XNAP_DT_RLC_Status ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsToBeModified_List_Modified_SNterminated_Item( SI_XNAP_DT_DRBsToBeModified_List_Modified_SNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsToBeModifiedList_ModificationResponse_SNterminated( SI_XNAP_DT_DRBsToBeModifiedList_ModificationResponse_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceModificationResponseInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceModificationResponseInfo_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item( SI_XNAP_DT_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsToBeModifiedList_Modification_MNterminated( SI_XNAP_DT_DRBsToBeModifiedList_Modification_MNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceModificationInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceModificationInfo_MNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsToBeModifiedList_Modification_MNterminated_Item( SI_XNAP_DT_DRBsToBeModifiedList_Modification_MNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsAdmittedList_ModificationResponse_MNterminated( SI_XNAP_DT_DRBsAdmittedList_ModificationResponse_MNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceModificationResponseInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceModificationResponseInfo_MNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsAdmittedList_ModificationResponse_MNterminated_Item( SI_XNAP_DT_DRBsAdmittedList_ModificationResponse_MNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceChangeRequiredInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceChangeRequiredInfo_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceChangeRequiredInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceChangeRequiredInfo_MNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceChangeConfirmInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceChangeConfirmInfo_MNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsToBeSetup_List_ModRqd_SNterminated( SI_XNAP_DT_DRBsToBeSetup_List_ModRqd_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsToBeModified_List_ModRqd_SNterminated( SI_XNAP_DT_DRBsToBeModified_List_ModRqd_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceModRqdInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceModRqdInfo_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated( SI_XNAP_DT_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsToBeSetup_List_ModRqd_SNterminated_Item( SI_XNAP_DT_DRBsToBeSetup_List_ModRqd_SNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item( SI_XNAP_DT_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated( SI_XNAP_DT_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsToBeModified_List_ModRqd_SNterminated_Item( SI_XNAP_DT_DRBsToBeModified_List_ModRqd_SNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item( SI_XNAP_DT_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsAdmittedList_ModConfirm_SNterminated( SI_XNAP_DT_DRBsAdmittedList_ModConfirm_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceModConfirmInfo_SNterminated( SI_XNAP_DT_PDUSessionResourceModConfirmInfo_SNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsAdmittedList_ModConfirm_SNterminated_Item( SI_XNAP_DT_DRBsAdmittedList_ModConfirm_SNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsToBeModified_List_ModRqd_MNterminated( SI_XNAP_DT_DRBsToBeModified_List_ModRqd_MNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceModRqdInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceModRqdInfo_MNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsToBeModified_List_ModRqd_MNterminated_Item( SI_XNAP_DT_DRBsToBeModified_List_ModRqd_MNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceModConfirmInfo_MNterminated( SI_XNAP_DT_PDUSessionResourceModConfirmInfo_MNterminated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item( SI_XNAP_DT_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceSecondaryRATUsageList( SI_XNAP_DT_PDUSessionResourceSecondaryRATUsageList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionUsageReport_rATType( uint8_t * ePDUSessionUsageReport_rATType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_VolumeTimedReportList( SI_XNAP_DT_VolumeTimedReportList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionUsageReport( SI_XNAP_DT_PDUSessionUsageReport ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsUsageReportList( SI_XNAP_DT_QoSFlowsUsageReportList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SecondaryRATUsageInformation( SI_XNAP_DT_SecondaryRATUsageInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourceSecondaryRATUsageItem( SI_XNAP_DT_PDUSessionResourceSecondaryRATUsageItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionCommonNetworkInstance( SI_XNAP_DT_PDUSessionCommonNetworkInstance ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSession_PairID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PosPartialUEContextInfo( SI_XNAP_DT_PosPartialUEContextInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PredictedTrajectoryNGRANCellInfo_predictedTimeUEStaysInCell( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PredictedTrajectoryNGRANCellInfo( SI_XNAP_DT_PredictedTrajectoryNGRANCellInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PredictedTrajectoryCellInfo( SI_XNAP_DT_PredictedTrajectoryCellInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PredictedUETrajectory_Item( SI_XNAP_DT_PredictedUETrajectory_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ProtectedEUTRAResourceIndication_pDCCHRegionLength( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ProtectedE_UTRAResourceList( SI_XNAP_DT_ProtectedE_UTRAResourceList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ProtectedE_UTRAResourceIndication( SI_XNAP_DT_ProtectedE_UTRAResourceIndication ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ProtectedEUTRAResourceItem_resourceType( uint8_t * eProtectedEUTRAResourceItem_resourceType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ProtectedEUTRAResourceItem_intra_PRBProtectedResourceFootprint( SI_XNAP_DT_ProtectedEUTRAResourceItem_intra_PRBProtectedResourceFootprint ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ProtectedEUTRAResourceItem_protectedFootprintFrequencyPattern( SI_XNAP_DT_ProtectedEUTRAResourceItem_protectedFootprintFrequencyPattern ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ProtectedEUTRAFootprintTimePattern_protectedFootprintTimeperiodicity( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ProtectedEUTRAFootprintTimePattern_protectedFootrpintStartTime( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ProtectedE_UTRAFootprintTimePattern( SI_XNAP_DT_ProtectedE_UTRAFootprintTimePattern ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ProtectedE_UTRAResource_Item( SI_XNAP_DT_ProtectedE_UTRAResource_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PrivacyIndicator( uint8_t * ePrivacyIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PSCellChangeHistory( uint8_t * ePSCellChangeHistory,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PSCellHistoryInformationRetrieve( uint8_t * ePSCellHistoryInformationRetrieve,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PSCellListContainer( SI_XNAP_DT_PSCellListContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PNI_NPN_AreaScopeofMDT( SI_XNAP_DT_PNI_NPN_AreaScopeofMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PNI_NPNBasedMDT( SI_XNAP_DT_PNI_NPNBasedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEAppLayerMeasInfoList( SI_XNAP_DT_UEAppLayerMeasInfoList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QMCConfigInfo( SI_XNAP_DT_QMCConfigInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QOEReference( SI_XNAP_DT_QOEReference ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QOEMeasConfAppLayerID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServiceType( uint8_t * eServiceType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QOEMeasStatus( uint8_t * eQOEMeasStatus,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_S_NSSAIListQoE( SI_XNAP_DT_S_NSSAIListQoE ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEAppLayerMeasConfigInfo( SI_XNAP_DT_UEAppLayerMeasConfigInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEAppLayerMeasInfo_Item( SI_XNAP_DT_UEAppLayerMeasInfo_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MN_to_SN_QMCCoordRequestList( SI_XNAP_DT_MN_to_SN_QMCCoordRequestList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SN_to_MN_QMCCoordRequestList( SI_XNAP_DT_SN_to_MN_QMCCoordRequestList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QMCCoordinationRequest( SI_XNAP_DT_QMCCoordinationRequest ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MNtoSNQMCCoordRequestListItem_qoEReportingPathRequest( uint8_t * eMNtoSNQMCCoordRequestListItem_qoEReportingPathRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MNtoSNQMCCoordRequestListItem_rVQoEReportingPathRequest( uint8_t * eMNtoSNQMCCoordRequestListItem_rVQoEReportingPathRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MNtoSNQMCCoordRequestListItem_furtherRVQoEInterestInquiry( uint8_t * eMNtoSNQMCCoordRequestListItem_furtherRVQoEInterestInquiry,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MNtoSNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry( uint8_t * eMNtoSNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MNtoSNQMCCoordRequestListItem_configReleaseIndication( uint8_t * eMNtoSNQMCCoordRequestListItem_configReleaseIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RVQoEReportingPeriodicity( uint8_t * eRVQoEReportingPeriodicity,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RVQoEConfig( SI_XNAP_DT_RVQoEConfig ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MN_to_SN_QMCCoordRequestList_Item( SI_XNAP_DT_MN_to_SN_QMCCoordRequestList_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNtoMNQMCCoordRequestListItem_qoEReportingPathRequest( uint8_t * eSNtoMNQMCCoordRequestListItem_qoEReportingPathRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNtoMNQMCCoordRequestListItem_rVQoEReportingPathRequest( uint8_t * eSNtoMNQMCCoordRequestListItem_rVQoEReportingPathRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNtoMNQMCCoordRequestListItem_furtherRVQoEInterestInquiry( uint8_t * eSNtoMNQMCCoordRequestListItem_furtherRVQoEInterestInquiry,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNtoMNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry( uint8_t * eSNtoMNQMCCoordRequestListItem_furtherRVQoEReportingPathInquiry,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNtoMNQMCCoordRequestListItem_configReleaseIndication( uint8_t * eSNtoMNQMCCoordRequestListItem_configReleaseIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SN_to_MN_QMCCoordRequestList_Item( SI_XNAP_DT_SN_to_MN_QMCCoordRequestList_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MN_to_SN_QMCCoordResponseList( SI_XNAP_DT_MN_to_SN_QMCCoordResponseList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SN_to_MN_QMCCoordResponseList( SI_XNAP_DT_SN_to_MN_QMCCoordResponseList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QMCCoordinationResponse( SI_XNAP_DT_QMCCoordinationResponse ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MNtoSNQMCCoordResponseListItem_qoEConfigSendingPath( uint8_t * eMNtoSNQMCCoordResponseListItem_qoEConfigSendingPath,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MNtoSNQMCCoordResponseListItem_qoEReportingPathResponse( uint8_t * eMNtoSNQMCCoordResponseListItem_qoEReportingPathResponse,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MNtoSNQMCCoordResponseListItem_rVQoEReportingPathResponse( uint8_t * eMNtoSNQMCCoordResponseListItem_rVQoEReportingPathResponse,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MNtoSNQMCCoordResponseListItem_furtherRVQoEInterestResponse( uint8_t * eMNtoSNQMCCoordResponseListItem_furtherRVQoEInterestResponse,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MNtoSNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse( uint8_t * eMNtoSNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_MN_to_SN_QMCCoordResponseList_Item( SI_XNAP_DT_MN_to_SN_QMCCoordResponseList_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNtoMNQMCCoordResponseListItem_qoEReportingPathResponse( uint8_t * eSNtoMNQMCCoordResponseListItem_qoEReportingPathResponse,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNtoMNQMCCoordResponseListItem_rVQoEReportingPathResponse( uint8_t * eSNtoMNQMCCoordResponseListItem_rVQoEReportingPathResponse,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNtoMNQMCCoordResponseListItem_furtherRVQoEInterestResponse( uint8_t * eSNtoMNQMCCoordResponseListItem_furtherRVQoEInterestResponse,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNtoMNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse( uint8_t * eSNtoMNQMCCoordResponseListItem_furtherRVQoEReportingPathResponse,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SN_to_MN_QMCCoordResponseList_Item( SI_XNAP_DT_SN_to_MN_QMCCoordResponseList_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoERVQoEReportingPaths_qoEReportingPath( uint8_t * eQoERVQoEReportingPaths_qoEReportingPath,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoERVQoEReportingPaths_rVQoEReportingPath( uint8_t * eQoERVQoEReportingPaths_rVQoEReportingPath,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoERVQoEReportingPaths( SI_XNAP_DT_QoERVQoEReportingPaths ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowNotificationControlIndicationInfo( SI_XNAP_DT_QoSFlowNotificationControlIndicationInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowNotifyItem_notificationInformation( uint8_t * eQoSFlowNotifyItem_notificationInformation,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowNotify_Item( SI_XNAP_DT_QoSFlowNotify_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlow_Item( SI_XNAP_DT_QoSFlow_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowwithCause_Item( SI_XNAP_DT_QoSFlowwithCause_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSMappingInformation_dscp( SI_XNAP_DT_QoSMappingInformation_dscp ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSMappingInformation_flow_label( SI_XNAP_DT_QoSMappingInformation_flow_label ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoS_Mapping_Information( SI_XNAP_DT_QoS_Mapping_Information ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSParaSetNotifyIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsAdmitted_Item( SI_XNAP_DT_QoSFlowsAdmitted_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsToBeSetup_Item( SI_XNAP_DT_QoSFlowsToBeSetup_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsUsageReportItem_rATType( uint8_t * eQoSFlowsUsageReportItem_rATType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsUsageReport_Item( SI_XNAP_DT_QoSFlowsUsageReport_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QosMonitoringRequest( uint8_t * eQosMonitoringRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSMonitoringDisabled( uint8_t * eQoSMonitoringDisabled,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QosMonitoringReportingFrequency( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RAReport( SI_XNAP_DT_RAReport ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RAReportContainer( SI_XNAP_DT_RAReportContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RAReportList_Item( SI_XNAP_DT_RAReportList_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RANAreaID( SI_XNAP_DT_RANAreaID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RANAreaID_List( SI_XNAP_DT_RANAreaID_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RANPagingAreaChoice( SI_XNAP_DT_RANPagingAreaChoice ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RANPagingArea( SI_XNAP_DT_RANPagingArea ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RANPagingFailure( uint8_t * eRANPagingFailure,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Redcap_Bcast_Information( SI_XNAP_DT_Redcap_Bcast_Information ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RedundantQoSFlowIndicator( uint8_t * eRedundantQoSFlowIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RSN( uint8_t * eRSN,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RedundantPDUSessionInformation( SI_XNAP_DT_RedundantPDUSessionInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ReplacingCells_Item( SI_XNAP_DT_ReplacingCells_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ExtendedReportIntervalMDT( uint8_t * eExtendedReportIntervalMDT,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ReportCharacteristics( SI_XNAP_DT_ReportCharacteristics ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ReportCharacteristicsForDataCollection( SI_XNAP_DT_ReportCharacteristicsForDataCollection ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ReportingPeriodicity( uint8_t * eReportingPeriodicity,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ReportingPeriodicityForDataCollection( uint8_t * eReportingPeriodicityForDataCollection,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RequestedPredictionTime( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RegistrationRequest( uint8_t * eRegistrationRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RegistrationRequestForDataCollection( uint8_t * eRegistrationRequestForDataCollection,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResetRequestTypeInfo_Full( SI_XNAP_DT_ResetRequestTypeInfo_Full ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResetRequestPartialReleaseList( SI_XNAP_DT_ResetRequestPartialReleaseList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResetRequestTypeInfo_Partial( SI_XNAP_DT_ResetRequestTypeInfo_Partial ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResetRequestTypeInfo( SI_XNAP_DT_ResetRequestTypeInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResetRequestPartialReleaseItem( SI_XNAP_DT_ResetRequestPartialReleaseItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResetResponseTypeInfo_Full( SI_XNAP_DT_ResetResponseTypeInfo_Full ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResetResponsePartialReleaseList( SI_XNAP_DT_ResetResponsePartialReleaseList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResetResponseTypeInfo_Partial( SI_XNAP_DT_ResetResponseTypeInfo_Partial ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResetResponseTypeInfo( SI_XNAP_DT_ResetResponseTypeInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResetResponsePartialReleaseItem( SI_XNAP_DT_ResetResponsePartialReleaseItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RLCDuplicationInformation_rLC_PrimaryIndicator( uint8_t * eRLCDuplicationInformation_rLC_PrimaryIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RLCDuplicationStateList( SI_XNAP_DT_RLCDuplicationStateList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{RLCDuplicationInformation-ItemExtIEs}}<- Got NULL L:7659

int __si_xnap_Decode_RLCDuplicationInformation( SI_XNAP_DT_RLCDuplicationInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RLCDuplicationStateItem_duplicationState( uint8_t * eRLCDuplicationStateItem_duplicationState,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ProtocolExtensionContainer{{RLCDuplicationState-ItemExtIEs}}<- Got NULL L:7659

int __si_xnap_Decode_RLCDuplicationState_Item( SI_XNAP_DT_RLCDuplicationState_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RFSP_Index( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RRCConfigIndication( uint8_t * eRRCConfigIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RRCConnReestab_Indicator( uint8_t * eRRCConnReestab_Indicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RRCResumeCause( uint8_t * eRRCResumeCause,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RaReportIndicationList( SI_XNAP_DT_RaReportIndicationList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RaReportIndicationList_Item( SI_XNAP_DT_RaReportIndicationList_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RadioResourceStatusNRU_dL_Total_PRB_usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RadioResourceStatusNRU_uL_Total_PRB_usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RadioResourceStatusNR_U( SI_XNAP_DT_RadioResourceStatusNR_U ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SCGreconfigNotification( uint8_t * eSCGreconfigNotification,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_S_CPAC_Request( uint8_t * eS_CPAC_Request,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_S_CPAC_SecurityConfig_List( SI_XNAP_DT_S_CPAC_SecurityConfig_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_S_CPAC_MultiTargetSN_List( SI_XNAP_DT_S_CPAC_MultiTargetSN_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_S_CPAC_Request_Info( SI_XNAP_DT_S_CPAC_Request_Info ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_S_CPAC_ReferenceConfig_Request( uint8_t * eS_CPAC_ReferenceConfig_Request,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_S_NG_RANnode_SecurityKey( SI_XNAP_DT_S_NG_RANnode_SecurityKey ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SK_COUNTER( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_S_CPAC_SecurityConfig_Item( SI_XNAP_DT_S_CPAC_SecurityConfig_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SCPACMultiTargetSNItem_recommendedCandidatePSCells( SI_XNAP_DT_SCPACMultiTargetSNItem_recommendedCandidatePSCells ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_S_CPAC_MultiTargetSN_Item( SI_XNAP_DT_S_CPAC_MultiTargetSN_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_S_CPAC_InterSN_ExecutionNotify( uint8_t * eS_CPAC_InterSN_ExecutionNotify,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SecondarydataForwardingInfoFromTarget_Item( SI_XNAP_DT_SecondarydataForwardingInfoFromTarget_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SecondarydataForwardingInfoFromTarget_List( SI_XNAP_DT_SecondarydataForwardingInfoFromTarget_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SCGActivationRequest( uint8_t * eSCGActivationRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SCGActivationStatus( uint8_t * eSCGActivationStatus,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SCGConfigurationQuery( uint8_t * eSCGConfigurationQuery,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SCGIndicator( uint8_t * eSCGIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SCGFailureReportContainer( SI_XNAP_DT_SCGFailureReportContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SDTIndicator( uint8_t * eSDTIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SDTAssistantInfo( uint8_t * eSDTAssistantInfo,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SDTSupportRequest( SI_XNAP_DT_SDTSupportRequest ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SDT_Termination_Request( uint8_t * eSDT_Termination_Request,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SDT_DRBsToBeSetupList( SI_XNAP_DT_SDT_DRBsToBeSetupList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SDT_SRBsToBeSetupList( SI_XNAP_DT_SDT_SRBsToBeSetupList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SDTPartialUEContextInfo( SI_XNAP_DT_SDTPartialUEContextInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SDTDRBsToBeSetupListItem_dRB_RLC_Bearer_Configuration( SI_XNAP_DT_SDTDRBsToBeSetupListItem_dRB_RLC_Bearer_Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SDT_DRBsToBeSetupList_Item( SI_XNAP_DT_SDT_DRBsToBeSetupList_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SDTSRBsToBeSetupListItem_sRB_RLC_Bearer_Configuration( SI_XNAP_DT_SDTSRBsToBeSetupListItem_sRB_RLC_Bearer_Configuration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SRB_ID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SDT_SRBsToBeSetupList_Item( SI_XNAP_DT_SDT_SRBsToBeSetupList_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SDTDataForwardingDRBList( SI_XNAP_DT_SDTDataForwardingDRBList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SDTDataForwardingDRBList_Item( SI_XNAP_DT_SDTDataForwardingDRBList_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SensorName_uncompensatedBarometricConfig( uint8_t * eSensorName_uncompensatedBarometricConfig,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SensorName_ueSpeedConfig( uint8_t * eSensorName_ueSpeedConfig,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SensorName_ueOrientationConfig( uint8_t * eSensorName_ueOrientationConfig,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SensorName( SI_XNAP_DT_SensorName ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellInformationEUTRA_broadcastPLMNs( SI_XNAP_DT_ServedCellInformationEUTRA_broadcastPLMNs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellInformationEUTRA_freqBandIndicatorPriority( uint8_t * eServedCellInformationEUTRA_freqBandIndicatorPriority,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellInformationEUTRA_bandwidthReducedSI( uint8_t * eServedCellInformationEUTRA_bandwidthReducedSI,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellInformation_E_UTRA_FDDInfo( SI_XNAP_DT_ServedCellInformation_E_UTRA_FDDInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellInformationEUTRATDDInfo_subframeAssignmnet( uint8_t * eServedCellInformationEUTRATDDInfo_subframeAssignmnet,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SpecialSubframePatterns_E_UTRA( uint8_t * eSpecialSubframePatterns_E_UTRA,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SpecialSubframeInfo_E_UTRA( SI_XNAP_DT_SpecialSubframeInfo_E_UTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellInformation_E_UTRA_TDDInfo( SI_XNAP_DT_ServedCellInformation_E_UTRA_TDDInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellInformation_E_UTRA_ModeInfo( SI_XNAP_DT_ServedCellInformation_E_UTRA_ModeInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellInformation_E_UTRA( SI_XNAP_DT_ServedCellInformation_E_UTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellInformation_E_UTRA_perBPLMN( SI_XNAP_DT_ServedCellInformation_E_UTRA_perBPLMN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCells_E_UTRA( SI_XNAP_DT_ServedCells_E_UTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCells_E_UTRA_Item( SI_XNAP_DT_ServedCells_E_UTRA_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellsToUpdateEUTRA_served_Cells_ToDelete_E_UTRA( SI_XNAP_DT_ServedCellsToUpdateEUTRA_served_Cells_ToDelete_E_UTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCells_ToModify_E_UTRA( SI_XNAP_DT_ServedCells_ToModify_E_UTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellsToUpdate_E_UTRA( SI_XNAP_DT_ServedCellsToUpdate_E_UTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellsToModifyEUTRAItem_deactivation_indication( uint8_t * eServedCellsToModifyEUTRAItem_deactivation_indication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCells_ToModify_E_UTRA_Item( SI_XNAP_DT_ServedCells_ToModify_E_UTRA_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellInformationNR_measurementTimingConfiguration( SI_XNAP_DT_ServedCellInformationNR_measurementTimingConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellInformation_NR( SI_XNAP_DT_ServedCellInformation_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SFNOffset_sFN_Time_Offset( SI_XNAP_DT_SFNOffset_sFN_Time_Offset ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SFN_Offset( SI_XNAP_DT_SFN_Offset ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCells_NR( SI_XNAP_DT_ServedCells_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCells_NR_Item( SI_XNAP_DT_ServedCells_NR_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCells_ToModify_NR( SI_XNAP_DT_ServedCells_ToModify_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellsToModifyNRItem_deactivation_indication( uint8_t * eServedCellsToModifyNRItem_deactivation_indication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCells_ToModify_NR_Item( SI_XNAP_DT_ServedCells_ToModify_NR_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellSpecificInfoReq_NR( SI_XNAP_DT_ServedCellSpecificInfoReq_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellSpecificInfoReqNRItem_additionalMTCListRequestIndicator( uint8_t * eServedCellSpecificInfoReqNRItem_additionalMTCListRequestIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellSpecificInfoReq_NR_Item( SI_XNAP_DT_ServedCellSpecificInfoReq_NR_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellsToUpdateNR_served_Cells_ToDelete_NR( SI_XNAP_DT_ServedCellsToUpdateNR_served_Cells_ToDelete_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellsToUpdate_NR( SI_XNAP_DT_ServedCellsToUpdate_NR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNSSAIAvailableCapacity_List( SI_XNAP_DT_SNSSAIAvailableCapacity_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SliceAvailableCapacity_Item( SI_XNAP_DT_SliceAvailableCapacity_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueDownlink( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNSSAIAvailableCapacityItem_sliceAvailableCapacityValueUplink( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNSSAIAvailableCapacity_Item( SI_XNAP_DT_SNSSAIAvailableCapacity_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SliceRadioResourceStatus_List( SI_XNAP_DT_SliceRadioResourceStatus_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNSSAIRadioResourceStatus_List( SI_XNAP_DT_SNSSAIRadioResourceStatus_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SliceRadioResourceStatus_Item( SI_XNAP_DT_SliceRadioResourceStatus_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SLPositioning_Ranging_Authorized( uint8_t * eSLPositioning_Ranging_Authorized,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RSPPQoSFlowList( SI_XNAP_DT_RSPPQoSFlowList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RSPP_transport_QoS_parameters( SI_XNAP_DT_RSPP_transport_QoS_parameters ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SLPositioning_Ranging_Services_Info( SI_XNAP_DT_SLPositioning_Ranging_Services_Info ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RSPPFlowBitRates( SI_XNAP_DT_RSPPFlowBitRates ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RSPPQoSFlowItem( SI_XNAP_DT_RSPPQoSFlowItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Slice_DL_GBR_PRB_Usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Slice_UL_GBR_PRB_Usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Slice_DL_non_GBR_PRB_Usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Slice_UL_non_GBR_PRB_Usage( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Slice_DL_Total_PRB_Allocation( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Slice_UL_Total_PRB_Allocation( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNSSAIRadioResourceStatus_Item( SI_XNAP_DT_SNSSAIRadioResourceStatus_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNSSAI_list( SI_XNAP_DT_SNSSAI_list ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SliceToReport_List_Item( SI_XNAP_DT_SliceToReport_List_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNSSAI_Item( SI_XNAP_DT_SNSSAI_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SlotConfigurationListItem_slotIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SymbolAllocation_in_Slot_AllDL( SI_XNAP_DT_SymbolAllocation_in_Slot_AllDL ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SymbolAllocation_in_Slot_AllUL( SI_XNAP_DT_SymbolAllocation_in_Slot_AllUL ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SymbolAllocationinSlotBothDLandUL_numberofDLSymbols( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SymbolAllocationinSlotBothDLandUL_numberofULSymbols( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SymbolAllocation_in_Slot_BothDLandUL( SI_XNAP_DT_SymbolAllocation_in_Slot_BothDLandUL ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SymbolAllocation_in_Slot( SI_XNAP_DT_SymbolAllocation_in_Slot ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SlotConfiguration_List_Item( SI_XNAP_DT_SlotConfiguration_List_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_S_NG_RANnode_Addition_Trigger_Ind( uint8_t * eS_NG_RANnode_Addition_Trigger_Ind,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNMobilityInformation( SI_XNAP_DT_SNMobilityInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNPNIdentity( SI_XNAP_DT_SNPNIdentity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNTriggered( uint8_t * eSNTriggered,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SpectrumSharingGroupID( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SplitSessionIndicator( uint8_t * eSplitSessionIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SplitSRBsTypes( uint8_t * eSplitSRBsTypes,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SPRAvailability( uint8_t * eSPRAvailability,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SRSPositioningConfigOrActivationRequest( uint8_t * eSRSPositioningConfigOrActivationRequest,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SRSConfiguration( SI_XNAP_DT_SRSConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBAreaCapacityValueListItem_sSBIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBAreaCapacityValueListItem_ssbAreaCapacityValue( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBAreaCapacityValue_List_Item( SI_XNAP_DT_SSBAreaCapacityValue_List_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBAreaRadioResourceStatusListItem_sSBIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBAreaRadioResourceStatus_List_Item( SI_XNAP_DT_SSBAreaRadioResourceStatus_List_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBCoverageModificationListItem_sSBIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBCoverageModificationListItem_sSBCoverageState( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSB_Coverage_Modification_List_Item( SI_XNAP_DT_SSB_Coverage_Modification_List_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBPositionsInBurst_shortBitmap( SI_XNAP_DT_SSBPositionsInBurst_shortBitmap ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBPositionsInBurst_mediumBitmap( SI_XNAP_DT_SSBPositionsInBurst_mediumBitmap ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBPositionsInBurst_longBitmap( SI_XNAP_DT_SSBPositionsInBurst_longBitmap ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSB_PositionsInBurst( SI_XNAP_DT_SSB_PositionsInBurst ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBOffsets_List( SI_XNAP_DT_SSBOffsets_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBOffsetInformation_sSBIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBOffsetInformation( SI_XNAP_DT_SSBOffsetInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBOffsets_Item( SI_XNAP_DT_SSBOffsets_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBOffsetModificationRange_sSBIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBOffsetModificationRange( SI_XNAP_DT_SSBOffsetModificationRange ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBToReportListItem_sSBIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBToReport_List_Item( SI_XNAP_DT_SSBToReport_List_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SuccessfulHOReportInformation( SI_XNAP_DT_SuccessfulHOReportInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SuccessfulHOReportContainer( SI_XNAP_DT_SuccessfulHOReportContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SuccessfulHOReportList_Item( SI_XNAP_DT_SuccessfulHOReportList_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SuccessfulPSCellChangeReportInformation( SI_XNAP_DT_SuccessfulPSCellChangeReportInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SuccessfulPSCellChangeReportContainer( SI_XNAP_DT_SuccessfulPSCellChangeReportContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SuccessfulPSCellChangeReportList_Item( SI_XNAP_DT_SuccessfulPSCellChangeReportList_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SUL_FrequencyBand( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Supported_MBS_FSA_ID_List( SI_XNAP_DT_Supported_MBS_FSA_ID_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SupportedSULBandItem( SI_XNAP_DT_SupportedSULBandItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SurvivalTime( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNPN_CellIdListforMDT( SI_XNAP_DT_SNPN_CellIdListforMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNPN_CellBasedMDT( SI_XNAP_DT_SNPN_CellBasedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNPN_CellIdforMDT_Item( SI_XNAP_DT_SNPN_CellIdforMDT_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNPN_TAIListforMDT( SI_XNAP_DT_SNPN_TAIListforMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNPN_TAIBasedMDT( SI_XNAP_DT_SNPN_TAIBasedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNPN_TAIforMDT_Item( SI_XNAP_DT_SNPN_TAIforMDT_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNPNListforMDT( SI_XNAP_DT_SNPNListforMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNPN_BasedMDT( SI_XNAP_DT_SNPN_BasedMDT ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SNPNforMDT_Item( SI_XNAP_DT_SNPNforMDT_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TAIforMDT_Item( SI_XNAP_DT_TAIforMDT_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TAINSAGSupportList( SI_XNAP_DT_TAINSAGSupportList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TAINSAGSupportItem( SI_XNAP_DT_TAINSAGSupportItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TAISliceUnavailableCellList( SI_XNAP_DT_TAISliceUnavailableCellList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UnavailableNRCellList( SI_XNAP_DT_UnavailableNRCellList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UnavailableCellList( SI_XNAP_DT_UnavailableCellList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AvailableNRCellList( SI_XNAP_DT_AvailableNRCellList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AvailableCellList( SI_XNAP_DT_AvailableCellList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SliceAvailabilityList( SI_XNAP_DT_SliceAvailabilityList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TAISliceUnavailableCellItem( SI_XNAP_DT_TAISliceUnavailableCellItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TAISupport_List( SI_XNAP_DT_TAISupport_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TAISupportItem_broadcastPLMNs( SI_XNAP_DT_TAISupportItem_broadcastPLMNs ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TAISupport_Item( SI_XNAP_DT_TAISupport_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TAI_Item( SI_XNAP_DT_TAI_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TargetCellinEUTRAN( SI_XNAP_DT_TargetCellinEUTRAN ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TDDULDLConfigurationCommonNR( SI_XNAP_DT_TDDULDLConfigurationCommonNR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TargetCellList( SI_XNAP_DT_TargetCellList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TargetCellList_Item( SI_XNAP_DT_TargetCellList_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TimeSinceFailure( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TimeSynchronizationAssistanceInformation_timeDistributionIndication( uint8_t * eTimeSynchronizationAssistanceInformation_timeDistributionIndication,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TimeSynchronizationAssistanceInformation_uuTimeSynchronizationErrorBudget( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TimeSynchronizationAssistanceInformation( SI_XNAP_DT_TimeSynchronizationAssistanceInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TimeToWait( uint8_t * eTimeToWait,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TNLConfigurationInfo( SI_XNAP_DT_TNLConfigurationInfo ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TNLA_To_Add_List( SI_XNAP_DT_TNLA_To_Add_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TNLAssociationUsage( uint8_t * eTNLAssociationUsage,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TNLA_To_Add_Item( SI_XNAP_DT_TNLA_To_Add_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TNLA_To_Update_List( SI_XNAP_DT_TNLA_To_Update_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TNLA_To_Update_Item( SI_XNAP_DT_TNLA_To_Update_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TNLA_To_Remove_List( SI_XNAP_DT_TNLA_To_Remove_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TNLA_To_Remove_Item( SI_XNAP_DT_TNLA_To_Remove_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TNLA_Setup_List( SI_XNAP_DT_TNLA_Setup_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TNLA_Setup_Item( SI_XNAP_DT_TNLA_Setup_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TNLA_Failed_To_Setup_List( SI_XNAP_DT_TNLA_Failed_To_Setup_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TNLA_Failed_To_Setup_Item( SI_XNAP_DT_TNLA_Failed_To_Setup_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TraceActivation_interfaces_to_trace( SI_XNAP_DT_TraceActivation_interfaces_to_trace ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Trace_Depth( uint8_t * eTrace_Depth,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TraceActivation( SI_XNAP_DT_TraceActivation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficProfile( SI_XNAP_DT_TrafficProfile ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficToBeRelease_List( SI_XNAP_DT_TrafficToBeRelease_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficReleaseType( SI_XNAP_DT_TrafficReleaseType ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficToBeReleaseInformation( SI_XNAP_DT_TrafficToBeReleaseInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficToBeRelease_Item( SI_XNAP_DT_TrafficToBeRelease_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TSCAssistanceInformation_periodicity( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TSCAssistanceInformation_burstArrivalTime( SI_XNAP_DT_TSCAssistanceInformation_burstArrivalTime ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TSCAssistanceInformation( SI_XNAP_DT_TSCAssistanceInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TSCTrafficCharacteristics( SI_XNAP_DT_TSCTrafficCharacteristics ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEAggregateMaximumBitRate( SI_XNAP_DT_UEAggregateMaximumBitRate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEContextKeptIndicator( uint8_t * eUEContextKeptIndicator,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEContextIDforRRCResume( SI_XNAP_DT_UEContextIDforRRCResume ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEContextIDforRRCReestablishment( SI_XNAP_DT_UEContextIDforRRCReestablishment ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEContextID( SI_XNAP_DT_UEContextID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEContextInfoRetrUECtxtResp_rrc_Context( SI_XNAP_DT_UEContextInfoRetrUECtxtResp_rrc_Context ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UESecurityCapabilities_nr_EncyptionAlgorithms( SI_XNAP_DT_UESecurityCapabilities_nr_EncyptionAlgorithms ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UESecurityCapabilities_nr_IntegrityProtectionAlgorithms( SI_XNAP_DT_UESecurityCapabilities_nr_IntegrityProtectionAlgorithms ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UESecurityCapabilities_e_utra_EncyptionAlgorithms( SI_XNAP_DT_UESecurityCapabilities_e_utra_EncyptionAlgorithms ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UESecurityCapabilities_e_utra_IntegrityProtectionAlgorithms( SI_XNAP_DT_UESecurityCapabilities_e_utra_IntegrityProtectionAlgorithms ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UESecurityCapabilities( SI_XNAP_DT_UESecurityCapabilities ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEContextInfoRetrUECtxtResp( SI_XNAP_DT_UEContextInfoRetrUECtxtResp ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEHistoryInformation( SI_XNAP_DT_UEHistoryInformation ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEHistoryInformationFromTheUE( SI_XNAP_DT_UEHistoryInformationFromTheUE ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEIdentityIndexValue_indexLength10( SI_XNAP_DT_UEIdentityIndexValue_indexLength10 ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEIdentityIndexValue( SI_XNAP_DT_UEIdentityIndexValue ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEIdentityIndexList_MBSGroupPaging( SI_XNAP_DT_UEIdentityIndexList_MBSGroupPaging ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEIdentityIndexListMBSGroupPagingValue_uEIdentityIndexValueMBSGroupPaging( SI_XNAP_DT_UEIdentityIndexListMBSGroupPagingValue_uEIdentityIndexValueMBSGroupPaging ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEIdentityIndexList_MBSGroupPagingValue( SI_XNAP_DT_UEIdentityIndexList_MBSGroupPagingValue ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UESpecificDRX( uint8_t * eUESpecificDRX,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEIdentityIndexList_MBSGroupPaging_Item( SI_XNAP_DT_UEIdentityIndexList_MBSGroupPaging_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UERadioCapabilityForPagingOfNR( SI_XNAP_DT_UERadioCapabilityForPagingOfNR ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UERadioCapabilityForPagingOfEUTRA( SI_XNAP_DT_UERadioCapabilityForPagingOfEUTRA ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UERadioCapabilityForPaging( SI_XNAP_DT_UERadioCapabilityForPaging ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UERadioCapabilityID( SI_XNAP_DT_UERadioCapabilityID ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UERANPagingIdentity_i_RNTI_full( SI_XNAP_DT_UERANPagingIdentity_i_RNTI_full ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UERANPagingIdentity( SI_XNAP_DT_UERANPagingIdentity ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UERLFReportContainerLTEExtendBand( SI_XNAP_DT_UERLFReportContainerLTEExtendBand ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UERLFReportContainerLTEExtension( SI_XNAP_DT_UERLFReportContainerLTEExtension ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UESliceMaximumBitRateList( SI_XNAP_DT_UESliceMaximumBitRateList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UESliceMaximumBitRate_Item( SI_XNAP_DT_UESliceMaximumBitRate_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ULForwardingProposal( uint8_t * eULForwardingProposal,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UPTransportParametersItem( SI_XNAP_DT_UPTransportParametersItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UserPlaneTrafficActivityReport( uint8_t * eUserPlaneTrafficActivityReport,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UserPlaneFailureType( uint8_t * eUserPlaneFailureType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UserPlaneFailureIndication( SI_XNAP_DT_UserPlaneFailureIndication ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_URIaddress( SI_XNAP_DT_URIaddress ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEAssociatedInfoResult_List( SI_XNAP_DT_UEAssociatedInfoResult_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEPerformance( SI_XNAP_DT_UEPerformance ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEAssociatedInfoResult_Item( SI_XNAP_DT_UEAssociatedInfoResult_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEPerformanceCollectionConfiguration_collectionTimeDurationForUEPerformance( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEPerformanceCollectionConfiguration( SI_XNAP_DT_UEPerformanceCollectionConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UETrajectoryCollectionConfiguration_collectionTimeDurationForUETrajectory( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UETrajectoryCollectionConfiguration_numberOfVisitedCells( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UETrajectoryCollectionConfiguration( SI_XNAP_DT_UETrajectoryCollectionConfiguration ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_VolumeTimedReportItem_startTimeStamp( SI_XNAP_DT_VolumeTimedReportItem_startTimeStamp ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_VolumeTimedReportItem_endTimeStamp( SI_XNAP_DT_VolumeTimedReportItem_endTimeStamp ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_VolumeTimedReportItem_usageCountUL( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_VolumeTimedReportItem_usageCountDL( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_VolumeTimedReport_Item( SI_XNAP_DT_VolumeTimedReport_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_WLANName( SI_XNAP_DT_WLANName ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_XnBenefitValue( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_XR_Bcast_Information( uint8_t * eXR_Bcast_Information,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FirstDLCount( SI_XNAP_DT_FirstDLCount ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DLDiscarding( SI_XNAP_DT_DLDiscarding ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ProcedureStageChoice( SI_XNAP_DT_ProcedureStageChoice ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RequestedFastMCGRecoveryViaSRB3( uint8_t * eRequestedFastMCGRecoveryViaSRB3,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_AvailableFastMCGRecoveryViaSRB3( uint8_t * eAvailableFastMCGRecoveryViaSRB3,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Configuration_successfully_applied_m_NG_RANNode_to_S_NG_RANNode_Container( SI_XNAP_DT_Configuration_successfully_applied_m_NG_RANNode_to_S_NG_RANNode_Container ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Configuration_successfully_applied( SI_XNAP_DT_Configuration_successfully_applied ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Configuration_rejected_by_M_NG_RANNode_m_NG_RANNode_to_S_NG_RANNode_Container( SI_XNAP_DT_Configuration_rejected_by_M_NG_RANNode_m_NG_RANNode_to_S_NG_RANNode_Container ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Configuration_rejected_by_M_NG_RANNode( SI_XNAP_DT_Configuration_rejected_by_M_NG_RANNode ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResponseType_ReconfComplete( SI_XNAP_DT_ResponseType_ReconfComplete ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RequestedFastMCGRecoveryViaSRB3Release( uint8_t * eRequestedFastMCGRecoveryViaSRB3Release,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_Src_SN_to_Tgt_SNQMCInfoInquiry( uint8_t * eSrc_SN_to_Tgt_SNQMCInfoInquiry,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ReleaseFastMCGRecoveryViaSRB3( uint8_t * eReleaseFastMCGRecoveryViaSRB3,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

//TODO: DataType ->ConfigurationUpdate-gNB<- Got NULL L:7659

//TODO: DataType ->ConfigurationUpdate-ng-eNB<- Got NULL L:7659

int __si_xnap_Decode_ConfigurationUpdateInitiatingNodeChoice( SI_XNAP_DT_ConfigurationUpdateInitiatingNodeChoice ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RespondingNodeTypeConfigUpdateAck_ng_eNB( SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck_ng_eNB ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RespondingNodeTypeConfigUpdateAck_gNB( SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck_gNB ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RespondingNodeTypeConfigUpdateAck( SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResourceCoordRequest_ng_eNB_initiated_listofE_UTRACells( SI_XNAP_DT_ResourceCoordRequest_ng_eNB_initiated_listofE_UTRACells ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResourceCoordRequest_ng_eNB_initiated( SI_XNAP_DT_ResourceCoordRequest_ng_eNB_initiated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResourceCoordRequest_gNB_initiated_listofE_UTRACells( SI_XNAP_DT_ResourceCoordRequest_gNB_initiated_listofE_UTRACells ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResourceCoordRequest_gNB_initiated_listofNRCells( SI_XNAP_DT_ResourceCoordRequest_gNB_initiated_listofNRCells ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResourceCoordRequest_gNB_initiated( SI_XNAP_DT_ResourceCoordRequest_gNB_initiated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_InitiatingNodeType_ResourceCoordRequest( SI_XNAP_DT_InitiatingNodeType_ResourceCoordRequest ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResourceCoordResponse_ng_eNB_initiated_listofE_UTRACells( SI_XNAP_DT_ResourceCoordResponse_ng_eNB_initiated_listofE_UTRACells ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResourceCoordResponse_ng_eNB_initiated( SI_XNAP_DT_ResourceCoordResponse_ng_eNB_initiated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResourceCoordResponse_gNB_initiated_listofNRCells( SI_XNAP_DT_ResourceCoordResponse_gNB_initiated_listofNRCells ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResourceCoordResponse_gNB_initiated( SI_XNAP_DT_ResourceCoordResponse_gNB_initiated ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_RespondingNodeType_ResourceCoordResponse( SI_XNAP_DT_RespondingNodeType_ResourceCoordResponse ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellsToActivate_nr_cells( SI_XNAP_DT_ServedCellsToActivate_nr_cells ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellsToActivate_e_utra_cells( SI_XNAP_DT_ServedCellsToActivate_e_utra_cells ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ServedCellsToActivate( SI_XNAP_DT_ServedCellsToActivate ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ActivatedServedCells_nr_cells( SI_XNAP_DT_ActivatedServedCells_nr_cells ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ActivatedServedCells_e_utra_cells( SI_XNAP_DT_ActivatedServedCells_e_utra_cells ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ActivatedServedCells( SI_XNAP_DT_ActivatedServedCells ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEContextInfoHORequest_rrc_Context( SI_XNAP_DT_UEContextInfoHORequest_rrc_Context ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEContextInfoHORequest( SI_XNAP_DT_UEContextInfoHORequest ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEContextRefAtSN_HORequest( SI_XNAP_DT_UEContextRefAtSN_HORequest ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionToBeAddedAddReq( SI_XNAP_DT_PDUSessionToBeAddedAddReq ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionToBeAddedAddReq_Item( SI_XNAP_DT_PDUSessionToBeAddedAddReq_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionAdmittedAddedAddReqAck( SI_XNAP_DT_PDUSessionAdmittedAddedAddReqAck ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionAdmittedAddedAddReqAck_Item( SI_XNAP_DT_PDUSessionAdmittedAddedAddReqAck_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionNotAdmittedAddReqAck( SI_XNAP_DT_PDUSessionNotAdmittedAddReqAck ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ResponseInfo_ReconfCompl( SI_XNAP_DT_ResponseInfo_ReconfCompl ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionsToBeAdded_SNModRequest_List( SI_XNAP_DT_PDUSessionsToBeAdded_SNModRequest_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionsToBeModified_SNModRequest_List( SI_XNAP_DT_PDUSessionsToBeModified_SNModRequest_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionsToBeReleased_SNModRequest_List( SI_XNAP_DT_PDUSessionsToBeReleased_SNModRequest_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEContextInfo_SNModRequest( SI_XNAP_DT_UEContextInfo_SNModRequest ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionsToBeAdded_SNModRequest_Item( SI_XNAP_DT_PDUSessionsToBeAdded_SNModRequest_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionsToBeModified_SNModRequest_Item( SI_XNAP_DT_PDUSessionsToBeModified_SNModRequest_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionAdmittedToBeAddedSNModResponse( SI_XNAP_DT_PDUSessionAdmittedToBeAddedSNModResponse ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionAdmittedToBeModifiedSNModResponse( SI_XNAP_DT_PDUSessionAdmittedToBeModifiedSNModResponse ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionAdmittedToBeReleasedSNModResponse( SI_XNAP_DT_PDUSessionAdmittedToBeReleasedSNModResponse ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionAdmitted_SNModResponse( SI_XNAP_DT_PDUSessionAdmitted_SNModResponse ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionAdmittedToBeAddedSNModResponse_Item( SI_XNAP_DT_PDUSessionAdmittedToBeAddedSNModResponse_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionAdmittedToBeModifiedSNModResponse_Item( SI_XNAP_DT_PDUSessionAdmittedToBeModifiedSNModResponse_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionNotAdmitted_SNModResponse( SI_XNAP_DT_PDUSessionNotAdmitted_SNModResponse ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionDataForwarding_SNModResponse( SI_XNAP_DT_PDUSessionDataForwarding_SNModResponse ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionToBeModifiedSNModRequired( SI_XNAP_DT_PDUSessionToBeModifiedSNModRequired ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionToBeModifiedSNModRequired_Item( SI_XNAP_DT_PDUSessionToBeModifiedSNModRequired_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionToBeReleasedSNModRequired( SI_XNAP_DT_PDUSessionToBeReleasedSNModRequired ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionAdmittedModSNModConfirm( SI_XNAP_DT_PDUSessionAdmittedModSNModConfirm ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionAdmittedModSNModConfirm_Item( SI_XNAP_DT_PDUSessionAdmittedModSNModConfirm_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionReleasedSNModConfirm( SI_XNAP_DT_PDUSessionReleasedSNModConfirm ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionToBeReleasedList_RelReqAck( SI_XNAP_DT_PDUSessionToBeReleasedList_RelReqAck ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionToBeReleasedList_RelRqd( SI_XNAP_DT_PDUSessionToBeReleasedList_RelRqd ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionReleasedList_RelConf( SI_XNAP_DT_PDUSessionReleasedList_RelConf ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BearersSubjectToCounterCheck_List( SI_XNAP_DT_BearersSubjectToCounterCheck_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BearersSubjectToCounterCheck_Item_ul_count( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BearersSubjectToCounterCheck_Item_dl_count( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BearersSubjectToCounterCheck_Item( SI_XNAP_DT_BearersSubjectToCounterCheck_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSession_SNChangeRequired_List( SI_XNAP_DT_PDUSession_SNChangeRequired_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSession_SNChangeRequired_Item( SI_XNAP_DT_PDUSession_SNChangeRequired_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSession_SNChangeConfirm_List( SI_XNAP_DT_PDUSession_SNChangeConfirm_List ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSession_SNChangeConfirm_Item( SI_XNAP_DT_PDUSession_SNChangeConfirm_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SplitSRB_RRCTransfer_rrcContainer( SI_XNAP_DT_SplitSRB_RRCTransfer_rrcContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SplitSRB_RRCTransfer_srbType( uint8_t * eSplitSRB_RRCTransfer_srbType,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SplitSRB_RRCTransfer( SI_XNAP_DT_SplitSRB_RRCTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEReportRRCTransfer_rrcContainer( SI_XNAP_DT_UEReportRRCTransfer_rrcContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_UEReportRRCTransfer( SI_XNAP_DT_UEReportRRCTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FastMCGRecoveryRRCTransfer_rrcContainer( SI_XNAP_DT_FastMCGRecoveryRRCTransfer_rrcContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_FastMCGRecoveryRRCTransfer( SI_XNAP_DT_FastMCGRecoveryRRCTransfer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SDT_SRB_between_NewNode_OldNode_rrcContainer( SI_XNAP_DT_SDT_SRB_between_NewNode_OldNode_rrcContainer ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SDT_SRB_between_NewNode_OldNode( SI_XNAP_DT_SDT_SRB_between_NewNode_OldNode ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoE_Measurement_Results_qOEReference( SI_XNAP_DT_QoE_Measurement_Results_qOEReference ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoE_Measurement_Results_rrcContainerForRVQoEReport( SI_XNAP_DT_QoE_Measurement_Results_rrcContainerForRVQoEReport ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoE_Measurement_Results_rrcContainerForQoEReport( SI_XNAP_DT_QoE_Measurement_Results_rrcContainerForQoEReport ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoE_Measurement_Results_appLayerSessionStatus( uint8_t * eQoE_Measurement_Results_appLayerSessionStatus,  int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoE_Measurement_Results( SI_XNAP_DT_QoE_Measurement_Results ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourcesNotifyList( SI_XNAP_DT_PDUSessionResourcesNotifyList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourcesNotify_Item( SI_XNAP_DT_PDUSessionResourcesNotify_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourcesActivityNotifyList( SI_XNAP_DT_PDUSessionResourcesActivityNotifyList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsActivityNotifyList( SI_XNAP_DT_QoSFlowsActivityNotifyList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_PDUSessionResourcesActivityNotify_Item( SI_XNAP_DT_PDUSessionResourcesActivityNotify_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_QoSFlowsActivityNotifyItem( SI_XNAP_DT_QoSFlowsActivityNotifyItem ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ToBeActivatedNRCellsAndSSBsList( SI_XNAP_DT_ToBeActivatedNRCellsAndSSBsList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ToBeActivatedNRCellsAndSSBs_Item_sSBstobeActivatedList( SI_XNAP_DT_ToBeActivatedNRCellsAndSSBs_Item_sSBstobeActivatedList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ToBeActivatedNRCellsAndSSBs_Item( SI_XNAP_DT_ToBeActivatedNRCellsAndSSBs_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBsToBeActivated_Item_ssbIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBsToBeActivated_Item( SI_XNAP_DT_SSBsToBeActivated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ActivatedNRCellsAndSSBsList( SI_XNAP_DT_ActivatedNRCellsAndSSBsList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ActivatedNRCellsAndSSBs_Item_sSBsActivatedList( SI_XNAP_DT_ActivatedNRCellsAndSSBs_Item_sSBsActivatedList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ActivatedNRCellsAndSSBs_Item( SI_XNAP_DT_ActivatedNRCellsAndSSBs_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBsActivated_Item_ssbIndex( unsigned long long int * data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_SSBsActivated_Item( SI_XNAP_DT_SSBsActivated_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficToBeAddedList( SI_XNAP_DT_TrafficToBeAddedList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficToBeAdded_Item( SI_XNAP_DT_TrafficToBeAdded_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficToBeModifiedList( SI_XNAP_DT_TrafficToBeModifiedList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficToBeModified_Item( SI_XNAP_DT_TrafficToBeModified_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficAddedList( SI_XNAP_DT_TrafficAddedList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficAdded_Item( SI_XNAP_DT_TrafficAdded_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficModifiedList( SI_XNAP_DT_TrafficModifiedList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficModified_Item( SI_XNAP_DT_TrafficModified_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficNotAddedList( SI_XNAP_DT_TrafficNotAddedList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficNotAdded_Item( SI_XNAP_DT_TrafficNotAdded_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficNotModifiedList( SI_XNAP_DT_TrafficNotModifiedList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficNotModified_Item( SI_XNAP_DT_TrafficNotModified_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficReleasedList( SI_XNAP_DT_TrafficReleasedList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficReleased_Item( SI_XNAP_DT_TrafficReleased_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficRequiredToBeModifiedList( SI_XNAP_DT_TrafficRequiredToBeModifiedList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficRequiredToBeModified_Item( SI_XNAP_DT_TrafficRequiredToBeModified_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABTNLAddressToBeReleasedList( SI_XNAP_DT_IABTNLAddressToBeReleasedList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_IABTNLAddressToBeReleased_Item( SI_XNAP_DT_IABTNLAddressToBeReleased_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficRequiredModifiedList( SI_XNAP_DT_TrafficRequiredModifiedList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_TrafficRequiredModified_Item( SI_XNAP_DT_TrafficRequiredModified_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BoundaryNodeCellsList( SI_XNAP_DT_BoundaryNodeCellsList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_BoundaryNodeCellsList_Item( SI_XNAP_DT_BoundaryNodeCellsList_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ParentNodeCellsList( SI_XNAP_DT_ParentNodeCellsList ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_ParentNodeCellsList_Item( SI_XNAP_DT_ParentNodeCellsList_Item ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

int __si_xnap_Decode_DefaultOctetString( SI_XNAP_DT_DefaultOctetString ** data, int * isSet, int lvl, SI_ASN_CodingContext * codingContext);

// PDU-Message Dependencies List = 705
// dlist -> 1 - A2XPC5QoSParameters-ExtIEs
// dlist -> 2 - A2XPC5QoSFlowItem-ExtIEs
// dlist -> 3 - A2XPC5FlowBitRates-ExtIEs
// dlist -> 4 - AdditionalListofPDUSessionResourceChangeConfirmInfo-SNterminated-Item-ExtIEs
// dlist -> 5 - AveragePacketDelay-ExtIEs
// dlist -> 6 - Additional-PDCP-Duplication-TNL-ExtIEs
// dlist -> 7 - Additional-UL-NG-U-TNLatUPF-Item-ExtIEs
// dlist -> 8 - Additional-Measurement-Timing-Configuration-Item-ExtIEs
// dlist -> 9 - Active-MBS-SessionInformation-ExtIEs
// dlist -> 10 - DataCollectionID-ExtIEs
// dlist -> 11 - AllocationandRetentionPriority-ExtIEs
// dlist -> 12 - AllowedPNI-NPN-ID-Item-ExtIEs
// dlist -> 13 - AlternativeQoSParaSetItem-ExtIEs
// dlist -> 14 - GlobalAMF-Region-Information-ExtIEs
// dlist -> 15 - AreaOfInterest-Item-ExtIEs
// dlist -> 16 - AreaScopeOfMDT-NR-ExtIEs
// dlist -> 17 - AreaScopeOfMDT-EUTRA-ExtIEs
// dlist -> 18 - AreaScopeOfNeighCellsItem-ExtIEs
// dlist -> 19 - AreaScopeOfQMC-ExtIEs
// dlist -> 20 - AS-SecurityInformation-ExtIEs
// dlist -> 21 - AssistanceDataForRANPaging-ExtIEs
// dlist -> 22 - Associated-QoSFlowInfo-Item-ExtIEs
// dlist -> 23 - AvailableRVQoEMetrics-ExtIEs
// dlist -> 24 - BAPRoutingID-ExtIEs
// dlist -> 25 - BeamMeasurementsReportConfiguration-ExtIEs
// dlist -> 26 - BeamMeasurementsReportQuantity-ExtIEs
// dlist -> 27 - BHInfo-Item-ExtIEs
// dlist -> 28 - BAPControlPDURLCCH-Item-ExtIEs
// dlist -> 29 - BluetoothMeasurementConfiguration-ExtIEs
// dlist -> 30 - BPLMN-ID-Info-EUTRA-Item-ExtIEs
// dlist -> 31 - BPLMN-ID-Info-NR-Item-ExtIEs
// dlist -> 32 - BroadcastCAG-Identifier-Item-ExtIEs
// dlist -> 33 - BroadcastNID-Item-ExtIEs
// dlist -> 34 - BroadcastPLMNinTAISupport-Item-ExtIEs
// dlist -> 35 - BroadcastPNI-NPN-ID-Information-Item-ExtIEs
// dlist -> 36 - BroadcastSNPNID-ExtIEs
// dlist -> 37 - CandidateRelayUEInfoItem-ExtIEs
// dlist -> 38 - CapacityValueInfo-ExtIEs
// dlist -> 39 - Cause-ExtIEs
// dlist -> 40 - CellAssistanceInfo-NR-ExtIEs
// dlist -> 41 - CellAndCapacityAssistanceInfo-NR-ExtIEs
// dlist -> 42 - CellAndCapacityAssistanceInfo-EUTRA-ExtIEs
// dlist -> 43 - CellAssistanceInfo-EUTRA-ExtIEs
// dlist -> 44 - CellBasedMDT-NR-ExtIEs
// dlist -> 45 - CellBasedQMC-ExtIEs
// dlist -> 46 - CellBasedMDT-EUTRA-ExtIEs
// dlist -> 47 - CellMeasurementResult-Item-ExtIEs
// dlist -> 48 - CellReplacingInfo-ExtIEs
// dlist -> 49 - CellToReport-Item-ExtIEs
// dlist -> 50 - CellToReportForDataCollection-Item-ExtIEs
// dlist -> 51 - CellMeasurementInitiationResult-Item-ExtIEs
// dlist -> 52 - CellInfoResultForDataCollection-Item-ExtIEs
// dlist -> 53 - Cell-Type-Choice-ExtIEs
// dlist -> 54 - CellMeasurementFailureCause-Item-ExtIEs
// dlist -> 55 - CHOConfiguration-ExtIEs
// dlist -> 56 - CHOCandidateCell-Item-ExtIEs
// dlist -> 57 - CHOExecutionCondition-Item-ExtIEs
// dlist -> 58 - ClockQualityAcceptanceCriteria-ExtIEs
// dlist -> 59 - ClockQualityReportingControlInfo-ExtIEs
// dlist -> 60 - ClockQualityDetailLevel-ExtIEs
// dlist -> 61 - CompositeAvailableCapacityGroup-ExtIEs
// dlist -> 62 - CompositeAvailableCapacity-ExtIEs
// dlist -> 63 - CHOinformation-Req-ExtIEs
// dlist -> 64 - CHOTimeBasedInformation-ExtIEs
// dlist -> 65 - CHOinformation-Ack-ExtIEs
// dlist -> 66 - CHOinformation-AddReq-ExtIEs
// dlist -> 67 - CHOinformation-AddReqAck-ExtIEs
// dlist -> 68 - CHOinformation-ModReq-ExtIEs
// dlist -> 69 - CHO-CPAC-Information-ExtIEs
// dlist -> 70 - CHO-target-SN-node-Item-ExtIEs
// dlist -> 71 - CHO-Candidate-PSCells-Item-ExtIEs
// dlist -> 72 - Conditional-Reconfig-Item-ExtIEs
// dlist -> 73 - Connectivity-Support-ExtIEs
// dlist -> 74 - COUNT-PDCP-SN12-ExtIEs
// dlist -> 75 - COUNT-PDCP-SN18-ExtIEs
// dlist -> 76 - Coverage-Modification-List-Item-ExtIEs
// dlist -> 77 - CPTransportLayerInformation-ExtIEs
// dlist -> 78 - CPACcandidatePSCells-item-ExtIEs
// dlist -> 79 - CPACcandidatePSCells-wotherInfo-item-ExtIEs
// dlist -> 80 - CPACConfiguration-ExtIEs
// dlist -> 81 - CPACCandidateCell-Item-ExtIEs
// dlist -> 82 - CPACExecutionCondition-Item-ExtIEs
// dlist -> 83 - CPAInformationRequest-ExtIEs
// dlist -> 84 - CPAInformationAck-ExtIEs
// dlist -> 85 - CPCInformationRequired-ExtIEs
// dlist -> 86 - CPC-target-SN-required-list-Item-ExtIEs
// dlist -> 87 - CPCInformationConfirm-ExtIEs
// dlist -> 88 - CPC-target-SN-confirm-list-Item-ExtIEs
// dlist -> 89 - CPAInformationModReq-ExtIEs
// dlist -> 90 - CPAInformationModReqAck-ExtIEs
// dlist -> 91 - CPACInformationModRequired-ExtIEs
// dlist -> 92 - CPCInformationUpdate-ExtIEs
// dlist -> 93 - CPC-target-SN-mod-item-ExtIEs
// dlist -> 94 - CPCInformationUpdatePSCells-item-ExtIEs
// dlist -> 95 - CriticalityDiagnostics-ExtIEs
// dlist -> 96 - CriticalityDiagnostics-IE-List-ExtIEs
// dlist -> 97 - CSI-RS-MTC-Configuration-Item-ExtIEs
// dlist -> 98 - CSI-RS-Neighbour-Item-ExtIEs
// dlist -> 99 - CSI-RS-MTC-Neighbour-Item-ExtIEs
// dlist -> 100 - CAGListforMDTItem-ExtIEs
// dlist -> 101 - XnUAddressInfoperPDUSession-Item-ExtIEs
// dlist -> 102 - DataForwardingInfoFromTargetE-UTRANnode-ExtIEs
// dlist -> 103 - DataForwardingInfoFromTargetE-UTRANnode-Item-ExtIEs
// dlist -> 104 - QoSFlowsToBeForwarded-Item-ExtIEs
// dlist -> 105 - DataForwardingInfoFromTargetNGRANnode-ExtIEs
// dlist -> 106 - QoSFLowsAcceptedToBeForwarded-Item-ExtIEs
// dlist -> 107 - DataforwardingandOffloadingInfofromSource-ExtIEs
// dlist -> 108 - QoSFLowsToBeForwarded-Item-ExtIEs
// dlist -> 109 - DataForwardingResponseDRBItem-ExtIEs
// dlist -> 110 - DataTrafficResourceIndication-ExtIEs
// dlist -> 111 - DAPSRequestInfo-ExtIEs
// dlist -> 112 - DAPSResponseInfo-Item-ExtIEs
// dlist -> 113 - DLCountChoice-ExtIEs
// dlist -> 114 - DLF1Terminating-BHInfo-ExtIEs
// dlist -> 115 - DLLBTFailureInformationList-Item-ExtIEs
// dlist -> 116 - DLNonF1Terminating-BHInfo-ExtIEs
// dlist -> 117 - DRB-List-withCause-Item-ExtIEs
// dlist -> 118 - DRBsSubjectToDLDiscarding-Item-ExtIEs
// dlist -> 119 - DRBsSubjectToEarlyStatusTransfer-Item-ExtIEs
// dlist -> 120 - DRBsSubjectToStatusTransfer-Item-ExtIEs
// dlist -> 121 - DRBBStatusTransferChoice-ExtIEs
// dlist -> 122 - DRBBStatusTransfer12bitsSN-ExtIEs
// dlist -> 123 - DRBBStatusTransfer18bitsSN-ExtIEs
// dlist -> 124 - DRBToQoSFlowMapping-Item-ExtIEs
// dlist -> 125 - DUF-Slot-Config-Item-ExtIEs
// dlist -> 126 - Dynamic5QIDescriptor-ExtIEs
// dlist -> 127 - ECNMarkingorCongestionInformationReportingRequest-ExtIEs
// dlist -> 128 - E-UTRA-CGI-ExtIEs
// dlist -> 129 - EUTRAPagingeDRXInformation-ExtIEs
// dlist -> 130 - E-UTRAPRACHConfiguration-ExtIEs
// dlist -> 131 - EndpointIPAddressAndPort-ExtIEs
// dlist -> 132 - EventTriggered-ExtIEs
// dlist -> 133 - EventTypeTrigger-ExtIEs
// dlist -> 134 - EventL1-ExtIEs
// dlist -> 135 - MeasurementThresholdL1LoggedMDT-ExtIEs
// dlist -> 136 - ExcessPacketDelayThresholdItem-ExtIEs
// dlist -> 137 - ExpectedUEActivityBehaviour-ExtIEs
// dlist -> 138 - ExpectedUEBehaviour-ExtIEs
// dlist -> 139 - ExpectedUEMovingTrajectoryItem-ExtIEs
// dlist -> 140 - ExplicitFormat-ExtIEs
// dlist -> 141 - ExtendedRATRestrictionInformation-ExtIEs
// dlist -> 142 - ExtTLA-Item-ExtIEs
// dlist -> 143 - GTPTLA-Item-ExtIEs
// dlist -> 144 - F1-TerminatingTopologyBHInformation-ExtIEs
// dlist -> 145 - F1TerminatingBHInformation-Item-ExtIEs
// dlist -> 146 - FiveGProSeAuthorized-ExtIEs
// dlist -> 147 - FiveGProSePC5QoSParameters-ExtIEs
// dlist -> 148 - FiveGProSePC5QoSFlowItem-ExtIEs
// dlist -> 149 - FiveGProSePC5FlowBitRates-ExtIEs
// dlist -> 150 - Flows-Mapped-To-DRB-Item-ExtIEs
// dlist -> 151 - FreqDomainHSNAconfiguration-List-Item-ExtIEs
// dlist -> 152 - FreqDomainSlotHSNAconfiguration-List-Item-ExtIEs
// dlist -> 153 - GBRQoSFlowInfo-ExtIEs
// dlist -> 154 - GlobalgNB-ID-ExtIEs
// dlist -> 155 - GNB-DU-Cell-Resource-Configuration-ExtIEs
// dlist -> 156 - GNB-ID-Choice-ExtIEs
// dlist -> 157 - GNB-RadioResourceStatus-ExtIEs
// dlist -> 158 - GlobalCell-ID-ExtIEs
// dlist -> 159 - GlobaleNB-ID-ExtIEs
// dlist -> 160 - ENB-ID-Choice-ExtIEs
// dlist -> 161 - GlobalNG-RANCell-ID-ExtIEs
// dlist -> 162 - GlobalNG-RANNode-ID-ExtIEs
// dlist -> 163 - GTPtunnelTransportLayerInformation-ExtIEs
// dlist -> 164 - GUAMI-ExtIEs
// dlist -> 165 - HSNASlotConfigItem-ExtIEs
// dlist -> 166 - IABCellInformation-ExtIEs
// dlist -> 167 - IAB-DU-Cell-Resource-Configuration-Mode-Info-ExtIEs
// dlist -> 168 - IAB-DU-Cell-Resource-Configuration-FDD-Info-ExtIEs
// dlist -> 169 - IAB-DU-Cell-Resource-Configuration-TDD-Info-ExtIEs
// dlist -> 170 - IAB-MT-Cell-List-Item-ExtIEs
// dlist -> 171 - IAB-QoS-Mapping-Information-ExtIEs
// dlist -> 172 - IAB-STC-Info-ExtIEs
// dlist -> 173 - IAB-STC-Info-Item-ExtIEs
// dlist -> 174 - IAB-TNL-Address-Request-ExtIEs
// dlist -> 175 - IABIPv6RequestType-ExtIEs
// dlist -> 176 - IAB-TNL-Address-Response-ExtIEs
// dlist -> 177 - IABAllocatedTNLAddress-Item-ExtIEs
// dlist -> 178 - IABTNLAddress-ExtIEs
// dlist -> 179 - IABTNLAddressesRequested-ExtIEs
// dlist -> 180 - IABTNLAddressToRemove-Item-ExtIEs
// dlist -> 181 - IABTNLAddress-ItemExtIEs
// dlist -> 182 - ImmediateMDT-NR-ExtIEs
// dlist -> 183 - ImplicitFormat-ExtIEs
// dlist -> 184 - InitiatingCondition-FailureIndication-ExtIEs
// dlist -> 185 - IntendedTDD-DL-ULConfiguration-NR-ExtIEs
// dlist -> 186 - I-RNTI-ExtIEs
// dlist -> 187 - Local-NG-RAN-Node-Identifier-ExtIEs
// dlist -> 188 - Full-and-Short-I-RNTI-Profile-List-ExtIEs
// dlist -> 189 - Full-I-RNTI-Profile-List-ExtIEs
// dlist -> 190 - Short-I-RNTI-Profile-List-ExtIEs
// dlist -> 191 - LastVisitedCell-Item-ExtIEs
// dlist -> 192 - LastVisitedPSCellList-Item-ExtIEs
// dlist -> 193 - SCGUEHistoryInformation-ExtIEs
// dlist -> 194 - CellsinAoI-Item-ExtIEs
// dlist -> 195 - GlobalNG-RANNodesinAoI-Item-ExtIEs
// dlist -> 196 - TAIsinAoI-Item-ExtIEs
// dlist -> 197 - LocationReportingInformation-ExtIEs
// dlist -> 198 - LoggedEventTriggeredConfig-ExtIEs
// dlist -> 199 - LoggedMDT-NR-ExtIEs
// dlist -> 200 - LTEA2XServicesAuthorized-ExtIEs
// dlist -> 201 - LTEV2XServicesAuthorized-ExtIEs
// dlist -> 202 - LTEUESidelinkAggregateMaximumBitRate-ExtIEs
// dlist -> 203 - MDTAlignmentInfo-ExtIEs
// dlist -> 204 - M1Configuration-ExtIEs
// dlist -> 205 - M1PeriodicReporting-ExtIEs
// dlist -> 206 - M1ThresholdEventA2-ExtIEs
// dlist -> 207 - M4Configuration-ExtIEs
// dlist -> 208 - M5Configuration-ExtIEs
// dlist -> 209 - M6Configuration-ExtIEs
// dlist -> 210 - M7Configuration-ExtIEs
// dlist -> 211 - MaximumIPdatarate-ExtIEs
// dlist -> 212 - MBSFNSubframeAllocation-E-UTRA-ExtIEs
// dlist -> 213 - MBSFNSubframeInfo-E-UTRA-Item-ExtIEs
// dlist -> 214 - MBS-MappingandDataForwardingRequestInfofromSource-Item-ExtIEs
// dlist -> 215 - MBS-DataForwardingResponseInfofromTarget-Item-ExtIEs
// dlist -> 216 - MBS-QoSFlowsToAdd-Item-ExtIEs
// dlist -> 217 - MBS-ServiceArea-ExtIEs
// dlist -> 218 - MBS-ServiceAreaInformation-ExtIEs
// dlist -> 219 - MBS-ServiceAreaInformation-Item-ExtIEs
// dlist -> 220 - MBS-ServiceAreaTAI-Item-ExtIEs
// dlist -> 221 - MBS-Session-ID-ExtIEs
// dlist -> 222 - MBS-SessionAssociatedInformation-Item-ExtIEs
// dlist -> 223 - MBS-SessionInformation-Item-ExtIEs
// dlist -> 224 - MBS-SessionInformationResponse-Item-ExtIEs
// dlist -> 225 - MRB-ProgressInformation-ExtIEs
// dlist -> 226 - MDT-Configuration-ExtIEs
// dlist -> 227 - MDT-Configuration-NR-ExtIEs
// dlist -> 228 - MDT-Configuration-EUTRA-ExtIEs
// dlist -> 229 - MDTMode-NR-ExtensionIE
// dlist -> 230 - MeasurementThresholdA2-ExtIEs
// dlist -> 231 - MIMOPRBusageInformation-ExtIEs
// dlist -> 232 - MobilityRestrictionList-ExtIEs
// dlist -> 233 - CNTypeRestrictionsForEquivalentItem-ExtIEs
// dlist -> 234 - RAT-RestrictionsItem-ExtIEs
// dlist -> 235 - ForbiddenAreaItem-ExtIEs
// dlist -> 236 - ServiceAreaItem-ExtIEs
// dlist -> 237 - MR-DC-ResourceCoordinationInfo-ExtIEs
// dlist -> 238 - E-UTRA-ResourceCoordinationInfo-ExtIEs
// dlist -> 239 - NR-ResourceCoordinationInfo-ExtIEs
// dlist -> 240 - MessageOversizeNotification-ExtIEs
// dlist -> 241 - MT-SDT-Information-ExtIEs
// dlist -> 242 - MultiplexingInfo-ExtIEs
// dlist -> 243 - MeasuredUETrajectory-Item-ExtIEs
// dlist -> 244 - MeasuredTrajectoryCellInfo-ExtIEs
// dlist -> 245 - MeasuredTrajectoryNGRANCellInfo-ExtIEs
// dlist -> 246 - N6JitterInformationExtIEs
// dlist -> 247 - NACellResourceConfiguration-Item-ExtIEs
// dlist -> 248 - NE-DC-TDM-Pattern-ExtIEs
// dlist -> 249 - NeighbourInformation-E-UTRA-Item-ExtIEs
// dlist -> 250 - NeighbourInformation-NR-Item-ExtIEs
// dlist -> 251 - NeighbourInformation-NR-ModeInfo-ExtIEs
// dlist -> 252 - NeighbourInformation-NR-ModeFDDInfo-ExtIEs
// dlist -> 253 - NeighbourInformation-NR-ModeTDDInfo-ExtIEs
// dlist -> 254 - Neighbour-NG-RAN-Node-Item-ExtIEs
// dlist -> 255 - NRCarrierItem-ExtIEs
// dlist -> 256 - NG-RAN-Cell-Identity-ExtIEs
// dlist -> 257 - NG-RAN-CellPCI-ExtIEs
// dlist -> 258 - NodeAssociatedInfoResult-ExtIEs
// dlist -> 259 - NodeMeasurementInitiationResult-Item-ExtIEs
// dlist -> 260 - NonDynamic5QIDescriptor-ExtIEs
// dlist -> 261 - NG-eNB-RadioResourceStatus-ExtIEs
// dlist -> 262 - TNLCapacityIndicator-ExtIEs
// dlist -> 263 - Non-F1-TerminatingTopologyBHInformation-ExtIEs
// dlist -> 264 - NonF1TerminatingBHInformation-Item-ExtIEs
// dlist -> 265 - NonUPTraffic-ExtIEs
// dlist -> 266 - NPN-Broadcast-Information-ExtIEs
// dlist -> 267 - NPN-Broadcast-Information-SNPN-ExtIEs
// dlist -> 268 - NPN-Broadcast-Information-PNI-NPN-ExtIEs
// dlist -> 269 - NPNMobilityInformation-ExtIEs
// dlist -> 270 - NPNMobilityInformation-SNPN-ExtIEs
// dlist -> 271 - NPNMobilityInformation-PNI-NPN-ExtIEs
// dlist -> 272 - NPNPagingAssistanceInformation-ExtIEs
// dlist -> 273 - NPNPagingAssistanceInformation-PNI-NPN-ExtIEs
// dlist -> 274 - NPN-Support-ExtIEs
// dlist -> 275 - NPN-Support-SNPN-ExtIEs
// dlist -> 276 - NPRACHConfiguration-ExtIEs
// dlist -> 277 - FDD-or-TDD-in-NPRACHConfiguration-Choice-ExtIEs
// dlist -> 278 - NPRACHConfiguration-FDD-ExtIEs
// dlist -> 279 - NPRACHConfiguration-TDD-ExtIEs
// dlist -> 280 - Non-AnchorCarrierFrequencylist-ExtIEs
// dlist -> 281 - NR-CGI-ExtIEs
// dlist -> 282 - NR-U-Channel-Item-ExtIEs
// dlist -> 283 - NR-U-ChannelInfo-Item-ExtIEs
// dlist -> 284 - NRA2XServicesAuthorized-ExtIEs
// dlist -> 285 - NRFrequencyBandItem-ExtIEs
// dlist -> 286 - NRFrequencyInfo-ExtIEs
// dlist -> 287 - NRModeInfo-ExtIEs
// dlist -> 288 - NRModeInfoFDD-ExtIEs
// dlist -> 289 - NRModeInfoTDD-ExtIEs
// dlist -> 290 - NRPagingeDRXInformation-ExtIEs
// dlist -> 291 - NRPagingeDRXInformationforRRCINACTIVE-ExtIEs
// dlist -> 292 - NRPagingLongeDRXInformationforRRCINACTIVE-ExtIEs
// dlist -> 293 - NRPPaPositioningInformation-ExtIEs
// dlist -> 294 - NRTransmissionBandwidth-ExtIEs
// dlist -> 295 - Transmission-Bandwidth-asymmetric-ExtIEs
// dlist -> 296 - NRV2XServicesAuthorized-ExtIEs
// dlist -> 297 - NRUESidelinkAggregateMaximumBitRate-ExtIEs
// dlist -> 298 - PositioningInformation-ExtIEs
// dlist -> 299 - PacketErrorRate-ExtIEs
// dlist -> 300 - PEIPSassistanceInformation-ExtIEs
// dlist -> 301 - PC5QoSParameters-ExtIEs
// dlist -> 302 - PC5QoSFlowItem-ExtIEs
// dlist -> 303 - PC5FlowBitRates-ExtIEs
// dlist -> 304 - PDCPChangeIndication-ExtIEs
// dlist -> 305 - PDCPSNLength-ExtIEs
// dlist -> 306 - PDUSetQoSParameters-ExtIEs
// dlist -> 307 - PDUSetQoSInformation-ExtIEs
// dlist -> 308 - PDUSessionAggregateMaximumBitRate-ExtIEs
// dlist -> 309 - PDUSession-List-withCause-Item-ExtIEs
// dlist -> 310 - PDUSession-List-withDataForwardingFromTarget-Item-ExtIEs
// dlist -> 311 - PDUSession-List-withDataForwardingRequest-Item-ExtIEs
// dlist -> 312 - PDUSessionsListToBeReleased-UPError-Item-ExtIEs
// dlist -> 313 - PDUSessionResourcesAdmitted-Item-ExtIEs
// dlist -> 314 - PDUSessionResourceAdmittedInfo-ExtIEs
// dlist -> 315 - PDUSessionResourcesNotAdmitted-Item-Item-ExtIEs
// dlist -> 316 - PDUSessionResourcesToBeSetup-Item-ExtIEs
// dlist -> 317 - PDUSessionResourceSetupInfo-SNterminated-ExtIEs
// dlist -> 318 - QoSFlowsToBeSetup-List-Setup-SNterminated-Item-ExtIEs
// dlist -> 319 - PDUSessionResourceSetupResponseInfo-SNterminated-ExtIEs
// dlist -> 320 - DRBsToBeSetupList-SetupResponse-SNterminated-Item-ExtIEs
// dlist -> 321 - QoSFlowsMappedtoDRB-SetupResponse-SNterminated-Item-ExtIEs
// dlist -> 322 - PDUSessionResourceSetupInfo-MNterminated-ExtIEs
// dlist -> 323 - DRBsToBeSetupList-Setup-MNterminated-Item-ExtIEs
// dlist -> 324 - QoSFlowsMappedtoDRB-Setup-MNterminated-Item-ExtIEs
// dlist -> 325 - PDUSessionResourceSetupResponseInfo-MNterminated-ExtIEs
// dlist -> 326 - DRBsAdmittedList-SetupResponse-MNterminated-Item-ExtIEs
// dlist -> 327 - QoSFlowsMappedtoDRB-SetupResponse-MNterminated-Item-ExtIEs
// dlist -> 328 - PDUSessionResourceModificationInfo-SNterminated-ExtIEs
// dlist -> 329 - QoSFlowsToBeSetup-List-Modified-SNterminated-Item-ExtIEs
// dlist -> 330 - DRBsToBeModified-List-Modified-SNterminated-Item-ExtIEs
// dlist -> 331 - PDUSessionResourceModificationResponseInfo-SNterminated-ExtIEs
// dlist -> 332 - DRBsToBeModifiedList-ModificationResponse-SNterminated-Item-ExtIEs
// dlist -> 333 - PDUSessionResourceModificationInfo-MNterminated-ExtIEs
// dlist -> 334 - DRBsToBeModifiedList-Modification-MNterminated-Item-ExtIEs
// dlist -> 335 - PDUSessionResourceModificationResponseInfo-MNterminated-ExtIEs
// dlist -> 336 - DRBsAdmittedList-ModificationResponse-MNterminated-Item-ExtIEs
// dlist -> 337 - PDUSessionResourceChangeRequiredInfo-SNterminated-ExtIEs
// dlist -> 338 - PDUSessionResourceChangeConfirmInfo-SNterminated-ExtIEs
// dlist -> 339 - PDUSessionResourceChangeRequiredInfo-MNterminated-ExtIEs
// dlist -> 340 - PDUSessionResourceChangeConfirmInfo-MNterminated-ExtIEs
// dlist -> 341 - PDUSessionResourceModRqdInfo-SNterminated-ExtIEs
// dlist -> 342 - DRBsToBeSetup-List-ModRqd-SNterminated-Item-ExtIEs
// dlist -> 343 - QoSFlowsSetupMappedtoDRB-ModRqd-SNterminated-Item-ExtIEs
// dlist -> 344 - DRBsToBeModified-List-ModRqd-SNterminated-Item-ExtIEs
// dlist -> 345 - QoSFlowsModifiedMappedtoDRB-ModRqd-SNterminated-Item-ExtIEs
// dlist -> 346 - PDUSessionResourceModConfirmInfo-SNterminated-ExtIEs
// dlist -> 347 - DRBsAdmittedList-ModConfirm-SNterminated-Item-ExtIEs
// dlist -> 348 - PDUSessionResourceModRqdInfo-MNterminated-ExtIEs
// dlist -> 349 - DRBsToBeModified-List-ModRqd-MNterminated-Item-ExtIEs
// dlist -> 350 - PDUSessionResourceModConfirmInfo-MNterminated-ExtIEs
// dlist -> 351 - PDUSessionResourceBearerSetupCompleteInfo-SNterminated-ExtIEs
// dlist -> 352 - DRBsToBeSetupList-BearerSetupComplete-SNterminated-Item-ExtIEs
// dlist -> 353 - PDUSessionResourceSecondaryRATUsageItem-ExtIEs
// dlist -> 354 - PDUSessionUsageReport-ExtIEs
// dlist -> 355 - Periodical-ExtIEs
// dlist -> 356 - PLMNAreaBasedQMC-ExtIEs
// dlist -> 357 - PosPartialUEContextInfo-ExtIEs
// dlist -> 358 - PredictedUETrajectory-Item-ExtIEs
// dlist -> 359 - PredictedTrajectoryCellInfo-ExtIEs
// dlist -> 360 - PredictedTrajectoryNGRANCellInfo-ExtIEs
// dlist -> 361 - ProtectedE-UTRAResourceIndication-ExtIEs
// dlist -> 362 - ProtectedE-UTRAResource-Item-ExtIEs
// dlist -> 363 - ProtectedE-UTRAFootprintTimePattern-ExtIEs
// dlist -> 364 - PNI-NPN-AreaScopeofMDT-ExtIEs
// dlist -> 365 - PNI-NPNBasedMDT-ExtIEs
// dlist -> 366 - QMCConfigInfo-ExtIEs
// dlist -> 367 - UEAppLayerMeasInfo-Item-ExtIEs
// dlist -> 368 - QMCCoordinationRequest-ExtIEs
// dlist -> 369 - MN-to-SN-QMCCoordRequestList-Item-ExtIEs
// dlist -> 370 - SN-to-MN-QMCCoordRequestList-Item-ExtIEs
// dlist -> 371 - QMCCoordinationResponse-ExtIEs
// dlist -> 372 - MN-to-SN-QMCCoordResponseList-Item-ExtIEs
// dlist -> 373 - SN-to-MN-QMCCoordResponseList-Item-ExtIEs
// dlist -> 374 - QoERVQoEReportingPaths-ExtIEs
// dlist -> 375 - RVQoEConfig-ExtIEs
// dlist -> 376 - QoSCharacteristics-ExtIEs
// dlist -> 377 - QoSFlowLevelQoSParameters-ExtIEs
// dlist -> 378 - QoSFlowNotificationControlIndicationInfo-ExtIEs
// dlist -> 379 - QoSFlow-Item-ExtIEs
// dlist -> 380 - QoSFlowwithCause-Item-ExtIEs
// dlist -> 381 - QoS-Mapping-Information-ExtIEs
// dlist -> 382 - QoSFlowsAdmitted-Item-ExtIEs
// dlist -> 383 - QoSFlowsToBeSetup-Item-ExtIEs
// dlist -> 384 - QoSFlowsUsageReport-Item-ExtIEs
// dlist -> 385 - RAReportList-Item-ExtIEs
// dlist -> 386 - RadioResourceStatus-ExtIEs
// dlist -> 387 - RANAreaID-ExtIEs
// dlist -> 388 - RANPagingArea-ExtIEs
// dlist -> 389 - RANPagingAreaChoice-ExtIEs
// dlist -> 390 - RANPagingAttemptInfo-ExtIEs
// dlist -> 391 - RBsetConfiguration-ExtIEs
// dlist -> 392 - RedundantPDUSessionInformation-ExtIEs
// dlist -> 393 - ReplacingCells-Item-ExtIEs
// dlist -> 394 - ReportType-ExtIEs
// dlist -> 395 - ReservedSubframePattern-ExtIEs
// dlist -> 396 - ResetRequestTypeInfo-ExtIEs
// dlist -> 397 - ResetRequestTypeInfo-Full-ExtIEs
// dlist -> 398 - ResetRequestTypeInfo-Partial-ExtIEs
// dlist -> 399 - ResetRequestPartialReleaseItem-ExtIEs
// dlist -> 400 - ResetResponseTypeInfo-ExtIEs
// dlist -> 401 - ResetResponseTypeInfo-Full-ExtIEs
// dlist -> 402 - ResetResponseTypeInfo-Partial-ExtIEs
// dlist -> 403 - ResetResponsePartialReleaseItem-ExtIEs
// dlist -> 404 - RLC-Status-ExtIEs
// dlist -> 405 - RLCDuplicationInformation-ItemExtIEs
// dlist -> 406 - RLCDuplicationState-ItemExtIEs
// dlist -> 407 - RRCConnections-ExtIEs
// dlist -> 408 - RRCReestab-initiated-ExtIEs
// dlist -> 409 - RRCReestab-Initiated-Reporting-ExtIEs
// dlist -> 410 - RRCReestab-Initiated-Reporting-wo-UERLFReport-ExtIEs
// dlist -> 411 - RRCReestab-Initiated-Reporting-with-UERLFReport-ExtIEs
// dlist -> 412 - RRCSetup-initiated-ExtIEs
// dlist -> 413 - RRCSetup-Initiated-Reporting-ExtIEs
// dlist -> 414 - RRCSetup-Initiated-Reporting-with-UERLFReport-ExtIEs
// dlist -> 415 - RaReportIndicationList-Item-ExtIEs
// dlist -> 416 - RadioResourceStatusNR-U-ExtIEs
// dlist -> 417 - S-BasedMDT-ExtIEs
// dlist -> 418 - S-CPAC-Request-Info-ExtIEs
// dlist -> 419 - S-CPAC-SecurityConfig-Item-ExtIEs
// dlist -> 420 - S-CPAC-MultiTargetSN-Item-ExtIEs
// dlist -> 421 - SecondarydataForwardingInfoFromTarget-Item-ExtIEs
// dlist -> 422 - SDTSupportRequest-ExtIEs
// dlist -> 423 - SDTPartialUEContextInfo-ExtIEs
// dlist -> 424 - SDT-DRBsToBeSetupList-Item-ExtIEs
// dlist -> 425 - SDT-SRBsToBeSetupList-Item-ExtIEs
// dlist -> 426 - SDTDataForwardingDRBList-Item-ExtIEs
// dlist -> 427 - SecondaryRATUsageInformation-ExtIEs
// dlist -> 428 - SecurityIndication-ExtIEs
// dlist -> 429 - SecurityResult-ExtIEs
// dlist -> 430 - SensorMeasurementConfiguration-ExtIEs
// dlist -> 431 - SensorNameConfig-ExtIEs
// dlist -> 432 - ServedCellInformation-E-UTRA-ExtIEs
// dlist -> 433 - ServedCellInformation-E-UTRA-perBPLMN-ExtIEs
// dlist -> 434 - ServedCellInformation-E-UTRA-ModeInfo-ExtIEs
// dlist -> 435 - ServedCellInformation-E-UTRA-FDDInfo-ExtIEs
// dlist -> 436 - ServedCellInformation-E-UTRA-TDDInfo-ExtIEs
// dlist -> 437 - ServedCells-E-UTRA-Item-ExtIEs
// dlist -> 438 - ServedCellsToUpdate-E-UTRA-ExtIEs
// dlist -> 439 - Served-cells-ToModify-E-UTRA-Item-ExtIEs
// dlist -> 440 - ServedCellInformation-NR-ExtIEs
// dlist -> 441 - SFN-Offset-ExtIEs
// dlist -> 442 - ServedCells-NR-Item-ExtIEs
// dlist -> 443 - Served-cells-ToModify-NR-Item-ExtIEs
// dlist -> 444 - ServedCellSpecificInfoReq-NR-Item-ExtIEs
// dlist -> 445 - ServedCellsToUpdate-NR-ExtIEs
// dlist -> 446 - SharedResourceType-ExtIEs
// dlist -> 447 - SharedResourceType-UL-OnlySharing-ExtIEs
// dlist -> 448 - SharedResourceType-ULDL-Sharing-ExtIEs
// dlist -> 449 - SharedResourceType-ULDL-Sharing-UL-Resources-ExtIEs
// dlist -> 450 - SharedResourceType-ULDL-Sharing-UL-ResourcesChanged-ExtIEs
// dlist -> 451 - SharedResourceType-ULDL-Sharing-DL-Resources-ExtIEs
// dlist -> 452 - SharedResourceType-ULDL-Sharing-DL-ResourcesChanged-ExtIEs
// dlist -> 453 - SliceAvailableCapacity-Item-ExtIEs
// dlist -> 454 - SNSSAIAvailableCapacity-Item-ExtIEs
// dlist -> 455 - SliceRadioResourceStatus-Item-ExtIEs
// dlist -> 456 - SLPositioning-Ranging-Services-Info-ExtIEs
// dlist -> 457 - RSPP-transport-QoS-parameters-ExtIEs
// dlist -> 458 - RSPPQoSFlowItem-ExtIEs
// dlist -> 459 - RSPPFlowBitRates-ExtIEs
// dlist -> 460 - SNSSAIRadioResourceStatus-Item-ExtIEs
// dlist -> 461 - SliceToReport-List-Item-ExtIEs
// dlist -> 462 - SNSSAI-Item-ExtIEs
// dlist -> 463 - SlotConfiguration-List-Item-ExtIEs
// dlist -> 464 - S-NSSAI-ExtIEs
// dlist -> 465 - SNPNIdentity-ExtIEs
// dlist -> 466 - SpecialSubframeInfo-E-UTRA-ExtIEs
// dlist -> 467 - SSBAreaCapacityValue-List-Item-ExtIEs
// dlist -> 468 - SSBAreaRadioResourceStatus-List-Item-ExtIEs
// dlist -> 469 - SSB-Coverage-Modification-List-Item-ExtIEs
// dlist -> 470 - SSB-PositionsInBurst-ExtIEs
// dlist -> 471 - SSBOffsets-Item-ExtIEs
// dlist -> 472 - SSBOffsetInformation-ExtIEs
// dlist -> 473 - SSBOffsetModificationRange-ExtIEs
// dlist -> 474 - SSBToReport-List-Item-ExtIEs
// dlist -> 475 - SSB-transmisisonBitmap-ExtIEs
// dlist -> 476 - SuccessfulHOReportList-Item-ExtIEs
// dlist -> 477 - SuccessfulPSCellChangeReportList-Item-ExtIEs
// dlist -> 478 - SUL-Information-ExtIEs
// dlist -> 479 - SupportedSULBandItem-ExtIEs
// dlist -> 480 - SymbolAllocation-in-Slot-ExtIEs
// dlist -> 481 - SymbolAllocation-in-Slot-AllDL-ExtIEs
// dlist -> 482 - SymbolAllocation-in-Slot-AllUL-ExtIEs
// dlist -> 483 - SymbolAllocation-in-Slot-BothDLandUL-ExtIEs
// dlist -> 484 - SNPN-CellBasedMDT-ExtIEs
// dlist -> 485 - SNPN-CellIdforMDT-Item-ExtIEs
// dlist -> 486 - SNPN-TAIBasedMDT-ExtIEs
// dlist -> 487 - SNPN-TAIforMDT-Item-ExtIEs
// dlist -> 488 - SNPN-BasedMDT-ExtIEs
// dlist -> 489 - SNPNforMDT-Item-ExtIEs
// dlist -> 490 - TABasedMDT-ExtIEs
// dlist -> 491 - TAIBasedMDT-ExtIEs
// dlist -> 492 - TAIforMDT-Item-ExtIEs
// dlist -> 493 - TAINSAGSupportItem-ExtIEs
// dlist -> 494 - TAISliceUnavailableCellItem-ExtIEs
// dlist -> 495 - SliceAvailabilityList-ExtIEs
// dlist -> 496 - AvailableCellList-ExtIEs
// dlist -> 497 - UnavailableCellList-ExtIEs
// dlist -> 498 - TAISupport-Item-ExtIEs
// dlist -> 499 - TABasedQMC-ExtIEs
// dlist -> 500 - TAIBasedQMC-ExtIEs
// dlist -> 501 - TAI-Item-ExtIEs
// dlist -> 502 - TargetCGI-ExtIEs
// dlist -> 503 - TargetCellList-Item-ExtIEs
// dlist -> 504 - TimeSynchronizationAssistanceInformation-ExtIEs
// dlist -> 505 - TNLConfigurationInfo-ExtIEs
// dlist -> 506 - TNLA-To-Add-Item-ExtIEs
// dlist -> 507 - TNLA-To-Update-Item-ExtIEs
// dlist -> 508 - TNLA-To-Remove-Item-ExtIEs
// dlist -> 509 - TNLA-Setup-Item-ExtIEs
// dlist -> 510 - TNLA-Failed-To-Setup-Item-ExtIEs
// dlist -> 511 - TraceActivation-ExtIEs
// dlist -> 512 - TrafficProfile-ExtIEs
// dlist -> 513 - TrafficReleaseType-ExtIEs
// dlist -> 514 - TrafficToBeReleaseInformation-ExtIEs
// dlist -> 515 - TrafficToBeRelease-Item-ExtIEs
// dlist -> 516 - TSCTrafficCharacteristics-ExtIEs
// dlist -> 517 - TSCAssistanceInformation-ExtIEs
// dlist -> 518 - UEAggregateMaximumBitRate-ExtIEs
// dlist -> 519 - UEAppLayerMeasConfigInfo-ExtIEs
// dlist -> 520 - UEContextID-ExtIEs
// dlist -> 521 - UEContextIDforRRCResume-ExtIEs
// dlist -> 522 - UEContextIDforRRCReestablishment-ExtIEs
// dlist -> 523 - UEContextInfoRetrUECtxtResp-ExtIEs
// dlist -> 524 - UEHistoryInformationFromTheUE-ExtIEs
// dlist -> 525 - UEIdentityIndexValue-ExtIEs
// dlist -> 526 - UEIdentityIndexList-MBSGroupPaging-Item-ExtIEs
// dlist -> 527 - UEIdentityIndexValueMBSGroupPaging-ExtIEs
// dlist -> 528 - UERadioCapabilityForPaging-ExtIEs
// dlist -> 529 - UERANPagingIdentity-ExtIEs
// dlist -> 530 - UERLFReportContainer-ExtIEs
// dlist -> 531 - UERLFReportContainerLTEExtension-ExtIEs
// dlist -> 532 - UESliceMaximumBitRate-Item-ExtIEs
// dlist -> 533 - UESecurityCapabilities-ExtIEs
// dlist -> 534 - ULConfiguration-ExtIEs
// dlist -> 535 - ULF1Terminating-BHInfo-ExtIEs
// dlist -> 536 - ULNonF1Terminating-BHInfo-ExtIEs
// dlist -> 537 - UPTransportLayerInformation-ExtIEs
// dlist -> 538 - UPTransportParametersItem-ExtIEs
// dlist -> 539 - UserPlaneFailureIndication-ExtIEs
// dlist -> 540 - UEAssociatedInfoResult-Item-ExtIEs
// dlist -> 541 - UEPerformance-ExtIEs
// dlist -> 542 - UEPerformanceCollectionConfiguration-ExtIEs
// dlist -> 543 - UETrajectoryCollectionConfiguration-ExtIEs
// dlist -> 544 - VolumeTimedReport-Item-ExtIEs
// dlist -> 545 - WLANMeasurementConfiguration-ExtIEs
// dlist -> 546 - HandoverRequest
// dlist -> 547 - OCTET
// dlist -> 548 - HandoverRequestAcknowledge
// dlist -> 549 - HandoverPreparationFailure
// dlist -> 550 - SNStatusTransfer
// dlist -> 551 - UEContextRelease
// dlist -> 552 - HandoverCancel
// dlist -> 553 - HandoverSuccess
// dlist -> 554 - ConditionalHandoverCancel
// dlist -> 555 - EarlyStatusTransfer
// dlist -> 556 - RANPaging
// dlist -> 557 - RetrieveUEContextRequest
// dlist -> 558 - RetrieveUEContextResponse
// dlist -> 559 - RetrieveUEContextConfirm
// dlist -> 560 - RetrieveUEContextFailure
// dlist -> 561 - XnUAddressIndication
// dlist -> 562 - SNodeAdditionRequest
// dlist -> 563 - SNodeAdditionRequestAcknowledge
// dlist -> 564 - SNodeAdditionRequestReject
// dlist -> 565 - SNodeReconfigurationComplete
// dlist -> 566 - SNodeModificationRequest
// dlist -> 567 - SNodeModificationRequestAcknowledge
// dlist -> 568 - SNodeModificationRequestReject
// dlist -> 569 - SNodeModificationRequired
// dlist -> 570 - SNodeModificationConfirm
// dlist -> 571 - SNodeModificationRefuse
// dlist -> 572 - SNodeReleaseRequest
// dlist -> 573 - SNodeReleaseRequestAcknowledge
// dlist -> 574 - SNodeReleaseReject
// dlist -> 575 - SNodeReleaseRequired
// dlist -> 576 - SNodeReleaseConfirm
// dlist -> 577 - SNodeCounterCheckRequest
// dlist -> 578 - SNodeChangeRequired
// dlist -> 579 - SNodeChangeConfirm
// dlist -> 580 - SNodeChangeRefuse
// dlist -> 581 - RRCTransfer
// dlist -> 582 - NotificationControlIndication
// dlist -> 583 - ActivityNotification
// dlist -> 584 - XnSetupRequest
// dlist -> 585 - XnSetupResponse
// dlist -> 586 - XnSetupFailure
// dlist -> 587 - NGRANNodeConfigurationUpdate
// dlist -> 588 - NGRANNodeConfigurationUpdateAcknowledge
// dlist -> 589 - NGRANNodeConfigurationUpdateFailure
// dlist -> 590 - E-UTRA-NR-CellResourceCoordinationRequest
// dlist -> 591 - E-UTRA-NR-CellResourceCoordinationResponse
// dlist -> 592 - SecondaryRATDataUsageReport
// dlist -> 593 - XnRemovalRequest
// dlist -> 594 - XnRemovalResponse
// dlist -> 595 - XnRemovalFailure
// dlist -> 596 - CellActivationRequest
// dlist -> 597 - CellActivationResponse
// dlist -> 598 - CellActivationFailure
// dlist -> 599 - ResetRequest
// dlist -> 600 - ResetResponse
// dlist -> 601 - ErrorIndication
// dlist -> 602 - PrivateMessage
// dlist -> 603 - TraceStart
// dlist -> 604 - DeactivateTrace
// dlist -> 605 - FailureIndication
// dlist -> 606 - HandoverReport
// dlist -> 607 - ResourceStatusRequest
// dlist -> 608 - ResourceStatusResponse
// dlist -> 609 - ResourceStatusFailure
// dlist -> 610 - ResourceStatusUpdate
// dlist -> 611 - MobilityChangeRequest
// dlist -> 612 - MobilityChangeAcknowledge
// dlist -> 613 - MobilityChangeFailure
// dlist -> 614 - AccessAndMobilityIndication
// dlist -> 615 - CellTrafficTrace
// dlist -> 616 - RANMulticastGroupPaging
// dlist -> 617 - ScgFailureInformationReport
// dlist -> 618 - ScgFailureTransfer
// dlist -> 619 - F1CTrafficTransfer
// dlist -> 620 - IABTransportMigrationManagementRequest
// dlist -> 621 - IABTransportMigrationManagementResponse
// dlist -> 622 - IABTransportMigrationManagementReject
// dlist -> 623 - IABTransportMigrationModificationRequest
// dlist -> 624 - IABTransportMigrationModificationResponse
// dlist -> 625 - IABResourceCoordinationRequest
// dlist -> 626 - IABResourceCoordinationResponse
// dlist -> 627 - CPCCancel
// dlist -> 628 - PartialUEContextTransfer
// dlist -> 629 - PartialUEContextTransferAcknowledge
// dlist -> 630 - PartialUEContextTransferFailure
// dlist -> 631 - RachIndication
// dlist -> 632 - DataCollectionRequest
// dlist -> 633 - DataCollectionResponse
// dlist -> 634 - DataCollectionFailure
// dlist -> 635 - DataCollectionUpdate
// dlist -> 636 - ProcedureStageChoice-ExtIEs
// dlist -> 637 - ResponseType-ReconfComplete-ExtIEs
// dlist -> 638 - ServedCellsToUpdateInitiatingNodeChoice-ExtIEs
// dlist -> 639 - ConfigurationUpdate-gNB
// dlist -> 640 - ConfigurationUpdate-ng-eNB
// dlist -> 641 - RespondingNodeTypeConfigUpdateAck-ExtIEs
// dlist -> 642 - InitiatingNodeType-ResourceCoordRequest-ExtIEs
// dlist -> 643 - RespondingNodeType-ResourceCoordResponse-ExtIEs
// dlist -> 644 - ServedCellsToActivate-ExtIEs
// dlist -> 645 - ActivatedServedCells-ExtIEs
// dlist -> 646 - UEContextInfoHORequest-ExtIEs
// dlist -> 647 - UEContextRefAtSN-HORequest-ExtIEs
// dlist -> 648 - FirstDLCount-ExtIEs
// dlist -> 649 - DLDiscarding-ExtIEs
// dlist -> 650 - PDUSessionToBeAddedAddReq-Item-ExtIEs
// dlist -> 651 - PDUSessionAdmittedAddedAddReqAck-Item-ExtIEs
// dlist -> 652 - PDUSessionNotAdmittedAddReqAck-ExtIEs
// dlist -> 653 - ResponseInfo-ReconfCompl-ExtIEs
// dlist -> 654 - Configuration-successfully-applied-ExtIEs
// dlist -> 655 - Configuration-rejected-by-M-NG-RANNode-ExtIEs
// dlist -> 656 - UEContextInfo-SNModRequest-ExtIEs
// dlist -> 657 - PDUSessionsToBeAdded-SNModRequest-Item-ExtIEs
// dlist -> 658 - PDUSessionsToBeModified-SNModRequest-Item-ExtIEs
// dlist -> 659 - PDUSessionsToBeReleased-SNModRequest-List-ExtIEs
// dlist -> 660 - PDUSessionAdmitted-SNModResponse-ExtIEs
// dlist -> 661 - PDUSessionAdmittedToBeAddedSNModResponse-Item-ExtIEs
// dlist -> 662 - PDUSessionAdmittedToBeModifiedSNModResponse-Item-ExtIEs
// dlist -> 663 - PDUSessionAdmittedToBeReleasedSNModResponse-ExtIEs
// dlist -> 664 - PDUSessionNotAdmitted-SNModResponse-ExtIEs
// dlist -> 665 - PDUSessionDataForwarding-SNModResponse-ExtIEs
// dlist -> 666 - PDUSessionToBeModifiedSNModRequired-Item-ExtIEs
// dlist -> 667 - PDUSessionToBeReleasedSNModRequired-ExtIEs
// dlist -> 668 - PDUSessionAdmittedModSNModConfirm-Item-ExtIEs
// dlist -> 669 - PDUSessionAdmittedToBeReleasedSNModConfirm-ExtIEs
// dlist -> 670 - PDUSessionToBeReleasedList-RelReqAck-ExtIEs
// dlist -> 671 - PDUSessionToBeReleasedList-RelRqd-ExtIEs
// dlist -> 672 - PDUSessionReleasedList-RelConf-ExtIEs
// dlist -> 673 - BearersSubjectToCounterCheck-Item-ExtIEs
// dlist -> 674 - PDUSession-SNChangeRequired-Item-ExtIEs
// dlist -> 675 - PDUSession-SNChangeConfirm-Item-ExtIEs
// dlist -> 676 - SplitSRB-RRCTransfer-ExtIEs
// dlist -> 677 - UEReportRRCTransfer-ExtIEs
// dlist -> 678 - FastMCGRecoveryRRCTransfer-ExtIEs
// dlist -> 679 - SDT-SRB-between-NewNode-OldNode-ExtIEs
// dlist -> 680 - QoE-Measurement-Results-ExtIEs
// dlist -> 681 - PDUSessionResourcesNotify-Item-ExtIEs
// dlist -> 682 - PDUSessionResourcesActivityNotify-Item-ExtIEs
// dlist -> 683 - QoSFlowsActivityNotifyItem-ExtIEs
// dlist -> 684 - RespondingNodeTypeConfigUpdateAck-ng-eNB-ExtIEs
// dlist -> 685 - RespondingNodeTypeConfigUpdateAck-gNB-ExtIEs
// dlist -> 686 - ResourceCoordRequest-ng-eNB-initiated-ExtIEs
// dlist -> 687 - ResourceCoordRequest-gNB-initiated-ExtIEs
// dlist -> 688 - ResourceCoordResponse-ng-eNB-initiated-ExtIEs
// dlist -> 689 - ResourceCoordResponse-gNB-initiated-ExtIEs
// dlist -> 690 - ToBeActivatedNRCellsAndSSBs-Item-ExtIEs
// dlist -> 691 - SSBsToBeActivated-Item-ExtIEs
// dlist -> 692 - ActivatedNRCellsAndSSBs-Item-ExtIEs
// dlist -> 693 - SSBsActivated-Item-ExtIEs
// dlist -> 694 - TrafficToBeAdded-Item-ExtIEs
// dlist -> 695 - TrafficToBeModified-Item-ExtIEs
// dlist -> 696 - TrafficAdded-Item-ExtIEs
// dlist -> 697 - TrafficModified-Item-ExtIEs
// dlist -> 698 - TrafficNotAdded-Item-ExtIEs
// dlist -> 699 - TrafficNotModified-Item-ExtIEs
// dlist -> 700 - TrafficReleased-Item-ExtIEs
// dlist -> 701 - TrafficRequiredToBeModified-Item-ExtIEs
// dlist -> 702 - IABTNLAddressToBeReleased-Item-ExtIEs
// dlist -> 703 - TrafficRequiredModified-Item-ExtIEs
// dlist -> 704 - BoundaryNodeCellsList-Item-ExtIEs
// dlist -> 705 - ParentNodeCellsList-Item-ExtIEs
// ------------------------------------------------------------ 
//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_A2XPC5QoSParameters_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_A2XPC5QoSParameters_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_A2XPC5QoSFlowItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_A2XPC5QoSFlowItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_A2XPC5FlowBitRates_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_A2XPC5FlowBitRates_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_AveragePacketDelay_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_AveragePacketDelay_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Additional_PDCP_Duplication_TNL_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Additional_PDCP_Duplication_TNL_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Additional_UL_NG_U_TNLatUPF_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PDUSessionCommonNetworkInstance, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionCommonNetworkInstance * pDUSessionCommonNetworkInstance;
	int pDUSessionCommonNetworkInstance_isset;

	
} SI_XNAP_DT_PDU_Additional_UL_NG_U_TNLatUPF_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Additional_Measurement_Timing_Configuration_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Additional_Measurement_Timing_Configuration_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Active_MBS_SessionInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Active_MBS_SessionInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DataCollectionID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DataCollectionID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_AllocationandRetentionPriority_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_AllocationandRetentionPriority_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_AllowedPNI_NPN_ID_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_AllowedPNI_NPN_ID_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_AlternativeQoSParaSetItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MaximumDataBurstVolume, PRESENCE = optional L:10856
	unsigned long long int maximumDataBurstVolume;
	int maximumDataBurstVolume_isset;

	
} SI_XNAP_DT_PDU_AlternativeQoSParaSetItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_GlobalAMF_Region_Information_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_GlobalAMF_Region_Information_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_AreaOfInterest_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_AreaOfInterest_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_AreaScopeOfMDT_NR_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PNI-NPNBasedMDT, PRESENCE = mandatory L:10856
	SI_XNAP_DT_PNI_NPNBasedMDT * pNINPNBasedMDT;
	int pNINPNBasedMDT_isset;

	// ID = id-SNPN-CellBasedMDT, PRESENCE = mandatory L:10856
	SI_XNAP_DT_SNPN_CellBasedMDT * sNPNCellBasedMDT;
	int sNPNCellBasedMDT_isset;

	// ID = id-SNPN-TAIBasedMDT, PRESENCE = mandatory L:10856
	SI_XNAP_DT_SNPN_TAIBasedMDT * sNPNTAIBasedMDT;
	int sNPNTAIBasedMDT_isset;

	// ID = id-SNPN-BasedMDT, PRESENCE = mandatory L:10856
	SI_XNAP_DT_SNPN_BasedMDT * sNPNBasedMDT;
	int sNPNBasedMDT_isset;

	
} SI_XNAP_DT_PDU_AreaScopeOfMDT_NR_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_AreaScopeOfMDT_EUTRA_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_AreaScopeOfMDT_EUTRA_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_AreaScopeOfNeighCellsItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_AreaScopeOfNeighCellsItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_AreaScopeOfQMC_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_AreaScopeOfQMC_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_AS_SecurityInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_AS_SecurityInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_AssistanceDataForRANPaging_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NPNPagingAssistanceInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_NPNPagingAssistanceInformation * nPNPagingAssistanceInformation;
	int nPNPagingAssistanceInformation_isset;

	
} SI_XNAP_DT_PDU_AssistanceDataForRANPaging_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Associated_QoSFlowInfo_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Associated_QoSFlowInfo_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_AvailableRVQoEMetrics_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_AvailableRVQoEMetrics_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_BAPRoutingID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_BAPRoutingID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_BeamMeasurementsReportConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_BeamMeasurementsReportConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_BeamMeasurementsReportQuantity_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_BeamMeasurementsReportQuantity_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_BHInfo_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_BHInfo_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_BAPControlPDURLCCH_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_BAPControlPDURLCCH_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_BluetoothMeasurementConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_BluetoothMeasurementConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_BPLMN_ID_Info_EUTRA_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_BPLMN_ID_Info_EUTRA_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_BPLMN_ID_Info_NR_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ConfiguredTACIndication, PRESENCE = optional L:10856
	uint8_t configuredTACIndication;
	int configuredTACIndication_isset;

	// ID = id-NPN-Broadcast-Information, PRESENCE = optional L:10856
	SI_XNAP_DT_NPN_Broadcast_Information * nPNBroadcastInformation;
	int nPNBroadcastInformation_isset;

	
} SI_XNAP_DT_PDU_BPLMN_ID_Info_NR_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_BroadcastCAG_Identifier_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_BroadcastCAG_Identifier_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_BroadcastNID_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_BroadcastNID_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_BroadcastPLMNinTAISupport_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NPN-Support, PRESENCE = optional L:10856
	SI_XNAP_DT_NPN_Support * nPNSupport;
	int nPNSupport_isset;

	// ID = id-ExtendedTAISliceSupportList, PRESENCE = optional L:10856
	SI_XNAP_DT_ExtendedSliceSupportList * extendedTAISliceSupportList;
	int extendedTAISliceSupportList_isset;

	// ID = id-TAINSAGSupportList, PRESENCE = optional L:10856
	SI_XNAP_DT_TAINSAGSupportList * tAINSAGSupportList;
	int tAINSAGSupportList_isset;

	// ID = id-TAISliceUnavailableCellList, PRESENCE = optional L:10856
	SI_XNAP_DT_TAISliceUnavailableCellList * tAISliceUnavailableCellList;
	int tAISliceUnavailableCellList_isset;

	
} SI_XNAP_DT_PDU_BroadcastPLMNinTAISupport_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_BroadcastPNI_NPN_ID_Information_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_BroadcastPNI_NPN_ID_Information_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_BroadcastSNPNID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_BroadcastSNPNID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CandidateRelayUEInfoItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CandidateRelayUEInfoItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CapacityValueInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CapacityValueInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Cause_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Cause_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CellAssistanceInfo_NR_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CellAssistanceInfo_NR_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CellAndCapacityAssistanceInfo_NR_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CellAndCapacityAssistanceInfo_NR_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CellAndCapacityAssistanceInfo_EUTRA_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CellAndCapacityAssistanceInfo_EUTRA_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CellAssistanceInfo_EUTRA_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CellAssistanceInfo_EUTRA_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CellBasedMDT_NR_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CellBasedMDT_NR_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CellBasedQMC_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CellBasedQMC_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CellBasedMDT_EUTRA_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CellBasedMDT_EUTRA_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CellMeasurementResult_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NR-U-Channel-List, PRESENCE = optional L:10856
	SI_XNAP_DT_NR_U_Channel_List * nRUChannelList;
	int nRUChannelList_isset;

	
} SI_XNAP_DT_PDU_CellMeasurementResult_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CellReplacingInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CellReplacingInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CellToReport_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CellToReport_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CellToReportForDataCollection_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CellToReportForDataCollection_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CellMeasurementInitiationResult_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CellMeasurementInitiationResult_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CellInfoResultForDataCollection_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CellInfoResultForDataCollection_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Cell_Type_Choice_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Cell_Type_Choice_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CellMeasurementFailureCause_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CellMeasurementFailureCause_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CHOConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CHOConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CHOCandidateCell_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CHOCandidateCell_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CHOExecutionCondition_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CHOExecutionCondition_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ClockQualityAcceptanceCriteria_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ClockQualityAcceptanceCriteria_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ClockQualityReportingControlInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ClockQualityReportingControlInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ClockQualityDetailLevel_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ClockQualityDetailLevel_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CompositeAvailableCapacityGroup_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CompositeAvailableCapacitySupplementaryUplink, PRESENCE = optional L:10856
	SI_XNAP_DT_CompositeAvailableCapacity * compositeAvailableCapacitySupplementaryUplink;
	int compositeAvailableCapacitySupplementaryUplink_isset;

	
} SI_XNAP_DT_PDU_CompositeAvailableCapacityGroup_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CompositeAvailableCapacity_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CompositeAvailableCapacity_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CHOinformation_Req_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CHOTimeBasedInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_CHOTimeBasedInformation * cHOTimeBasedInformation;
	int cHOTimeBasedInformation_isset;

	// ID = id-CHO-Maxnoof-CondReconfig, PRESENCE = optional L:10856
	unsigned long long int cHOMaxnoofCondReconfig;
	int cHOMaxnoofCondReconfig_isset;

	
} SI_XNAP_DT_PDU_CHOinformation_Req_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CHOTimeBasedInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CHOTimeBasedInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CHOinformation_Ack_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CHO-CPAC-Info, PRESENCE = optional L:10856
	SI_XNAP_DT_CHO_CPAC_Information * cHOCPACInfo;
	int cHOCPACInfo_isset;

	
} SI_XNAP_DT_PDU_CHOinformation_Ack_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CHOinformation_AddReq_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CHOinformation_AddReq_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CHOinformation_AddReqAck_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CHOinformation_AddReqAck_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CHOinformation_ModReq_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CHOinformation_ModReq_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CHO_CPAC_Information_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CHO_CPAC_Information_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CHO_target_SN_node_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CHO_target_SN_node_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CHO_Candidate_PSCells_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CHO_Candidate_PSCells_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Conditional_Reconfig_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Conditional_Reconfig_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Connectivity_Support_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Connectivity_Support_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_COUNT_PDCP_SN12_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_COUNT_PDCP_SN12_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_COUNT_PDCP_SN18_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_COUNT_PDCP_SN18_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Coverage_Modification_List_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CoverageModificationCause, PRESENCE = optional L:10856
	uint8_t coverageModificationCause;
	int coverageModificationCause_isset;

	
} SI_XNAP_DT_PDU_Coverage_Modification_List_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CPTransportLayerInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-EndpointIPAddressAndPort, PRESENCE = mandatory L:10856
	SI_XNAP_DT_EndpointIPAddressAndPort * endpointIPAddressAndPort;
	int endpointIPAddressAndPort_isset;

	
} SI_XNAP_DT_PDU_CPTransportLayerInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CPACcandidatePSCells_item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CPACcandidatePSCells_item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CPACcandidatePSCells_wotherInfo_item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CPACcandidatePSCells_wotherInfo_item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CPACConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CPACConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CPACCandidateCell_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CPACCandidateCell_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CPACExecutionCondition_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CPACExecutionCondition_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CPAInformationRequest_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-S-CPAC-Request-Info, PRESENCE = optional L:10856
	SI_XNAP_DT_S_CPAC_Request_Info * sCPACRequestInfo;
	int sCPACRequestInfo_isset;

	// ID = id-S-CPAC-ReferenceConfigRequest, PRESENCE = optional L:10856
	uint8_t sCPACReferenceConfigRequest;
	int sCPACReferenceConfigRequest_isset;

	
} SI_XNAP_DT_PDU_CPAInformationRequest_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CPAInformationAck_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CPACcandidatePSCells-wotherInfo-list, PRESENCE = optional L:10856
	SI_XNAP_DT_CPACcandidatePSCells_wotherInfo_list * cPACcandidatePSCellswotherInfolist;
	int cPACcandidatePSCellswotherInfolist_isset;

	
} SI_XNAP_DT_PDU_CPAInformationAck_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CPCInformationRequired_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-S-CPAC-Request, PRESENCE = optional L:10856
	uint8_t sCPACRequest;
	int sCPACRequest_isset;

	
} SI_XNAP_DT_PDU_CPCInformationRequired_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CPC_target_SN_required_list_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CPC_target_SN_required_list_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CPCInformationConfirm_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CPCInformationConfirm_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CPC_target_SN_confirm_list_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CPAC-Preparation-Type, PRESENCE = optional L:10856
	uint8_t cPACPreparationType;
	int cPACPreparationType_isset;

	
} SI_XNAP_DT_PDU_CPC_target_SN_confirm_list_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CPAInformationModReq_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-S-CPAC-Request-Info, PRESENCE = optional L:10856
	SI_XNAP_DT_S_CPAC_Request_Info * sCPACRequestInfo;
	int sCPACRequestInfo_isset;

	// ID = id-S-CPAC-ReferenceConfigRequest, PRESENCE = optional L:10856
	uint8_t sCPACReferenceConfigRequest;
	int sCPACReferenceConfigRequest_isset;

	// ID = id-S-CPAC-InterSN-ExecutionNotify, PRESENCE = optional L:10856
	uint8_t sCPACInterSNExecutionNotify;
	int sCPACInterSNExecutionNotify_isset;

	
} SI_XNAP_DT_PDU_CPAInformationModReq_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CPAInformationModReqAck_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CPACcandidatePSCells-wotherInfo-list, PRESENCE = optional L:10856
	SI_XNAP_DT_CPACcandidatePSCells_wotherInfo_list * cPACcandidatePSCellswotherInfolist;
	int cPACcandidatePSCellswotherInfolist_isset;

	
} SI_XNAP_DT_PDU_CPAInformationModReqAck_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CPACInformationModRequired_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CPACcandidatePSCells-wotherInfo-list, PRESENCE = optional L:10856
	SI_XNAP_DT_CPACcandidatePSCells_wotherInfo_list * cPACcandidatePSCellswotherInfolist;
	int cPACcandidatePSCellswotherInfolist_isset;

	
} SI_XNAP_DT_PDU_CPACInformationModRequired_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CPCInformationUpdate_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CPCInformationUpdate_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CPC_target_SN_mod_item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CPC_target_SN_mod_item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CPCInformationUpdatePSCells_item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CPCInformationUpdatePSCells_item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CriticalityDiagnostics_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CriticalityDiagnostics_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CriticalityDiagnostics_IE_List_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CriticalityDiagnostics_IE_List_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CSI_RS_MTC_Configuration_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CSI_RS_MTC_Configuration_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CSI_RS_Neighbour_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CSI_RS_Neighbour_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CSI_RS_MTC_Neighbour_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CSI_RS_MTC_Neighbour_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CAGListforMDTItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CAGListforMDTItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_XnUAddressInfoperPDUSession_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SecondarydataForwardingInfoFromTarget-List, PRESENCE = optional L:10856
	SI_XNAP_DT_SecondarydataForwardingInfoFromTarget_List * secondarydataForwardingInfoFromTargetList;
	int secondarydataForwardingInfoFromTargetList_isset;

	// ID = id-DRB-IDs-takenintouse, PRESENCE = optional L:10856
	SI_XNAP_DT_DRB_List * dRBIDstakenintouse;
	int dRBIDstakenintouse_isset;

	// ID = id-dataForwardingInfoFromTargetE-UTRANnode, PRESENCE = optional L:10856
	SI_XNAP_DT_DataForwardingInfoFromTargetE_UTRANnode * dataForwardingInfoFromTargetEUTRANnode;
	int dataForwardingInfoFromTargetEUTRANnode_isset;

	
} SI_XNAP_DT_PDU_XnUAddressInfoperPDUSession_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DataForwardingInfoFromTargetE_UTRANnode_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DataForwardingInfoFromTargetE_UTRANnode_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DataForwardingInfoFromTargetE_UTRANnode_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DataForwardingInfoFromTargetE_UTRANnode_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSFlowsToBeForwarded_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_QoSFlowsToBeForwarded_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DataForwardingInfoFromTargetNGRANnode_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-DirectForwardingPathAvailability, PRESENCE = optional L:10856
	uint8_t directForwardingPathAvailability;
	int directForwardingPathAvailability_isset;

	
} SI_XNAP_DT_PDU_DataForwardingInfoFromTargetNGRANnode_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSFLowsAcceptedToBeForwarded_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_QoSFLowsAcceptedToBeForwarded_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DataforwardingandOffloadingInfofromSource_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DataforwardingandOffloadingInfofromSource_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSFLowsToBeForwarded_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ULForwardingProposal, PRESENCE = optional L:10856
	uint8_t uLForwardingProposal;
	int uLForwardingProposal_isset;

	// ID = id-SourceDLForwardingIPAddress, PRESENCE = optional L:10856
	SI_XNAP_DT_TransportLayerAddress * sourceDLForwardingIPAddress;
	int sourceDLForwardingIPAddress_isset;

	// ID = id-SourceNodeDLForwardingIPAddress, PRESENCE = optional L:10856
	SI_XNAP_DT_TransportLayerAddress * sourceNodeDLForwardingIPAddress;
	int sourceNodeDLForwardingIPAddress_isset;

	
} SI_XNAP_DT_PDU_QoSFLowsToBeForwarded_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DataForwardingResponseDRBItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DataForwardingResponseDRBItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DataTrafficResourceIndication_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DataTrafficResourceIndication_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DAPSRequestInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DAPSRequestInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DAPSResponseInfo_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DAPSResponseInfo_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DLCountChoice_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DLCountChoice_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DLF1Terminating_BHInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DLF1Terminating_BHInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DLLBTFailureInformationList_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DLLBTFailureInformationList_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DLNonF1Terminating_BHInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DLNonF1Terminating_BHInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRB_List_withCause_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DRB_List_withCause_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBsSubjectToDLDiscarding_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBsSubjectToStatusTransfer_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-OldQoSFlowMap-ULendmarkerexpected, PRESENCE = optional L:10856
	SI_XNAP_DT_QoSFlows_List * oldQoSFlowMapULendmarkerexpected;
	int oldQoSFlowMapULendmarkerexpected_isset;

	
} SI_XNAP_DT_PDU_DRBsSubjectToStatusTransfer_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBBStatusTransferChoice_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DRBBStatusTransferChoice_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBBStatusTransfer12bitsSN_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DRBBStatusTransfer12bitsSN_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBBStatusTransfer18bitsSN_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DRBBStatusTransfer18bitsSN_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBToQoSFlowMapping_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-DAPSRequestInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_DAPSRequestInfo * dAPSRequestInfo;
	int dAPSRequestInfo_isset;

	
} SI_XNAP_DT_PDU_DRBToQoSFlowMapping_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DUF_Slot_Config_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DUF_Slot_Config_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Dynamic5QIDescriptor_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ExtendedPacketDelayBudget, PRESENCE = optional L:10856
	unsigned long long int extendedPacketDelayBudget;
	int extendedPacketDelayBudget_isset;

	// ID = id-CNPacketDelayBudgetDownlink, PRESENCE = optional L:10856
	unsigned long long int cNPacketDelayBudgetDownlink;
	int cNPacketDelayBudgetDownlink_isset;

	// ID = id-CNPacketDelayBudgetUplink, PRESENCE = optional L:10856
	unsigned long long int cNPacketDelayBudgetUplink;
	int cNPacketDelayBudgetUplink_isset;

	
} SI_XNAP_DT_PDU_Dynamic5QIDescriptor_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ECNMarkingorCongestionInformationReportingRequest_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_E_UTRA_CGI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_E_UTRA_CGI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_EUTRAPagingeDRXInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_EUTRAPagingeDRXInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_E_UTRAPRACHConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_E_UTRAPRACHConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_EndpointIPAddressAndPort_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_EndpointIPAddressAndPort_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_EventTriggered_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_EventTriggered_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_EventTypeTrigger_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_EventTypeTrigger_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_EventL1_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_EventL1_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MeasurementThresholdL1LoggedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ExcessPacketDelayThresholdItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ExcessPacketDelayThresholdItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ExpectedUEActivityBehaviour_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ExpectedUEActivityBehaviour_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ExpectedUEBehaviour_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ExpectedUEBehaviour_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ExpectedUEMovingTrajectoryItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ExplicitFormat_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ExplicitFormat_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ExtendedRATRestrictionInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ExtendedRATRestrictionInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ExtTLA_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ExtTLA_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_GTPTLA_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_GTPTLA_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_F1_TerminatingTopologyBHInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_F1_TerminatingTopologyBHInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_F1TerminatingBHInformation_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_F1TerminatingBHInformation_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_FiveGProSeAuthorized_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-FiveGProSeLayer2Multipath, PRESENCE = optional L:10856
	uint8_t fiveGProSeLayer2Multipath;
	int fiveGProSeLayer2Multipath_isset;

	// ID = id-FiveGProSeLayer2UEtoUERelay, PRESENCE = optional L:10856
	uint8_t fiveGProSeLayer2UEtoUERelay;
	int fiveGProSeLayer2UEtoUERelay_isset;

	// ID = id-FiveGProSeLayer2UEtoUERemote, PRESENCE = optional L:10856
	uint8_t fiveGProSeLayer2UEtoUERemote;
	int fiveGProSeLayer2UEtoUERemote_isset;

	
} SI_XNAP_DT_PDU_FiveGProSeAuthorized_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_FiveGProSePC5QoSParameters_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_FiveGProSePC5QoSParameters_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_FiveGProSePC5QoSFlowItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_FiveGProSePC5QoSFlowItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_FiveGProSePC5FlowBitRates_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_FiveGProSePC5FlowBitRates_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Flows_Mapped_To_DRB_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Flows_Mapped_To_DRB_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_FreqDomainHSNAconfiguration_List_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_FreqDomainHSNAconfiguration_List_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_FreqDomainSlotHSNAconfiguration_List_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_FreqDomainSlotHSNAconfiguration_List_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_GBRQoSFlowInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AlternativeQoSParaSetList, PRESENCE = optional L:10856
	SI_XNAP_DT_AlternativeQoSParaSetList * alternativeQoSParaSetList;
	int alternativeQoSParaSetList_isset;

	
} SI_XNAP_DT_PDU_GBRQoSFlowInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_GlobalgNB_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_GlobalgNB_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_GNB_DU_Cell_Resource_Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_GNB_DU_Cell_Resource_Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_GNB_ID_Choice_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_GNB_ID_Choice_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_GNB_RadioResourceStatus_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SliceRadioResourceStatus-List, PRESENCE = optional L:10856
	SI_XNAP_DT_SliceRadioResourceStatus_List * sliceRadioResourceStatusList;
	int sliceRadioResourceStatusList_isset;

	// ID = id-MIMOPRBusageInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_MIMOPRBusageInformation * mIMOPRBusageInformation;
	int mIMOPRBusageInformation_isset;

	
} SI_XNAP_DT_PDU_GNB_RadioResourceStatus_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_GlobalCell_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_GlobalCell_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_GlobaleNB_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_GlobaleNB_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ENB_ID_Choice_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ENB_ID_Choice_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_GlobalNG_RANCell_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_GlobalNG_RANCell_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_GlobalNG_RANNode_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_GlobalNG_RANNode_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_GTPtunnelTransportLayerInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-QoS-Mapping-Information, PRESENCE = optional L:10856
	SI_XNAP_DT_QoS_Mapping_Information * qoSMappingInformation;
	int qoSMappingInformation_isset;

	
} SI_XNAP_DT_PDU_GTPtunnelTransportLayerInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_GUAMI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_GUAMI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_HSNASlotConfigItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_HSNASlotConfigItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_IABCellInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_IABCellInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_IAB_DU_Cell_Resource_Configuration_Mode_Info_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_Mode_Info_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_IAB_DU_Cell_Resource_Configuration_FDD_Info_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_FDD_Info_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_IAB_DU_Cell_Resource_Configuration_TDD_Info_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_TDD_Info_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_IAB_MT_Cell_List_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_IAB_MT_Cell_List_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_IAB_QoS_Mapping_Information_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_IAB_QoS_Mapping_Information_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_IAB_STC_Info_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_IAB_STC_Info_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_IAB_STC_Info_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_IAB_STC_Info_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_IAB_TNL_Address_Request_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_IAB_TNL_Address_Request_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_IABIPv6RequestType_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_IABIPv6RequestType_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_IAB_TNL_Address_Response_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_IAB_TNL_Address_Response_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_IABAllocatedTNLAddress_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_IABAllocatedTNLAddress_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_IABTNLAddress_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_IABTNLAddress_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_IABTNLAddressesRequested_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_IABTNLAddressesRequested_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_IABTNLAddressToRemove_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_IABTNLAddressToRemove_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_IABTNLAddress_ItemExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_IABTNLAddress_ItemExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ImmediateMDT_NR_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ImmediateMDT_NR_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ImplicitFormat_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ImplicitFormat_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_InitiatingCondition_FailureIndication_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_InitiatingCondition_FailureIndication_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_IntendedTDD_DL_ULConfiguration_NR_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_IntendedTDD_DL_ULConfiguration_NR_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_I_RNTI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_I_RNTI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Local_NG_RAN_Node_Identifier_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Full-and-Short-I-RNTI-Profile-List, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Full_and_Short_I_RNTI_Profile_List * fullandShortIRNTIProfileList;
	int fullandShortIRNTIProfileList_isset;

	
} SI_XNAP_DT_PDU_Local_NG_RAN_Node_Identifier_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Full_and_Short_I_RNTI_Profile_List_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Full_and_Short_I_RNTI_Profile_List_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Full_I_RNTI_Profile_List_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Full_I_RNTI_Profile_List_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Short_I_RNTI_Profile_List_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Short_I_RNTI_Profile_List_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_LastVisitedCell_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_LastVisitedCell_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_LastVisitedPSCellList_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_LastVisitedPSCellList_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SCGUEHistoryInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SCGUEHistoryInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CellsinAoI_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CellsinAoI_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_GlobalNG_RANNodesinAoI_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_GlobalNG_RANNodesinAoI_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TAIsinAoI_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TAIsinAoI_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_LocationReportingInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AdditionLocationInformation, PRESENCE = optional L:10856
	uint8_t additionLocationInformation;
	int additionLocationInformation_isset;

	
} SI_XNAP_DT_PDU_LocationReportingInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_LoggedEventTriggeredConfig_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_LoggedEventTriggeredConfig_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_LoggedMDT_NR_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-earlyMeasurement, PRESENCE = optional L:10856
	uint8_t earlyMeasurement;
	int earlyMeasurement_isset;

	
} SI_XNAP_DT_PDU_LoggedMDT_NR_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_LTEA2XServicesAuthorized_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_LTEA2XServicesAuthorized_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_LTEV2XServicesAuthorized_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_LTEV2XServicesAuthorized_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_LTEUESidelinkAggregateMaximumBitRate_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_LTEUESidelinkAggregateMaximumBitRate_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MDTAlignmentInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MDTAlignmentInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_M1Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-BeamMeasurementIndicationM1, PRESENCE = optional L:10856
	uint8_t beamMeasurementIndicationM1;
	int beamMeasurementIndicationM1_isset;

	// ID = id-BeamMeasurementsReportConfiguration, PRESENCE = conditional L:10856
	SI_XNAP_DT_BeamMeasurementsReportConfiguration * beamMeasurementsReportConfiguration;
	int beamMeasurementsReportConfiguration_isset;

	
} SI_XNAP_DT_PDU_M1Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_M1PeriodicReporting_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ExtendedReportIntervalMDT, PRESENCE = optional L:10856
	uint8_t extendedReportIntervalMDT;
	int extendedReportIntervalMDT_isset;

	
} SI_XNAP_DT_PDU_M1PeriodicReporting_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_M1ThresholdEventA2_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_M1ThresholdEventA2_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_M4Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M4ReportAmount, PRESENCE = optional L:10856
	uint8_t m4ReportAmount;
	int m4ReportAmount_isset;

	
} SI_XNAP_DT_PDU_M4Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_M5Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M5ReportAmount, PRESENCE = optional L:10856
	uint8_t m5ReportAmount;
	int m5ReportAmount_isset;

	
} SI_XNAP_DT_PDU_M5Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_M6Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M6ReportAmount, PRESENCE = optional L:10856
	uint8_t m6ReportAmount;
	int m6ReportAmount_isset;

	// ID = id-ExcessPacketDelayThresholdConfiguration, PRESENCE = optional L:10856
	SI_XNAP_DT_ExcessPacketDelayThresholdConfiguration * excessPacketDelayThresholdConfiguration;
	int excessPacketDelayThresholdConfiguration_isset;

	
} SI_XNAP_DT_PDU_M6Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_M7Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M7ReportAmount, PRESENCE = optional L:10856
	uint8_t m7ReportAmount;
	int m7ReportAmount_isset;

	
} SI_XNAP_DT_PDU_M7Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MaximumIPdatarate_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MaxIPrate-DL, PRESENCE = optional L:10856
	uint8_t maxIPrateDL;
	int maxIPrateDL_isset;

	
} SI_XNAP_DT_PDU_MaximumIPdatarate_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MBSFNSubframeAllocation_E_UTRA_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MBSFNSubframeAllocation_E_UTRA_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MBSFNSubframeInfo_E_UTRA_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MBSFNSubframeInfo_E_UTRA_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MBS_MappingandDataForwardingRequestInfofromSource_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MBS_MappingandDataForwardingRequestInfofromSource_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MBS_DataForwardingResponseInfofromTarget_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MBS_DataForwardingResponseInfofromTarget_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MBS_QoSFlowsToAdd_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MBS_QoSFlowsToAdd_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MBS_ServiceArea_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MBS_ServiceArea_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MBS_ServiceAreaInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MBS_ServiceAreaInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MBS_ServiceAreaInformation_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MBS_ServiceAreaInformation_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MBS_ServiceAreaTAI_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MBS_ServiceAreaTAI_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MBS_Session_ID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MBS_Session_ID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MBS_SessionAssociatedInformation_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MBS_SessionAssociatedInformation_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MBS_SessionInformation_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-AssistanceInformation, PRESENCE = optional L:10856
	uint8_t mBSAssistanceInformation;
	int mBSAssistanceInformation_isset;

	
} SI_XNAP_DT_PDU_MBS_SessionInformation_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MBS_SessionInformationResponse_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MBS_SessionInformationResponse_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MRB_ProgressInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MRB_ProgressInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MDT_Configuration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MN-only-MDT-collection, PRESENCE = optional L:10856
	uint8_t mNonlyMDTcollection;
	int mNonlyMDTcollection_isset;

	
} SI_XNAP_DT_PDU_MDT_Configuration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MDT_Configuration_NR_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PNI-NPN-AreaScopeofMDT, PRESENCE = optional L:10856
	SI_XNAP_DT_PNI_NPN_AreaScopeofMDT * pNINPNAreaScopeofMDT;
	int pNINPNAreaScopeofMDT_isset;

	
} SI_XNAP_DT_PDU_MDT_Configuration_NR_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MDT_Configuration_EUTRA_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MDT_Configuration_EUTRA_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MDTMode_NR_ExtensionIE
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MDTMode_NR_ExtensionIE;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MeasurementThresholdA2_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MeasurementThresholdA2_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MIMOPRBusageInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MIMOPRBusageInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MobilityRestrictionList_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-LastE-UTRANPLMNIdentity, PRESENCE = optional L:10856
	SI_XNAP_DT_PLMN_Identity * lastEUTRANPLMNIdentity;
	int lastEUTRANPLMNIdentity_isset;

	// ID = id-CNTypeRestrictionsForServing, PRESENCE = optional L:10856
	uint8_t cNTypeRestrictionsForServing;
	int cNTypeRestrictionsForServing_isset;

	// ID = id-CNTypeRestrictionsForEquivalent, PRESENCE = optional L:10856
	SI_XNAP_DT_CNTypeRestrictionsForEquivalent * cNTypeRestrictionsForEquivalent;
	int cNTypeRestrictionsForEquivalent_isset;

	// ID = id-NPNMobilityInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_NPNMobilityInformation * nPNMobilityInformation;
	int nPNMobilityInformation_isset;

	
} SI_XNAP_DT_PDU_MobilityRestrictionList_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_CNTypeRestrictionsForEquivalentItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RAT_RestrictionsItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ExtendedRATRestrictionInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_ExtendedRATRestrictionInformation * extendedRATRestrictionInformation;
	int extendedRATRestrictionInformation_isset;

	
} SI_XNAP_DT_PDU_RAT_RestrictionsItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ForbiddenAreaItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ForbiddenAreaItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ServiceAreaItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ServiceAreaItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MR_DC_ResourceCoordinationInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MR_DC_ResourceCoordinationInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_E_UTRA_ResourceCoordinationInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_E_UTRA_ResourceCoordinationInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NR_ResourceCoordinationInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NR_ResourceCoordinationInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MessageOversizeNotification_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MessageOversizeNotification_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MT_SDT_Information_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MT_SDT_Information_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MultiplexingInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MultiplexingInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MeasuredUETrajectory_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MeasuredUETrajectory_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MeasuredTrajectoryCellInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MeasuredTrajectoryCellInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MeasuredTrajectoryNGRANCellInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MeasuredTrajectoryNGRANCellInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_N6JitterInformationExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_N6JitterInformationExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NACellResourceConfiguration_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NACellResourceConfiguration_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NE_DC_TDM_Pattern_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NE_DC_TDM_Pattern_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NeighbourInformation_E_UTRA_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NeighbourInformation_E_UTRA_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NeighbourInformation_NR_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MobileIABCell, PRESENCE = optional L:10856
	uint8_t mobileIABCell;
	int mobileIABCell_isset;

	
} SI_XNAP_DT_PDU_NeighbourInformation_NR_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NeighbourInformation_NR_ModeInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NeighbourInformation_NR_ModeFDDInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeFDDInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NeighbourInformation_NR_ModeTDDInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeTDDInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Neighbour_NG_RAN_Node_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Neighbour_NG_RAN_Node_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NRCarrierItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NRCarrierItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NG_RAN_Cell_Identity_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NG_RAN_Cell_Identity_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NG_RAN_CellPCI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NG_RAN_CellPCI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NodeAssociatedInfoResult_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NodeAssociatedInfoResult_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NodeMeasurementInitiationResult_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NodeMeasurementInitiationResult_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NonDynamic5QIDescriptor_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CNPacketDelayBudgetDownlink, PRESENCE = optional L:10856
	unsigned long long int cNPacketDelayBudgetDownlink;
	int cNPacketDelayBudgetDownlink_isset;

	// ID = id-CNPacketDelayBudgetUplink, PRESENCE = optional L:10856
	unsigned long long int cNPacketDelayBudgetUplink;
	int cNPacketDelayBudgetUplink_isset;

	
} SI_XNAP_DT_PDU_NonDynamic5QIDescriptor_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NG_eNB_RadioResourceStatus_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-DL-scheduling-PDCCH-CCE-usage, PRESENCE = optional L:10856
	unsigned long long int dLschedulingPDCCHCCEusage;
	int dLschedulingPDCCHCCEusage_isset;

	// ID = id-UL-scheduling-PDCCH-CCE-usage, PRESENCE = optional L:10856
	unsigned long long int uLschedulingPDCCHCCEusage;
	int uLschedulingPDCCHCCEusage_isset;

	
} SI_XNAP_DT_PDU_NG_eNB_RadioResourceStatus_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TNLCapacityIndicator_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TNLCapacityIndicator_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Non_F1_TerminatingTopologyBHInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Non_F1_TerminatingTopologyBHInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NonF1TerminatingBHInformation_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NonF1TerminatingBHInformation_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NonUPTraffic_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NonUPTraffic_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NPN_Broadcast_Information_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NPN_Broadcast_Information_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NPN_Broadcast_Information_SNPN_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NPN_Broadcast_Information_SNPN_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NPN_Broadcast_Information_PNI_NPN_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NPN_Broadcast_Information_PNI_NPN_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NPNMobilityInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NPNMobilityInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NPNMobilityInformation_SNPN_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-EquivalentSNPNs, PRESENCE = optional L:10856
	SI_XNAP_DT_EquivalentSNPNs * equivalentSNPNs;
	int equivalentSNPNs_isset;

	
} SI_XNAP_DT_PDU_NPNMobilityInformation_SNPN_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NPNMobilityInformation_PNI_NPN_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NPNMobilityInformation_PNI_NPN_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NPNPagingAssistanceInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NPNPagingAssistanceInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NPNPagingAssistanceInformation_PNI_NPN_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NPNPagingAssistanceInformation_PNI_NPN_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NPN_Support_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NPN_Support_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NPN_Support_SNPN_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NPN_Support_SNPN_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NPRACHConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NPRACHConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_FDD_or_TDD_in_NPRACHConfiguration_Choice_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_FDD_or_TDD_in_NPRACHConfiguration_Choice_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NPRACHConfiguration_FDD_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NPRACHConfiguration_FDD_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NPRACHConfiguration_TDD_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NPRACHConfiguration_TDD_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Non_AnchorCarrierFrequencylist_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Non_AnchorCarrierFrequencylist_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NR_CGI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NR_CGI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NR_U_Channel_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ChannelOccupancyTimePercentageUL, PRESENCE = optional L:10856
	unsigned long long int channelOccupancyTimePercentageUL;
	int channelOccupancyTimePercentageUL_isset;

	// ID = id-EnergyDetectionThresholdUL, PRESENCE = optional L:10856
	unsigned long long int energyDetectionThresholdUL;
	int energyDetectionThresholdUL_isset;

	// ID = id-RadioResourceStatusNR-U, PRESENCE = optional L:10856
	SI_XNAP_DT_RadioResourceStatusNR_U * radioResourceStatusNRU;
	int radioResourceStatusNRU_isset;

	
} SI_XNAP_DT_PDU_NR_U_Channel_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NR_U_ChannelInfo_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NR_U_ChannelInfo_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NRA2XServicesAuthorized_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NRA2XServicesAuthorized_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NRFrequencyBandItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NRFrequencyBandItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NRFrequencyInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-FrequencyShift7p5khz, PRESENCE = optional L:10856
	uint8_t frequencyShift7p5khz;
	int frequencyShift7p5khz_isset;

	
} SI_XNAP_DT_PDU_NRFrequencyInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NRModeInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NRModeInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NRModeInfoFDD_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ULCarrierList, PRESENCE = optional L:10856
	SI_XNAP_DT_NRCarrierList * uLCarrierList;
	int uLCarrierList_isset;

	// ID = id-DLCarrierList, PRESENCE = optional L:10856
	SI_XNAP_DT_NRCarrierList * dLCarrierList;
	int dLCarrierList_isset;

	// ID = id-UL-GNB-DU-Cell-Resource-Configuration, PRESENCE = optional L:10856
	SI_XNAP_DT_GNB_DU_Cell_Resource_Configuration * uLGNBDUCellResourceConfiguration;
	int uLGNBDUCellResourceConfiguration_isset;

	// ID = id-DL-GNB-DU-Cell-Resource-Configuration, PRESENCE = optional L:10856
	SI_XNAP_DT_GNB_DU_Cell_Resource_Configuration * dLGNBDUCellResourceConfiguration;
	int dLGNBDUCellResourceConfiguration_isset;

	
} SI_XNAP_DT_PDU_NRModeInfoFDD_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NRModeInfoTDD_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-IntendedTDD-DL-ULConfiguration-NR, PRESENCE = optional L:10856
	SI_XNAP_DT_IntendedTDD_DL_ULConfiguration_NR * intendedTDDDLULConfigurationNR;
	int intendedTDDDLULConfigurationNR_isset;

	// ID = id-TDDULDLConfigurationCommonNR, PRESENCE = optional L:10856
	SI_XNAP_DT_TDDULDLConfigurationCommonNR * tDDULDLConfigurationCommonNR;
	int tDDULDLConfigurationCommonNR_isset;

	// ID = id-CarrierList, PRESENCE = optional L:10856
	SI_XNAP_DT_NRCarrierList * carrierList;
	int carrierList_isset;

	// ID = id-tdd-GNB-DU-Cell-Resource-Configuration, PRESENCE = optional L:10856
	SI_XNAP_DT_GNB_DU_Cell_Resource_Configuration * tddGNBDUCellResourceConfiguration;
	int tddGNBDUCellResourceConfiguration_isset;

	// ID = id-Transmission-Bandwidth-asymmetric, PRESENCE = optional L:10856
	SI_XNAP_DT_Transmission_Bandwidth_asymmetric * transmissionBandwidthasymmetric;
	int transmissionBandwidthasymmetric_isset;

	
} SI_XNAP_DT_PDU_NRModeInfoTDD_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NRPagingeDRXInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NRPagingeDRXInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NRPagingeDRXInformationforRRCINACTIVE_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NRPagingeDRXInformationforRRCINACTIVE_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NRPagingLongeDRXInformationforRRCINACTIVE_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NRPagingLongeDRXInformationforRRCINACTIVE_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NRPPaPositioningInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NRPPaPositioningInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NRTransmissionBandwidth_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NRTransmissionBandwidth_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Transmission_Bandwidth_asymmetric_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Transmission_Bandwidth_asymmetric_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NRV2XServicesAuthorized_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NRV2XServicesAuthorized_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_NRUESidelinkAggregateMaximumBitRate_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_NRUESidelinkAggregateMaximumBitRate_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PositioningInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PositioningInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PacketErrorRate_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PacketErrorRate_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PEIPSassistanceInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PEIPSassistanceInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PC5QoSParameters_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PC5QoSParameters_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PC5QoSFlowItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PC5QoSFlowItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PC5FlowBitRates_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PC5FlowBitRates_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDCPChangeIndication_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDCPChangeIndication_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDCPSNLength_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDCPSNLength_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSetQoSParameters_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSetQoSParameters_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSetQoSInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSetQoSInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionAggregateMaximumBitRate_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSession_List_withCause_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSession_List_withCause_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSession_List_withDataForwardingFromTarget_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-DRB-IDs-takenintouse, PRESENCE = optional L:10856
	SI_XNAP_DT_DRB_List * dRBIDstakenintouse;
	int dRBIDstakenintouse_isset;

	
} SI_XNAP_DT_PDU_PDUSession_List_withDataForwardingFromTarget_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSession_List_withDataForwardingRequest_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Cause, PRESENCE = optional L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	
} SI_XNAP_DT_PDU_PDUSession_List_withDataForwardingRequest_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionsListToBeReleased_UPError_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionsListToBeReleased_UPError_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourcesAdmitted_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionResourcesAdmitted_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceAdmittedInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SecondarydataForwardingInfoFromTarget-List, PRESENCE = optional L:10856
	SI_XNAP_DT_SecondarydataForwardingInfoFromTarget_List * secondarydataForwardingInfoFromTargetList;
	int secondarydataForwardingInfoFromTargetList_isset;

	
} SI_XNAP_DT_PDU_PDUSessionResourceAdmittedInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourcesNotAdmitted_Item_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionResourcesNotAdmitted_Item_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourcesToBeSetup_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Additional-UL-NG-U-TNLatUPF-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Additional_UL_NG_U_TNLatUPF_List * additionalULNGUTNLatUPFList;
	int additionalULNGUTNLatUPFList_isset;

	// ID = id-PDUSessionCommonNetworkInstance, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionCommonNetworkInstance * pDUSessionCommonNetworkInstance;
	int pDUSessionCommonNetworkInstance_isset;

	// ID = id-Redundant-UL-NG-U-TNLatUPF, PRESENCE = optional L:10856
	SI_XNAP_DT_UPTransportLayerInformation * redundantULNGUTNLatUPF;
	int redundantULNGUTNLatUPF_isset;

	// ID = id-Additional-Redundant-UL-NG-U-TNLatUPF-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Additional_UL_NG_U_TNLatUPF_List * additionalRedundantULNGUTNLatUPFList;
	int additionalRedundantULNGUTNLatUPFList_isset;

	// ID = id-RedundantCommonNetworkInstance, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionCommonNetworkInstance * redundantCommonNetworkInstance;
	int redundantCommonNetworkInstance_isset;

	// ID = id-RedundantPDUSessionInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_RedundantPDUSessionInformation * redundantPDUSessionInformation;
	int redundantPDUSessionInformation_isset;

	// ID = id-MBS-SessionAssociatedInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_MBS_SessionAssociatedInformation * mBSSessionAssociatedInformation;
	int mBSSessionAssociatedInformation_isset;

	
} SI_XNAP_DT_PDU_PDUSessionResourcesToBeSetup_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceSetupInfo_SNterminated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SecurityResult, PRESENCE = optional L:10856
	SI_XNAP_DT_SecurityResult * securityResult;
	int securityResult_isset;

	// ID = id-PDUSessionCommonNetworkInstance, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionCommonNetworkInstance * pDUSessionCommonNetworkInstance;
	int pDUSessionCommonNetworkInstance_isset;

	// ID = id-DefaultDRB-Allowed, PRESENCE = optional L:10856
	uint8_t defaultDRBAllowed;
	int defaultDRBAllowed_isset;

	// ID = id-SplitSessionIndicator, PRESENCE = optional L:10856
	uint8_t splitSessionIndicator;
	int splitSessionIndicator_isset;

	// ID = id-NonGBRResources-Offered, PRESENCE = optional L:10856
	uint8_t nonGBRResourcesOffered;
	int nonGBRResourcesOffered_isset;

	// ID = id-Redundant-UL-NG-U-TNLatUPF, PRESENCE = optional L:10856
	SI_XNAP_DT_UPTransportLayerInformation * redundantULNGUTNLatUPF;
	int redundantULNGUTNLatUPF_isset;

	// ID = id-RedundantCommonNetworkInstance, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionCommonNetworkInstance * redundantCommonNetworkInstance;
	int redundantCommonNetworkInstance_isset;

	// ID = id-RedundantPDUSessionInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_RedundantPDUSessionInformation * redundantPDUSessionInformation;
	int redundantPDUSessionInformation_isset;

	
} SI_XNAP_DT_PDU_PDUSessionResourceSetupInfo_SNterminated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSFlowsToBeSetup_List_Setup_SNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-TSCTrafficCharacteristics, PRESENCE = optional L:10856
	SI_XNAP_DT_TSCTrafficCharacteristics * tSCTrafficCharacteristics;
	int tSCTrafficCharacteristics_isset;

	// ID = id-RedundantQoSFlowIndicator, PRESENCE = optional L:10856
	uint8_t redundantQoSFlowIndicator;
	int redundantQoSFlowIndicator_isset;

	
} SI_XNAP_DT_PDU_QoSFlowsToBeSetup_List_Setup_SNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceSetupResponseInfo_SNterminated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-DRB-IDs-takenintouse, PRESENCE = optional L:10856
	SI_XNAP_DT_DRB_List * dRBIDstakenintouse;
	int dRBIDstakenintouse_isset;

	// ID = id-Redundant-DL-NG-U-TNLatNG-RAN, PRESENCE = optional L:10856
	SI_XNAP_DT_UPTransportLayerInformation * redundantDLNGUTNLatNGRAN;
	int redundantDLNGUTNLatNGRAN_isset;

	// ID = id-UsedRSNInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_RedundantPDUSessionInformation * usedRSNInformation;
	int usedRSNInformation_isset;

	// ID = id-S-CPAC-dataforwardinginfofromSource, PRESENCE = optional L:10856
	SI_XNAP_DT_DataforwardingandOffloadingInfofromSource * sCPACdataforwardinginfofromSource;
	int sCPACdataforwardinginfofromSource_isset;

	
} SI_XNAP_DT_PDU_PDUSessionResourceSetupResponseInfo_SNterminated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBsToBeSetupList_SetupResponse_SNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Additional-PDCP-Duplication-TNL-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Additional_PDCP_Duplication_TNL_List * additionalPDCPDuplicationTNLList;
	int additionalPDCPDuplicationTNLList_isset;

	// ID = id-RLCDuplicationInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_RLCDuplicationInformation * rLCDuplicationInformation;
	int rLCDuplicationInformation_isset;

	
} SI_XNAP_DT_PDU_DRBsToBeSetupList_SetupResponse_SNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CurrentQoSParaSetIndex, PRESENCE = optional L:10856
	unsigned long long int currentQoSParaSetIndex;
	int currentQoSParaSetIndex_isset;

	// ID = id-SourceDLForwardingIPAddress, PRESENCE = optional L:10856
	SI_XNAP_DT_TransportLayerAddress * sourceDLForwardingIPAddress;
	int sourceDLForwardingIPAddress_isset;

	
} SI_XNAP_DT_PDU_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceSetupInfo_MNterminated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionResourceSetupInfo_MNterminated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBsToBeSetupList_Setup_MNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Additional-PDCP-Duplication-TNL-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Additional_PDCP_Duplication_TNL_List * additionalPDCPDuplicationTNLList;
	int additionalPDCPDuplicationTNLList_isset;

	// ID = id-RLCDuplicationInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_RLCDuplicationInformation * rLCDuplicationInformation;
	int rLCDuplicationInformation_isset;

	
} SI_XNAP_DT_PDU_DRBsToBeSetupList_Setup_MNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSFlowsMappedtoDRB_Setup_MNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-TSCTrafficCharacteristics, PRESENCE = optional L:10856
	SI_XNAP_DT_TSCTrafficCharacteristics * tSCTrafficCharacteristics;
	int tSCTrafficCharacteristics_isset;

	
} SI_XNAP_DT_PDU_QoSFlowsMappedtoDRB_Setup_MNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceSetupResponseInfo_MNterminated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-DRBsNotAdmittedSetupModifyList, PRESENCE = optional L:10856
	SI_XNAP_DT_DRB_List_withCause * dRBsNotAdmittedSetupModifyList;
	int dRBsNotAdmittedSetupModifyList_isset;

	
} SI_XNAP_DT_PDU_PDUSessionResourceSetupResponseInfo_MNterminated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBsAdmittedList_SetupResponse_MNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Additional-PDCP-Duplication-TNL-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Additional_PDCP_Duplication_TNL_List * additionalPDCPDuplicationTNLList;
	int additionalPDCPDuplicationTNLList_isset;

	// ID = id-QoSFlowsMappedtoDRB-SetupResponse-MNterminated, PRESENCE = optional L:10856
	SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_MNterminated * qoSFlowsMappedtoDRBSetupResponseMNterminated;
	int qoSFlowsMappedtoDRBSetupResponseMNterminated_isset;

	
} SI_XNAP_DT_PDU_DRBsAdmittedList_SetupResponse_MNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceModificationInfo_SNterminated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PDUSessionCommonNetworkInstance, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionCommonNetworkInstance * pDUSessionCommonNetworkInstance;
	int pDUSessionCommonNetworkInstance_isset;

	// ID = id-DefaultDRB-Allowed, PRESENCE = optional L:10856
	uint8_t defaultDRBAllowed;
	int defaultDRBAllowed_isset;

	// ID = id-NonGBRResources-Offered, PRESENCE = optional L:10856
	uint8_t nonGBRResourcesOffered;
	int nonGBRResourcesOffered_isset;

	// ID = id-Redundant-UL-NG-U-TNLatUPF, PRESENCE = optional L:10856
	SI_XNAP_DT_UPTransportLayerInformation * redundantULNGUTNLatUPF;
	int redundantULNGUTNLatUPF_isset;

	// ID = id-RedundantCommonNetworkInstance, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionCommonNetworkInstance * redundantCommonNetworkInstance;
	int redundantCommonNetworkInstance_isset;

	// ID = id-SecurityIndication, PRESENCE = optional L:10856
	SI_XNAP_DT_SecurityIndication * securityIndication;
	int securityIndication_isset;

	
} SI_XNAP_DT_PDU_PDUSessionResourceModificationInfo_SNterminated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSFlowsToBeSetup_List_Modified_SNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-TSCTrafficCharacteristics, PRESENCE = optional L:10856
	SI_XNAP_DT_TSCTrafficCharacteristics * tSCTrafficCharacteristics;
	int tSCTrafficCharacteristics_isset;

	// ID = id-RedundantQoSFlowIndicator, PRESENCE = optional L:10856
	uint8_t redundantQoSFlowIndicator;
	int redundantQoSFlowIndicator_isset;

	
} SI_XNAP_DT_PDU_QoSFlowsToBeSetup_List_Modified_SNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBsToBeModified_List_Modified_SNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Additional-PDCP-Duplication-TNL-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Additional_PDCP_Duplication_TNL_List * additionalPDCPDuplicationTNLList;
	int additionalPDCPDuplicationTNLList_isset;

	
} SI_XNAP_DT_PDU_DRBsToBeModified_List_Modified_SNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceModificationResponseInfo_SNterminated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-DRB-IDs-takenintouse, PRESENCE = optional L:10856
	SI_XNAP_DT_DRB_List * dRBIDstakenintouse;
	int dRBIDstakenintouse_isset;

	// ID = id-Redundant-DL-NG-U-TNLatNG-RAN, PRESENCE = optional L:10856
	SI_XNAP_DT_UPTransportLayerInformation * redundantDLNGUTNLatNGRAN;
	int redundantDLNGUTNLatNGRAN_isset;

	// ID = id-SecurityResult, PRESENCE = optional L:10856
	SI_XNAP_DT_SecurityResult * securityResult;
	int securityResult_isset;

	
} SI_XNAP_DT_PDU_PDUSessionResourceModificationResponseInfo_SNterminated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Additional-PDCP-Duplication-TNL-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Additional_PDCP_Duplication_TNL_List * additionalPDCPDuplicationTNLList;
	int additionalPDCPDuplicationTNLList_isset;

	// ID = id-RLCDuplicationInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_RLCDuplicationInformation * rLCDuplicationInformation;
	int rLCDuplicationInformation_isset;

	// ID = id-secondary-SN-UL-PDCP-UP-TNLInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_UPTransportParameters * secondarySNULPDCPUPTNLInfo;
	int secondarySNULPDCPUPTNLInfo_isset;

	// ID = id-pdcpDuplicationConfiguration, PRESENCE = optional L:10856
	uint8_t pdcpDuplicationConfiguration;
	int pdcpDuplicationConfiguration_isset;

	// ID = id-duplicationActivation, PRESENCE = optional L:10856
	uint8_t duplicationActivation;
	int duplicationActivation_isset;

	
} SI_XNAP_DT_PDU_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceModificationInfo_MNterminated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionResourceModificationInfo_MNterminated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBsToBeModifiedList_Modification_MNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Additional-PDCP-Duplication-TNL-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Additional_PDCP_Duplication_TNL_List * additionalPDCPDuplicationTNLList;
	int additionalPDCPDuplicationTNLList_isset;

	// ID = id-RLCDuplicationInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_RLCDuplicationInformation * rLCDuplicationInformation;
	int rLCDuplicationInformation_isset;

	
} SI_XNAP_DT_PDU_DRBsToBeModifiedList_Modification_MNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceModificationResponseInfo_MNterminated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionResourceModificationResponseInfo_MNterminated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBsAdmittedList_ModificationResponse_MNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Additional-PDCP-Duplication-TNL-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Additional_PDCP_Duplication_TNL_List * additionalPDCPDuplicationTNLList;
	int additionalPDCPDuplicationTNLList_isset;

	// ID = id-QoSFlowsMappedtoDRB-SetupResponse-MNterminated, PRESENCE = optional L:10856
	SI_XNAP_DT_QoSFlowsMappedtoDRB_SetupResponse_MNterminated * qoSFlowsMappedtoDRBSetupResponseMNterminated;
	int qoSFlowsMappedtoDRBSetupResponseMNterminated_isset;

	
} SI_XNAP_DT_PDU_DRBsAdmittedList_ModificationResponse_MNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceChangeRequiredInfo_SNterminated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionResourceChangeRequiredInfo_SNterminated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceChangeConfirmInfo_SNterminated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-DRB-IDs-takenintouse, PRESENCE = optional L:10856
	SI_XNAP_DT_DRB_List * dRBIDstakenintouse;
	int dRBIDstakenintouse_isset;

	
} SI_XNAP_DT_PDU_PDUSessionResourceChangeConfirmInfo_SNterminated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceChangeRequiredInfo_MNterminated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionResourceChangeRequiredInfo_MNterminated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceChangeConfirmInfo_MNterminated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionResourceChangeConfirmInfo_MNterminated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceModRqdInfo_SNterminated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionResourceModRqdInfo_SNterminated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBsToBeSetup_List_ModRqd_SNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Additional-PDCP-Duplication-TNL-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Additional_PDCP_Duplication_TNL_List * additionalPDCPDuplicationTNLList;
	int additionalPDCPDuplicationTNLList_isset;

	// ID = id-RLCDuplicationInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_RLCDuplicationInformation * rLCDuplicationInformation;
	int rLCDuplicationInformation_isset;

	
} SI_XNAP_DT_PDU_DRBsToBeSetup_List_ModRqd_SNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-QosFlowMappingIndication, PRESENCE = optional L:10856
	uint8_t qosFlowMappingIndication;
	int qosFlowMappingIndication_isset;

	
} SI_XNAP_DT_PDU_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBsToBeModified_List_ModRqd_SNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Additional-PDCP-Duplication-TNL-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Additional_PDCP_Duplication_TNL_List * additionalPDCPDuplicationTNLList;
	int additionalPDCPDuplicationTNLList_isset;

	// ID = id-RLCDuplicationInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_RLCDuplicationInformation * rLCDuplicationInformation;
	int rLCDuplicationInformation_isset;

	
} SI_XNAP_DT_PDU_DRBsToBeModified_List_ModRqd_SNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-QosFlowMappingIndication, PRESENCE = optional L:10856
	uint8_t qosFlowMappingIndication;
	int qosFlowMappingIndication_isset;

	
} SI_XNAP_DT_PDU_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceModConfirmInfo_SNterminated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-DRB-IDs-takenintouse, PRESENCE = optional L:10856
	SI_XNAP_DT_DRB_List * dRBIDstakenintouse;
	int dRBIDstakenintouse_isset;

	
} SI_XNAP_DT_PDU_PDUSessionResourceModConfirmInfo_SNterminated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBsAdmittedList_ModConfirm_SNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Additional-PDCP-Duplication-TNL-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Additional_PDCP_Duplication_TNL_List * additionalPDCPDuplicationTNLList;
	int additionalPDCPDuplicationTNLList_isset;

	
} SI_XNAP_DT_PDU_DRBsAdmittedList_ModConfirm_SNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceModRqdInfo_MNterminated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionResourceModRqdInfo_MNterminated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBsToBeModified_List_ModRqd_MNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Additional-PDCP-Duplication-TNL-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Additional_PDCP_Duplication_TNL_List * additionalPDCPDuplicationTNLList;
	int additionalPDCPDuplicationTNLList_isset;

	
} SI_XNAP_DT_PDU_DRBsToBeModified_List_ModRqd_MNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceModConfirmInfo_MNterminated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionResourceModConfirmInfo_MNterminated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceBearerSetupCompleteInfo_SNterminated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionResourceBearerSetupCompleteInfo_SNterminated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Secondary-MN-Xn-U-TNLInfoatM, PRESENCE = optional L:10856
	SI_XNAP_DT_UPTransportLayerInformation * secondaryMNXnUTNLInfoatM;
	int secondaryMNXnUTNLInfoatM_isset;

	
} SI_XNAP_DT_PDU_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourceSecondaryRATUsageItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionUsageReport_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionUsageReport_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Periodical_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Periodical_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PLMNAreaBasedQMC_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PLMNAreaBasedQMC_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PosPartialUEContextInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PosPartialUEContextInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PredictedUETrajectory_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PredictedUETrajectory_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PredictedTrajectoryCellInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PredictedTrajectoryCellInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PredictedTrajectoryNGRANCellInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PredictedTrajectoryNGRANCellInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ProtectedE_UTRAResourceIndication_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ProtectedE_UTRAResourceIndication_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ProtectedE_UTRAResource_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ProtectedE_UTRAResource_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ProtectedE_UTRAFootprintTimePattern_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ProtectedE_UTRAFootprintTimePattern_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PNI_NPN_AreaScopeofMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PNI_NPNBasedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PNI_NPNBasedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QMCConfigInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_QMCConfigInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UEAppLayerMeasInfo_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UEAppLayerMeasInfo_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QMCCoordinationRequest_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_QMCCoordinationRequest_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MN_to_SN_QMCCoordRequestList_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MN_to_SN_QMCCoordRequestList_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SN_to_MN_QMCCoordRequestList_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SN_to_MN_QMCCoordRequestList_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QMCCoordinationResponse_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_QMCCoordinationResponse_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_MN_to_SN_QMCCoordResponseList_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_MN_to_SN_QMCCoordResponseList_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SN_to_MN_QMCCoordResponseList_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SN_to_MN_QMCCoordResponseList_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoERVQoEReportingPaths_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_QoERVQoEReportingPaths_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RVQoEConfig_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RVQoEConfig_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSCharacteristics_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_QoSCharacteristics_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSFlowLevelQoSParameters_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-QoSMonitoringRequest, PRESENCE = optional L:10856
	uint8_t qoSMonitoringRequest;
	int qoSMonitoringRequest_isset;

	// ID = id-QosMonitoringReportingFrequency, PRESENCE = optional L:10856
	unsigned long long int qosMonitoringReportingFrequency;
	int qosMonitoringReportingFrequency_isset;

	// ID = id-QoSMonitoringDisabled, PRESENCE = optional L:10856
	uint8_t qoSMonitoringDisabled;
	int qoSMonitoringDisabled_isset;

	// ID = id-PDUSetQoSParameters, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSetQoSParameters * pDUSetQoSParameters;
	int pDUSetQoSParameters_isset;

	
} SI_XNAP_DT_PDU_QoSFlowLevelQoSParameters_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSFlowNotificationControlIndicationInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CurrentQoSParaSetIndex, PRESENCE = optional L:10856
	unsigned long long int currentQoSParaSetIndex;
	int currentQoSParaSetIndex_isset;

	
} SI_XNAP_DT_PDU_QoSFlowNotificationControlIndicationInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSFlow_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_QoSFlow_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSFlowwithCause_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_QoSFlowwithCause_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoS_Mapping_Information_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_QoS_Mapping_Information_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSFlowsAdmitted_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CurrentQoSParaSetIndex, PRESENCE = optional L:10856
	unsigned long long int currentQoSParaSetIndex;
	int currentQoSParaSetIndex_isset;

	
} SI_XNAP_DT_PDU_QoSFlowsAdmitted_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSFlowsToBeSetup_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-TSCTrafficCharacteristics, PRESENCE = optional L:10856
	SI_XNAP_DT_TSCTrafficCharacteristics * tSCTrafficCharacteristics;
	int tSCTrafficCharacteristics_isset;

	// ID = id-RedundantQoSFlowIndicator, PRESENCE = optional L:10856
	uint8_t redundantQoSFlowIndicator;
	int redundantQoSFlowIndicator_isset;

	// ID = id-ECNMarkingorCongestionInformationReportingRequest, PRESENCE = optional L:10856
	SI_XNAP_DT_ECNMarkingorCongestionInformationReportingRequest * eCNMarkingorCongestionInformationReportingRequest;
	int eCNMarkingorCongestionInformationReportingRequest_isset;

	
} SI_XNAP_DT_PDU_QoSFlowsToBeSetup_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSFlowsUsageReport_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_QoSFlowsUsageReport_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RAReportList_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-UEAssistantIdentifier, PRESENCE = optional L:10856
	unsigned long long int uEAssistantIdentifier;
	int uEAssistantIdentifier_isset;

	// ID = id-PSCellListContainer, PRESENCE = optional L:10856
	SI_XNAP_DT_PSCellListContainer * pSCellListContainer;
	int pSCellListContainer_isset;

	
} SI_XNAP_DT_PDU_RAReportList_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RadioResourceStatus_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RadioResourceStatus_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RANAreaID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RANAreaID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RANPagingArea_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RANPagingArea_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RANPagingAreaChoice_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RANPagingAreaChoice_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RANPagingAttemptInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RANPagingAttemptInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RBsetConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RBsetConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RedundantPDUSessionInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PDUSession-PairID, PRESENCE = optional L:10856
	unsigned long long int pDUSessionPairID;
	int pDUSessionPairID_isset;

	
} SI_XNAP_DT_PDU_RedundantPDUSessionInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ReplacingCells_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ReplacingCells_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ReportType_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ReportType_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ReservedSubframePattern_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ReservedSubframePattern_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ResetRequestTypeInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ResetRequestTypeInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ResetRequestTypeInfo_Full_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ResetRequestTypeInfo_Full_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ResetRequestTypeInfo_Partial_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ResetRequestTypeInfo_Partial_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ResetRequestPartialReleaseItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ResetRequestPartialReleaseItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ResetResponseTypeInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ResetResponseTypeInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ResetResponseTypeInfo_Full_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ResetResponseTypeInfo_Full_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ResetResponseTypeInfo_Partial_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ResetResponseTypeInfo_Partial_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ResetResponsePartialReleaseItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ResetResponsePartialReleaseItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RLC_Status_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RLC_Status_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RLCDuplicationInformation_ItemExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RLCDuplicationInformation_ItemExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RLCDuplicationState_ItemExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RLCDuplicationState_ItemExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RRCConnections_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RRCConnections_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RRCReestab_initiated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RRCReestab_initiated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RRCReestab_Initiated_Reporting_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RRCReestab_Initiated_Reporting_wo_UERLFReport_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RRCConnReestab-Indicator, PRESENCE = optional L:10856
	uint8_t rRCConnReestabIndicator;
	int rRCConnReestabIndicator_isset;

	
} SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_wo_UERLFReport_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RRCReestab_Initiated_Reporting_with_UERLFReport_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_with_UERLFReport_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RRCSetup_initiated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RRCSetup_initiated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RRCSetup_Initiated_Reporting_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RRCSetup_Initiated_Reporting_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RRCSetup_Initiated_Reporting_with_UERLFReport_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RRCSetup_Initiated_Reporting_with_UERLFReport_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RaReportIndicationList_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RaReportIndicationList_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RadioResourceStatusNR_U_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RadioResourceStatusNR_U_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_S_BasedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_S_BasedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_S_CPAC_Request_Info_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_S_CPAC_Request_Info_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_S_CPAC_SecurityConfig_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_S_CPAC_SecurityConfig_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_S_CPAC_MultiTargetSN_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_S_CPAC_MultiTargetSN_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SecondarydataForwardingInfoFromTarget_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SecondarydataForwardingInfoFromTarget_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SDTSupportRequest_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SDTSupportRequest_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SDTPartialUEContextInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SDTPartialUEContextInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SDT_DRBsToBeSetupList_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SDT_DRBsToBeSetupList_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SDT_SRBsToBeSetupList_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SDT_SRBsToBeSetupList_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SDTDataForwardingDRBList_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SDTDataForwardingDRBList_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SecondaryRATUsageInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SecondaryRATUsageInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SecurityIndication_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SecurityIndication_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SecurityResult_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SecurityResult_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SensorMeasurementConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SensorMeasurementConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SensorNameConfig_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SensorNameConfig_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-BPLMN-ID-Info-EUTRA, PRESENCE = optional L:10856
	SI_XNAP_DT_BPLMN_ID_Info_EUTRA * bPLMNIDInfoEUTRA;
	int bPLMNIDInfoEUTRA_isset;

	// ID = id-NPRACHConfiguration, PRESENCE = optional L:10856
	SI_XNAP_DT_NPRACHConfiguration * nPRACHConfiguration;
	int nPRACHConfiguration_isset;

	
} SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA_perBPLMN_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_perBPLMN_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA_ModeInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_ModeInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA_FDDInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-OffsetOfNbiotChannelNumberToDL-EARFCN, PRESENCE = optional L:10856
	uint8_t offsetOfNbiotChannelNumberToDLEARFCN;
	int offsetOfNbiotChannelNumberToDLEARFCN_isset;

	// ID = id-OffsetOfNbiotChannelNumberToUL-EARFCN, PRESENCE = optional L:10856
	uint8_t offsetOfNbiotChannelNumberToULEARFCN;
	int offsetOfNbiotChannelNumberToULEARFCN_isset;

	
} SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_FDDInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ServedCellInformation_E_UTRA_TDDInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-OffsetOfNbiotChannelNumberToDL-EARFCN, PRESENCE = optional L:10856
	uint8_t offsetOfNbiotChannelNumberToDLEARFCN;
	int offsetOfNbiotChannelNumberToDLEARFCN_isset;

	// ID = id-NBIoT-UL-DL-AlignmentOffset, PRESENCE = optional L:10856
	uint8_t nBIoTULDLAlignmentOffset;
	int nBIoTULDLAlignmentOffset_isset;

	
} SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_TDDInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ServedCells_E_UTRA_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SFN-Offset, PRESENCE = optional L:10856
	SI_XNAP_DT_SFN_Offset * sFNOffset;
	int sFNOffset_isset;

	
} SI_XNAP_DT_PDU_ServedCells_E_UTRA_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ServedCellsToUpdate_E_UTRA_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ServedCellsToUpdate_E_UTRA_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Served_cells_ToModify_E_UTRA_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SFN-Offset, PRESENCE = optional L:10856
	SI_XNAP_DT_SFN_Offset * sFNOffset;
	int sFNOffset_isset;

	
} SI_XNAP_DT_PDU_Served_cells_ToModify_E_UTRA_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ServedCellInformation_NR_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-BPLMN-ID-Info-NR, PRESENCE = optional L:10856
	SI_XNAP_DT_BPLMN_ID_Info_NR * bPLMNIDInfoNR;
	int bPLMNIDInfoNR_isset;

	// ID = id-ConfiguredTACIndication, PRESENCE = optional L:10856
	uint8_t configuredTACIndication;
	int configuredTACIndication_isset;

	// ID = id-SSB-PositionsInBurst, PRESENCE = optional L:10856
	SI_XNAP_DT_SSB_PositionsInBurst * sSBPositionsInBurst;
	int sSBPositionsInBurst_isset;

	// ID = id-NRCellPRACHConfig, PRESENCE = optional L:10856
	SI_XNAP_DT_NRCellPRACHConfig * nRCellPRACHConfig;
	int nRCellPRACHConfig_isset;

	// ID = id-NPN-Broadcast-Information, PRESENCE = optional L:10856
	SI_XNAP_DT_NPN_Broadcast_Information * nPNBroadcastInformation;
	int nPNBroadcastInformation_isset;

	// ID = id-CSI-RSTransmissionIndication, PRESENCE = optional L:10856
	uint8_t cSIRSTransmissionIndication;
	int cSIRSTransmissionIndication_isset;

	// ID = id-SFN-Offset, PRESENCE = optional L:10856
	SI_XNAP_DT_SFN_Offset * sFNOffset;
	int sFNOffset_isset;

	// ID = id-Supported-MBS-FSA-ID-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Supported_MBS_FSA_ID_List * supportedMBSFSAIDList;
	int supportedMBSFSAIDList_isset;

	// ID = id-NR-U-ChannelInfo-List, PRESENCE = optional L:10856
	SI_XNAP_DT_NR_U_ChannelInfo_List * nRUChannelInfoList;
	int nRUChannelInfoList_isset;

	// ID = id-Additional-Measurement-Timing-Configuration-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Additional_Measurement_Timing_Configuration_List * additionalMeasurementTimingConfigurationList;
	int additionalMeasurementTimingConfigurationList_isset;

	// ID = id-Redcap-Bcast-Information, PRESENCE = optional L:10856
	SI_XNAP_DT_Redcap_Bcast_Information * redcapBcastInformation;
	int redcapBcastInformation_isset;

	// ID = id-eRedcap-Bcast-Information, PRESENCE = optional L:10856
	SI_XNAP_DT_ERedcap_Bcast_Information * eRedcapBcastInformation;
	int eRedcapBcastInformation_isset;

	// ID = id-MobileIABCell, PRESENCE = optional L:10856
	uint8_t mobileIABCell;
	int mobileIABCell_isset;

	// ID = id-XR-Bcast-Information, PRESENCE = optional L:10856
	uint8_t xRBcastInformation;
	int xRBcastInformation_isset;

	// ID = id-BarringExemptionforEmerCallInfo, PRESENCE = optional L:10856
	uint8_t barringExemptionforEmerCallInfo;
	int barringExemptionforEmerCallInfo_isset;

	
} SI_XNAP_DT_PDU_ServedCellInformation_NR_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SFN_Offset_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SFN_Offset_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ServedCells_NR_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ServedCellSpecificInfoReq-NR, PRESENCE = optional L:10856
	SI_XNAP_DT_ServedCellSpecificInfoReq_NR * servedCellSpecificInfoReqNR;
	int servedCellSpecificInfoReqNR_isset;

	
} SI_XNAP_DT_PDU_ServedCells_NR_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Served_cells_ToModify_NR_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Served_cells_ToModify_NR_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ServedCellSpecificInfoReq_NR_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ServedCellSpecificInfoReq_NR_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ServedCellsToUpdate_NR_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ServedCellsToUpdate_NR_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SharedResourceType_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SharedResourceType_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SharedResourceType_UL_OnlySharing_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SharedResourceType_UL_OnlySharing_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SharedResourceType_ULDL_Sharing_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SharedResourceType_ULDL_Sharing_UL_Resources_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_UL_Resources_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SharedResourceType_ULDL_Sharing_DL_Resources_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_DL_Resources_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SliceAvailableCapacity_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SliceAvailableCapacity_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SNSSAIAvailableCapacity_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SNSSAIAvailableCapacity_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SliceRadioResourceStatus_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SliceRadioResourceStatus_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SLPositioning_Ranging_Services_Info_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SLPositioning_Ranging_Services_Info_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RSPP_transport_QoS_parameters_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RSPP_transport_QoS_parameters_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RSPPQoSFlowItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RSPPQoSFlowItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RSPPFlowBitRates_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RSPPFlowBitRates_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SNSSAIRadioResourceStatus_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SNSSAIRadioResourceStatus_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SliceToReport_List_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SliceToReport_List_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SNSSAI_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SNSSAI_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SlotConfiguration_List_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SlotConfiguration_List_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_S_NSSAI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_S_NSSAI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SNPNIdentity_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SNPNIdentity_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SpecialSubframeInfo_E_UTRA_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SpecialSubframeInfo_E_UTRA_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SSBAreaCapacityValue_List_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SSBAreaCapacityValue_List_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SSBAreaRadioResourceStatus_List_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-DL-scheduling-PDCCH-CCE-usage, PRESENCE = optional L:10856
	unsigned long long int dLschedulingPDCCHCCEusage;
	int dLschedulingPDCCHCCEusage_isset;

	// ID = id-UL-scheduling-PDCCH-CCE-usage, PRESENCE = optional L:10856
	unsigned long long int uLschedulingPDCCHCCEusage;
	int uLschedulingPDCCHCCEusage_isset;

	
} SI_XNAP_DT_PDU_SSBAreaRadioResourceStatus_List_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SSB_Coverage_Modification_List_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SSB_Coverage_Modification_List_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SSB_PositionsInBurst_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SSB_PositionsInBurst_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SSBOffsets_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SSBOffsets_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SSBOffsetInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SSBOffsetInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SSBOffsetModificationRange_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SSBOffsetModificationRange_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SSBToReport_List_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SSBToReport_List_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SSB_transmisisonBitmap_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SSB_transmisisonBitmap_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SuccessfulHOReportList_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SuccessfulHOReportList_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SuccessfulPSCellChangeReportList_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SuccessfulPSCellChangeReportList_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SUL_Information_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-CarrierList, PRESENCE = optional L:10856
	SI_XNAP_DT_NRCarrierList * carrierList;
	int carrierList_isset;

	// ID = id-FrequencyShift7p5khz, PRESENCE = optional L:10856
	uint8_t frequencyShift7p5khz;
	int frequencyShift7p5khz_isset;

	
} SI_XNAP_DT_PDU_SUL_Information_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SupportedSULBandItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SupportedSULBandItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SymbolAllocation_in_Slot_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SymbolAllocation_in_Slot_AllDL_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_AllDL_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SymbolAllocation_in_Slot_AllUL_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_AllUL_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SymbolAllocation_in_Slot_BothDLandUL_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-permutation, PRESENCE = optional L:10856
	uint8_t permutation;
	int permutation_isset;

	
} SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_BothDLandUL_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SNPN_CellBasedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SNPN_CellBasedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SNPN_CellIdforMDT_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SNPN_CellIdforMDT_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SNPN_TAIBasedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SNPN_TAIBasedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SNPN_TAIforMDT_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SNPN_TAIforMDT_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SNPN_BasedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SNPN_BasedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SNPNforMDT_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SNPNforMDT_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TABasedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TABasedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TAIBasedMDT_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TAIBasedMDT_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TAIforMDT_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TAIforMDT_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TAINSAGSupportItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TAINSAGSupportItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TAISliceUnavailableCellItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TAISliceUnavailableCellItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SliceAvailabilityList_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SliceAvailabilityList_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_AvailableCellList_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_AvailableCellList_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UnavailableCellList_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UnavailableCellList_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TAISupport_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TAISupport_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TABasedQMC_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TABasedQMC_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TAIBasedQMC_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TAIBasedQMC_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TAI_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TAI_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TargetCGI_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TargetCGI_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TargetCellList_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TargetCellList_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TimeSynchronizationAssistanceInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ClockQualityReportingControlInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_ClockQualityReportingControlInfo * clockQualityReportingControlInfo;
	int clockQualityReportingControlInfo_isset;

	
} SI_XNAP_DT_PDU_TimeSynchronizationAssistanceInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TNLConfigurationInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TNLConfigurationInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TNLA_To_Add_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TNLA_To_Add_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TNLA_To_Update_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TNLA_To_Update_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TNLA_To_Remove_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TNLA_To_Remove_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TNLA_Setup_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TNLA_Setup_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TNLA_Failed_To_Setup_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TNLA_Failed_To_Setup_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TraceActivation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-TraceCollectionEntityURI, PRESENCE = optional L:10856
	SI_XNAP_DT_URIaddress * traceCollectionEntityURI;
	int traceCollectionEntityURI_isset;

	// ID = id-MDT-Configuration, PRESENCE = optional L:10856
	SI_XNAP_DT_MDT_Configuration * mDTConfiguration;
	int mDTConfiguration_isset;

	
} SI_XNAP_DT_PDU_TraceActivation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TrafficProfile_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TrafficProfile_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TrafficReleaseType_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TrafficReleaseType_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TrafficToBeReleaseInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TrafficToBeReleaseInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TrafficToBeRelease_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TrafficToBeRelease_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TSCTrafficCharacteristics_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TSCTrafficCharacteristics_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TSCAssistanceInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-SurvivalTime, PRESENCE = optional L:10856
	unsigned long long int survivalTime;
	int survivalTime_isset;

	// ID = id-CapabilityForBATAdaptation, PRESENCE = optional L:10856
	uint8_t capabilityForBATAdaptation;
	int capabilityForBATAdaptation_isset;

	// ID = id-N6JitterInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_N6JitterInformation * n6JitterInformation;
	int n6JitterInformation_isset;

	
} SI_XNAP_DT_PDU_TSCAssistanceInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UEAggregateMaximumBitRate_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UEAggregateMaximumBitRate_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UEAppLayerMeasConfigInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBSCommServiceType, PRESENCE = optional L:10856
	uint8_t mBSCommServiceType;
	int mBSCommServiceType_isset;

	// ID = id-AssistanceInformationQoE-Meas, PRESENCE = optional L:10856
	unsigned long long int assistanceInformationQoEMeas;
	int assistanceInformationQoEMeas_isset;

	// ID = id-QoERVQoEReportingPaths, PRESENCE = optional L:10856
	SI_XNAP_DT_QoERVQoEReportingPaths * qoERVQoEReportingPaths;
	int qoERVQoEReportingPaths_isset;

	
} SI_XNAP_DT_PDU_UEAppLayerMeasConfigInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UEContextID_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UEContextID_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UEContextIDforRRCResume_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UEContextIDforRRCResume_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UEContextIDforRRCReestablishment_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UEContextIDforRRCReestablishment_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UEContextInfoRetrUECtxtResp_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-FiveGCMobilityRestrictionListContainer, PRESENCE = optional L:10856
	SI_XNAP_DT_FiveGCMobilityRestrictionListContainer * fiveGCMobilityRestrictionListContainer;
	int fiveGCMobilityRestrictionListContainer_isset;

	// ID = id-NRUESidelinkAggregateMaximumBitRate, PRESENCE = optional L:10856
	SI_XNAP_DT_NRUESidelinkAggregateMaximumBitRate * nRUESidelinkAggregateMaximumBitRate;
	int nRUESidelinkAggregateMaximumBitRate_isset;

	// ID = id-LTEUESidelinkAggregateMaximumBitRate, PRESENCE = optional L:10856
	SI_XNAP_DT_LTEUESidelinkAggregateMaximumBitRate * lTEUESidelinkAggregateMaximumBitRate;
	int lTEUESidelinkAggregateMaximumBitRate_isset;

	// ID = id-UERadioCapabilityID, PRESENCE = optional L:10856
	SI_XNAP_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	// ID = id-MBS-SessionInformation-List, PRESENCE = optional L:10856
	SI_XNAP_DT_MBS_SessionInformation_List * mBSSessionInformationList;
	int mBSSessionInformationList_isset;

	// ID = id-NoPDUSessionIndication, PRESENCE = optional L:10856
	uint8_t noPDUSessionIndication;
	int noPDUSessionIndication_isset;

	// ID = id-FiveGProSeUEPC5AggregateMaximumBitRate, PRESENCE = optional L:10856
	SI_XNAP_DT_NRUESidelinkAggregateMaximumBitRate * fiveGProSeUEPC5AggregateMaximumBitRate;
	int fiveGProSeUEPC5AggregateMaximumBitRate_isset;

	// ID = id-UESliceMaximumBitRateList, PRESENCE = optional L:10856
	SI_XNAP_DT_UESliceMaximumBitRateList * uESliceMaximumBitRateList;
	int uESliceMaximumBitRateList_isset;

	// ID = id-PositioningInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_PositioningInformation * positioningInformation;
	int positioningInformation_isset;

	// ID = id-NRA2XUEPC5AggregateMaximumBitRate, PRESENCE = optional L:10856
	SI_XNAP_DT_NRUESidelinkAggregateMaximumBitRate * nRA2XUEPC5AggregateMaximumBitRate;
	int nRA2XUEPC5AggregateMaximumBitRate_isset;

	// ID = id-LTEA2XUEPC5AggregateMaximumBitRate, PRESENCE = optional L:10856
	SI_XNAP_DT_LTEUESidelinkAggregateMaximumBitRate * lTEA2XUEPC5AggregateMaximumBitRate;
	int lTEA2XUEPC5AggregateMaximumBitRate_isset;

	// ID = id-NRPPaPositioningInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_NRPPaPositioningInformation * nRPPaPositioningInformation;
	int nRPPaPositioningInformation_isset;

	
} SI_XNAP_DT_PDU_UEContextInfoRetrUECtxtResp_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UEHistoryInformationFromTheUE_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UEHistoryInformationFromTheUE_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UEIdentityIndexValue_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UEIdentityIndexValue_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UEIdentityIndexList_MBSGroupPaging_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UEIdentityIndexList_MBSGroupPaging_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UEIdentityIndexValueMBSGroupPaging_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UEIdentityIndexValueMBSGroupPaging_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UERadioCapabilityForPaging_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UERadioCapabilityForPaging_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UERANPagingIdentity_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UERANPagingIdentity_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UERLFReportContainer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-UERLFReportContainerLTEExtension, PRESENCE = mandatory L:10856
	SI_XNAP_DT_UERLFReportContainerLTEExtension * uERLFReportContainerLTEExtension;
	int uERLFReportContainerLTEExtension_isset;

	
} SI_XNAP_DT_PDU_UERLFReportContainer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UERLFReportContainerLTEExtension_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UERLFReportContainerLTEExtension_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UESliceMaximumBitRate_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UESliceMaximumBitRate_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UESecurityCapabilities_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UESecurityCapabilities_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ULConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ULConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ULF1Terminating_BHInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ULF1Terminating_BHInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ULNonF1Terminating_BHInfo_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ULNonF1Terminating_BHInfo_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UPTransportLayerInformation_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UPTransportLayerInformation_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UPTransportParametersItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UPTransportParametersItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UserPlaneFailureIndication_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UserPlaneFailureIndication_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UEAssociatedInfoResult_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UEAssociatedInfoResult_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UEPerformance_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UEPerformance_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UEPerformanceCollectionConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UEPerformanceCollectionConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UETrajectoryCollectionConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UETrajectoryCollectionConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_VolumeTimedReport_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_VolumeTimedReport_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_WLANMeasurementConfiguration_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_WLANMeasurementConfiguration_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] handoverPreparation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_HandoverRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-sourceNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sourceNGRANnodeUEXnAPID;
	int sourceNGRANnodeUEXnAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-targetCellGlobalID, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Target_CGI * targetCellGlobalID;
	int targetCellGlobalID_isset;

	// ID = id-GUAMI, PRESENCE = mandatory L:10856
	SI_XNAP_DT_GUAMI * gUAMI;
	int gUAMI_isset;

	// ID = id-UEContextInfoHORequest, PRESENCE = mandatory L:10856
	SI_XNAP_DT_UEContextInfoHORequest * uEContextInfoHORequest;
	int uEContextInfoHORequest_isset;

	// ID = id-TraceActivation, PRESENCE = optional L:10856
	SI_XNAP_DT_TraceActivation * traceActivation;
	int traceActivation_isset;

	// ID = id-MaskedIMEISV, PRESENCE = optional L:10856
	SI_XNAP_DT_MaskedIMEISV * maskedIMEISV;
	int maskedIMEISV_isset;

	// ID = id-UEHistoryInformation, PRESENCE = mandatory L:10856
	SI_XNAP_DT_UEHistoryInformation * uEHistoryInformation;
	int uEHistoryInformation_isset;

	// ID = id-UEContextRefAtSN-HORequest, PRESENCE = optional L:10856
	SI_XNAP_DT_UEContextRefAtSN_HORequest * uEContextRefAtSNHORequest;
	int uEContextRefAtSNHORequest_isset;

	// ID = id-CHOinformation-Req, PRESENCE = optional L:10856
	SI_XNAP_DT_CHOinformation_Req * cHOinformationReq;
	int cHOinformationReq_isset;

	// ID = id-NRV2XServicesAuthorized, PRESENCE = optional L:10856
	SI_XNAP_DT_NRV2XServicesAuthorized * nRV2XServicesAuthorized;
	int nRV2XServicesAuthorized_isset;

	// ID = id-LTEV2XServicesAuthorized, PRESENCE = optional L:10856
	SI_XNAP_DT_LTEV2XServicesAuthorized * lTEV2XServicesAuthorized;
	int lTEV2XServicesAuthorized_isset;

	// ID = id-PC5QoSParameters, PRESENCE = optional L:10856
	SI_XNAP_DT_PC5QoSParameters * pC5QoSParameters;
	int pC5QoSParameters_isset;

	// ID = id-MobilityInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_MobilityInformation * mobilityInformation;
	int mobilityInformation_isset;

	// ID = id-UEHistoryInformationFromTheUE, PRESENCE = optional L:10856
	SI_XNAP_DT_UEHistoryInformationFromTheUE * uEHistoryInformationFromTheUE;
	int uEHistoryInformationFromTheUE_isset;

	// ID = id-IABNodeIndication, PRESENCE = optional L:10856
	uint8_t iABNodeIndication;
	int iABNodeIndication_isset;

	// ID = id-NoPDUSessionIndication, PRESENCE = optional L:10856
	uint8_t noPDUSessionIndication;
	int noPDUSessionIndication_isset;

	// ID = id-TimeSynchronizationAssistanceInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_TimeSynchronizationAssistanceInformation * timeSynchronizationAssistanceInformation;
	int timeSynchronizationAssistanceInformation_isset;

	// ID = id-QMCConfigInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_QMCConfigInfo * qMCConfigInfo;
	int qMCConfigInfo_isset;

	// ID = id-FiveGProSeAuthorized, PRESENCE = optional L:10856
	SI_XNAP_DT_FiveGProSeAuthorized * fiveGProSeAuthorized;
	int fiveGProSeAuthorized_isset;

	// ID = id-FiveGProSePC5QoSParameters, PRESENCE = optional L:10856
	SI_XNAP_DT_FiveGProSePC5QoSParameters * fiveGProSePC5QoSParameters;
	int fiveGProSePC5QoSParameters_isset;

	// ID = id-IABAuthorizationStatus, PRESENCE = optional L:10856
	uint8_t iABAuthorizationStatus;
	int iABAuthorizationStatus_isset;

	// ID = id-DLLBTFailureInformationRequest, PRESENCE = optional L:10856
	uint8_t dLLBTFailureInformationRequest;
	int dLLBTFailureInformationRequest_isset;

	// ID = id-AerialUESubscriptionInformation, PRESENCE = optional L:10856
	uint8_t aerialUESubscriptionInformation;
	int aerialUESubscriptionInformation_isset;

	// ID = id-NRA2XServicesAuthorized, PRESENCE = optional L:10856
	SI_XNAP_DT_NRA2XServicesAuthorized * nRA2XServicesAuthorized;
	int nRA2XServicesAuthorized_isset;

	// ID = id-LTEA2XServicesAuthorized, PRESENCE = optional L:10856
	SI_XNAP_DT_LTEA2XServicesAuthorized * lTEA2XServicesAuthorized;
	int lTEA2XServicesAuthorized_isset;

	// ID = id-A2XPC5QoSParameters, PRESENCE = optional L:10856
	SI_XNAP_DT_A2XPC5QoSParameters * a2XPC5QoSParameters;
	int a2XPC5QoSParameters_isset;

	// ID = id-CellBasedUETrajectoryPrediction, PRESENCE = optional L:10856
	SI_XNAP_DT_CellBasedUETrajectoryPrediction * cellBasedUETrajectoryPrediction;
	int cellBasedUETrajectoryPrediction_isset;

	// ID = id-DataCollectionID, PRESENCE = optional L:10856
	SI_XNAP_DT_DataCollectionID * dataCollectionID;
	int dataCollectionID_isset;

	// ID = id-CandidateRelayUEInfoList, PRESENCE = optional L:10856
	SI_XNAP_DT_CandidateRelayUEInfoList * candidateRelayUEInfoList;
	int candidateRelayUEInfoList_isset;

	// ID = id-SourceSN-to-TargetSN-QMCInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_QMCConfigInfo * sourceSNtoTargetSNQMCInfo;
	int sourceSNtoTargetSNQMCInfo_isset;

	// ID = id-MobileIAB-AuthorizationStatus, PRESENCE = optional L:10856
	uint8_t mobileIABAuthorizationStatus;
	int mobileIABAuthorizationStatus_isset;

	// ID = id-SLPositioning-Ranging-Services-Info, PRESENCE = optional L:10856
	SI_XNAP_DT_SLPositioning_Ranging_Services_Info * sLPositioningRangingServicesInfo;
	int sLPositioningRangingServicesInfo_isset;

	
} SI_XNAP_DT_PDU_HandoverRequest;


// GOT-NULL OCTET
//ELEMENTARY-PROCEDURE = [2] handoverPreparation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_HandoverRequestAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-sourceNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sourceNGRANnodeUEXnAPID;
	int sourceNGRANnodeUEXnAPID_isset;

	// ID = id-targetNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int targetNGRANnodeUEXnAPID;
	int targetNGRANnodeUEXnAPID_isset;

	// ID = id-PDUSessionResourcesAdmitted-List, PRESENCE = mandatory L:10856
	SI_XNAP_DT_PDUSessionResourcesAdmitted_List * pDUSessionResourcesAdmittedList;
	int pDUSessionResourcesAdmittedList_isset;

	// ID = id-PDUSessionResourcesNotAdmitted-List, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionResourcesNotAdmitted_List * pDUSessionResourcesNotAdmittedList;
	int pDUSessionResourcesNotAdmittedList_isset;

	//id-Target2SourceNG-RANnodeTranspContainer:OCTET
	// ID = id-UEContextKeptIndicator, PRESENCE = optional L:10856
	uint8_t uEContextKeptIndicator;
	int uEContextKeptIndicator_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-DRBs-transferred-to-MN, PRESENCE = optional L:10856
	SI_XNAP_DT_DRB_List * dRBstransferredtoMN;
	int dRBstransferredtoMN_isset;

	// ID = id-DAPSResponseInfo-List, PRESENCE = optional L:10856
	SI_XNAP_DT_DAPSResponseInfo_List * dAPSResponseInfoList;
	int dAPSResponseInfoList_isset;

	// ID = id-CHOinformation-Ack, PRESENCE = optional L:10856
	SI_XNAP_DT_CHOinformation_Ack * cHOinformationAck;
	int cHOinformationAck_isset;

	// ID = id-MBS-SessionInformationResponse-List, PRESENCE = optional L:10856
	SI_XNAP_DT_MBS_SessionInformationResponse_List * mBSSessionInformationResponseList;
	int mBSSessionInformationResponseList_isset;

	// ID = id-RRCConfigIndication, PRESENCE = optional L:10856
	uint8_t rRCConfigIndication;
	int rRCConfigIndication_isset;

	// ID = id-PDUSetbasedHandlingIndicator, PRESENCE = optional L:10856
	uint8_t pDUSetbasedHandlingIndicator;
	int pDUSetbasedHandlingIndicator_isset;

	
} SI_XNAP_DT_PDU_HandoverRequestAcknowledge;


//ELEMENTARY-PROCEDURE = [2] handoverPreparation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_HandoverPreparationFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-sourceNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sourceNGRANnodeUEXnAPID;
	int sourceNGRANnodeUEXnAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-requestedTargetCellGlobalID, PRESENCE = optional L:10856
	SI_XNAP_DT_Target_CGI * requestedTargetCellGlobalID;
	int requestedTargetCellGlobalID_isset;

	
} SI_XNAP_DT_PDU_HandoverPreparationFailure;


//ELEMENTARY-PROCEDURE = [2] sNStatusTransfer	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNStatusTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-sourceNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sourceNGRANnodeUEXnAPID;
	int sourceNGRANnodeUEXnAPID_isset;

	// ID = id-targetNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int targetNGRANnodeUEXnAPID;
	int targetNGRANnodeUEXnAPID_isset;

	// ID = id-DRBsSubjectToStatusTransfer-List, PRESENCE = mandatory L:10856
	SI_XNAP_DT_DRBsSubjectToStatusTransfer_List * dRBsSubjectToStatusTransferList;
	int dRBsSubjectToStatusTransferList_isset;

	// ID = id-CHOConfiguration, PRESENCE = optional L:10856
	SI_XNAP_DT_CHOConfiguration * cHOConfiguration;
	int cHOConfiguration_isset;

	// ID = id-MobilityInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_MobilityInformation * mobilityInformation;
	int mobilityInformation_isset;

	
} SI_XNAP_DT_PDU_SNStatusTransfer;


//ELEMENTARY-PROCEDURE = [2] uEContextRelease	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_UEContextRelease
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-sourceNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sourceNGRANnodeUEXnAPID;
	int sourceNGRANnodeUEXnAPID_isset;

	// ID = id-targetNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int targetNGRANnodeUEXnAPID;
	int targetNGRANnodeUEXnAPID_isset;

	
} SI_XNAP_DT_PDU_UEContextRelease;


//ELEMENTARY-PROCEDURE = [2] handoverCancel	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_HandoverCancel
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-sourceNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sourceNGRANnodeUEXnAPID;
	int sourceNGRANnodeUEXnAPID_isset;

	// ID = id-targetNG-RANnodeUEXnAPID, PRESENCE = optional L:10856
	unsigned long long int targetNGRANnodeUEXnAPID;
	int targetNGRANnodeUEXnAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-targetCellsToCancel, PRESENCE = optional L:10856
	SI_XNAP_DT_TargetCellList * targetCellsToCancel;
	int targetCellsToCancel_isset;

	
} SI_XNAP_DT_PDU_HandoverCancel;


//ELEMENTARY-PROCEDURE = [2] handoverSuccess			XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_HandoverSuccess
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-sourceNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sourceNGRANnodeUEXnAPID;
	int sourceNGRANnodeUEXnAPID_isset;

	// ID = id-targetNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int targetNGRANnodeUEXnAPID;
	int targetNGRANnodeUEXnAPID_isset;

	// ID = id-requestedTargetCellGlobalID, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Target_CGI * requestedTargetCellGlobalID;
	int requestedTargetCellGlobalID_isset;

	// ID = id-accessed-PSCellID, PRESENCE = optional L:10856
	SI_XNAP_DT_NR_CGI * accessedPSCellID;
	int accessedPSCellID_isset;

	
} SI_XNAP_DT_PDU_HandoverSuccess;


//ELEMENTARY-PROCEDURE = [2] conditionalHandoverCancel	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_ConditionalHandoverCancel
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-sourceNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sourceNGRANnodeUEXnAPID;
	int sourceNGRANnodeUEXnAPID_isset;

	// ID = id-targetNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int targetNGRANnodeUEXnAPID;
	int targetNGRANnodeUEXnAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-targetCellsToCancel, PRESENCE = optional L:10856
	SI_XNAP_DT_TargetCellList * targetCellsToCancel;
	int targetCellsToCancel_isset;

	// ID = id-conditional-Reconfig-ToCancel-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Conditional_Reconfig_List * conditionalReconfigToCancelList;
	int conditionalReconfigToCancelList_isset;

	
} SI_XNAP_DT_PDU_ConditionalHandoverCancel;


//ELEMENTARY-PROCEDURE = [2] earlyStatusTransfer		XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_EarlyStatusTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-sourceNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sourceNGRANnodeUEXnAPID;
	int sourceNGRANnodeUEXnAPID_isset;

	// ID = id-targetNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int targetNGRANnodeUEXnAPID;
	int targetNGRANnodeUEXnAPID_isset;

	// ID = id-procedureStage, PRESENCE = mandatory L:10856
	SI_XNAP_DT_ProcedureStageChoice * procedureStage;
	int procedureStage_isset;

	
} SI_XNAP_DT_PDU_EarlyStatusTransfer;


//ELEMENTARY-PROCEDURE = [2] rANPaging	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_RANPaging
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-UEIdentityIndexValue, PRESENCE = mandatory L:10856
	SI_XNAP_DT_UEIdentityIndexValue * uEIdentityIndexValue;
	int uEIdentityIndexValue_isset;

	// ID = id-UERANPagingIdentity, PRESENCE = mandatory L:10856
	SI_XNAP_DT_UERANPagingIdentity * uERANPagingIdentity;
	int uERANPagingIdentity_isset;

	// ID = id-PagingDRX, PRESENCE = mandatory L:10856
	uint8_t pagingDRX;
	int pagingDRX_isset;

	// ID = id-RANPagingArea, PRESENCE = mandatory L:10856
	SI_XNAP_DT_RANPagingArea * rANPagingArea;
	int rANPagingArea_isset;

	// ID = id-PagingPriority, PRESENCE = optional L:10856
	uint8_t pagingPriority;
	int pagingPriority_isset;

	// ID = id-AssistanceDataForRANPaging, PRESENCE = optional L:10856
	SI_XNAP_DT_AssistanceDataForRANPaging * assistanceDataForRANPaging;
	int assistanceDataForRANPaging_isset;

	// ID = id-UERadioCapabilityForPaging, PRESENCE = optional L:10856
	SI_XNAP_DT_UERadioCapabilityForPaging * uERadioCapabilityForPaging;
	int uERadioCapabilityForPaging_isset;

	// ID = id-ExtendedUEIdentityIndexValue, PRESENCE = optional L:10856
	SI_XNAP_DT_ExtendedUEIdentityIndexValue * extendedUEIdentityIndexValue;
	int extendedUEIdentityIndexValue_isset;

	// ID = id-EUTRAPagingeDRXInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_EUTRAPagingeDRXInformation * eUTRAPagingeDRXInformation;
	int eUTRAPagingeDRXInformation_isset;

	// ID = id-UESpecificDRX, PRESENCE = optional L:10856
	uint8_t uESpecificDRX;
	int uESpecificDRX_isset;

	// ID = id-NRPagingeDRXInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_NRPagingeDRXInformation * nRPagingeDRXInformation;
	int nRPagingeDRXInformation_isset;

	// ID = id-NRPagingeDRXInformationforRRCINACTIVE, PRESENCE = optional L:10856
	SI_XNAP_DT_NRPagingeDRXInformationforRRCINACTIVE * nRPagingeDRXInformationforRRCINACTIVE;
	int nRPagingeDRXInformationforRRCINACTIVE_isset;

	// ID = id-PagingCause, PRESENCE = optional L:10856
	uint8_t pagingCause;
	int pagingCause_isset;

	// ID = id-PEIPSassistanceInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_PEIPSassistanceInformation * pEIPSassistanceInformation;
	int pEIPSassistanceInformation_isset;

	// ID = id-HashedUEIdentityIndexValue, PRESENCE = optional L:10856
	SI_XNAP_DT_HashedUEIdentityIndexValue * hashedUEIdentityIndexValue;
	int hashedUEIdentityIndexValue_isset;

	// ID = id-MT-SDT-Information, PRESENCE = optional L:10856
	SI_XNAP_DT_MT_SDT_Information * mTSDTInformation;
	int mTSDTInformation_isset;

	// ID = id-NRPagingLongeDRXInformationforRRCINACTIVE, PRESENCE = optional L:10856
	SI_XNAP_DT_NRPagingLongeDRXInformationforRRCINACTIVE * nRPagingLongeDRXInformationforRRCINACTIVE;
	int nRPagingLongeDRXInformationforRRCINACTIVE_isset;

	
} SI_XNAP_DT_PDU_RANPaging;


//ELEMENTARY-PROCEDURE = [2] retrieveUEContext	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_RetrieveUEContextRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-newNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int newNGRANnodeUEXnAPID;
	int newNGRANnodeUEXnAPID_isset;

	// ID = id-UEContextID, PRESENCE = mandatory L:10856
	SI_XNAP_DT_UEContextID * uEContextID;
	int uEContextID_isset;

	// ID = id-MAC-I, PRESENCE = mandatory L:10856
	SI_XNAP_DT_MAC_I * mACI;
	int mACI_isset;

	// ID = id-new-NG-RAN-Cell-Identity, PRESENCE = mandatory L:10856
	SI_XNAP_DT_NG_RAN_Cell_Identity * newNGRANCellIdentity;
	int newNGRANCellIdentity_isset;

	// ID = id-RRCResumeCause, PRESENCE = optional L:10856
	uint8_t rRCResumeCause;
	int rRCResumeCause_isset;

	// ID = id-SDTSupportRequest, PRESENCE = optional L:10856
	SI_XNAP_DT_SDTSupportRequest * sDTSupportRequest;
	int sDTSupportRequest_isset;

	// ID = id-SRSPositioningConfigOrActivationRequest, PRESENCE = optional L:10856
	uint8_t sRSPositioningConfigOrActivationRequest;
	int sRSPositioningConfigOrActivationRequest_isset;

	
} SI_XNAP_DT_PDU_RetrieveUEContextRequest;


//ELEMENTARY-PROCEDURE = [2] retrieveUEContext	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_RetrieveUEContextResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-newNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int newNGRANnodeUEXnAPID;
	int newNGRANnodeUEXnAPID_isset;

	// ID = id-oldNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int oldNGRANnodeUEXnAPID;
	int oldNGRANnodeUEXnAPID_isset;

	// ID = id-GUAMI, PRESENCE = mandatory L:10856
	SI_XNAP_DT_GUAMI * gUAMI;
	int gUAMI_isset;

	// ID = id-UEContextInfoRetrUECtxtResp, PRESENCE = mandatory L:10856
	SI_XNAP_DT_UEContextInfoRetrUECtxtResp * uEContextInfoRetrUECtxtResp;
	int uEContextInfoRetrUECtxtResp_isset;

	// ID = id-TraceActivation, PRESENCE = optional L:10856
	SI_XNAP_DT_TraceActivation * traceActivation;
	int traceActivation_isset;

	// ID = id-MaskedIMEISV, PRESENCE = optional L:10856
	SI_XNAP_DT_MaskedIMEISV * maskedIMEISV;
	int maskedIMEISV_isset;

	// ID = id-LocationReportingInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_LocationReportingInformation * locationReportingInformation;
	int locationReportingInformation_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-NRV2XServicesAuthorized, PRESENCE = optional L:10856
	SI_XNAP_DT_NRV2XServicesAuthorized * nRV2XServicesAuthorized;
	int nRV2XServicesAuthorized_isset;

	// ID = id-LTEV2XServicesAuthorized, PRESENCE = optional L:10856
	SI_XNAP_DT_LTEV2XServicesAuthorized * lTEV2XServicesAuthorized;
	int lTEV2XServicesAuthorized_isset;

	// ID = id-PC5QoSParameters, PRESENCE = optional L:10856
	SI_XNAP_DT_PC5QoSParameters * pC5QoSParameters;
	int pC5QoSParameters_isset;

	// ID = id-UEHistoryInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_UEHistoryInformation * uEHistoryInformation;
	int uEHistoryInformation_isset;

	// ID = id-UEHistoryInformationFromTheUE, PRESENCE = optional L:10856
	SI_XNAP_DT_UEHistoryInformationFromTheUE * uEHistoryInformationFromTheUE;
	int uEHistoryInformationFromTheUE_isset;

	// ID = id-MDTPLMNList, PRESENCE = optional L:10856
	SI_XNAP_DT_MDTPLMNList * mDTPLMNList;
	int mDTPLMNList_isset;

	// ID = id-IABNodeIndication, PRESENCE = optional L:10856
	uint8_t iABNodeIndication;
	int iABNodeIndication_isset;

	// ID = id-UEContextRefAtSN-HORequest, PRESENCE = optional L:10856
	SI_XNAP_DT_UEContextRefAtSN_HORequest * uEContextRefAtSNHORequest;
	int uEContextRefAtSNHORequest_isset;

	// ID = id-TimeSynchronizationAssistanceInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_TimeSynchronizationAssistanceInformation * timeSynchronizationAssistanceInformation;
	int timeSynchronizationAssistanceInformation_isset;

	// ID = id-QMCConfigInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_QMCConfigInfo * qMCConfigInfo;
	int qMCConfigInfo_isset;

	// ID = id-FiveGProSeAuthorized, PRESENCE = optional L:10856
	SI_XNAP_DT_FiveGProSeAuthorized * fiveGProSeAuthorized;
	int fiveGProSeAuthorized_isset;

	// ID = id-FiveGProSePC5QoSParameters, PRESENCE = optional L:10856
	SI_XNAP_DT_FiveGProSePC5QoSParameters * fiveGProSePC5QoSParameters;
	int fiveGProSePC5QoSParameters_isset;

	// ID = id-AerialUESubscriptionInformation, PRESENCE = optional L:10856
	uint8_t aerialUESubscriptionInformation;
	int aerialUESubscriptionInformation_isset;

	// ID = id-NRA2XServicesAuthorized, PRESENCE = optional L:10856
	SI_XNAP_DT_NRA2XServicesAuthorized * nRA2XServicesAuthorized;
	int nRA2XServicesAuthorized_isset;

	// ID = id-LTEA2XServicesAuthorized, PRESENCE = optional L:10856
	SI_XNAP_DT_LTEA2XServicesAuthorized * lTEA2XServicesAuthorized;
	int lTEA2XServicesAuthorized_isset;

	// ID = id-A2XPC5QoSParameters, PRESENCE = optional L:10856
	SI_XNAP_DT_A2XPC5QoSParameters * a2XPC5QoSParameters;
	int a2XPC5QoSParameters_isset;

	// ID = id-MobileIAB-AuthorizationStatus, PRESENCE = optional L:10856
	uint8_t mobileIABAuthorizationStatus;
	int mobileIABAuthorizationStatus_isset;

	// ID = id-SLPositioning-Ranging-Services-Info, PRESENCE = optional L:10856
	SI_XNAP_DT_SLPositioning_Ranging_Services_Info * sLPositioningRangingServicesInfo;
	int sLPositioningRangingServicesInfo_isset;

	
} SI_XNAP_DT_PDU_RetrieveUEContextResponse;


//ELEMENTARY-PROCEDURE = [2] retrieveUEContextConfirm	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_RetrieveUEContextConfirm
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-oldNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int oldNGRANnodeUEXnAPID;
	int oldNGRANnodeUEXnAPID_isset;

	// ID = id-newNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int newNGRANnodeUEXnAPID;
	int newNGRANnodeUEXnAPID_isset;

	// ID = id-UEContextKeptIndicator, PRESENCE = optional L:10856
	uint8_t uEContextKeptIndicator;
	int uEContextKeptIndicator_isset;

	// ID = id-SDT-Termination-Request, PRESENCE = optional L:10856
	uint8_t sDTTerminationRequest;
	int sDTTerminationRequest_isset;

	
} SI_XNAP_DT_PDU_RetrieveUEContextConfirm;


//ELEMENTARY-PROCEDURE = [2] retrieveUEContext	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_RetrieveUEContextFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-newNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int newNGRANnodeUEXnAPID;
	int newNGRANnodeUEXnAPID_isset;

	//id-OldtoNewNG-RANnodeResumeContainer:OCTET
	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_XNAP_DT_PDU_RetrieveUEContextFailure;


//ELEMENTARY-PROCEDURE = [2] xnUAddressIndication	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_XnUAddressIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-newNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int newNGRANnodeUEXnAPID;
	int newNGRANnodeUEXnAPID_isset;

	// ID = id-oldNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int oldNGRANnodeUEXnAPID;
	int oldNGRANnodeUEXnAPID_isset;

	// ID = id-XnUAddressInfoperPDUSession-List, PRESENCE = mandatory L:10856
	SI_XNAP_DT_XnUAddressInfoperPDUSession_List * xnUAddressInfoperPDUSessionList;
	int xnUAddressInfoperPDUSessionList_isset;

	// ID = id-CHO-MRDC-Indicator, PRESENCE = optional L:10856
	uint8_t cHOMRDCIndicator;
	int cHOMRDCIndicator_isset;

	// ID = id-CHO-MRDC-EarlyDataForwarding, PRESENCE = optional L:10856
	uint8_t cHOMRDCEarlyDataForwarding;
	int cHOMRDCEarlyDataForwarding_isset;

	// ID = id-CPC-DataForwarding-Indicator, PRESENCE = optional L:10856
	uint8_t cPCDataForwardingIndicator;
	int cPCDataForwardingIndicator_isset;

	// ID = id-MBS-DataForwarding-Indicator, PRESENCE = optional L:10856
	uint8_t mBSDataForwardingIndicator;
	int mBSDataForwardingIndicator_isset;

	// ID = id-MBS-SessionInformationResponse-List, PRESENCE = optional L:10856
	SI_XNAP_DT_MBS_SessionInformationResponse_List * mBSSessionInformationResponseList;
	int mBSSessionInformationResponseList_isset;

	// ID = id-PDUSetbasedHandlingIndicator, PRESENCE = optional L:10856
	uint8_t pDUSetbasedHandlingIndicator;
	int pDUSetbasedHandlingIndicator_isset;

	
} SI_XNAP_DT_PDU_XnUAddressIndication;


//ELEMENTARY-PROCEDURE = [2] sNGRANnodeAdditionPreparation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeAdditionRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-UESecurityCapabilities, PRESENCE = mandatory L:10856
	SI_XNAP_DT_UESecurityCapabilities * uESecurityCapabilities;
	int uESecurityCapabilities_isset;

	// ID = id-s-ng-RANnode-SecurityKey, PRESENCE = mandatory L:10856
	SI_XNAP_DT_S_NG_RANnode_SecurityKey * sngRANnodeSecurityKey;
	int sngRANnodeSecurityKey_isset;

	// ID = id-S-NG-RANnodeUE-AMBR, PRESENCE = mandatory L:10856
	SI_XNAP_DT_UEAggregateMaximumBitRate * sNGRANnodeUEAMBR;
	int sNGRANnodeUEAMBR_isset;

	// ID = id-selectedPLMN, PRESENCE = optional L:10856
	SI_XNAP_DT_PLMN_Identity * selectedPLMN;
	int selectedPLMN_isset;

	// ID = id-MobilityRestrictionList, PRESENCE = optional L:10856
	SI_XNAP_DT_MobilityRestrictionList * mobilityRestrictionList;
	int mobilityRestrictionList_isset;

	// ID = id-indexToRatFrequSelectionPriority, PRESENCE = optional L:10856
	unsigned long long int indexToRatFrequSelectionPriority;
	int indexToRatFrequSelectionPriority_isset;

	// ID = id-PDUSessionToBeAddedAddReq, PRESENCE = mandatory L:10856
	SI_XNAP_DT_PDUSessionToBeAddedAddReq * pDUSessionToBeAddedAddReq;
	int pDUSessionToBeAddedAddReq_isset;

	//id-MN-to-SN-Container:OCTET
	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = optional L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-ExpectedUEBehaviour, PRESENCE = optional L:10856
	SI_XNAP_DT_ExpectedUEBehaviour * expectedUEBehaviour;
	int expectedUEBehaviour_isset;

	// ID = id-requestedSplitSRB, PRESENCE = optional L:10856
	uint8_t requestedSplitSRB;
	int requestedSplitSRB_isset;

	// ID = id-PCellID, PRESENCE = optional L:10856
	SI_XNAP_DT_GlobalNG_RANCell_ID * pCellID;
	int pCellID_isset;

	// ID = id-DesiredActNotificationLevel, PRESENCE = optional L:10856
	uint8_t desiredActNotificationLevel;
	int desiredActNotificationLevel_isset;

	// ID = id-AvailableDRBIDs, PRESENCE = conditional L:10856
	SI_XNAP_DT_DRB_List * availableDRBIDs;
	int availableDRBIDs_isset;

	// ID = id-S-NG-RANnodeMaxIPDataRate-DL, PRESENCE = optional L:10856
	unsigned long long int sNGRANnodeMaxIPDataRateDL;
	int sNGRANnodeMaxIPDataRateDL_isset;

	// ID = id-LocationInformationSNReporting, PRESENCE = optional L:10856
	uint8_t locationInformationSNReporting;
	int locationInformationSNReporting_isset;

	// ID = id-MR-DC-ResourceCoordinationInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_MR_DC_ResourceCoordinationInfo * mRDCResourceCoordinationInfo;
	int mRDCResourceCoordinationInfo_isset;

	// ID = id-MaskedIMEISV, PRESENCE = optional L:10856
	SI_XNAP_DT_MaskedIMEISV * maskedIMEISV;
	int maskedIMEISV_isset;

	// ID = id-NE-DC-TDM-Pattern, PRESENCE = optional L:10856
	SI_XNAP_DT_NE_DC_TDM_Pattern * nEDCTDMPattern;
	int nEDCTDMPattern_isset;

	// ID = id-S-NG-RANnode-Addition-Trigger-Ind, PRESENCE = optional L:10856
	uint8_t sNGRANnodeAdditionTriggerInd;
	int sNGRANnodeAdditionTriggerInd_isset;

	// ID = id-TraceActivation, PRESENCE = optional L:10856
	SI_XNAP_DT_TraceActivation * traceActivation;
	int traceActivation_isset;

	// ID = id-RequestedFastMCGRecoveryViaSRB3, PRESENCE = optional L:10856
	uint8_t requestedFastMCGRecoveryViaSRB3;
	int requestedFastMCGRecoveryViaSRB3_isset;

	// ID = id-UERadioCapabilityID, PRESENCE = optional L:10856
	SI_XNAP_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	// ID = id-SourceNG-RAN-node-ID, PRESENCE = optional L:10856
	SI_XNAP_DT_GlobalNG_RANNode_ID * sourceNGRANnodeID;
	int sourceNGRANnodeID_isset;

	// ID = id-ManagementBasedMDTPLMNList, PRESENCE = optional L:10856
	SI_XNAP_DT_MDTPLMNList * managementBasedMDTPLMNList;
	int managementBasedMDTPLMNList_isset;

	// ID = id-UEHistoryInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_UEHistoryInformation * uEHistoryInformation;
	int uEHistoryInformation_isset;

	// ID = id-UEHistoryInformationFromTheUE, PRESENCE = optional L:10856
	SI_XNAP_DT_UEHistoryInformationFromTheUE * uEHistoryInformationFromTheUE;
	int uEHistoryInformationFromTheUE_isset;

	// ID = id-PSCellChangeHistory, PRESENCE = optional L:10856
	uint8_t pSCellChangeHistory;
	int pSCellChangeHistory_isset;

	// ID = id-IABNodeIndication, PRESENCE = optional L:10856
	uint8_t iABNodeIndication;
	int iABNodeIndication_isset;

	// ID = id-NoPDUSessionIndication, PRESENCE = optional L:10856
	uint8_t noPDUSessionIndication;
	int noPDUSessionIndication_isset;

	// ID = id-CHOinformation-AddReq, PRESENCE = optional L:10856
	SI_XNAP_DT_CHOinformation_AddReq * cHOinformationAddReq;
	int cHOinformationAddReq_isset;

	// ID = id-SCGActivationRequest, PRESENCE = optional L:10856
	uint8_t sCGActivationRequest;
	int sCGActivationRequest_isset;

	// ID = id-CPAInformationRequest, PRESENCE = optional L:10856
	SI_XNAP_DT_CPAInformationRequest * cPAInformationRequest;
	int cPAInformationRequest_isset;

	// ID = id-S-NG-RANnodeUE-Slice-MBR, PRESENCE = optional L:10856
	SI_XNAP_DT_UESliceMaximumBitRateList * sNGRANnodeUESliceMBR;
	int sNGRANnodeUESliceMBR_isset;

	// ID = id-F1-terminatingIAB-donorIndicator, PRESENCE = optional L:10856
	uint8_t f1terminatingIABdonorIndicator;
	int f1terminatingIABdonorIndicator_isset;

	// ID = id-SelectedNID, PRESENCE = optional L:10856
	SI_XNAP_DT_NID * selectedNID;
	int selectedNID_isset;

	// ID = id-QMCCoordinationRequest, PRESENCE = optional L:10856
	SI_XNAP_DT_QMCCoordinationRequest * qMCCoordinationRequest;
	int qMCCoordinationRequest_isset;

	// ID = id-SourceSN-to-TargetSN-QMCInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_QMCConfigInfo * sourceSNtoTargetSNQMCInfo;
	int sourceSNtoTargetSNQMCInfo_isset;

	// ID = id-IABAuthorizationStatus, PRESENCE = optional L:10856
	uint8_t iABAuthorizationStatus;
	int iABAuthorizationStatus_isset;

	// ID = id-Source-M-NG-RANnodeID, PRESENCE = optional L:10856
	SI_XNAP_DT_GlobalNG_RANNode_ID * sourceMNGRANnodeID;
	int sourceMNGRANnodeID_isset;

	
} SI_XNAP_DT_PDU_SNodeAdditionRequest;


//ELEMENTARY-PROCEDURE = [2] sNGRANnodeAdditionPreparation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeAdditionRequestAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-PDUSessionAdmittedAddedAddReqAck, PRESENCE = mandatory L:10856
	SI_XNAP_DT_PDUSessionAdmittedAddedAddReqAck * pDUSessionAdmittedAddedAddReqAck;
	int pDUSessionAdmittedAddedAddReqAck_isset;

	// ID = id-PDUSessionNotAdmittedAddReqAck, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionNotAdmittedAddReqAck * pDUSessionNotAdmittedAddReqAck;
	int pDUSessionNotAdmittedAddReqAck_isset;

	//id-SN-to-MN-Container:OCTET
	// ID = id-admittedSplitSRB, PRESENCE = optional L:10856
	uint8_t admittedSplitSRB;
	int admittedSplitSRB_isset;

	// ID = id-RRCConfigIndication, PRESENCE = optional L:10856
	uint8_t rRCConfigIndication;
	int rRCConfigIndication_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-LocationInformationSN, PRESENCE = optional L:10856
	SI_XNAP_DT_Target_CGI * locationInformationSN;
	int locationInformationSN_isset;

	// ID = id-MR-DC-ResourceCoordinationInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_MR_DC_ResourceCoordinationInfo * mRDCResourceCoordinationInfo;
	int mRDCResourceCoordinationInfo_isset;

	// ID = id-AvailableFastMCGRecoveryViaSRB3, PRESENCE = optional L:10856
	uint8_t availableFastMCGRecoveryViaSRB3;
	int availableFastMCGRecoveryViaSRB3_isset;

	// ID = id-DirectForwardingPathAvailability, PRESENCE = optional L:10856
	uint8_t directForwardingPathAvailability;
	int directForwardingPathAvailability_isset;

	// ID = id-SCGActivationStatus, PRESENCE = optional L:10856
	uint8_t sCGActivationStatus;
	int sCGActivationStatus_isset;

	// ID = id-CPAInformationAck, PRESENCE = optional L:10856
	SI_XNAP_DT_CPAInformationAck * cPAInformationAck;
	int cPAInformationAck_isset;

	// ID = id-SNMobilityInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_SNMobilityInformation * sNMobilityInformation;
	int sNMobilityInformation_isset;

	// ID = id-QMCCoordinationResponse, PRESENCE = optional L:10856
	SI_XNAP_DT_QMCCoordinationResponse * qMCCoordinationResponse;
	int qMCCoordinationResponse_isset;

	// ID = id-CHOinformation-AddReqAck, PRESENCE = optional L:10856
	SI_XNAP_DT_CHOinformation_AddReqAck * cHOinformationAddReqAck;
	int cHOinformationAddReqAck_isset;

	// ID = id-DirectForwardingPathAvailabilityWithSourceMN, PRESENCE = optional L:10856
	uint8_t directForwardingPathAvailabilityWithSourceMN;
	int directForwardingPathAvailabilityWithSourceMN_isset;

	
} SI_XNAP_DT_PDU_SNodeAdditionRequestAcknowledge;


//ELEMENTARY-PROCEDURE = [2] sNGRANnodeAdditionPreparation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeAdditionRequestReject
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-PCellID, PRESENCE = optional L:10856
	SI_XNAP_DT_GlobalNG_RANCell_ID * pCellID;
	int pCellID_isset;

	
} SI_XNAP_DT_PDU_SNodeAdditionRequestReject;


//ELEMENTARY-PROCEDURE = [2] sNGRANnodeReconfigurationCompletion	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeReconfigurationComplete
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-ResponseInfo-ReconfCompl, PRESENCE = mandatory L:10856
	SI_XNAP_DT_ResponseInfo_ReconfCompl * responseInfoReconfCompl;
	int responseInfoReconfCompl_isset;

	
} SI_XNAP_DT_PDU_SNodeReconfigurationComplete;


//ELEMENTARY-PROCEDURE = [2] mNGRANnodeinitiatedSNGRANnodeModificationPreparation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeModificationRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-PDCPChangeIndication, PRESENCE = optional L:10856
	SI_XNAP_DT_PDCPChangeIndication * pDCPChangeIndication;
	int pDCPChangeIndication_isset;

	// ID = id-selectedPLMN, PRESENCE = optional L:10856
	SI_XNAP_DT_PLMN_Identity * selectedPLMN;
	int selectedPLMN_isset;

	// ID = id-MobilityRestrictionList, PRESENCE = optional L:10856
	SI_XNAP_DT_MobilityRestrictionList * mobilityRestrictionList;
	int mobilityRestrictionList_isset;

	// ID = id-SCGConfigurationQuery, PRESENCE = optional L:10856
	uint8_t sCGConfigurationQuery;
	int sCGConfigurationQuery_isset;

	// ID = id-UEContextInfo-SNModRequest, PRESENCE = optional L:10856
	SI_XNAP_DT_UEContextInfo_SNModRequest * uEContextInfoSNModRequest;
	int uEContextInfoSNModRequest_isset;

	//id-MN-to-SN-Container:OCTET
	// ID = id-requestedSplitSRB, PRESENCE = optional L:10856
	uint8_t requestedSplitSRB;
	int requestedSplitSRB_isset;

	// ID = id-requestedSplitSRBrelease, PRESENCE = optional L:10856
	uint8_t requestedSplitSRBrelease;
	int requestedSplitSRBrelease_isset;

	// ID = id-DesiredActNotificationLevel, PRESENCE = optional L:10856
	uint8_t desiredActNotificationLevel;
	int desiredActNotificationLevel_isset;

	// ID = id-AdditionalDRBIDs, PRESENCE = optional L:10856
	SI_XNAP_DT_DRB_List * additionalDRBIDs;
	int additionalDRBIDs_isset;

	// ID = id-S-NG-RANnodeMaxIPDataRate-UL, PRESENCE = optional L:10856
	unsigned long long int sNGRANnodeMaxIPDataRateUL;
	int sNGRANnodeMaxIPDataRateUL_isset;

	// ID = id-S-NG-RANnodeMaxIPDataRate-DL, PRESENCE = optional L:10856
	unsigned long long int sNGRANnodeMaxIPDataRateDL;
	int sNGRANnodeMaxIPDataRateDL_isset;

	// ID = id-LocationInformationSNReporting, PRESENCE = optional L:10856
	uint8_t locationInformationSNReporting;
	int locationInformationSNReporting_isset;

	// ID = id-MR-DC-ResourceCoordinationInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_MR_DC_ResourceCoordinationInfo * mRDCResourceCoordinationInfo;
	int mRDCResourceCoordinationInfo_isset;

	// ID = id-PCellID, PRESENCE = optional L:10856
	SI_XNAP_DT_GlobalNG_RANCell_ID * pCellID;
	int pCellID_isset;

	// ID = id-NE-DC-TDM-Pattern, PRESENCE = optional L:10856
	SI_XNAP_DT_NE_DC_TDM_Pattern * nEDCTDMPattern;
	int nEDCTDMPattern_isset;

	// ID = id-RequestedFastMCGRecoveryViaSRB3, PRESENCE = optional L:10856
	uint8_t requestedFastMCGRecoveryViaSRB3;
	int requestedFastMCGRecoveryViaSRB3_isset;

	// ID = id-RequestedFastMCGRecoveryViaSRB3Release, PRESENCE = optional L:10856
	uint8_t requestedFastMCGRecoveryViaSRB3Release;
	int requestedFastMCGRecoveryViaSRB3Release_isset;

	// ID = id-SNTriggered, PRESENCE = optional L:10856
	uint8_t sNTriggered;
	int sNTriggered_isset;

	// ID = id-TargetNodeID, PRESENCE = optional L:10856
	SI_XNAP_DT_GlobalNG_RANNode_ID * targetNodeID;
	int targetNodeID_isset;

	// ID = id-PSCellHistoryInformationRetrieve, PRESENCE = optional L:10856
	uint8_t pSCellHistoryInformationRetrieve;
	int pSCellHistoryInformationRetrieve_isset;

	// ID = id-UEHistoryInformationFromTheUE, PRESENCE = optional L:10856
	SI_XNAP_DT_UEHistoryInformationFromTheUE * uEHistoryInformationFromTheUE;
	int uEHistoryInformationFromTheUE_isset;

	// ID = id-CHOinformation-ModReq, PRESENCE = optional L:10856
	SI_XNAP_DT_CHOinformation_ModReq * cHOinformationModReq;
	int cHOinformationModReq_isset;

	// ID = id-SCGActivationRequest, PRESENCE = optional L:10856
	uint8_t sCGActivationRequest;
	int sCGActivationRequest_isset;

	// ID = id-CPAInformationModReq, PRESENCE = optional L:10856
	SI_XNAP_DT_CPAInformationModReq * cPAInformationModReq;
	int cPAInformationModReq_isset;

	// ID = id-CPCInformationUpdate, PRESENCE = optional L:10856
	SI_XNAP_DT_CPCInformationUpdate * cPCInformationUpdate;
	int cPCInformationUpdate_isset;

	// ID = id-S-NG-RANnodeUE-Slice-MBR, PRESENCE = optional L:10856
	SI_XNAP_DT_UESliceMaximumBitRateList * sNGRANnodeUESliceMBR;
	int sNGRANnodeUESliceMBR_isset;

	// ID = id-ManagementBasedMDTPLMNModificationList, PRESENCE = optional L:10856
	SI_XNAP_DT_MDTPLMNModificationList * managementBasedMDTPLMNModificationList;
	int managementBasedMDTPLMNModificationList_isset;

	// ID = id-SelectedNID, PRESENCE = optional L:10856
	SI_XNAP_DT_NID * selectedNID;
	int selectedNID_isset;

	// ID = id-QMCCoordinationRequest, PRESENCE = optional L:10856
	SI_XNAP_DT_QMCCoordinationRequest * qMCCoordinationRequest;
	int qMCCoordinationRequest_isset;

	// ID = id-Src-SN-to-Tgt-SNQMCInfoInquiry, PRESENCE = optional L:10856
	uint8_t srcSNtoTgtSNQMCInfoInquiry;
	int srcSNtoTgtSNQMCInfoInquiry_isset;

	// ID = id-IABAuthorizationStatus, PRESENCE = optional L:10856
	uint8_t iABAuthorizationStatus;
	int iABAuthorizationStatus_isset;

	
} SI_XNAP_DT_PDU_SNodeModificationRequest;


//ELEMENTARY-PROCEDURE = [2] mNGRANnodeinitiatedSNGRANnodeModificationPreparation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeModificationRequestAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-PDUSessionAdmitted-SNModResponse, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionAdmitted_SNModResponse * pDUSessionAdmittedSNModResponse;
	int pDUSessionAdmittedSNModResponse_isset;

	// ID = id-PDUSessionNotAdmitted-SNModResponse, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionNotAdmitted_SNModResponse * pDUSessionNotAdmittedSNModResponse;
	int pDUSessionNotAdmittedSNModResponse_isset;

	//id-SN-to-MN-Container:OCTET
	// ID = id-admittedSplitSRB, PRESENCE = optional L:10856
	uint8_t admittedSplitSRB;
	int admittedSplitSRB_isset;

	// ID = id-admittedSplitSRBrelease, PRESENCE = optional L:10856
	uint8_t admittedSplitSRBrelease;
	int admittedSplitSRBrelease_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-LocationInformationSN, PRESENCE = optional L:10856
	SI_XNAP_DT_Target_CGI * locationInformationSN;
	int locationInformationSN_isset;

	// ID = id-MR-DC-ResourceCoordinationInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_MR_DC_ResourceCoordinationInfo * mRDCResourceCoordinationInfo;
	int mRDCResourceCoordinationInfo_isset;

	// ID = id-PDUSessionDataForwarding-SNModResponse, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionDataForwarding_SNModResponse * pDUSessionDataForwardingSNModResponse;
	int pDUSessionDataForwardingSNModResponse_isset;

	// ID = id-RRCConfigIndication, PRESENCE = optional L:10856
	uint8_t rRCConfigIndication;
	int rRCConfigIndication_isset;

	// ID = id-AvailableFastMCGRecoveryViaSRB3, PRESENCE = optional L:10856
	uint8_t availableFastMCGRecoveryViaSRB3;
	int availableFastMCGRecoveryViaSRB3_isset;

	// ID = id-ReleaseFastMCGRecoveryViaSRB3, PRESENCE = optional L:10856
	uint8_t releaseFastMCGRecoveryViaSRB3;
	int releaseFastMCGRecoveryViaSRB3_isset;

	// ID = id-DirectForwardingPathAvailability, PRESENCE = optional L:10856
	uint8_t directForwardingPathAvailability;
	int directForwardingPathAvailability_isset;

	// ID = id-SCGUEHistoryInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_SCGUEHistoryInformation * sCGUEHistoryInformation;
	int sCGUEHistoryInformation_isset;

	// ID = id-SCGActivationStatus, PRESENCE = optional L:10856
	uint8_t sCGActivationStatus;
	int sCGActivationStatus_isset;

	// ID = id-CPAInformationModReqAck, PRESENCE = optional L:10856
	SI_XNAP_DT_CPAInformationModReqAck * cPAInformationModReqAck;
	int cPAInformationModReqAck_isset;

	// ID = id-QMCCoordinationResponse, PRESENCE = optional L:10856
	SI_XNAP_DT_QMCCoordinationResponse * qMCCoordinationResponse;
	int qMCCoordinationResponse_isset;

	// ID = id-SourceSN-to-TargetSN-QMCInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_QMCConfigInfo * sourceSNtoTargetSNQMCInfo;
	int sourceSNtoTargetSNQMCInfo_isset;

	
} SI_XNAP_DT_PDU_SNodeModificationRequestAcknowledge;


//ELEMENTARY-PROCEDURE = [2] mNGRANnodeinitiatedSNGRANnodeModificationPreparation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeModificationRequestReject
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_XNAP_DT_PDU_SNodeModificationRequestReject;


//ELEMENTARY-PROCEDURE = [2] sNGRANnodeinitiatedSNGRANnodeModificationPreparation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeModificationRequired
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-PDCPChangeIndication, PRESENCE = optional L:10856
	SI_XNAP_DT_PDCPChangeIndication * pDCPChangeIndication;
	int pDCPChangeIndication_isset;

	// ID = id-PDUSessionToBeModifiedSNModRequired, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionToBeModifiedSNModRequired * pDUSessionToBeModifiedSNModRequired;
	int pDUSessionToBeModifiedSNModRequired_isset;

	// ID = id-PDUSessionToBeReleasedSNModRequired, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionToBeReleasedSNModRequired * pDUSessionToBeReleasedSNModRequired;
	int pDUSessionToBeReleasedSNModRequired_isset;

	//id-SN-to-MN-Container:OCTET
	// ID = id-SpareDRBIDs, PRESENCE = optional L:10856
	SI_XNAP_DT_DRB_List * spareDRBIDs;
	int spareDRBIDs_isset;

	// ID = id-RequiredNumberOfDRBIDs, PRESENCE = optional L:10856
	unsigned long long int requiredNumberOfDRBIDs;
	int requiredNumberOfDRBIDs_isset;

	// ID = id-LocationInformationSN, PRESENCE = optional L:10856
	SI_XNAP_DT_Target_CGI * locationInformationSN;
	int locationInformationSN_isset;

	// ID = id-MR-DC-ResourceCoordinationInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_MR_DC_ResourceCoordinationInfo * mRDCResourceCoordinationInfo;
	int mRDCResourceCoordinationInfo_isset;

	// ID = id-RRCConfigIndication, PRESENCE = optional L:10856
	uint8_t rRCConfigIndication;
	int rRCConfigIndication_isset;

	// ID = id-AvailableFastMCGRecoveryViaSRB3, PRESENCE = optional L:10856
	uint8_t availableFastMCGRecoveryViaSRB3;
	int availableFastMCGRecoveryViaSRB3_isset;

	// ID = id-ReleaseFastMCGRecoveryViaSRB3, PRESENCE = optional L:10856
	uint8_t releaseFastMCGRecoveryViaSRB3;
	int releaseFastMCGRecoveryViaSRB3_isset;

	// ID = id-SCGIndicator, PRESENCE = optional L:10856
	uint8_t sCGIndicator;
	int sCGIndicator_isset;

	// ID = id-SCGUEHistoryInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_SCGUEHistoryInformation * sCGUEHistoryInformation;
	int sCGUEHistoryInformation_isset;

	// ID = id-SCGActivationRequest, PRESENCE = optional L:10856
	uint8_t sCGActivationRequest;
	int sCGActivationRequest_isset;

	// ID = id-CPACInformationModRequired, PRESENCE = optional L:10856
	SI_XNAP_DT_CPACInformationModRequired * cPACInformationModRequired;
	int cPACInformationModRequired_isset;

	// ID = id-SCGreconfigNotification, PRESENCE = optional L:10856
	uint8_t sCGreconfigNotification;
	int sCGreconfigNotification_isset;

	// ID = id-SPRAvailability, PRESENCE = optional L:10856
	uint8_t sPRAvailability;
	int sPRAvailability_isset;

	// ID = id-QMCCoordinationRequest, PRESENCE = optional L:10856
	SI_XNAP_DT_QMCCoordinationRequest * qMCCoordinationRequest;
	int qMCCoordinationRequest_isset;

	// ID = id-S-CPAC-Request, PRESENCE = optional L:10856
	uint8_t sCPACRequest;
	int sCPACRequest_isset;

	// ID = id-PDUSessionsListToBeReleased-UPError, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionsListToBeReleased_UPError * pDUSessionsListToBeReleasedUPError;
	int pDUSessionsListToBeReleasedUPError_isset;

	
} SI_XNAP_DT_PDU_SNodeModificationRequired;


//ELEMENTARY-PROCEDURE = [2] sNGRANnodeinitiatedSNGRANnodeModificationPreparation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeModificationConfirm
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-PDUSessionAdmittedModSNModConfirm, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionAdmittedModSNModConfirm * pDUSessionAdmittedModSNModConfirm;
	int pDUSessionAdmittedModSNModConfirm_isset;

	// ID = id-PDUSessionReleasedSNModConfirm, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionReleasedSNModConfirm * pDUSessionReleasedSNModConfirm;
	int pDUSessionReleasedSNModConfirm_isset;

	//id-MN-to-SN-Container:OCTET
	// ID = id-AdditionalDRBIDs, PRESENCE = optional L:10856
	SI_XNAP_DT_DRB_List * additionalDRBIDs;
	int additionalDRBIDs_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-MR-DC-ResourceCoordinationInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_MR_DC_ResourceCoordinationInfo * mRDCResourceCoordinationInfo;
	int mRDCResourceCoordinationInfo_isset;

	// ID = id-QMCCoordinationResponse, PRESENCE = optional L:10856
	SI_XNAP_DT_QMCCoordinationResponse * qMCCoordinationResponse;
	int qMCCoordinationResponse_isset;

	
} SI_XNAP_DT_PDU_SNodeModificationConfirm;


//ELEMENTARY-PROCEDURE = [2] sNGRANnodeinitiatedSNGRANnodeModificationPreparation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeModificationRefuse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	//id-MN-to-SN-Container:OCTET
	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_XNAP_DT_PDU_SNodeModificationRefuse;


//ELEMENTARY-PROCEDURE = [2] mNGRANnodeinitiatedSNGRANnodeRelease	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeReleaseRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = optional L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-PDUSessionToBeReleased-RelReq, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSession_List_withCause * pDUSessionToBeReleasedRelReq;
	int pDUSessionToBeReleasedRelReq_isset;

	// ID = id-UEContextKeptIndicator, PRESENCE = optional L:10856
	uint8_t uEContextKeptIndicator;
	int uEContextKeptIndicator_isset;

	//id-MN-to-SN-Container:OCTET
	// ID = id-DRBs-transferred-to-MN, PRESENCE = optional L:10856
	SI_XNAP_DT_DRB_List * dRBstransferredtoMN;
	int dRBstransferredtoMN_isset;

	
} SI_XNAP_DT_PDU_SNodeReleaseRequest;


//ELEMENTARY-PROCEDURE = [2] mNGRANnodeinitiatedSNGRANnodeRelease	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeReleaseRequestAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = optional L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-PDUSessionToBeReleased-RelReqAck, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionToBeReleasedList_RelReqAck * pDUSessionToBeReleasedRelReqAck;
	int pDUSessionToBeReleasedRelReqAck_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-SCGUEHistoryInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_SCGUEHistoryInformation * sCGUEHistoryInformation;
	int sCGUEHistoryInformation_isset;

	// ID = id-SNMobilityInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_SNMobilityInformation * sNMobilityInformation;
	int sNMobilityInformation_isset;

	
} SI_XNAP_DT_PDU_SNodeReleaseRequestAcknowledge;


//ELEMENTARY-PROCEDURE = [2] mNGRANnodeinitiatedSNGRANnodeRelease	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeReleaseReject
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = optional L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_XNAP_DT_PDU_SNodeReleaseReject;


//ELEMENTARY-PROCEDURE = [2] sNGRANnodeinitiatedSNGRANnodeRelease	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeReleaseRequired
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-PDUSessionToBeReleasedList-RelRqd, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionToBeReleasedList_RelRqd * pDUSessionToBeReleasedListRelRqd;
	int pDUSessionToBeReleasedListRelRqd_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	//id-SN-to-MN-Container:OCTET
	// ID = id-SCGUEHistoryInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_SCGUEHistoryInformation * sCGUEHistoryInformation;
	int sCGUEHistoryInformation_isset;

	// ID = id-PDUSessionsListToBeReleased-UPError, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionsListToBeReleased_UPError * pDUSessionsListToBeReleasedUPError;
	int pDUSessionsListToBeReleasedUPError_isset;

	
} SI_XNAP_DT_PDU_SNodeReleaseRequired;


//ELEMENTARY-PROCEDURE = [2] sNGRANnodeinitiatedSNGRANnodeRelease	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeReleaseConfirm
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-PDUSessionReleasedList-RelConf, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionReleasedList_RelConf * pDUSessionReleasedListRelConf;
	int pDUSessionReleasedListRelConf_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_XNAP_DT_PDU_SNodeReleaseConfirm;


//ELEMENTARY-PROCEDURE = [2] sNGRANnodeCounterCheck	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeCounterCheckRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-BearersSubjectToCounterCheck, PRESENCE = mandatory L:10856
	SI_XNAP_DT_BearersSubjectToCounterCheck_List * bearersSubjectToCounterCheck;
	int bearersSubjectToCounterCheck_isset;

	
} SI_XNAP_DT_PDU_SNodeCounterCheckRequest;


//ELEMENTARY-PROCEDURE = [2] sNGRANnodeChange		XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeChangeRequired
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-target-S-NG-RANnodeID, PRESENCE = mandatory L:10856
	SI_XNAP_DT_GlobalNG_RANNode_ID * targetSNGRANnodeID;
	int targetSNGRANnodeID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-PDUSession-SNChangeRequired-List, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSession_SNChangeRequired_List * pDUSessionSNChangeRequiredList;
	int pDUSessionSNChangeRequiredList_isset;

	//id-SN-to-MN-Container:OCTET
	// ID = id-SCGUEHistoryInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_SCGUEHistoryInformation * sCGUEHistoryInformation;
	int sCGUEHistoryInformation_isset;

	// ID = id-SNMobilityInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_SNMobilityInformation * sNMobilityInformation;
	int sNMobilityInformation_isset;

	// ID = id-SourcePSCellID, PRESENCE = optional L:10856
	SI_XNAP_DT_GlobalNG_RANCell_ID * sourcePSCellID;
	int sourcePSCellID_isset;

	// ID = id-CPCInformationRequired, PRESENCE = optional L:10856
	SI_XNAP_DT_CPCInformationRequired * cPCInformationRequired;
	int cPCInformationRequired_isset;

	// ID = id-SourceSN-to-TargetSN-QMCInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_QMCConfigInfo * sourceSNtoTargetSNQMCInfo;
	int sourceSNtoTargetSNQMCInfo_isset;

	
} SI_XNAP_DT_PDU_SNodeChangeRequired;


//ELEMENTARY-PROCEDURE = [2] sNGRANnodeChange		XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeChangeConfirm
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-PDUSession-SNChangeConfirm-List, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSession_SNChangeConfirm_List * pDUSessionSNChangeConfirmList;
	int pDUSessionSNChangeConfirmList_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-CPCInformationConfirm, PRESENCE = optional L:10856
	SI_XNAP_DT_CPCInformationConfirm * cPCInformationConfirm;
	int cPCInformationConfirm_isset;

	//id-MN-to-SN-Container:OCTET
	
} SI_XNAP_DT_PDU_SNodeChangeConfirm;


//ELEMENTARY-PROCEDURE = [2] sNGRANnodeChange		XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SNodeChangeRefuse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_XNAP_DT_PDU_SNodeChangeRefuse;


//ELEMENTARY-PROCEDURE = [2] rRCTransfer	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_RRCTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-SplitSRB-RRCTransfer, PRESENCE = optional L:10856
	SI_XNAP_DT_SplitSRB_RRCTransfer * splitSRBRRCTransfer;
	int splitSRBRRCTransfer_isset;

	// ID = id-UEReportRRCTransfer, PRESENCE = optional L:10856
	SI_XNAP_DT_UEReportRRCTransfer * uEReportRRCTransfer;
	int uEReportRRCTransfer_isset;

	// ID = id-FastMCGRecoveryRRCTransfer-SN-to-MN, PRESENCE = optional L:10856
	SI_XNAP_DT_FastMCGRecoveryRRCTransfer * fastMCGRecoveryRRCTransferSNtoMN;
	int fastMCGRecoveryRRCTransferSNtoMN_isset;

	// ID = id-FastMCGRecoveryRRCTransfer-MN-to-SN, PRESENCE = optional L:10856
	SI_XNAP_DT_FastMCGRecoveryRRCTransfer * fastMCGRecoveryRRCTransferMNtoSN;
	int fastMCGRecoveryRRCTransferMNtoSN_isset;

	// ID = id-SDT-SRB-between-NewNode-OldNode, PRESENCE = optional L:10856
	SI_XNAP_DT_SDT_SRB_between_NewNode_OldNode * sDTSRBbetweenNewNodeOldNode;
	int sDTSRBbetweenNewNodeOldNode_isset;

	// ID = id-QoE-Measurement-Results, PRESENCE = optional L:10856
	SI_XNAP_DT_QoE_Measurement_Results * qoEMeasurementResults;
	int qoEMeasurementResults_isset;

	
} SI_XNAP_DT_PDU_RRCTransfer;


//ELEMENTARY-PROCEDURE = [2] notificationControl			XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_NotificationControlIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-PDUSessionResourcesNotifyList, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionResourcesNotifyList * pDUSessionResourcesNotifyList;
	int pDUSessionResourcesNotifyList_isset;

	
} SI_XNAP_DT_PDU_NotificationControlIndication;


//ELEMENTARY-PROCEDURE = [2] activityNotification		XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_ActivityNotification
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-UserPlaneTrafficActivityReport, PRESENCE = optional L:10856
	uint8_t userPlaneTrafficActivityReport;
	int userPlaneTrafficActivityReport_isset;

	// ID = id-PDUSessionResourcesActivityNotifyList, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionResourcesActivityNotifyList * pDUSessionResourcesActivityNotifyList;
	int pDUSessionResourcesActivityNotifyList_isset;

	// ID = id-RANPagingFailure, PRESENCE = optional L:10856
	uint8_t rANPagingFailure;
	int rANPagingFailure_isset;

	
} SI_XNAP_DT_PDU_ActivityNotification;


//ELEMENTARY-PROCEDURE = [2] xnSetup	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_XnSetupRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-GlobalNG-RAN-node-ID, PRESENCE = mandatory L:10856
	SI_XNAP_DT_GlobalNG_RANNode_ID * globalNGRANnodeID;
	int globalNGRANnodeID_isset;

	// ID = id-TAISupport-list, PRESENCE = mandatory L:10856
	SI_XNAP_DT_TAISupport_List * tAISupportlist;
	int tAISupportlist_isset;

	// ID = id-AMF-Region-Information, PRESENCE = mandatory L:10856
	SI_XNAP_DT_AMF_Region_Information * aMFRegionInformation;
	int aMFRegionInformation_isset;

	// ID = id-List-of-served-cells-NR, PRESENCE = optional L:10856
	SI_XNAP_DT_ServedCells_NR * listofservedcellsNR;
	int listofservedcellsNR_isset;

	// ID = id-List-of-served-cells-E-UTRA, PRESENCE = optional L:10856
	SI_XNAP_DT_ServedCells_E_UTRA * listofservedcellsEUTRA;
	int listofservedcellsEUTRA_isset;

	// ID = id-InterfaceInstanceIndication, PRESENCE = optional L:10856
	unsigned long long int interfaceInstanceIndication;
	int interfaceInstanceIndication_isset;

	// ID = id-TNLConfigurationInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_TNLConfigurationInfo * tNLConfigurationInfo;
	int tNLConfigurationInfo_isset;

	// ID = id-PartialListIndicator-NR, PRESENCE = optional L:10856
	uint8_t partialListIndicatorNR;
	int partialListIndicatorNR_isset;

	// ID = id-CellAndCapacityAssistanceInfo-NR, PRESENCE = optional L:10856
	SI_XNAP_DT_CellAndCapacityAssistanceInfo_NR * cellAndCapacityAssistanceInfoNR;
	int cellAndCapacityAssistanceInfoNR_isset;

	// ID = id-PartialListIndicator-EUTRA, PRESENCE = optional L:10856
	uint8_t partialListIndicatorEUTRA;
	int partialListIndicatorEUTRA_isset;

	// ID = id-CellAndCapacityAssistanceInfo-EUTRA, PRESENCE = optional L:10856
	SI_XNAP_DT_CellAndCapacityAssistanceInfo_EUTRA * cellAndCapacityAssistanceInfoEUTRA;
	int cellAndCapacityAssistanceInfoEUTRA_isset;

	// ID = id-Local-NG-RAN-Node-Identifier, PRESENCE = optional L:10856
	SI_XNAP_DT_Local_NG_RAN_Node_Identifier * localNGRANNodeIdentifier;
	int localNGRANNodeIdentifier_isset;

	// ID = id-Neighbour-NG-RAN-Node-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Neighbour_NG_RAN_Node_List * neighbourNGRANNodeList;
	int neighbourNGRANNodeList_isset;

	
} SI_XNAP_DT_PDU_XnSetupRequest;


//ELEMENTARY-PROCEDURE = [2] xnSetup	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_XnSetupResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-GlobalNG-RAN-node-ID, PRESENCE = mandatory L:10856
	SI_XNAP_DT_GlobalNG_RANNode_ID * globalNGRANnodeID;
	int globalNGRANnodeID_isset;

	// ID = id-TAISupport-list, PRESENCE = mandatory L:10856
	SI_XNAP_DT_TAISupport_List * tAISupportlist;
	int tAISupportlist_isset;

	// ID = id-List-of-served-cells-NR, PRESENCE = optional L:10856
	SI_XNAP_DT_ServedCells_NR * listofservedcellsNR;
	int listofservedcellsNR_isset;

	// ID = id-List-of-served-cells-E-UTRA, PRESENCE = optional L:10856
	SI_XNAP_DT_ServedCells_E_UTRA * listofservedcellsEUTRA;
	int listofservedcellsEUTRA_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-AMF-Region-Information, PRESENCE = optional L:10856
	SI_XNAP_DT_AMF_Region_Information * aMFRegionInformation;
	int aMFRegionInformation_isset;

	// ID = id-InterfaceInstanceIndication, PRESENCE = optional L:10856
	unsigned long long int interfaceInstanceIndication;
	int interfaceInstanceIndication_isset;

	// ID = id-TNLConfigurationInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_TNLConfigurationInfo * tNLConfigurationInfo;
	int tNLConfigurationInfo_isset;

	// ID = id-PartialListIndicator-NR, PRESENCE = optional L:10856
	uint8_t partialListIndicatorNR;
	int partialListIndicatorNR_isset;

	// ID = id-CellAndCapacityAssistanceInfo-NR, PRESENCE = optional L:10856
	SI_XNAP_DT_CellAndCapacityAssistanceInfo_NR * cellAndCapacityAssistanceInfoNR;
	int cellAndCapacityAssistanceInfoNR_isset;

	// ID = id-PartialListIndicator-EUTRA, PRESENCE = optional L:10856
	uint8_t partialListIndicatorEUTRA;
	int partialListIndicatorEUTRA_isset;

	// ID = id-CellAndCapacityAssistanceInfo-EUTRA, PRESENCE = optional L:10856
	SI_XNAP_DT_CellAndCapacityAssistanceInfo_EUTRA * cellAndCapacityAssistanceInfoEUTRA;
	int cellAndCapacityAssistanceInfoEUTRA_isset;

	// ID = id-Local-NG-RAN-Node-Identifier, PRESENCE = optional L:10856
	SI_XNAP_DT_Local_NG_RAN_Node_Identifier * localNGRANNodeIdentifier;
	int localNGRANNodeIdentifier_isset;

	// ID = id-Neighbour-NG-RAN-Node-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Neighbour_NG_RAN_Node_List * neighbourNGRANNodeList;
	int neighbourNGRANNodeList_isset;

	
} SI_XNAP_DT_PDU_XnSetupResponse;


//ELEMENTARY-PROCEDURE = [2] xnSetup	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_XnSetupFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-TimeToWait, PRESENCE = optional L:10856
	uint8_t timeToWait;
	int timeToWait_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-InterfaceInstanceIndication, PRESENCE = optional L:10856
	unsigned long long int interfaceInstanceIndication;
	int interfaceInstanceIndication_isset;

	// ID = id-MessageOversizeNotification, PRESENCE = optional L:10856
	SI_XNAP_DT_MessageOversizeNotification * messageOversizeNotification;
	int messageOversizeNotification_isset;

	
} SI_XNAP_DT_PDU_XnSetupFailure;


//ELEMENTARY-PROCEDURE = [2] nGRANnodeConfigurationUpdate	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_NGRANNodeConfigurationUpdate
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-TAISupport-list, PRESENCE = optional L:10856
	SI_XNAP_DT_TAISupport_List * tAISupportlist;
	int tAISupportlist_isset;

	// ID = id-ConfigurationUpdateInitiatingNodeChoice, PRESENCE = mandatory L:10856
	SI_XNAP_DT_ConfigurationUpdateInitiatingNodeChoice * configurationUpdateInitiatingNodeChoice;
	int configurationUpdateInitiatingNodeChoice_isset;

	// ID = id-TNLA-To-Add-List, PRESENCE = optional L:10856
	SI_XNAP_DT_TNLA_To_Add_List * tNLAToAddList;
	int tNLAToAddList_isset;

	// ID = id-TNLA-To-Remove-List, PRESENCE = optional L:10856
	SI_XNAP_DT_TNLA_To_Remove_List * tNLAToRemoveList;
	int tNLAToRemoveList_isset;

	// ID = id-TNLA-To-Update-List, PRESENCE = optional L:10856
	SI_XNAP_DT_TNLA_To_Update_List * tNLAToUpdateList;
	int tNLAToUpdateList_isset;

	// ID = id-GlobalNG-RAN-node-ID, PRESENCE = optional L:10856
	SI_XNAP_DT_GlobalNG_RANNode_ID * globalNGRANnodeID;
	int globalNGRANnodeID_isset;

	// ID = id-AMF-Region-Information-To-Add, PRESENCE = optional L:10856
	SI_XNAP_DT_AMF_Region_Information * aMFRegionInformationToAdd;
	int aMFRegionInformationToAdd_isset;

	// ID = id-AMF-Region-Information-To-Delete, PRESENCE = optional L:10856
	SI_XNAP_DT_AMF_Region_Information * aMFRegionInformationToDelete;
	int aMFRegionInformationToDelete_isset;

	// ID = id-InterfaceInstanceIndication, PRESENCE = optional L:10856
	unsigned long long int interfaceInstanceIndication;
	int interfaceInstanceIndication_isset;

	// ID = id-TNLConfigurationInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_TNLConfigurationInfo * tNLConfigurationInfo;
	int tNLConfigurationInfo_isset;

	// ID = id-Coverage-Modification-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Coverage_Modification_List * coverageModificationList;
	int coverageModificationList_isset;

	// ID = id-Local-NG-RAN-Node-Identifier, PRESENCE = optional L:10856
	SI_XNAP_DT_Local_NG_RAN_Node_Identifier * localNGRANNodeIdentifier;
	int localNGRANNodeIdentifier_isset;

	// ID = id-Neighbour-NG-RAN-Node-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Neighbour_NG_RAN_Node_List * neighbourNGRANNodeList;
	int neighbourNGRANNodeList_isset;

	// ID = id-Local-NG-RAN-Node-Identifier-Removal, PRESENCE = optional L:10856
	SI_XNAP_DT_Local_NG_RAN_Node_Identifier * localNGRANNodeIdentifierRemoval;
	int localNGRANNodeIdentifierRemoval_isset;

	
} SI_XNAP_DT_PDU_NGRANNodeConfigurationUpdate;


//ELEMENTARY-PROCEDURE = [2] nGRANnodeConfigurationUpdate	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_NGRANNodeConfigurationUpdateAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RespondingNodeTypeConfigUpdateAck, PRESENCE = mandatory L:10856
	SI_XNAP_DT_RespondingNodeTypeConfigUpdateAck * respondingNodeTypeConfigUpdateAck;
	int respondingNodeTypeConfigUpdateAck_isset;

	// ID = id-TNLA-Setup-List, PRESENCE = optional L:10856
	SI_XNAP_DT_TNLA_Setup_List * tNLASetupList;
	int tNLASetupList_isset;

	// ID = id-TNLA-Failed-To-Setup-List, PRESENCE = optional L:10856
	SI_XNAP_DT_TNLA_Failed_To_Setup_List * tNLAFailedToSetupList;
	int tNLAFailedToSetupList_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-InterfaceInstanceIndication, PRESENCE = optional L:10856
	unsigned long long int interfaceInstanceIndication;
	int interfaceInstanceIndication_isset;

	// ID = id-TNLConfigurationInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_TNLConfigurationInfo * tNLConfigurationInfo;
	int tNLConfigurationInfo_isset;

	// ID = id-Local-NG-RAN-Node-Identifier, PRESENCE = optional L:10856
	SI_XNAP_DT_Local_NG_RAN_Node_Identifier * localNGRANNodeIdentifier;
	int localNGRANNodeIdentifier_isset;

	// ID = id-Neighbour-NG-RAN-Node-List, PRESENCE = optional L:10856
	SI_XNAP_DT_Neighbour_NG_RAN_Node_List * neighbourNGRANNodeList;
	int neighbourNGRANNodeList_isset;

	// ID = id-Local-NG-RAN-Node-Identifier-Removal, PRESENCE = optional L:10856
	SI_XNAP_DT_Local_NG_RAN_Node_Identifier * localNGRANNodeIdentifierRemoval;
	int localNGRANNodeIdentifierRemoval_isset;

	
} SI_XNAP_DT_PDU_NGRANNodeConfigurationUpdateAcknowledge;


//ELEMENTARY-PROCEDURE = [2] nGRANnodeConfigurationUpdate	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_NGRANNodeConfigurationUpdateFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-TimeToWait, PRESENCE = optional L:10856
	uint8_t timeToWait;
	int timeToWait_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-InterfaceInstanceIndication, PRESENCE = optional L:10856
	unsigned long long int interfaceInstanceIndication;
	int interfaceInstanceIndication_isset;

	
} SI_XNAP_DT_PDU_NGRANNodeConfigurationUpdateFailure;


//ELEMENTARY-PROCEDURE = [2] e-UTRA-NR-CellResourceCoordination	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_E_UTRA_NR_CellResourceCoordinationRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-initiatingNodeType-ResourceCoordRequest, PRESENCE = mandatory L:10856
	SI_XNAP_DT_InitiatingNodeType_ResourceCoordRequest * initiatingNodeTypeResourceCoordRequest;
	int initiatingNodeTypeResourceCoordRequest_isset;

	// ID = id-InterfaceInstanceIndication, PRESENCE = optional L:10856
	unsigned long long int interfaceInstanceIndication;
	int interfaceInstanceIndication_isset;

	
} SI_XNAP_DT_PDU_E_UTRA_NR_CellResourceCoordinationRequest;


//ELEMENTARY-PROCEDURE = [2] e-UTRA-NR-CellResourceCoordination	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_E_UTRA_NR_CellResourceCoordinationResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-respondingNodeType-ResourceCoordResponse, PRESENCE = mandatory L:10856
	SI_XNAP_DT_RespondingNodeType_ResourceCoordResponse * respondingNodeTypeResourceCoordResponse;
	int respondingNodeTypeResourceCoordResponse_isset;

	// ID = id-InterfaceInstanceIndication, PRESENCE = optional L:10856
	unsigned long long int interfaceInstanceIndication;
	int interfaceInstanceIndication_isset;

	
} SI_XNAP_DT_PDU_E_UTRA_NR_CellResourceCoordinationResponse;


//ELEMENTARY-PROCEDURE = [2] secondaryRATDataUsageReport	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_SecondaryRATDataUsageReport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-PDUSessionResourceSecondaryRATUsageList, PRESENCE = mandatory L:10856
	SI_XNAP_DT_PDUSessionResourceSecondaryRATUsageList * pDUSessionResourceSecondaryRATUsageList;
	int pDUSessionResourceSecondaryRATUsageList_isset;

	
} SI_XNAP_DT_PDU_SecondaryRATDataUsageReport;


//ELEMENTARY-PROCEDURE = [2] xnRemoval	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_XnRemovalRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-GlobalNG-RAN-node-ID, PRESENCE = mandatory L:10856
	SI_XNAP_DT_GlobalNG_RANNode_ID * globalNGRANnodeID;
	int globalNGRANnodeID_isset;

	// ID = id-XnRemovalThreshold, PRESENCE = optional L:10856
	unsigned long long int xnRemovalThreshold;
	int xnRemovalThreshold_isset;

	// ID = id-InterfaceInstanceIndication, PRESENCE = optional L:10856
	unsigned long long int interfaceInstanceIndication;
	int interfaceInstanceIndication_isset;

	
} SI_XNAP_DT_PDU_XnRemovalRequest;


//ELEMENTARY-PROCEDURE = [2] xnRemoval	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_XnRemovalResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-GlobalNG-RAN-node-ID, PRESENCE = mandatory L:10856
	SI_XNAP_DT_GlobalNG_RANNode_ID * globalNGRANnodeID;
	int globalNGRANnodeID_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-InterfaceInstanceIndication, PRESENCE = optional L:10856
	unsigned long long int interfaceInstanceIndication;
	int interfaceInstanceIndication_isset;

	
} SI_XNAP_DT_PDU_XnRemovalResponse;


//ELEMENTARY-PROCEDURE = [2] xnRemoval	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_XnRemovalFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-InterfaceInstanceIndication, PRESENCE = optional L:10856
	unsigned long long int interfaceInstanceIndication;
	int interfaceInstanceIndication_isset;

	
} SI_XNAP_DT_PDU_XnRemovalFailure;


//ELEMENTARY-PROCEDURE = [2] cellActivation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_CellActivationRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ServedCellsToActivate, PRESENCE = mandatory L:10856
	SI_XNAP_DT_ServedCellsToActivate * servedCellsToActivate;
	int servedCellsToActivate_isset;

	// ID = id-ActivationIDforCellActivation, PRESENCE = mandatory L:10856
	unsigned long long int activationIDforCellActivation;
	int activationIDforCellActivation_isset;

	// ID = id-InterfaceInstanceIndication, PRESENCE = optional L:10856
	unsigned long long int interfaceInstanceIndication;
	int interfaceInstanceIndication_isset;

	
} SI_XNAP_DT_PDU_CellActivationRequest;


//ELEMENTARY-PROCEDURE = [2] cellActivation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_CellActivationResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ActivatedServedCells, PRESENCE = mandatory L:10856
	SI_XNAP_DT_ActivatedServedCells * activatedServedCells;
	int activatedServedCells_isset;

	// ID = id-ActivationIDforCellActivation, PRESENCE = mandatory L:10856
	unsigned long long int activationIDforCellActivation;
	int activationIDforCellActivation_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-InterfaceInstanceIndication, PRESENCE = optional L:10856
	unsigned long long int interfaceInstanceIndication;
	int interfaceInstanceIndication_isset;

	
} SI_XNAP_DT_PDU_CellActivationResponse;


//ELEMENTARY-PROCEDURE = [2] cellActivation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_CellActivationFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ActivationIDforCellActivation, PRESENCE = mandatory L:10856
	unsigned long long int activationIDforCellActivation;
	int activationIDforCellActivation_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-InterfaceInstanceIndication, PRESENCE = optional L:10856
	unsigned long long int interfaceInstanceIndication;
	int interfaceInstanceIndication_isset;

	
} SI_XNAP_DT_PDU_CellActivationFailure;


//ELEMENTARY-PROCEDURE = [2] reset	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_ResetRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ResetRequestTypeInfo, PRESENCE = mandatory L:10856
	SI_XNAP_DT_ResetRequestTypeInfo * resetRequestTypeInfo;
	int resetRequestTypeInfo_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-InterfaceInstanceIndication, PRESENCE = optional L:10856
	unsigned long long int interfaceInstanceIndication;
	int interfaceInstanceIndication_isset;

	
} SI_XNAP_DT_PDU_ResetRequest;


//ELEMENTARY-PROCEDURE = [2] reset	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_ResetResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ResetResponseTypeInfo, PRESENCE = mandatory L:10856
	SI_XNAP_DT_ResetResponseTypeInfo * resetResponseTypeInfo;
	int resetResponseTypeInfo_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-InterfaceInstanceIndication, PRESENCE = optional L:10856
	unsigned long long int interfaceInstanceIndication;
	int interfaceInstanceIndication_isset;

	
} SI_XNAP_DT_PDU_ResetResponse;


//ELEMENTARY-PROCEDURE = [2] errorIndication	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_ErrorIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-oldNG-RANnodeUEXnAPID, PRESENCE = optional L:10856
	unsigned long long int oldNGRANnodeUEXnAPID;
	int oldNGRANnodeUEXnAPID_isset;

	// ID = id-newNG-RANnodeUEXnAPID, PRESENCE = optional L:10856
	unsigned long long int newNGRANnodeUEXnAPID;
	int newNGRANnodeUEXnAPID_isset;

	// ID = id-Cause, PRESENCE = optional L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-InterfaceInstanceIndication, PRESENCE = optional L:10856
	unsigned long long int interfaceInstanceIndication;
	int interfaceInstanceIndication_isset;

	
} SI_XNAP_DT_PDU_ErrorIndication;


//ELEMENTARY-PROCEDURE = [2] privateMessage			XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_PrivateMessage
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PrivateMessage;


//ELEMENTARY-PROCEDURE = [2] traceStart  L:10816

// L:10818
typedef struct __si_xnap_dt_TraceStart
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-TraceActivation, PRESENCE = optional L:10856
	SI_XNAP_DT_TraceActivation * traceActivation;
	int traceActivation_isset;

	
} SI_XNAP_DT_PDU_TraceStart;


//ELEMENTARY-PROCEDURE = [2] deactivateTrace  L:10816

// L:10818
typedef struct __si_xnap_dt_DeactivateTrace
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-NG-RANTraceID, PRESENCE = mandatory L:10856
	SI_XNAP_DT_NG_RANTraceID * nGRANTraceID;
	int nGRANTraceID_isset;

	
} SI_XNAP_DT_PDU_DeactivateTrace;


//ELEMENTARY-PROCEDURE = [2] failureIndication  L:10816

// L:10818
typedef struct __si_xnap_dt_FailureIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-InitiatingCondition-FailureIndication, PRESENCE = mandatory L:10856
	SI_XNAP_DT_InitiatingCondition_FailureIndication * initiatingConditionFailureIndication;
	int initiatingConditionFailureIndication_isset;

	
} SI_XNAP_DT_PDU_FailureIndication;


//ELEMENTARY-PROCEDURE = [2] handoverReport  L:10816

// L:10818
typedef struct __si_xnap_dt_HandoverReport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-HandoverReportType, PRESENCE = mandatory L:10856
	uint8_t handoverReportType;
	int handoverReportType_isset;

	// ID = id-HandoverCause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * handoverCause;
	int handoverCause_isset;

	// ID = id-SourceCellCGI, PRESENCE = mandatory L:10856
	SI_XNAP_DT_GlobalNG_RANCell_ID * sourceCellCGI;
	int sourceCellCGI_isset;

	// ID = id-TargetCellCGI, PRESENCE = mandatory L:10856
	SI_XNAP_DT_GlobalNG_RANCell_ID * targetCellCGI;
	int targetCellCGI_isset;

	// ID = id-ReEstablishmentCellCGI, PRESENCE = conditional L:10856
	SI_XNAP_DT_GlobalCell_ID * reEstablishmentCellCGI;
	int reEstablishmentCellCGI_isset;

	// ID = id-TargetCellinEUTRAN, PRESENCE = conditional L:10856
	SI_XNAP_DT_TargetCellinEUTRAN * targetCellinEUTRAN;
	int targetCellinEUTRAN_isset;

	// ID = id-SourceCellCRNTI, PRESENCE = optional L:10856
	SI_XNAP_DT_C_RNTI * sourceCellCRNTI;
	int sourceCellCRNTI_isset;

	// ID = id-MobilityInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_MobilityInformation * mobilityInformation;
	int mobilityInformation_isset;

	// ID = id-UERLFReportContainer, PRESENCE = optional L:10856
	SI_XNAP_DT_UERLFReportContainer * uERLFReportContainer;
	int uERLFReportContainer_isset;

	// ID = id-CHOConfiguration, PRESENCE = optional L:10856
	SI_XNAP_DT_CHOConfiguration * cHOConfiguration;
	int cHOConfiguration_isset;

	// ID = id-TargetCellCRNTI, PRESENCE = optional L:10856
	SI_XNAP_DT_C_RNTI * targetCellCRNTI;
	int targetCellCRNTI_isset;

	// ID = id-TimeSinceFailure, PRESENCE = optional L:10856
	unsigned long long int timeSinceFailure;
	int timeSinceFailure_isset;

	
} SI_XNAP_DT_PDU_HandoverReport;


//ELEMENTARY-PROCEDURE = [2] resourceStatusReportingInitiation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_ResourceStatusRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NGRAN-Node1-Measurement-ID, PRESENCE = mandatory L:10856
	unsigned long long int nGRANNode1MeasurementID;
	int nGRANNode1MeasurementID_isset;

	// ID = id-NGRAN-Node2-Measurement-ID, PRESENCE = conditional L:10856
	unsigned long long int nGRANNode2MeasurementID;
	int nGRANNode2MeasurementID_isset;

	// ID = id-RegistrationRequest, PRESENCE = mandatory L:10856
	uint8_t registrationRequest;
	int registrationRequest_isset;

	// ID = id-ReportCharacteristics, PRESENCE = conditional L:10856
	SI_XNAP_DT_ReportCharacteristics * reportCharacteristics;
	int reportCharacteristics_isset;

	// ID = id-CellToReport, PRESENCE = optional L:10856
	SI_XNAP_DT_CellToReport * cellToReport;
	int cellToReport_isset;

	// ID = id-ReportingPeriodicity, PRESENCE = optional L:10856
	uint8_t reportingPeriodicity;
	int reportingPeriodicity_isset;

	
} SI_XNAP_DT_PDU_ResourceStatusRequest;


//ELEMENTARY-PROCEDURE = [2] resourceStatusReportingInitiation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_ResourceStatusResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NGRAN-Node1-Measurement-ID, PRESENCE = mandatory L:10856
	unsigned long long int nGRANNode1MeasurementID;
	int nGRANNode1MeasurementID_isset;

	// ID = id-NGRAN-Node2-Measurement-ID, PRESENCE = mandatory L:10856
	unsigned long long int nGRANNode2MeasurementID;
	int nGRANNode2MeasurementID_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_XNAP_DT_PDU_ResourceStatusResponse;


//ELEMENTARY-PROCEDURE = [2] resourceStatusReportingInitiation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_ResourceStatusFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NGRAN-Node1-Measurement-ID, PRESENCE = mandatory L:10856
	unsigned long long int nGRANNode1MeasurementID;
	int nGRANNode1MeasurementID_isset;

	// ID = id-NGRAN-Node2-Measurement-ID, PRESENCE = mandatory L:10856
	unsigned long long int nGRANNode2MeasurementID;
	int nGRANNode2MeasurementID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_XNAP_DT_PDU_ResourceStatusFailure;


//ELEMENTARY-PROCEDURE = [2] resourceStatusReporting  L:10816

// L:10818
typedef struct __si_xnap_dt_ResourceStatusUpdate
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NGRAN-Node1-Measurement-ID, PRESENCE = mandatory L:10856
	unsigned long long int nGRANNode1MeasurementID;
	int nGRANNode1MeasurementID_isset;

	// ID = id-NGRAN-Node2-Measurement-ID, PRESENCE = mandatory L:10856
	unsigned long long int nGRANNode2MeasurementID;
	int nGRANNode2MeasurementID_isset;

	// ID = id-CellMeasurementResult, PRESENCE = mandatory L:10856
	SI_XNAP_DT_CellMeasurementResult * cellMeasurementResult;
	int cellMeasurementResult_isset;

	
} SI_XNAP_DT_PDU_ResourceStatusUpdate;


//ELEMENTARY-PROCEDURE = [2] mobilitySettingsChange	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_MobilityChangeRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NG-RANnode1CellID, PRESENCE = mandatory L:10856
	SI_XNAP_DT_GlobalNG_RANCell_ID * nGRANnode1CellID;
	int nGRANnode1CellID_isset;

	// ID = id-NG-RANnode2CellID, PRESENCE = mandatory L:10856
	SI_XNAP_DT_GlobalNG_RANCell_ID * nGRANnode2CellID;
	int nGRANnode2CellID_isset;

	// ID = id-NG-RANnode1MobilityParameters, PRESENCE = optional L:10856
	SI_XNAP_DT_MobilityParametersInformation * nGRANnode1MobilityParameters;
	int nGRANnode1MobilityParameters_isset;

	// ID = id-NG-RANnode2ProposedMobilityParameters, PRESENCE = mandatory L:10856
	SI_XNAP_DT_MobilityParametersInformation * nGRANnode2ProposedMobilityParameters;
	int nGRANnode2ProposedMobilityParameters_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-SSBOffsets-List, PRESENCE = optional L:10856
	SI_XNAP_DT_SSBOffsets_List * sSBOffsetsList;
	int sSBOffsetsList_isset;

	
} SI_XNAP_DT_PDU_MobilityChangeRequest;


//ELEMENTARY-PROCEDURE = [2] mobilitySettingsChange	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_MobilityChangeAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NG-RANnode1CellID, PRESENCE = mandatory L:10856
	SI_XNAP_DT_GlobalNG_RANCell_ID * nGRANnode1CellID;
	int nGRANnode1CellID_isset;

	// ID = id-NG-RANnode2CellID, PRESENCE = mandatory L:10856
	SI_XNAP_DT_GlobalNG_RANCell_ID * nGRANnode2CellID;
	int nGRANnode2CellID_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_XNAP_DT_PDU_MobilityChangeAcknowledge;


//ELEMENTARY-PROCEDURE = [2] mobilitySettingsChange	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_MobilityChangeFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NG-RANnode1CellID, PRESENCE = mandatory L:10856
	SI_XNAP_DT_GlobalNG_RANCell_ID * nGRANnode1CellID;
	int nGRANnode1CellID_isset;

	// ID = id-NG-RANnode2CellID, PRESENCE = mandatory L:10856
	SI_XNAP_DT_GlobalNG_RANCell_ID * nGRANnode2CellID;
	int nGRANnode2CellID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-MobilityParametersModificationRange, PRESENCE = optional L:10856
	SI_XNAP_DT_MobilityParametersModificationRange * mobilityParametersModificationRange;
	int mobilityParametersModificationRange_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-NG-RANnode2SSBOffsetsModificationRange, PRESENCE = optional L:10856
	SI_XNAP_DT_NG_RANnode2SSBOffsetsModificationRange * nGRANnode2SSBOffsetsModificationRange;
	int nGRANnode2SSBOffsetsModificationRange_isset;

	
} SI_XNAP_DT_PDU_MobilityChangeFailure;


//ELEMENTARY-PROCEDURE = [2] accessAndMobilityIndication  L:10816

// L:10818
typedef struct __si_xnap_dt_AccessAndMobilityIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RAReport, PRESENCE = optional L:10856
	SI_XNAP_DT_RAReport * rAReport;
	int rAReport_isset;

	// ID = id-SuccessfulHOReportInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_SuccessfulHOReportInformation * successfulHOReportInformation;
	int successfulHOReportInformation_isset;

	// ID = id-SuccessfulPSCellChangeReportInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_SuccessfulPSCellChangeReportInformation * successfulPSCellChangeReportInformation;
	int successfulPSCellChangeReportInformation_isset;

	// ID = id-DLLBTFailureInformationList, PRESENCE = optional L:10856
	SI_XNAP_DT_DLLBTFailureInformationList * dLLBTFailureInformationList;
	int dLLBTFailureInformationList_isset;

	
} SI_XNAP_DT_PDU_AccessAndMobilityIndication;


//ELEMENTARY-PROCEDURE = [2] cellTrafficTrace  L:10816

// L:10818
typedef struct __si_xnap_dt_CellTrafficTrace
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-NG-RANTraceID, PRESENCE = mandatory L:10856
	SI_XNAP_DT_NG_RANTraceID * nGRANTraceID;
	int nGRANTraceID_isset;

	// ID = id-TraceCollectionEntityIPAddress, PRESENCE = mandatory L:10856
	SI_XNAP_DT_TransportLayerAddress * traceCollectionEntityIPAddress;
	int traceCollectionEntityIPAddress_isset;

	// ID = id-PrivacyIndicator, PRESENCE = optional L:10856
	uint8_t privacyIndicator;
	int privacyIndicator_isset;

	// ID = id-TraceCollectionEntityURI, PRESENCE = optional L:10856
	SI_XNAP_DT_URIaddress * traceCollectionEntityURI;
	int traceCollectionEntityURI_isset;

	
} SI_XNAP_DT_PDU_CellTrafficTrace;


//ELEMENTARY-PROCEDURE = [2] rANMulticastGroupPaging  L:10816

// L:10818
typedef struct __si_xnap_dt_RANMulticastGroupPaging
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-MBS-Session-ID, PRESENCE = mandatory L:10856
	SI_XNAP_DT_MBS_Session_ID * mBSSessionID;
	int mBSSessionID_isset;

	// ID = id-UEIdentityIndexList-MBSGroupPaging, PRESENCE = mandatory L:10856
	SI_XNAP_DT_UEIdentityIndexList_MBSGroupPaging * uEIdentityIndexListMBSGroupPaging;
	int uEIdentityIndexListMBSGroupPaging_isset;

	// ID = id-MulticastRANPagingArea, PRESENCE = mandatory L:10856
	SI_XNAP_DT_RANPagingArea * multicastRANPagingArea;
	int multicastRANPagingArea_isset;

	
} SI_XNAP_DT_PDU_RANMulticastGroupPaging;


//ELEMENTARY-PROCEDURE = [2] scgFailureInformationReport  L:10816

// L:10818
typedef struct __si_xnap_dt_ScgFailureInformationReport
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-SourcePSCellCGI, PRESENCE = optional L:10856
	SI_XNAP_DT_GlobalNG_RANCell_ID * sourcePSCellCGI;
	int sourcePSCellCGI_isset;

	// ID = id-FailedPSCellCGI, PRESENCE = optional L:10856
	SI_XNAP_DT_GlobalNG_RANCell_ID * failedPSCellCGI;
	int failedPSCellCGI_isset;

	// ID = id-SCGFailureReportContainer, PRESENCE = mandatory L:10856
	SI_XNAP_DT_SCGFailureReportContainer * sCGFailureReportContainer;
	int sCGFailureReportContainer_isset;

	// ID = id-SNMobilityInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_SNMobilityInformation * sNMobilityInformation;
	int sNMobilityInformation_isset;

	// ID = id-CPACConfiguration, PRESENCE = optional L:10856
	SI_XNAP_DT_CPACConfiguration * cPACConfiguration;
	int cPACConfiguration_isset;

	
} SI_XNAP_DT_PDU_ScgFailureInformationReport;


//ELEMENTARY-PROCEDURE = [2] scgFailureTransfer  L:10816

// L:10818
typedef struct __si_xnap_dt_ScgFailureTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	
} SI_XNAP_DT_PDU_ScgFailureTransfer;


//ELEMENTARY-PROCEDURE = [2] f1CTrafficTransfer			XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_F1CTrafficTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-F1CTrafficContainer, PRESENCE = mandatory L:10856
	SI_XNAP_DT_F1CTrafficContainer * f1CTrafficContainer;
	int f1CTrafficContainer_isset;

	
} SI_XNAP_DT_PDU_F1CTrafficTransfer;


//ELEMENTARY-PROCEDURE = [2] iABTransportMigrationManagement  L:10816

// L:10818
typedef struct __si_xnap_dt_IABTransportMigrationManagementRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-F1-Terminating-IAB-DonorUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int f1TerminatingIABDonorUEXnAPID;
	int f1TerminatingIABDonorUEXnAPID_isset;

	// ID = id-nonF1-Terminating-IAB-DonorUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int nonF1TerminatingIABDonorUEXnAPID;
	int nonF1TerminatingIABDonorUEXnAPID_isset;

	// ID = id-TrafficToBeAddedList, PRESENCE = optional L:10856
	SI_XNAP_DT_TrafficToBeAddedList * trafficToBeAddedList;
	int trafficToBeAddedList_isset;

	// ID = id-TrafficToBeModifiedList, PRESENCE = optional L:10856
	SI_XNAP_DT_TrafficToBeModifiedList * trafficToBeModifiedList;
	int trafficToBeModifiedList_isset;

	// ID = id-TrafficToBeReleaseInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_TrafficToBeReleaseInformation * trafficToBeReleaseInformation;
	int trafficToBeReleaseInformation_isset;

	// ID = id-IAB-TNL-Address-Request, PRESENCE = optional L:10856
	SI_XNAP_DT_IAB_TNL_Address_Request * iABTNLAddressRequest;
	int iABTNLAddressRequest_isset;

	// ID = id-IABTNLAddressException, PRESENCE = optional L:10856
	SI_XNAP_DT_IABTNLAddressException * iABTNLAddressException;
	int iABTNLAddressException_isset;

	// ID = id-MIAB-MT-BAP-Address, PRESENCE = optional L:10856
	SI_XNAP_DT_BAPAddress * mIABMTBAPAddress;
	int mIABMTBAPAddress_isset;

	
} SI_XNAP_DT_PDU_IABTransportMigrationManagementRequest;


//ELEMENTARY-PROCEDURE = [2] iABTransportMigrationManagement  L:10816

// L:10818
typedef struct __si_xnap_dt_IABTransportMigrationManagementResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-F1-Terminating-IAB-DonorUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int f1TerminatingIABDonorUEXnAPID;
	int f1TerminatingIABDonorUEXnAPID_isset;

	// ID = id-nonF1-Terminating-IAB-DonorUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int nonF1TerminatingIABDonorUEXnAPID;
	int nonF1TerminatingIABDonorUEXnAPID_isset;

	// ID = id-TrafficAddedList, PRESENCE = optional L:10856
	SI_XNAP_DT_TrafficAddedList * trafficAddedList;
	int trafficAddedList_isset;

	// ID = id-TrafficModifiedList, PRESENCE = optional L:10856
	SI_XNAP_DT_TrafficModifiedList * trafficModifiedList;
	int trafficModifiedList_isset;

	// ID = id-TrafficNotAddedList, PRESENCE = optional L:10856
	SI_XNAP_DT_TrafficNotAddedList * trafficNotAddedList;
	int trafficNotAddedList_isset;

	// ID = id-TrafficNotModifiedList, PRESENCE = optional L:10856
	SI_XNAP_DT_TrafficNotModifiedList * trafficNotModifiedList;
	int trafficNotModifiedList_isset;

	// ID = id-IAB-TNL-Address-Response, PRESENCE = optional L:10856
	SI_XNAP_DT_IAB_TNL_Address_Response * iABTNLAddressResponse;
	int iABTNLAddressResponse_isset;

	// ID = id-TrafficReleasedList, PRESENCE = optional L:10856
	SI_XNAP_DT_TrafficReleasedList * trafficReleasedList;
	int trafficReleasedList_isset;

	
} SI_XNAP_DT_PDU_IABTransportMigrationManagementResponse;


//ELEMENTARY-PROCEDURE = [2] iABTransportMigrationManagement  L:10816

// L:10818
typedef struct __si_xnap_dt_IABTransportMigrationManagementReject
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-F1-Terminating-IAB-DonorUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int f1TerminatingIABDonorUEXnAPID;
	int f1TerminatingIABDonorUEXnAPID_isset;

	// ID = id-nonF1-Terminating-IAB-DonorUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int nonF1TerminatingIABDonorUEXnAPID;
	int nonF1TerminatingIABDonorUEXnAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_XNAP_DT_PDU_IABTransportMigrationManagementReject;


//ELEMENTARY-PROCEDURE = [2] iABTransportMigrationModification  L:10816

// L:10818
typedef struct __si_xnap_dt_IABTransportMigrationModificationRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-F1-Terminating-IAB-DonorUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int f1TerminatingIABDonorUEXnAPID;
	int f1TerminatingIABDonorUEXnAPID_isset;

	// ID = id-nonF1-Terminating-IAB-DonorUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int nonF1TerminatingIABDonorUEXnAPID;
	int nonF1TerminatingIABDonorUEXnAPID_isset;

	// ID = id-TrafficRequiredToBeModifiedList, PRESENCE = optional L:10856
	SI_XNAP_DT_TrafficRequiredToBeModifiedList * trafficRequiredToBeModifiedList;
	int trafficRequiredToBeModifiedList_isset;

	// ID = id-TrafficToBeReleaseInformation, PRESENCE = optional L:10856
	SI_XNAP_DT_TrafficToBeReleaseInformation * trafficToBeReleaseInformation;
	int trafficToBeReleaseInformation_isset;

	// ID = id-IABTNLAddressToBeAdded, PRESENCE = optional L:10856
	SI_XNAP_DT_IAB_TNL_Address_Response * iABTNLAddressToBeAdded;
	int iABTNLAddressToBeAdded_isset;

	// ID = id-IABTNLAddressToBeReleasedList, PRESENCE = optional L:10856
	SI_XNAP_DT_IABTNLAddressToBeReleasedList * iABTNLAddressToBeReleasedList;
	int iABTNLAddressToBeReleasedList_isset;

	// ID = id-IABAuthorizationStatus, PRESENCE = optional L:10856
	uint8_t iABAuthorizationStatus;
	int iABAuthorizationStatus_isset;

	// ID = id-MobileIAB-AuthorizationStatus, PRESENCE = optional L:10856
	uint8_t mobileIABAuthorizationStatus;
	int mobileIABAuthorizationStatus_isset;

	
} SI_XNAP_DT_PDU_IABTransportMigrationModificationRequest;


//ELEMENTARY-PROCEDURE = [2] iABTransportMigrationModification  L:10816

// L:10818
typedef struct __si_xnap_dt_IABTransportMigrationModificationResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-F1-Terminating-IAB-DonorUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int f1TerminatingIABDonorUEXnAPID;
	int f1TerminatingIABDonorUEXnAPID_isset;

	// ID = id-nonF1-Terminating-IAB-DonorUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int nonF1TerminatingIABDonorUEXnAPID;
	int nonF1TerminatingIABDonorUEXnAPID_isset;

	// ID = id-TrafficRequiredModifiedList, PRESENCE = optional L:10856
	SI_XNAP_DT_TrafficRequiredModifiedList * trafficRequiredModifiedList;
	int trafficRequiredModifiedList_isset;

	// ID = id-TrafficReleasedList, PRESENCE = optional L:10856
	SI_XNAP_DT_TrafficReleasedList * trafficReleasedList;
	int trafficReleasedList_isset;

	
} SI_XNAP_DT_PDU_IABTransportMigrationModificationResponse;


//ELEMENTARY-PROCEDURE = [2] iABResourceCoordination  L:10816

// L:10818
typedef struct __si_xnap_dt_IABResourceCoordinationRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-F1-Terminating-IAB-DonorUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int f1TerminatingIABDonorUEXnAPID;
	int f1TerminatingIABDonorUEXnAPID_isset;

	// ID = id-nonF1-Terminating-IAB-DonorUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int nonF1TerminatingIABDonorUEXnAPID;
	int nonF1TerminatingIABDonorUEXnAPID_isset;

	// ID = id-BoundaryNodeCellsList, PRESENCE = optional L:10856
	SI_XNAP_DT_BoundaryNodeCellsList * boundaryNodeCellsList;
	int boundaryNodeCellsList_isset;

	// ID = id-ParentNodeCellsList, PRESENCE = optional L:10856
	SI_XNAP_DT_ParentNodeCellsList * parentNodeCellsList;
	int parentNodeCellsList_isset;

	
} SI_XNAP_DT_PDU_IABResourceCoordinationRequest;


//ELEMENTARY-PROCEDURE = [2] iABResourceCoordination  L:10816

// L:10818
typedef struct __si_xnap_dt_IABResourceCoordinationResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-F1-Terminating-IAB-DonorUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int f1TerminatingIABDonorUEXnAPID;
	int f1TerminatingIABDonorUEXnAPID_isset;

	// ID = id-nonF1-Terminating-IAB-DonorUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int nonF1TerminatingIABDonorUEXnAPID;
	int nonF1TerminatingIABDonorUEXnAPID_isset;

	// ID = id-BoundaryNodeCellsList, PRESENCE = optional L:10856
	SI_XNAP_DT_BoundaryNodeCellsList * boundaryNodeCellsList;
	int boundaryNodeCellsList_isset;

	// ID = id-ParentNodeCellsList, PRESENCE = optional L:10856
	SI_XNAP_DT_ParentNodeCellsList * parentNodeCellsList;
	int parentNodeCellsList_isset;

	
} SI_XNAP_DT_PDU_IABResourceCoordinationResponse;


//ELEMENTARY-PROCEDURE = [2] cPCCancel  L:10816

// L:10818
typedef struct __si_xnap_dt_CPCCancel
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-M-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int mNGRANnodeUEXnAPID;
	int mNGRANnodeUEXnAPID_isset;

	// ID = id-S-NG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int sNGRANnodeUEXnAPID;
	int sNGRANnodeUEXnAPID_isset;

	// ID = id-Cause, PRESENCE = optional L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-target-S-NG-RANnodeID, PRESENCE = mandatory L:10856
	SI_XNAP_DT_GlobalNG_RANNode_ID * targetSNGRANnodeID;
	int targetSNGRANnodeID_isset;

	
} SI_XNAP_DT_PDU_CPCCancel;


//ELEMENTARY-PROCEDURE = [2] partialUEContextTransfer	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_PartialUEContextTransfer
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-newNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int newNGRANnodeUEXnAPID;
	int newNGRANnodeUEXnAPID_isset;

	// ID = id-oldNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int oldNGRANnodeUEXnAPID;
	int oldNGRANnodeUEXnAPID_isset;

	// ID = id-SDTPartialUEContextInfo, PRESENCE = mandatory L:10856
	SI_XNAP_DT_SDTPartialUEContextInfo * sDTPartialUEContextInfo;
	int sDTPartialUEContextInfo_isset;

	// ID = id-PosPartialUEContextInfo, PRESENCE = optional L:10856
	SI_XNAP_DT_PosPartialUEContextInfo * posPartialUEContextInfo;
	int posPartialUEContextInfo_isset;

	
} SI_XNAP_DT_PDU_PartialUEContextTransfer;


//ELEMENTARY-PROCEDURE = [2] partialUEContextTransfer	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_PartialUEContextTransferAcknowledge
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-newNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int newNGRANnodeUEXnAPID;
	int newNGRANnodeUEXnAPID_isset;

	// ID = id-oldNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int oldNGRANnodeUEXnAPID;
	int oldNGRANnodeUEXnAPID_isset;

	// ID = id-SDTDataForwardingDRBList, PRESENCE = optional L:10856
	SI_XNAP_DT_SDTDataForwardingDRBList * sDTDataForwardingDRBList;
	int sDTDataForwardingDRBList_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	// ID = id-SRSConfiguration, PRESENCE = optional L:10856
	SI_XNAP_DT_SRSConfiguration * sRSConfiguration;
	int sRSConfiguration_isset;

	
} SI_XNAP_DT_PDU_PartialUEContextTransferAcknowledge;


//ELEMENTARY-PROCEDURE = [2] partialUEContextTransfer	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_PartialUEContextTransferFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-newNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int newNGRANnodeUEXnAPID;
	int newNGRANnodeUEXnAPID_isset;

	// ID = id-oldNG-RANnodeUEXnAPID, PRESENCE = mandatory L:10856
	unsigned long long int oldNGRANnodeUEXnAPID;
	int oldNGRANnodeUEXnAPID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_XNAP_DT_PDU_PartialUEContextTransferFailure;


//ELEMENTARY-PROCEDURE = [2] rachIndication  L:10816

// L:10818
typedef struct __si_xnap_dt_RachIndication
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-RaReportIndicationList, PRESENCE = mandatory L:10856
	SI_XNAP_DT_RaReportIndicationList * raReportIndicationList;
	int raReportIndicationList_isset;

	
} SI_XNAP_DT_PDU_RachIndication;


//ELEMENTARY-PROCEDURE = [2] dataCollectionReportingInitiation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_DataCollectionRequest
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NGRAN-Node1-Measurement-ID, PRESENCE = mandatory L:10856
	unsigned long long int nGRANNode1MeasurementID;
	int nGRANNode1MeasurementID_isset;

	// ID = id-NGRAN-Node2-Measurement-ID, PRESENCE = conditional L:10856
	unsigned long long int nGRANNode2MeasurementID;
	int nGRANNode2MeasurementID_isset;

	// ID = id-RegistrationRequestForDataCollection, PRESENCE = mandatory L:10856
	uint8_t registrationRequestForDataCollection;
	int registrationRequestForDataCollection_isset;

	// ID = id-ReportCharacteristicsForDataCollection, PRESENCE = conditional L:10856
	SI_XNAP_DT_ReportCharacteristicsForDataCollection * reportCharacteristicsForDataCollection;
	int reportCharacteristicsForDataCollection_isset;

	// ID = id-CellToReportForDataCollection-List, PRESENCE = optional L:10856
	SI_XNAP_DT_CellToReportForDataCollection_List * cellToReportForDataCollectionList;
	int cellToReportForDataCollectionList_isset;

	// ID = id-ReportingPeriodicityForDataCollection, PRESENCE = optional L:10856
	uint8_t reportingPeriodicityForDataCollection;
	int reportingPeriodicityForDataCollection_isset;

	// ID = id-RequestedPredictionTime, PRESENCE = optional L:10856
	unsigned long long int requestedPredictionTime;
	int requestedPredictionTime_isset;

	// ID = id-UETrajectoryCollectionConfiguration, PRESENCE = optional L:10856
	SI_XNAP_DT_UETrajectoryCollectionConfiguration * uETrajectoryCollectionConfiguration;
	int uETrajectoryCollectionConfiguration_isset;

	// ID = id-UEPerformanceCollectionConfiguration, PRESENCE = optional L:10856
	SI_XNAP_DT_UEPerformanceCollectionConfiguration * uEPerformanceCollectionConfiguration;
	int uEPerformanceCollectionConfiguration_isset;

	
} SI_XNAP_DT_PDU_DataCollectionRequest;


//ELEMENTARY-PROCEDURE = [2] dataCollectionReportingInitiation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_DataCollectionResponse
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NGRAN-Node1-Measurement-ID, PRESENCE = mandatory L:10856
	unsigned long long int nGRANNode1MeasurementID;
	int nGRANNode1MeasurementID_isset;

	// ID = id-NGRAN-Node2-Measurement-ID, PRESENCE = mandatory L:10856
	unsigned long long int nGRANNode2MeasurementID;
	int nGRANNode2MeasurementID_isset;

	// ID = id-NodeMeasurementInitiationResult-List, PRESENCE = optional L:10856
	SI_XNAP_DT_NodeMeasurementInitiationResult_List * nodeMeasurementInitiationResultList;
	int nodeMeasurementInitiationResultList_isset;

	// ID = id-CellMeasurementInitiationResult-List, PRESENCE = optional L:10856
	SI_XNAP_DT_CellMeasurementInitiationResult_List * cellMeasurementInitiationResultList;
	int cellMeasurementInitiationResultList_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_XNAP_DT_PDU_DataCollectionResponse;


//ELEMENTARY-PROCEDURE = [2] dataCollectionReportingInitiation	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_DataCollectionFailure
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NGRAN-Node1-Measurement-ID, PRESENCE = mandatory L:10856
	unsigned long long int nGRANNode1MeasurementID;
	int nGRANNode1MeasurementID_isset;

	// ID = id-NGRAN-Node2-Measurement-ID, PRESENCE = mandatory L:10856
	unsigned long long int nGRANNode2MeasurementID;
	int nGRANNode2MeasurementID_isset;

	// ID = id-Cause, PRESENCE = mandatory L:10856
	SI_XNAP_DT_Cause * cause;
	int cause_isset;

	// ID = id-CriticalityDiagnostics, PRESENCE = optional L:10856
	SI_XNAP_DT_CriticalityDiagnostics * criticalityDiagnostics;
	int criticalityDiagnostics_isset;

	
} SI_XNAP_DT_PDU_DataCollectionFailure;


//ELEMENTARY-PROCEDURE = [2] dataCollectionReporting	XNAP-ELEMENTARY-PROCEDURE  L:10816

// L:10818
typedef struct __si_xnap_dt_DataCollectionUpdate
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NGRAN-Node1-Measurement-ID, PRESENCE = mandatory L:10856
	unsigned long long int nGRANNode1MeasurementID;
	int nGRANNode1MeasurementID_isset;

	// ID = id-NGRAN-Node2-Measurement-ID, PRESENCE = mandatory L:10856
	unsigned long long int nGRANNode2MeasurementID;
	int nGRANNode2MeasurementID_isset;

	// ID = id-CellMeasurementResultForDataCollection-List, PRESENCE = optional L:10856
	SI_XNAP_DT_CellMeasurementResultForDataCollection_List * cellMeasurementResultForDataCollectionList;
	int cellMeasurementResultForDataCollectionList_isset;

	// ID = id-UEAssociatedInfoResult-List, PRESENCE = optional L:10856
	SI_XNAP_DT_UEAssociatedInfoResult_List * uEAssociatedInfoResultList;
	int uEAssociatedInfoResultList_isset;

	// ID = id-NodeAssociatedInfoResult, PRESENCE = optional L:10856
	SI_XNAP_DT_NodeAssociatedInfoResult * nodeAssociatedInfoResult;
	int nodeAssociatedInfoResult_isset;

	
} SI_XNAP_DT_PDU_DataCollectionUpdate;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ProcedureStageChoice_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ProcedureStageChoice_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ResponseType_ReconfComplete_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ResponseType_ReconfComplete_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ServedCellsToUpdateInitiatingNodeChoice_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ServedCellsToUpdateInitiatingNodeChoice_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ConfigurationUpdate_gNB
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-servedCellsToUpdate-NR, PRESENCE = optional L:10856
	SI_XNAP_DT_ServedCellsToUpdate_NR * servedCellsToUpdateNR;
	int servedCellsToUpdateNR_isset;

	// ID = id-cellAssistanceInfo-NR, PRESENCE = optional L:10856
	SI_XNAP_DT_CellAssistanceInfo_NR * cellAssistanceInfoNR;
	int cellAssistanceInfoNR_isset;

	// ID = id-cellAssistanceInfo-EUTRA, PRESENCE = optional L:10856
	SI_XNAP_DT_CellAssistanceInfo_EUTRA * cellAssistanceInfoEUTRA;
	int cellAssistanceInfoEUTRA_isset;

	// ID = id-ServedCellSpecificInfoReq-NR, PRESENCE = optional L:10856
	SI_XNAP_DT_ServedCellSpecificInfoReq_NR * servedCellSpecificInfoReqNR;
	int servedCellSpecificInfoReqNR_isset;

	
} SI_XNAP_DT_PDU_ConfigurationUpdate_gNB;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ConfigurationUpdate_ng_eNB
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-servedCellsToUpdate-E-UTRA, PRESENCE = optional L:10856
	SI_XNAP_DT_ServedCellsToUpdate_E_UTRA * servedCellsToUpdateEUTRA;
	int servedCellsToUpdateEUTRA_isset;

	// ID = id-cellAssistanceInfo-NR, PRESENCE = optional L:10856
	SI_XNAP_DT_CellAssistanceInfo_NR * cellAssistanceInfoNR;
	int cellAssistanceInfoNR_isset;

	// ID = id-cellAssistanceInfo-EUTRA, PRESENCE = optional L:10856
	SI_XNAP_DT_CellAssistanceInfo_EUTRA * cellAssistanceInfoEUTRA;
	int cellAssistanceInfoEUTRA_isset;

	
} SI_XNAP_DT_PDU_ConfigurationUpdate_ng_eNB;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RespondingNodeTypeConfigUpdateAck_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_InitiatingNodeType_ResourceCoordRequest_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_InitiatingNodeType_ResourceCoordRequest_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RespondingNodeType_ResourceCoordResponse_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_RespondingNodeType_ResourceCoordResponse_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ServedCellsToActivate_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-NRCellsAndSSBsList, PRESENCE = mandatory L:10856
	SI_XNAP_DT_ToBeActivatedNRCellsAndSSBsList * nRCellsAndSSBsList;
	int nRCellsAndSSBsList_isset;

	
} SI_XNAP_DT_PDU_ServedCellsToActivate_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ActivatedServedCells_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-ActivatedNRCellsAndSSBsList, PRESENCE = mandatory L:10856
	SI_XNAP_DT_ActivatedNRCellsAndSSBsList * activatedNRCellsAndSSBsList;
	int activatedNRCellsAndSSBsList_isset;

	
} SI_XNAP_DT_PDU_ActivatedServedCells_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UEContextInfoHORequest_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-FiveGCMobilityRestrictionListContainer, PRESENCE = optional L:10856
	SI_XNAP_DT_FiveGCMobilityRestrictionListContainer * fiveGCMobilityRestrictionListContainer;
	int fiveGCMobilityRestrictionListContainer_isset;

	// ID = id-NRUESidelinkAggregateMaximumBitRate, PRESENCE = optional L:10856
	SI_XNAP_DT_NRUESidelinkAggregateMaximumBitRate * nRUESidelinkAggregateMaximumBitRate;
	int nRUESidelinkAggregateMaximumBitRate_isset;

	// ID = id-LTEUESidelinkAggregateMaximumBitRate, PRESENCE = optional L:10856
	SI_XNAP_DT_LTEUESidelinkAggregateMaximumBitRate * lTEUESidelinkAggregateMaximumBitRate;
	int lTEUESidelinkAggregateMaximumBitRate_isset;

	// ID = id-MDTPLMNList, PRESENCE = optional L:10856
	SI_XNAP_DT_MDTPLMNList * mDTPLMNList;
	int mDTPLMNList_isset;

	// ID = id-UERadioCapabilityID, PRESENCE = optional L:10856
	SI_XNAP_DT_UERadioCapabilityID * uERadioCapabilityID;
	int uERadioCapabilityID_isset;

	// ID = id-MBS-SessionInformation-List, PRESENCE = optional L:10856
	SI_XNAP_DT_MBS_SessionInformation_List * mBSSessionInformationList;
	int mBSSessionInformationList_isset;

	// ID = id-FiveGProSeUEPC5AggregateMaximumBitRate, PRESENCE = optional L:10856
	SI_XNAP_DT_NRUESidelinkAggregateMaximumBitRate * fiveGProSeUEPC5AggregateMaximumBitRate;
	int fiveGProSeUEPC5AggregateMaximumBitRate_isset;

	// ID = id-UESliceMaximumBitRateList, PRESENCE = optional L:10856
	SI_XNAP_DT_UESliceMaximumBitRateList * uESliceMaximumBitRateList;
	int uESliceMaximumBitRateList_isset;

	// ID = id-NRA2XUEPC5AggregateMaximumBitRate, PRESENCE = optional L:10856
	SI_XNAP_DT_NRUESidelinkAggregateMaximumBitRate * nRA2XUEPC5AggregateMaximumBitRate;
	int nRA2XUEPC5AggregateMaximumBitRate_isset;

	// ID = id-LTEA2XUEPC5AggregateMaximumBitRate, PRESENCE = optional L:10856
	SI_XNAP_DT_LTEUESidelinkAggregateMaximumBitRate * lTEA2XUEPC5AggregateMaximumBitRate;
	int lTEA2XUEPC5AggregateMaximumBitRate_isset;

	
} SI_XNAP_DT_PDU_UEContextInfoHORequest_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UEContextRefAtSN_HORequest_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UEContextRefAtSN_HORequest_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_FirstDLCount_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_FirstDLCount_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_DLDiscarding_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_DLDiscarding_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionToBeAddedAddReq_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionToBeAddedAddReq_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionAdmittedAddedAddReqAck_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionAdmittedAddedAddReqAck_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionNotAdmittedAddReqAck_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionNotAdmittedAddReqAck_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ResponseInfo_ReconfCompl_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ResponseInfo_ReconfCompl_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Configuration_successfully_applied_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-sk-Counter, PRESENCE = optional L:10856
	unsigned long long int skCounter;
	int skCounter_isset;

	
} SI_XNAP_DT_PDU_Configuration_successfully_applied_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_Configuration_rejected_by_M_NG_RANNode_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_Configuration_rejected_by_M_NG_RANNode_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UEContextInfo_SNModRequest_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UEContextInfo_SNModRequest_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionsToBeAdded_SNModRequest_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PDUSessionExpectedUEActivityBehaviour, PRESENCE = optional L:10856
	SI_XNAP_DT_ExpectedUEActivityBehaviour * pDUSessionExpectedUEActivityBehaviour;
	int pDUSessionExpectedUEActivityBehaviour_isset;

	
} SI_XNAP_DT_PDU_PDUSessionsToBeAdded_SNModRequest_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionsToBeModified_SNModRequest_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-S-NSSAI, PRESENCE = optional L:10856
	SI_XNAP_DT_S_NSSAI * sNSSAI;
	int sNSSAI_isset;

	// ID = id-PDUSessionExpectedUEActivityBehaviour, PRESENCE = optional L:10856
	SI_XNAP_DT_ExpectedUEActivityBehaviour * pDUSessionExpectedUEActivityBehaviour;
	int pDUSessionExpectedUEActivityBehaviour_isset;

	// ID = id-UserPlaneFailureIndication, PRESENCE = optional L:10856
	SI_XNAP_DT_UserPlaneFailureIndication * userPlaneFailureIndication;
	int userPlaneFailureIndication_isset;

	
} SI_XNAP_DT_PDU_PDUSessionsToBeModified_SNModRequest_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionsToBeReleased_SNModRequest_List_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionsToBeReleased_SNModRequest_List_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionAdmitted_SNModResponse_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionAdmitted_SNModResponse_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionAdmittedToBeAddedSNModResponse_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionAdmittedToBeAddedSNModResponse_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionAdmittedToBeModifiedSNModResponse_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionAdmittedToBeModifiedSNModResponse_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionAdmittedToBeReleasedSNModResponse_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionAdmittedToBeReleasedSNModResponse_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionNotAdmitted_SNModResponse_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PDUSessionResourcesNotAdmitted-List, PRESENCE = optional L:10856
	SI_XNAP_DT_PDUSessionResourcesNotAdmitted_List * pDUSessionResourcesNotAdmittedList;
	int pDUSessionResourcesNotAdmittedList_isset;

	
} SI_XNAP_DT_PDU_PDUSessionNotAdmitted_SNModResponse_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionDataForwarding_SNModResponse_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionDataForwarding_SNModResponse_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionToBeModifiedSNModRequired_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionToBeModifiedSNModRequired_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionToBeReleasedSNModRequired_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionToBeReleasedSNModRequired_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionAdmittedModSNModConfirm_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionAdmittedModSNModConfirm_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionAdmittedToBeReleasedSNModConfirm_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionAdmittedToBeReleasedSNModConfirm_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionToBeReleasedList_RelReqAck_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionToBeReleasedList_RelReqAck_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionToBeReleasedList_RelRqd_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionToBeReleasedList_RelRqd_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionReleasedList_RelConf_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionReleasedList_RelConf_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_BearersSubjectToCounterCheck_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_BearersSubjectToCounterCheck_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSession_SNChangeRequired_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSession_SNChangeRequired_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSession_SNChangeConfirm_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-AdditionalListofPDUSessionResourceChangeConfirmInfo-SNterminated, PRESENCE = optional L:10856
	SI_XNAP_DT_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated * additionalListofPDUSessionResourceChangeConfirmInfoSNterminated;
	int additionalListofPDUSessionResourceChangeConfirmInfoSNterminated_isset;

	
} SI_XNAP_DT_PDU_PDUSession_SNChangeConfirm_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SplitSRB_RRCTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SplitSRB_RRCTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_UEReportRRCTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_UEReportRRCTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_FastMCGRecoveryRRCTransfer_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_FastMCGRecoveryRRCTransfer_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SDT_SRB_between_NewNode_OldNode_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SDT_SRB_between_NewNode_OldNode_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoE_Measurement_Results_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_QoE_Measurement_Results_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourcesNotify_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionResourcesNotify_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_PDUSessionResourcesActivityNotify_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_PDUSessionResourcesActivityNotify_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_QoSFlowsActivityNotifyItem_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_QoSFlowsActivityNotifyItem_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RespondingNodeTypeConfigUpdateAck_ng_eNB_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-List-of-served-cells-E-UTRA, PRESENCE = optional L:10856
	SI_XNAP_DT_ServedCells_E_UTRA * listofservedcellsEUTRA;
	int listofservedcellsEUTRA_isset;

	// ID = id-PartialListIndicator-EUTRA, PRESENCE = optional L:10856
	uint8_t partialListIndicatorEUTRA;
	int partialListIndicatorEUTRA_isset;

	// ID = id-CellAndCapacityAssistanceInfo-EUTRA, PRESENCE = optional L:10856
	SI_XNAP_DT_CellAndCapacityAssistanceInfo_EUTRA * cellAndCapacityAssistanceInfoEUTRA;
	int cellAndCapacityAssistanceInfoEUTRA_isset;

	
} SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_ng_eNB_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_RespondingNodeTypeConfigUpdateAck_gNB_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	// ID = id-PartialListIndicator-NR, PRESENCE = optional L:10856
	uint8_t partialListIndicatorNR;
	int partialListIndicatorNR_isset;

	// ID = id-CellAndCapacityAssistanceInfo-NR, PRESENCE = optional L:10856
	SI_XNAP_DT_CellAndCapacityAssistanceInfo_NR * cellAndCapacityAssistanceInfoNR;
	int cellAndCapacityAssistanceInfoNR_isset;

	
} SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_gNB_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ResourceCoordRequest_ng_eNB_initiated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ResourceCoordRequest_ng_eNB_initiated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ResourceCoordRequest_gNB_initiated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ResourceCoordRequest_gNB_initiated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ResourceCoordResponse_ng_eNB_initiated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ResourceCoordResponse_ng_eNB_initiated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ResourceCoordResponse_gNB_initiated_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ResourceCoordResponse_gNB_initiated_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ToBeActivatedNRCellsAndSSBs_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ToBeActivatedNRCellsAndSSBs_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SSBsToBeActivated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SSBsToBeActivated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ActivatedNRCellsAndSSBs_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ActivatedNRCellsAndSSBs_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_SSBsActivated_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_SSBsActivated_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TrafficToBeAdded_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TrafficToBeAdded_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TrafficToBeModified_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TrafficToBeModified_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TrafficAdded_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TrafficAdded_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TrafficModified_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TrafficModified_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TrafficNotAdded_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TrafficNotAdded_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TrafficNotModified_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TrafficNotModified_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TrafficReleased_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TrafficReleased_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TrafficRequiredToBeModified_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TrafficRequiredToBeModified_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_IABTNLAddressToBeReleased_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_IABTNLAddressToBeReleased_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_TrafficRequiredModified_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_TrafficRequiredModified_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_BoundaryNodeCellsList_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_BoundaryNodeCellsList_Item_ExtIEs;


//ELEMENTARY-PROCEDURE = [2] // -NoneEP--  L:10816

// L:10818
typedef struct __si_xnap_dt_ParentNodeCellsList_Item_ExtIEs
{
	uint8_t pduIEExtension;
	uint8_t pduMessageChoice;
	uint8_t messageId;
	uint8_t * transportObject;
	uint16_t iECount;
	uint8_t decodingError;

	
} SI_XNAP_DT_PDU_ParentNodeCellsList_Item_ExtIEs;


void __si_xnap_debug_pdu( uint8_t * buffer, int len);


//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_A2XPC5QoSParameters_ExtIEs( SI_XNAP_DT_PDU_A2XPC5QoSParameters_ExtIEs * objPDUA2XPC5QoSParameters_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_A2XPC5QoSParameters_ExtIEs( SI_XNAP_DT_PDU_A2XPC5QoSParameters_ExtIEs * objPDUA2XPC5QoSParameters_ExtIEs);
void __si_xnap_debug_PDU_A2XPC5QoSParameters_ExtIEs( char * key, SI_XNAP_DT_PDU_A2XPC5QoSParameters_ExtIEs * objPDUA2XPC5QoSParameters_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_A2XPC5QoSParameters_ExtIEs( SI_XNAP_DT_PDU_A2XPC5QoSParameters_ExtIEs ** objPDUA2XPC5QoSParameters_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_A2XPC5QoSFlowItem_ExtIEs( SI_XNAP_DT_PDU_A2XPC5QoSFlowItem_ExtIEs * objPDUA2XPC5QoSFlowItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_A2XPC5QoSFlowItem_ExtIEs( SI_XNAP_DT_PDU_A2XPC5QoSFlowItem_ExtIEs * objPDUA2XPC5QoSFlowItem_ExtIEs);
void __si_xnap_debug_PDU_A2XPC5QoSFlowItem_ExtIEs( char * key, SI_XNAP_DT_PDU_A2XPC5QoSFlowItem_ExtIEs * objPDUA2XPC5QoSFlowItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_A2XPC5QoSFlowItem_ExtIEs( SI_XNAP_DT_PDU_A2XPC5QoSFlowItem_ExtIEs ** objPDUA2XPC5QoSFlowItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_A2XPC5FlowBitRates_ExtIEs( SI_XNAP_DT_PDU_A2XPC5FlowBitRates_ExtIEs * objPDUA2XPC5FlowBitRates_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_A2XPC5FlowBitRates_ExtIEs( SI_XNAP_DT_PDU_A2XPC5FlowBitRates_ExtIEs * objPDUA2XPC5FlowBitRates_ExtIEs);
void __si_xnap_debug_PDU_A2XPC5FlowBitRates_ExtIEs( char * key, SI_XNAP_DT_PDU_A2XPC5FlowBitRates_ExtIEs * objPDUA2XPC5FlowBitRates_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_A2XPC5FlowBitRates_ExtIEs( SI_XNAP_DT_PDU_A2XPC5FlowBitRates_ExtIEs ** objPDUA2XPC5FlowBitRates_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item_ExtIEs * objPDUAdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item_ExtIEs * objPDUAdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item_ExtIEs * objPDUAdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_AdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item_ExtIEs ** objPDUAdditionalListofPDUSessionResourceChangeConfirmInfo_SNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_AveragePacketDelay_ExtIEs( SI_XNAP_DT_PDU_AveragePacketDelay_ExtIEs * objPDUAveragePacketDelay_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_AveragePacketDelay_ExtIEs( SI_XNAP_DT_PDU_AveragePacketDelay_ExtIEs * objPDUAveragePacketDelay_ExtIEs);
void __si_xnap_debug_PDU_AveragePacketDelay_ExtIEs( char * key, SI_XNAP_DT_PDU_AveragePacketDelay_ExtIEs * objPDUAveragePacketDelay_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_AveragePacketDelay_ExtIEs( SI_XNAP_DT_PDU_AveragePacketDelay_ExtIEs ** objPDUAveragePacketDelay_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Additional_PDCP_Duplication_TNL_ExtIEs( SI_XNAP_DT_PDU_Additional_PDCP_Duplication_TNL_ExtIEs * objPDUAdditional_PDCP_Duplication_TNL_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Additional_PDCP_Duplication_TNL_ExtIEs( SI_XNAP_DT_PDU_Additional_PDCP_Duplication_TNL_ExtIEs * objPDUAdditional_PDCP_Duplication_TNL_ExtIEs);
void __si_xnap_debug_PDU_Additional_PDCP_Duplication_TNL_ExtIEs( char * key, SI_XNAP_DT_PDU_Additional_PDCP_Duplication_TNL_ExtIEs * objPDUAdditional_PDCP_Duplication_TNL_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Additional_PDCP_Duplication_TNL_ExtIEs( SI_XNAP_DT_PDU_Additional_PDCP_Duplication_TNL_ExtIEs ** objPDUAdditional_PDCP_Duplication_TNL_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Additional_UL_NG_U_TNLatUPF_Item_ExtIEs( SI_XNAP_DT_PDU_Additional_UL_NG_U_TNLatUPF_Item_ExtIEs * objPDUAdditional_UL_NG_U_TNLatUPF_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Additional_UL_NG_U_TNLatUPF_Item_ExtIEs( SI_XNAP_DT_PDU_Additional_UL_NG_U_TNLatUPF_Item_ExtIEs * objPDUAdditional_UL_NG_U_TNLatUPF_Item_ExtIEs);
void __si_xnap_debug_PDU_Additional_UL_NG_U_TNLatUPF_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_Additional_UL_NG_U_TNLatUPF_Item_ExtIEs * objPDUAdditional_UL_NG_U_TNLatUPF_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Additional_UL_NG_U_TNLatUPF_Item_ExtIEs( SI_XNAP_DT_PDU_Additional_UL_NG_U_TNLatUPF_Item_ExtIEs ** objPDUAdditional_UL_NG_U_TNLatUPF_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Additional_Measurement_Timing_Configuration_Item_ExtIEs( SI_XNAP_DT_PDU_Additional_Measurement_Timing_Configuration_Item_ExtIEs * objPDUAdditional_Measurement_Timing_Configuration_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Additional_Measurement_Timing_Configuration_Item_ExtIEs( SI_XNAP_DT_PDU_Additional_Measurement_Timing_Configuration_Item_ExtIEs * objPDUAdditional_Measurement_Timing_Configuration_Item_ExtIEs);
void __si_xnap_debug_PDU_Additional_Measurement_Timing_Configuration_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_Additional_Measurement_Timing_Configuration_Item_ExtIEs * objPDUAdditional_Measurement_Timing_Configuration_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Additional_Measurement_Timing_Configuration_Item_ExtIEs( SI_XNAP_DT_PDU_Additional_Measurement_Timing_Configuration_Item_ExtIEs ** objPDUAdditional_Measurement_Timing_Configuration_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Active_MBS_SessionInformation_ExtIEs( SI_XNAP_DT_PDU_Active_MBS_SessionInformation_ExtIEs * objPDUActive_MBS_SessionInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Active_MBS_SessionInformation_ExtIEs( SI_XNAP_DT_PDU_Active_MBS_SessionInformation_ExtIEs * objPDUActive_MBS_SessionInformation_ExtIEs);
void __si_xnap_debug_PDU_Active_MBS_SessionInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_Active_MBS_SessionInformation_ExtIEs * objPDUActive_MBS_SessionInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Active_MBS_SessionInformation_ExtIEs( SI_XNAP_DT_PDU_Active_MBS_SessionInformation_ExtIEs ** objPDUActive_MBS_SessionInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DataCollectionID_ExtIEs( SI_XNAP_DT_PDU_DataCollectionID_ExtIEs * objPDUDataCollectionID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DataCollectionID_ExtIEs( SI_XNAP_DT_PDU_DataCollectionID_ExtIEs * objPDUDataCollectionID_ExtIEs);
void __si_xnap_debug_PDU_DataCollectionID_ExtIEs( char * key, SI_XNAP_DT_PDU_DataCollectionID_ExtIEs * objPDUDataCollectionID_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DataCollectionID_ExtIEs( SI_XNAP_DT_PDU_DataCollectionID_ExtIEs ** objPDUDataCollectionID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_AllocationandRetentionPriority_ExtIEs( SI_XNAP_DT_PDU_AllocationandRetentionPriority_ExtIEs * objPDUAllocationandRetentionPriority_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_AllocationandRetentionPriority_ExtIEs( SI_XNAP_DT_PDU_AllocationandRetentionPriority_ExtIEs * objPDUAllocationandRetentionPriority_ExtIEs);
void __si_xnap_debug_PDU_AllocationandRetentionPriority_ExtIEs( char * key, SI_XNAP_DT_PDU_AllocationandRetentionPriority_ExtIEs * objPDUAllocationandRetentionPriority_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_AllocationandRetentionPriority_ExtIEs( SI_XNAP_DT_PDU_AllocationandRetentionPriority_ExtIEs ** objPDUAllocationandRetentionPriority_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_AllowedPNI_NPN_ID_Item_ExtIEs( SI_XNAP_DT_PDU_AllowedPNI_NPN_ID_Item_ExtIEs * objPDUAllowedPNI_NPN_ID_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_AllowedPNI_NPN_ID_Item_ExtIEs( SI_XNAP_DT_PDU_AllowedPNI_NPN_ID_Item_ExtIEs * objPDUAllowedPNI_NPN_ID_Item_ExtIEs);
void __si_xnap_debug_PDU_AllowedPNI_NPN_ID_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_AllowedPNI_NPN_ID_Item_ExtIEs * objPDUAllowedPNI_NPN_ID_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_AllowedPNI_NPN_ID_Item_ExtIEs( SI_XNAP_DT_PDU_AllowedPNI_NPN_ID_Item_ExtIEs ** objPDUAllowedPNI_NPN_ID_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_AlternativeQoSParaSetItem_ExtIEs( SI_XNAP_DT_PDU_AlternativeQoSParaSetItem_ExtIEs * objPDUAlternativeQoSParaSetItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_AlternativeQoSParaSetItem_ExtIEs( SI_XNAP_DT_PDU_AlternativeQoSParaSetItem_ExtIEs * objPDUAlternativeQoSParaSetItem_ExtIEs);
void __si_xnap_debug_PDU_AlternativeQoSParaSetItem_ExtIEs( char * key, SI_XNAP_DT_PDU_AlternativeQoSParaSetItem_ExtIEs * objPDUAlternativeQoSParaSetItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_AlternativeQoSParaSetItem_ExtIEs( SI_XNAP_DT_PDU_AlternativeQoSParaSetItem_ExtIEs ** objPDUAlternativeQoSParaSetItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_GlobalAMF_Region_Information_ExtIEs( SI_XNAP_DT_PDU_GlobalAMF_Region_Information_ExtIEs * objPDUGlobalAMF_Region_Information_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_GlobalAMF_Region_Information_ExtIEs( SI_XNAP_DT_PDU_GlobalAMF_Region_Information_ExtIEs * objPDUGlobalAMF_Region_Information_ExtIEs);
void __si_xnap_debug_PDU_GlobalAMF_Region_Information_ExtIEs( char * key, SI_XNAP_DT_PDU_GlobalAMF_Region_Information_ExtIEs * objPDUGlobalAMF_Region_Information_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_GlobalAMF_Region_Information_ExtIEs( SI_XNAP_DT_PDU_GlobalAMF_Region_Information_ExtIEs ** objPDUGlobalAMF_Region_Information_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_AreaOfInterest_Item_ExtIEs( SI_XNAP_DT_PDU_AreaOfInterest_Item_ExtIEs * objPDUAreaOfInterest_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_AreaOfInterest_Item_ExtIEs( SI_XNAP_DT_PDU_AreaOfInterest_Item_ExtIEs * objPDUAreaOfInterest_Item_ExtIEs);
void __si_xnap_debug_PDU_AreaOfInterest_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_AreaOfInterest_Item_ExtIEs * objPDUAreaOfInterest_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_AreaOfInterest_Item_ExtIEs( SI_XNAP_DT_PDU_AreaOfInterest_Item_ExtIEs ** objPDUAreaOfInterest_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_AreaScopeOfMDT_NR_ExtIEs( SI_XNAP_DT_PDU_AreaScopeOfMDT_NR_ExtIEs * objPDUAreaScopeOfMDT_NR_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_AreaScopeOfMDT_NR_ExtIEs( SI_XNAP_DT_PDU_AreaScopeOfMDT_NR_ExtIEs * objPDUAreaScopeOfMDT_NR_ExtIEs);
void __si_xnap_debug_PDU_AreaScopeOfMDT_NR_ExtIEs( char * key, SI_XNAP_DT_PDU_AreaScopeOfMDT_NR_ExtIEs * objPDUAreaScopeOfMDT_NR_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_AreaScopeOfMDT_NR_ExtIEs( SI_XNAP_DT_PDU_AreaScopeOfMDT_NR_ExtIEs ** objPDUAreaScopeOfMDT_NR_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_AreaScopeOfMDT_EUTRA_ExtIEs( SI_XNAP_DT_PDU_AreaScopeOfMDT_EUTRA_ExtIEs * objPDUAreaScopeOfMDT_EUTRA_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_AreaScopeOfMDT_EUTRA_ExtIEs( SI_XNAP_DT_PDU_AreaScopeOfMDT_EUTRA_ExtIEs * objPDUAreaScopeOfMDT_EUTRA_ExtIEs);
void __si_xnap_debug_PDU_AreaScopeOfMDT_EUTRA_ExtIEs( char * key, SI_XNAP_DT_PDU_AreaScopeOfMDT_EUTRA_ExtIEs * objPDUAreaScopeOfMDT_EUTRA_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_AreaScopeOfMDT_EUTRA_ExtIEs( SI_XNAP_DT_PDU_AreaScopeOfMDT_EUTRA_ExtIEs ** objPDUAreaScopeOfMDT_EUTRA_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_AreaScopeOfNeighCellsItem_ExtIEs( SI_XNAP_DT_PDU_AreaScopeOfNeighCellsItem_ExtIEs * objPDUAreaScopeOfNeighCellsItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_AreaScopeOfNeighCellsItem_ExtIEs( SI_XNAP_DT_PDU_AreaScopeOfNeighCellsItem_ExtIEs * objPDUAreaScopeOfNeighCellsItem_ExtIEs);
void __si_xnap_debug_PDU_AreaScopeOfNeighCellsItem_ExtIEs( char * key, SI_XNAP_DT_PDU_AreaScopeOfNeighCellsItem_ExtIEs * objPDUAreaScopeOfNeighCellsItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_AreaScopeOfNeighCellsItem_ExtIEs( SI_XNAP_DT_PDU_AreaScopeOfNeighCellsItem_ExtIEs ** objPDUAreaScopeOfNeighCellsItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_AreaScopeOfQMC_ExtIEs( SI_XNAP_DT_PDU_AreaScopeOfQMC_ExtIEs * objPDUAreaScopeOfQMC_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_AreaScopeOfQMC_ExtIEs( SI_XNAP_DT_PDU_AreaScopeOfQMC_ExtIEs * objPDUAreaScopeOfQMC_ExtIEs);
void __si_xnap_debug_PDU_AreaScopeOfQMC_ExtIEs( char * key, SI_XNAP_DT_PDU_AreaScopeOfQMC_ExtIEs * objPDUAreaScopeOfQMC_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_AreaScopeOfQMC_ExtIEs( SI_XNAP_DT_PDU_AreaScopeOfQMC_ExtIEs ** objPDUAreaScopeOfQMC_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_AS_SecurityInformation_ExtIEs( SI_XNAP_DT_PDU_AS_SecurityInformation_ExtIEs * objPDUAS_SecurityInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_AS_SecurityInformation_ExtIEs( SI_XNAP_DT_PDU_AS_SecurityInformation_ExtIEs * objPDUAS_SecurityInformation_ExtIEs);
void __si_xnap_debug_PDU_AS_SecurityInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_AS_SecurityInformation_ExtIEs * objPDUAS_SecurityInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_AS_SecurityInformation_ExtIEs( SI_XNAP_DT_PDU_AS_SecurityInformation_ExtIEs ** objPDUAS_SecurityInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_AssistanceDataForRANPaging_ExtIEs( SI_XNAP_DT_PDU_AssistanceDataForRANPaging_ExtIEs * objPDUAssistanceDataForRANPaging_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_AssistanceDataForRANPaging_ExtIEs( SI_XNAP_DT_PDU_AssistanceDataForRANPaging_ExtIEs * objPDUAssistanceDataForRANPaging_ExtIEs);
void __si_xnap_debug_PDU_AssistanceDataForRANPaging_ExtIEs( char * key, SI_XNAP_DT_PDU_AssistanceDataForRANPaging_ExtIEs * objPDUAssistanceDataForRANPaging_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_AssistanceDataForRANPaging_ExtIEs( SI_XNAP_DT_PDU_AssistanceDataForRANPaging_ExtIEs ** objPDUAssistanceDataForRANPaging_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Associated_QoSFlowInfo_Item_ExtIEs( SI_XNAP_DT_PDU_Associated_QoSFlowInfo_Item_ExtIEs * objPDUAssociated_QoSFlowInfo_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Associated_QoSFlowInfo_Item_ExtIEs( SI_XNAP_DT_PDU_Associated_QoSFlowInfo_Item_ExtIEs * objPDUAssociated_QoSFlowInfo_Item_ExtIEs);
void __si_xnap_debug_PDU_Associated_QoSFlowInfo_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_Associated_QoSFlowInfo_Item_ExtIEs * objPDUAssociated_QoSFlowInfo_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Associated_QoSFlowInfo_Item_ExtIEs( SI_XNAP_DT_PDU_Associated_QoSFlowInfo_Item_ExtIEs ** objPDUAssociated_QoSFlowInfo_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_AvailableRVQoEMetrics_ExtIEs( SI_XNAP_DT_PDU_AvailableRVQoEMetrics_ExtIEs * objPDUAvailableRVQoEMetrics_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_AvailableRVQoEMetrics_ExtIEs( SI_XNAP_DT_PDU_AvailableRVQoEMetrics_ExtIEs * objPDUAvailableRVQoEMetrics_ExtIEs);
void __si_xnap_debug_PDU_AvailableRVQoEMetrics_ExtIEs( char * key, SI_XNAP_DT_PDU_AvailableRVQoEMetrics_ExtIEs * objPDUAvailableRVQoEMetrics_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_AvailableRVQoEMetrics_ExtIEs( SI_XNAP_DT_PDU_AvailableRVQoEMetrics_ExtIEs ** objPDUAvailableRVQoEMetrics_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_BAPRoutingID_ExtIEs( SI_XNAP_DT_PDU_BAPRoutingID_ExtIEs * objPDUBAPRoutingID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_BAPRoutingID_ExtIEs( SI_XNAP_DT_PDU_BAPRoutingID_ExtIEs * objPDUBAPRoutingID_ExtIEs);
void __si_xnap_debug_PDU_BAPRoutingID_ExtIEs( char * key, SI_XNAP_DT_PDU_BAPRoutingID_ExtIEs * objPDUBAPRoutingID_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_BAPRoutingID_ExtIEs( SI_XNAP_DT_PDU_BAPRoutingID_ExtIEs ** objPDUBAPRoutingID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_BeamMeasurementsReportConfiguration_ExtIEs( SI_XNAP_DT_PDU_BeamMeasurementsReportConfiguration_ExtIEs * objPDUBeamMeasurementsReportConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_BeamMeasurementsReportConfiguration_ExtIEs( SI_XNAP_DT_PDU_BeamMeasurementsReportConfiguration_ExtIEs * objPDUBeamMeasurementsReportConfiguration_ExtIEs);
void __si_xnap_debug_PDU_BeamMeasurementsReportConfiguration_ExtIEs( char * key, SI_XNAP_DT_PDU_BeamMeasurementsReportConfiguration_ExtIEs * objPDUBeamMeasurementsReportConfiguration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_BeamMeasurementsReportConfiguration_ExtIEs( SI_XNAP_DT_PDU_BeamMeasurementsReportConfiguration_ExtIEs ** objPDUBeamMeasurementsReportConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_BeamMeasurementsReportQuantity_ExtIEs( SI_XNAP_DT_PDU_BeamMeasurementsReportQuantity_ExtIEs * objPDUBeamMeasurementsReportQuantity_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_BeamMeasurementsReportQuantity_ExtIEs( SI_XNAP_DT_PDU_BeamMeasurementsReportQuantity_ExtIEs * objPDUBeamMeasurementsReportQuantity_ExtIEs);
void __si_xnap_debug_PDU_BeamMeasurementsReportQuantity_ExtIEs( char * key, SI_XNAP_DT_PDU_BeamMeasurementsReportQuantity_ExtIEs * objPDUBeamMeasurementsReportQuantity_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_BeamMeasurementsReportQuantity_ExtIEs( SI_XNAP_DT_PDU_BeamMeasurementsReportQuantity_ExtIEs ** objPDUBeamMeasurementsReportQuantity_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_BHInfo_Item_ExtIEs( SI_XNAP_DT_PDU_BHInfo_Item_ExtIEs * objPDUBHInfo_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_BHInfo_Item_ExtIEs( SI_XNAP_DT_PDU_BHInfo_Item_ExtIEs * objPDUBHInfo_Item_ExtIEs);
void __si_xnap_debug_PDU_BHInfo_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_BHInfo_Item_ExtIEs * objPDUBHInfo_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_BHInfo_Item_ExtIEs( SI_XNAP_DT_PDU_BHInfo_Item_ExtIEs ** objPDUBHInfo_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_BAPControlPDURLCCH_Item_ExtIEs( SI_XNAP_DT_PDU_BAPControlPDURLCCH_Item_ExtIEs * objPDUBAPControlPDURLCCH_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_BAPControlPDURLCCH_Item_ExtIEs( SI_XNAP_DT_PDU_BAPControlPDURLCCH_Item_ExtIEs * objPDUBAPControlPDURLCCH_Item_ExtIEs);
void __si_xnap_debug_PDU_BAPControlPDURLCCH_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_BAPControlPDURLCCH_Item_ExtIEs * objPDUBAPControlPDURLCCH_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_BAPControlPDURLCCH_Item_ExtIEs( SI_XNAP_DT_PDU_BAPControlPDURLCCH_Item_ExtIEs ** objPDUBAPControlPDURLCCH_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_BluetoothMeasurementConfiguration_ExtIEs( SI_XNAP_DT_PDU_BluetoothMeasurementConfiguration_ExtIEs * objPDUBluetoothMeasurementConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_BluetoothMeasurementConfiguration_ExtIEs( SI_XNAP_DT_PDU_BluetoothMeasurementConfiguration_ExtIEs * objPDUBluetoothMeasurementConfiguration_ExtIEs);
void __si_xnap_debug_PDU_BluetoothMeasurementConfiguration_ExtIEs( char * key, SI_XNAP_DT_PDU_BluetoothMeasurementConfiguration_ExtIEs * objPDUBluetoothMeasurementConfiguration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_BluetoothMeasurementConfiguration_ExtIEs( SI_XNAP_DT_PDU_BluetoothMeasurementConfiguration_ExtIEs ** objPDUBluetoothMeasurementConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_BPLMN_ID_Info_EUTRA_Item_ExtIEs( SI_XNAP_DT_PDU_BPLMN_ID_Info_EUTRA_Item_ExtIEs * objPDUBPLMN_ID_Info_EUTRA_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_BPLMN_ID_Info_EUTRA_Item_ExtIEs( SI_XNAP_DT_PDU_BPLMN_ID_Info_EUTRA_Item_ExtIEs * objPDUBPLMN_ID_Info_EUTRA_Item_ExtIEs);
void __si_xnap_debug_PDU_BPLMN_ID_Info_EUTRA_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_BPLMN_ID_Info_EUTRA_Item_ExtIEs * objPDUBPLMN_ID_Info_EUTRA_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_BPLMN_ID_Info_EUTRA_Item_ExtIEs( SI_XNAP_DT_PDU_BPLMN_ID_Info_EUTRA_Item_ExtIEs ** objPDUBPLMN_ID_Info_EUTRA_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_BPLMN_ID_Info_NR_Item_ExtIEs( SI_XNAP_DT_PDU_BPLMN_ID_Info_NR_Item_ExtIEs * objPDUBPLMN_ID_Info_NR_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_BPLMN_ID_Info_NR_Item_ExtIEs( SI_XNAP_DT_PDU_BPLMN_ID_Info_NR_Item_ExtIEs * objPDUBPLMN_ID_Info_NR_Item_ExtIEs);
void __si_xnap_debug_PDU_BPLMN_ID_Info_NR_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_BPLMN_ID_Info_NR_Item_ExtIEs * objPDUBPLMN_ID_Info_NR_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_BPLMN_ID_Info_NR_Item_ExtIEs( SI_XNAP_DT_PDU_BPLMN_ID_Info_NR_Item_ExtIEs ** objPDUBPLMN_ID_Info_NR_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_BroadcastCAG_Identifier_Item_ExtIEs( SI_XNAP_DT_PDU_BroadcastCAG_Identifier_Item_ExtIEs * objPDUBroadcastCAG_Identifier_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_BroadcastCAG_Identifier_Item_ExtIEs( SI_XNAP_DT_PDU_BroadcastCAG_Identifier_Item_ExtIEs * objPDUBroadcastCAG_Identifier_Item_ExtIEs);
void __si_xnap_debug_PDU_BroadcastCAG_Identifier_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_BroadcastCAG_Identifier_Item_ExtIEs * objPDUBroadcastCAG_Identifier_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_BroadcastCAG_Identifier_Item_ExtIEs( SI_XNAP_DT_PDU_BroadcastCAG_Identifier_Item_ExtIEs ** objPDUBroadcastCAG_Identifier_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_BroadcastNID_Item_ExtIEs( SI_XNAP_DT_PDU_BroadcastNID_Item_ExtIEs * objPDUBroadcastNID_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_BroadcastNID_Item_ExtIEs( SI_XNAP_DT_PDU_BroadcastNID_Item_ExtIEs * objPDUBroadcastNID_Item_ExtIEs);
void __si_xnap_debug_PDU_BroadcastNID_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_BroadcastNID_Item_ExtIEs * objPDUBroadcastNID_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_BroadcastNID_Item_ExtIEs( SI_XNAP_DT_PDU_BroadcastNID_Item_ExtIEs ** objPDUBroadcastNID_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_BroadcastPLMNinTAISupport_Item_ExtIEs( SI_XNAP_DT_PDU_BroadcastPLMNinTAISupport_Item_ExtIEs * objPDUBroadcastPLMNinTAISupport_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_BroadcastPLMNinTAISupport_Item_ExtIEs( SI_XNAP_DT_PDU_BroadcastPLMNinTAISupport_Item_ExtIEs * objPDUBroadcastPLMNinTAISupport_Item_ExtIEs);
void __si_xnap_debug_PDU_BroadcastPLMNinTAISupport_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_BroadcastPLMNinTAISupport_Item_ExtIEs * objPDUBroadcastPLMNinTAISupport_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_BroadcastPLMNinTAISupport_Item_ExtIEs( SI_XNAP_DT_PDU_BroadcastPLMNinTAISupport_Item_ExtIEs ** objPDUBroadcastPLMNinTAISupport_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_BroadcastPNI_NPN_ID_Information_Item_ExtIEs( SI_XNAP_DT_PDU_BroadcastPNI_NPN_ID_Information_Item_ExtIEs * objPDUBroadcastPNI_NPN_ID_Information_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_BroadcastPNI_NPN_ID_Information_Item_ExtIEs( SI_XNAP_DT_PDU_BroadcastPNI_NPN_ID_Information_Item_ExtIEs * objPDUBroadcastPNI_NPN_ID_Information_Item_ExtIEs);
void __si_xnap_debug_PDU_BroadcastPNI_NPN_ID_Information_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_BroadcastPNI_NPN_ID_Information_Item_ExtIEs * objPDUBroadcastPNI_NPN_ID_Information_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_BroadcastPNI_NPN_ID_Information_Item_ExtIEs( SI_XNAP_DT_PDU_BroadcastPNI_NPN_ID_Information_Item_ExtIEs ** objPDUBroadcastPNI_NPN_ID_Information_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_BroadcastSNPNID_ExtIEs( SI_XNAP_DT_PDU_BroadcastSNPNID_ExtIEs * objPDUBroadcastSNPNID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_BroadcastSNPNID_ExtIEs( SI_XNAP_DT_PDU_BroadcastSNPNID_ExtIEs * objPDUBroadcastSNPNID_ExtIEs);
void __si_xnap_debug_PDU_BroadcastSNPNID_ExtIEs( char * key, SI_XNAP_DT_PDU_BroadcastSNPNID_ExtIEs * objPDUBroadcastSNPNID_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_BroadcastSNPNID_ExtIEs( SI_XNAP_DT_PDU_BroadcastSNPNID_ExtIEs ** objPDUBroadcastSNPNID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CandidateRelayUEInfoItem_ExtIEs( SI_XNAP_DT_PDU_CandidateRelayUEInfoItem_ExtIEs * objPDUCandidateRelayUEInfoItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CandidateRelayUEInfoItem_ExtIEs( SI_XNAP_DT_PDU_CandidateRelayUEInfoItem_ExtIEs * objPDUCandidateRelayUEInfoItem_ExtIEs);
void __si_xnap_debug_PDU_CandidateRelayUEInfoItem_ExtIEs( char * key, SI_XNAP_DT_PDU_CandidateRelayUEInfoItem_ExtIEs * objPDUCandidateRelayUEInfoItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CandidateRelayUEInfoItem_ExtIEs( SI_XNAP_DT_PDU_CandidateRelayUEInfoItem_ExtIEs ** objPDUCandidateRelayUEInfoItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CapacityValueInfo_ExtIEs( SI_XNAP_DT_PDU_CapacityValueInfo_ExtIEs * objPDUCapacityValueInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CapacityValueInfo_ExtIEs( SI_XNAP_DT_PDU_CapacityValueInfo_ExtIEs * objPDUCapacityValueInfo_ExtIEs);
void __si_xnap_debug_PDU_CapacityValueInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_CapacityValueInfo_ExtIEs * objPDUCapacityValueInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CapacityValueInfo_ExtIEs( SI_XNAP_DT_PDU_CapacityValueInfo_ExtIEs ** objPDUCapacityValueInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Cause_ExtIEs( SI_XNAP_DT_PDU_Cause_ExtIEs * objPDUCause_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Cause_ExtIEs( SI_XNAP_DT_PDU_Cause_ExtIEs * objPDUCause_ExtIEs);
void __si_xnap_debug_PDU_Cause_ExtIEs( char * key, SI_XNAP_DT_PDU_Cause_ExtIEs * objPDUCause_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Cause_ExtIEs( SI_XNAP_DT_PDU_Cause_ExtIEs ** objPDUCause_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CellAssistanceInfo_NR_ExtIEs( SI_XNAP_DT_PDU_CellAssistanceInfo_NR_ExtIEs * objPDUCellAssistanceInfo_NR_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CellAssistanceInfo_NR_ExtIEs( SI_XNAP_DT_PDU_CellAssistanceInfo_NR_ExtIEs * objPDUCellAssistanceInfo_NR_ExtIEs);
void __si_xnap_debug_PDU_CellAssistanceInfo_NR_ExtIEs( char * key, SI_XNAP_DT_PDU_CellAssistanceInfo_NR_ExtIEs * objPDUCellAssistanceInfo_NR_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CellAssistanceInfo_NR_ExtIEs( SI_XNAP_DT_PDU_CellAssistanceInfo_NR_ExtIEs ** objPDUCellAssistanceInfo_NR_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CellAndCapacityAssistanceInfo_NR_ExtIEs( SI_XNAP_DT_PDU_CellAndCapacityAssistanceInfo_NR_ExtIEs * objPDUCellAndCapacityAssistanceInfo_NR_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CellAndCapacityAssistanceInfo_NR_ExtIEs( SI_XNAP_DT_PDU_CellAndCapacityAssistanceInfo_NR_ExtIEs * objPDUCellAndCapacityAssistanceInfo_NR_ExtIEs);
void __si_xnap_debug_PDU_CellAndCapacityAssistanceInfo_NR_ExtIEs( char * key, SI_XNAP_DT_PDU_CellAndCapacityAssistanceInfo_NR_ExtIEs * objPDUCellAndCapacityAssistanceInfo_NR_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CellAndCapacityAssistanceInfo_NR_ExtIEs( SI_XNAP_DT_PDU_CellAndCapacityAssistanceInfo_NR_ExtIEs ** objPDUCellAndCapacityAssistanceInfo_NR_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CellAndCapacityAssistanceInfo_EUTRA_ExtIEs( SI_XNAP_DT_PDU_CellAndCapacityAssistanceInfo_EUTRA_ExtIEs * objPDUCellAndCapacityAssistanceInfo_EUTRA_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CellAndCapacityAssistanceInfo_EUTRA_ExtIEs( SI_XNAP_DT_PDU_CellAndCapacityAssistanceInfo_EUTRA_ExtIEs * objPDUCellAndCapacityAssistanceInfo_EUTRA_ExtIEs);
void __si_xnap_debug_PDU_CellAndCapacityAssistanceInfo_EUTRA_ExtIEs( char * key, SI_XNAP_DT_PDU_CellAndCapacityAssistanceInfo_EUTRA_ExtIEs * objPDUCellAndCapacityAssistanceInfo_EUTRA_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CellAndCapacityAssistanceInfo_EUTRA_ExtIEs( SI_XNAP_DT_PDU_CellAndCapacityAssistanceInfo_EUTRA_ExtIEs ** objPDUCellAndCapacityAssistanceInfo_EUTRA_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CellAssistanceInfo_EUTRA_ExtIEs( SI_XNAP_DT_PDU_CellAssistanceInfo_EUTRA_ExtIEs * objPDUCellAssistanceInfo_EUTRA_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CellAssistanceInfo_EUTRA_ExtIEs( SI_XNAP_DT_PDU_CellAssistanceInfo_EUTRA_ExtIEs * objPDUCellAssistanceInfo_EUTRA_ExtIEs);
void __si_xnap_debug_PDU_CellAssistanceInfo_EUTRA_ExtIEs( char * key, SI_XNAP_DT_PDU_CellAssistanceInfo_EUTRA_ExtIEs * objPDUCellAssistanceInfo_EUTRA_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CellAssistanceInfo_EUTRA_ExtIEs( SI_XNAP_DT_PDU_CellAssistanceInfo_EUTRA_ExtIEs ** objPDUCellAssistanceInfo_EUTRA_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CellBasedMDT_NR_ExtIEs( SI_XNAP_DT_PDU_CellBasedMDT_NR_ExtIEs * objPDUCellBasedMDT_NR_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CellBasedMDT_NR_ExtIEs( SI_XNAP_DT_PDU_CellBasedMDT_NR_ExtIEs * objPDUCellBasedMDT_NR_ExtIEs);
void __si_xnap_debug_PDU_CellBasedMDT_NR_ExtIEs( char * key, SI_XNAP_DT_PDU_CellBasedMDT_NR_ExtIEs * objPDUCellBasedMDT_NR_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CellBasedMDT_NR_ExtIEs( SI_XNAP_DT_PDU_CellBasedMDT_NR_ExtIEs ** objPDUCellBasedMDT_NR_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CellBasedQMC_ExtIEs( SI_XNAP_DT_PDU_CellBasedQMC_ExtIEs * objPDUCellBasedQMC_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CellBasedQMC_ExtIEs( SI_XNAP_DT_PDU_CellBasedQMC_ExtIEs * objPDUCellBasedQMC_ExtIEs);
void __si_xnap_debug_PDU_CellBasedQMC_ExtIEs( char * key, SI_XNAP_DT_PDU_CellBasedQMC_ExtIEs * objPDUCellBasedQMC_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CellBasedQMC_ExtIEs( SI_XNAP_DT_PDU_CellBasedQMC_ExtIEs ** objPDUCellBasedQMC_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CellBasedMDT_EUTRA_ExtIEs( SI_XNAP_DT_PDU_CellBasedMDT_EUTRA_ExtIEs * objPDUCellBasedMDT_EUTRA_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CellBasedMDT_EUTRA_ExtIEs( SI_XNAP_DT_PDU_CellBasedMDT_EUTRA_ExtIEs * objPDUCellBasedMDT_EUTRA_ExtIEs);
void __si_xnap_debug_PDU_CellBasedMDT_EUTRA_ExtIEs( char * key, SI_XNAP_DT_PDU_CellBasedMDT_EUTRA_ExtIEs * objPDUCellBasedMDT_EUTRA_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CellBasedMDT_EUTRA_ExtIEs( SI_XNAP_DT_PDU_CellBasedMDT_EUTRA_ExtIEs ** objPDUCellBasedMDT_EUTRA_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CellMeasurementResult_Item_ExtIEs( SI_XNAP_DT_PDU_CellMeasurementResult_Item_ExtIEs * objPDUCellMeasurementResult_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CellMeasurementResult_Item_ExtIEs( SI_XNAP_DT_PDU_CellMeasurementResult_Item_ExtIEs * objPDUCellMeasurementResult_Item_ExtIEs);
void __si_xnap_debug_PDU_CellMeasurementResult_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_CellMeasurementResult_Item_ExtIEs * objPDUCellMeasurementResult_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CellMeasurementResult_Item_ExtIEs( SI_XNAP_DT_PDU_CellMeasurementResult_Item_ExtIEs ** objPDUCellMeasurementResult_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CellReplacingInfo_ExtIEs( SI_XNAP_DT_PDU_CellReplacingInfo_ExtIEs * objPDUCellReplacingInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CellReplacingInfo_ExtIEs( SI_XNAP_DT_PDU_CellReplacingInfo_ExtIEs * objPDUCellReplacingInfo_ExtIEs);
void __si_xnap_debug_PDU_CellReplacingInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_CellReplacingInfo_ExtIEs * objPDUCellReplacingInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CellReplacingInfo_ExtIEs( SI_XNAP_DT_PDU_CellReplacingInfo_ExtIEs ** objPDUCellReplacingInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CellToReport_Item_ExtIEs( SI_XNAP_DT_PDU_CellToReport_Item_ExtIEs * objPDUCellToReport_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CellToReport_Item_ExtIEs( SI_XNAP_DT_PDU_CellToReport_Item_ExtIEs * objPDUCellToReport_Item_ExtIEs);
void __si_xnap_debug_PDU_CellToReport_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_CellToReport_Item_ExtIEs * objPDUCellToReport_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CellToReport_Item_ExtIEs( SI_XNAP_DT_PDU_CellToReport_Item_ExtIEs ** objPDUCellToReport_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CellToReportForDataCollection_Item_ExtIEs( SI_XNAP_DT_PDU_CellToReportForDataCollection_Item_ExtIEs * objPDUCellToReportForDataCollection_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CellToReportForDataCollection_Item_ExtIEs( SI_XNAP_DT_PDU_CellToReportForDataCollection_Item_ExtIEs * objPDUCellToReportForDataCollection_Item_ExtIEs);
void __si_xnap_debug_PDU_CellToReportForDataCollection_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_CellToReportForDataCollection_Item_ExtIEs * objPDUCellToReportForDataCollection_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CellToReportForDataCollection_Item_ExtIEs( SI_XNAP_DT_PDU_CellToReportForDataCollection_Item_ExtIEs ** objPDUCellToReportForDataCollection_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CellMeasurementInitiationResult_Item_ExtIEs( SI_XNAP_DT_PDU_CellMeasurementInitiationResult_Item_ExtIEs * objPDUCellMeasurementInitiationResult_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CellMeasurementInitiationResult_Item_ExtIEs( SI_XNAP_DT_PDU_CellMeasurementInitiationResult_Item_ExtIEs * objPDUCellMeasurementInitiationResult_Item_ExtIEs);
void __si_xnap_debug_PDU_CellMeasurementInitiationResult_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_CellMeasurementInitiationResult_Item_ExtIEs * objPDUCellMeasurementInitiationResult_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CellMeasurementInitiationResult_Item_ExtIEs( SI_XNAP_DT_PDU_CellMeasurementInitiationResult_Item_ExtIEs ** objPDUCellMeasurementInitiationResult_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CellInfoResultForDataCollection_Item_ExtIEs( SI_XNAP_DT_PDU_CellInfoResultForDataCollection_Item_ExtIEs * objPDUCellInfoResultForDataCollection_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CellInfoResultForDataCollection_Item_ExtIEs( SI_XNAP_DT_PDU_CellInfoResultForDataCollection_Item_ExtIEs * objPDUCellInfoResultForDataCollection_Item_ExtIEs);
void __si_xnap_debug_PDU_CellInfoResultForDataCollection_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_CellInfoResultForDataCollection_Item_ExtIEs * objPDUCellInfoResultForDataCollection_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CellInfoResultForDataCollection_Item_ExtIEs( SI_XNAP_DT_PDU_CellInfoResultForDataCollection_Item_ExtIEs ** objPDUCellInfoResultForDataCollection_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Cell_Type_Choice_ExtIEs( SI_XNAP_DT_PDU_Cell_Type_Choice_ExtIEs * objPDUCell_Type_Choice_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Cell_Type_Choice_ExtIEs( SI_XNAP_DT_PDU_Cell_Type_Choice_ExtIEs * objPDUCell_Type_Choice_ExtIEs);
void __si_xnap_debug_PDU_Cell_Type_Choice_ExtIEs( char * key, SI_XNAP_DT_PDU_Cell_Type_Choice_ExtIEs * objPDUCell_Type_Choice_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Cell_Type_Choice_ExtIEs( SI_XNAP_DT_PDU_Cell_Type_Choice_ExtIEs ** objPDUCell_Type_Choice_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CellMeasurementFailureCause_Item_ExtIEs( SI_XNAP_DT_PDU_CellMeasurementFailureCause_Item_ExtIEs * objPDUCellMeasurementFailureCause_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CellMeasurementFailureCause_Item_ExtIEs( SI_XNAP_DT_PDU_CellMeasurementFailureCause_Item_ExtIEs * objPDUCellMeasurementFailureCause_Item_ExtIEs);
void __si_xnap_debug_PDU_CellMeasurementFailureCause_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_CellMeasurementFailureCause_Item_ExtIEs * objPDUCellMeasurementFailureCause_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CellMeasurementFailureCause_Item_ExtIEs( SI_XNAP_DT_PDU_CellMeasurementFailureCause_Item_ExtIEs ** objPDUCellMeasurementFailureCause_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CHOConfiguration_ExtIEs( SI_XNAP_DT_PDU_CHOConfiguration_ExtIEs * objPDUCHOConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CHOConfiguration_ExtIEs( SI_XNAP_DT_PDU_CHOConfiguration_ExtIEs * objPDUCHOConfiguration_ExtIEs);
void __si_xnap_debug_PDU_CHOConfiguration_ExtIEs( char * key, SI_XNAP_DT_PDU_CHOConfiguration_ExtIEs * objPDUCHOConfiguration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CHOConfiguration_ExtIEs( SI_XNAP_DT_PDU_CHOConfiguration_ExtIEs ** objPDUCHOConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CHOCandidateCell_Item_ExtIEs( SI_XNAP_DT_PDU_CHOCandidateCell_Item_ExtIEs * objPDUCHOCandidateCell_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CHOCandidateCell_Item_ExtIEs( SI_XNAP_DT_PDU_CHOCandidateCell_Item_ExtIEs * objPDUCHOCandidateCell_Item_ExtIEs);
void __si_xnap_debug_PDU_CHOCandidateCell_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_CHOCandidateCell_Item_ExtIEs * objPDUCHOCandidateCell_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CHOCandidateCell_Item_ExtIEs( SI_XNAP_DT_PDU_CHOCandidateCell_Item_ExtIEs ** objPDUCHOCandidateCell_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CHOExecutionCondition_Item_ExtIEs( SI_XNAP_DT_PDU_CHOExecutionCondition_Item_ExtIEs * objPDUCHOExecutionCondition_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CHOExecutionCondition_Item_ExtIEs( SI_XNAP_DT_PDU_CHOExecutionCondition_Item_ExtIEs * objPDUCHOExecutionCondition_Item_ExtIEs);
void __si_xnap_debug_PDU_CHOExecutionCondition_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_CHOExecutionCondition_Item_ExtIEs * objPDUCHOExecutionCondition_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CHOExecutionCondition_Item_ExtIEs( SI_XNAP_DT_PDU_CHOExecutionCondition_Item_ExtIEs ** objPDUCHOExecutionCondition_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ClockQualityAcceptanceCriteria_ExtIEs( SI_XNAP_DT_PDU_ClockQualityAcceptanceCriteria_ExtIEs * objPDUClockQualityAcceptanceCriteria_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ClockQualityAcceptanceCriteria_ExtIEs( SI_XNAP_DT_PDU_ClockQualityAcceptanceCriteria_ExtIEs * objPDUClockQualityAcceptanceCriteria_ExtIEs);
void __si_xnap_debug_PDU_ClockQualityAcceptanceCriteria_ExtIEs( char * key, SI_XNAP_DT_PDU_ClockQualityAcceptanceCriteria_ExtIEs * objPDUClockQualityAcceptanceCriteria_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ClockQualityAcceptanceCriteria_ExtIEs( SI_XNAP_DT_PDU_ClockQualityAcceptanceCriteria_ExtIEs ** objPDUClockQualityAcceptanceCriteria_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ClockQualityReportingControlInfo_ExtIEs( SI_XNAP_DT_PDU_ClockQualityReportingControlInfo_ExtIEs * objPDUClockQualityReportingControlInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ClockQualityReportingControlInfo_ExtIEs( SI_XNAP_DT_PDU_ClockQualityReportingControlInfo_ExtIEs * objPDUClockQualityReportingControlInfo_ExtIEs);
void __si_xnap_debug_PDU_ClockQualityReportingControlInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_ClockQualityReportingControlInfo_ExtIEs * objPDUClockQualityReportingControlInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ClockQualityReportingControlInfo_ExtIEs( SI_XNAP_DT_PDU_ClockQualityReportingControlInfo_ExtIEs ** objPDUClockQualityReportingControlInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ClockQualityDetailLevel_ExtIEs( SI_XNAP_DT_PDU_ClockQualityDetailLevel_ExtIEs * objPDUClockQualityDetailLevel_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ClockQualityDetailLevel_ExtIEs( SI_XNAP_DT_PDU_ClockQualityDetailLevel_ExtIEs * objPDUClockQualityDetailLevel_ExtIEs);
void __si_xnap_debug_PDU_ClockQualityDetailLevel_ExtIEs( char * key, SI_XNAP_DT_PDU_ClockQualityDetailLevel_ExtIEs * objPDUClockQualityDetailLevel_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ClockQualityDetailLevel_ExtIEs( SI_XNAP_DT_PDU_ClockQualityDetailLevel_ExtIEs ** objPDUClockQualityDetailLevel_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CompositeAvailableCapacityGroup_ExtIEs( SI_XNAP_DT_PDU_CompositeAvailableCapacityGroup_ExtIEs * objPDUCompositeAvailableCapacityGroup_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CompositeAvailableCapacityGroup_ExtIEs( SI_XNAP_DT_PDU_CompositeAvailableCapacityGroup_ExtIEs * objPDUCompositeAvailableCapacityGroup_ExtIEs);
void __si_xnap_debug_PDU_CompositeAvailableCapacityGroup_ExtIEs( char * key, SI_XNAP_DT_PDU_CompositeAvailableCapacityGroup_ExtIEs * objPDUCompositeAvailableCapacityGroup_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CompositeAvailableCapacityGroup_ExtIEs( SI_XNAP_DT_PDU_CompositeAvailableCapacityGroup_ExtIEs ** objPDUCompositeAvailableCapacityGroup_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CompositeAvailableCapacity_ExtIEs( SI_XNAP_DT_PDU_CompositeAvailableCapacity_ExtIEs * objPDUCompositeAvailableCapacity_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CompositeAvailableCapacity_ExtIEs( SI_XNAP_DT_PDU_CompositeAvailableCapacity_ExtIEs * objPDUCompositeAvailableCapacity_ExtIEs);
void __si_xnap_debug_PDU_CompositeAvailableCapacity_ExtIEs( char * key, SI_XNAP_DT_PDU_CompositeAvailableCapacity_ExtIEs * objPDUCompositeAvailableCapacity_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CompositeAvailableCapacity_ExtIEs( SI_XNAP_DT_PDU_CompositeAvailableCapacity_ExtIEs ** objPDUCompositeAvailableCapacity_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CHOinformation_Req_ExtIEs( SI_XNAP_DT_PDU_CHOinformation_Req_ExtIEs * objPDUCHOinformation_Req_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CHOinformation_Req_ExtIEs( SI_XNAP_DT_PDU_CHOinformation_Req_ExtIEs * objPDUCHOinformation_Req_ExtIEs);
void __si_xnap_debug_PDU_CHOinformation_Req_ExtIEs( char * key, SI_XNAP_DT_PDU_CHOinformation_Req_ExtIEs * objPDUCHOinformation_Req_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CHOinformation_Req_ExtIEs( SI_XNAP_DT_PDU_CHOinformation_Req_ExtIEs ** objPDUCHOinformation_Req_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CHOTimeBasedInformation_ExtIEs( SI_XNAP_DT_PDU_CHOTimeBasedInformation_ExtIEs * objPDUCHOTimeBasedInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CHOTimeBasedInformation_ExtIEs( SI_XNAP_DT_PDU_CHOTimeBasedInformation_ExtIEs * objPDUCHOTimeBasedInformation_ExtIEs);
void __si_xnap_debug_PDU_CHOTimeBasedInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_CHOTimeBasedInformation_ExtIEs * objPDUCHOTimeBasedInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CHOTimeBasedInformation_ExtIEs( SI_XNAP_DT_PDU_CHOTimeBasedInformation_ExtIEs ** objPDUCHOTimeBasedInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CHOinformation_Ack_ExtIEs( SI_XNAP_DT_PDU_CHOinformation_Ack_ExtIEs * objPDUCHOinformation_Ack_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CHOinformation_Ack_ExtIEs( SI_XNAP_DT_PDU_CHOinformation_Ack_ExtIEs * objPDUCHOinformation_Ack_ExtIEs);
void __si_xnap_debug_PDU_CHOinformation_Ack_ExtIEs( char * key, SI_XNAP_DT_PDU_CHOinformation_Ack_ExtIEs * objPDUCHOinformation_Ack_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CHOinformation_Ack_ExtIEs( SI_XNAP_DT_PDU_CHOinformation_Ack_ExtIEs ** objPDUCHOinformation_Ack_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CHOinformation_AddReq_ExtIEs( SI_XNAP_DT_PDU_CHOinformation_AddReq_ExtIEs * objPDUCHOinformation_AddReq_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CHOinformation_AddReq_ExtIEs( SI_XNAP_DT_PDU_CHOinformation_AddReq_ExtIEs * objPDUCHOinformation_AddReq_ExtIEs);
void __si_xnap_debug_PDU_CHOinformation_AddReq_ExtIEs( char * key, SI_XNAP_DT_PDU_CHOinformation_AddReq_ExtIEs * objPDUCHOinformation_AddReq_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CHOinformation_AddReq_ExtIEs( SI_XNAP_DT_PDU_CHOinformation_AddReq_ExtIEs ** objPDUCHOinformation_AddReq_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CHOinformation_AddReqAck_ExtIEs( SI_XNAP_DT_PDU_CHOinformation_AddReqAck_ExtIEs * objPDUCHOinformation_AddReqAck_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CHOinformation_AddReqAck_ExtIEs( SI_XNAP_DT_PDU_CHOinformation_AddReqAck_ExtIEs * objPDUCHOinformation_AddReqAck_ExtIEs);
void __si_xnap_debug_PDU_CHOinformation_AddReqAck_ExtIEs( char * key, SI_XNAP_DT_PDU_CHOinformation_AddReqAck_ExtIEs * objPDUCHOinformation_AddReqAck_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CHOinformation_AddReqAck_ExtIEs( SI_XNAP_DT_PDU_CHOinformation_AddReqAck_ExtIEs ** objPDUCHOinformation_AddReqAck_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CHOinformation_ModReq_ExtIEs( SI_XNAP_DT_PDU_CHOinformation_ModReq_ExtIEs * objPDUCHOinformation_ModReq_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CHOinformation_ModReq_ExtIEs( SI_XNAP_DT_PDU_CHOinformation_ModReq_ExtIEs * objPDUCHOinformation_ModReq_ExtIEs);
void __si_xnap_debug_PDU_CHOinformation_ModReq_ExtIEs( char * key, SI_XNAP_DT_PDU_CHOinformation_ModReq_ExtIEs * objPDUCHOinformation_ModReq_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CHOinformation_ModReq_ExtIEs( SI_XNAP_DT_PDU_CHOinformation_ModReq_ExtIEs ** objPDUCHOinformation_ModReq_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CHO_CPAC_Information_ExtIEs( SI_XNAP_DT_PDU_CHO_CPAC_Information_ExtIEs * objPDUCHO_CPAC_Information_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CHO_CPAC_Information_ExtIEs( SI_XNAP_DT_PDU_CHO_CPAC_Information_ExtIEs * objPDUCHO_CPAC_Information_ExtIEs);
void __si_xnap_debug_PDU_CHO_CPAC_Information_ExtIEs( char * key, SI_XNAP_DT_PDU_CHO_CPAC_Information_ExtIEs * objPDUCHO_CPAC_Information_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CHO_CPAC_Information_ExtIEs( SI_XNAP_DT_PDU_CHO_CPAC_Information_ExtIEs ** objPDUCHO_CPAC_Information_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CHO_target_SN_node_Item_ExtIEs( SI_XNAP_DT_PDU_CHO_target_SN_node_Item_ExtIEs * objPDUCHO_target_SN_node_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CHO_target_SN_node_Item_ExtIEs( SI_XNAP_DT_PDU_CHO_target_SN_node_Item_ExtIEs * objPDUCHO_target_SN_node_Item_ExtIEs);
void __si_xnap_debug_PDU_CHO_target_SN_node_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_CHO_target_SN_node_Item_ExtIEs * objPDUCHO_target_SN_node_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CHO_target_SN_node_Item_ExtIEs( SI_XNAP_DT_PDU_CHO_target_SN_node_Item_ExtIEs ** objPDUCHO_target_SN_node_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CHO_Candidate_PSCells_Item_ExtIEs( SI_XNAP_DT_PDU_CHO_Candidate_PSCells_Item_ExtIEs * objPDUCHO_Candidate_PSCells_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CHO_Candidate_PSCells_Item_ExtIEs( SI_XNAP_DT_PDU_CHO_Candidate_PSCells_Item_ExtIEs * objPDUCHO_Candidate_PSCells_Item_ExtIEs);
void __si_xnap_debug_PDU_CHO_Candidate_PSCells_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_CHO_Candidate_PSCells_Item_ExtIEs * objPDUCHO_Candidate_PSCells_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CHO_Candidate_PSCells_Item_ExtIEs( SI_XNAP_DT_PDU_CHO_Candidate_PSCells_Item_ExtIEs ** objPDUCHO_Candidate_PSCells_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Conditional_Reconfig_Item_ExtIEs( SI_XNAP_DT_PDU_Conditional_Reconfig_Item_ExtIEs * objPDUConditional_Reconfig_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Conditional_Reconfig_Item_ExtIEs( SI_XNAP_DT_PDU_Conditional_Reconfig_Item_ExtIEs * objPDUConditional_Reconfig_Item_ExtIEs);
void __si_xnap_debug_PDU_Conditional_Reconfig_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_Conditional_Reconfig_Item_ExtIEs * objPDUConditional_Reconfig_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Conditional_Reconfig_Item_ExtIEs( SI_XNAP_DT_PDU_Conditional_Reconfig_Item_ExtIEs ** objPDUConditional_Reconfig_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Connectivity_Support_ExtIEs( SI_XNAP_DT_PDU_Connectivity_Support_ExtIEs * objPDUConnectivity_Support_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Connectivity_Support_ExtIEs( SI_XNAP_DT_PDU_Connectivity_Support_ExtIEs * objPDUConnectivity_Support_ExtIEs);
void __si_xnap_debug_PDU_Connectivity_Support_ExtIEs( char * key, SI_XNAP_DT_PDU_Connectivity_Support_ExtIEs * objPDUConnectivity_Support_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Connectivity_Support_ExtIEs( SI_XNAP_DT_PDU_Connectivity_Support_ExtIEs ** objPDUConnectivity_Support_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_COUNT_PDCP_SN12_ExtIEs( SI_XNAP_DT_PDU_COUNT_PDCP_SN12_ExtIEs * objPDUCOUNT_PDCP_SN12_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_COUNT_PDCP_SN12_ExtIEs( SI_XNAP_DT_PDU_COUNT_PDCP_SN12_ExtIEs * objPDUCOUNT_PDCP_SN12_ExtIEs);
void __si_xnap_debug_PDU_COUNT_PDCP_SN12_ExtIEs( char * key, SI_XNAP_DT_PDU_COUNT_PDCP_SN12_ExtIEs * objPDUCOUNT_PDCP_SN12_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_COUNT_PDCP_SN12_ExtIEs( SI_XNAP_DT_PDU_COUNT_PDCP_SN12_ExtIEs ** objPDUCOUNT_PDCP_SN12_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_COUNT_PDCP_SN18_ExtIEs( SI_XNAP_DT_PDU_COUNT_PDCP_SN18_ExtIEs * objPDUCOUNT_PDCP_SN18_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_COUNT_PDCP_SN18_ExtIEs( SI_XNAP_DT_PDU_COUNT_PDCP_SN18_ExtIEs * objPDUCOUNT_PDCP_SN18_ExtIEs);
void __si_xnap_debug_PDU_COUNT_PDCP_SN18_ExtIEs( char * key, SI_XNAP_DT_PDU_COUNT_PDCP_SN18_ExtIEs * objPDUCOUNT_PDCP_SN18_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_COUNT_PDCP_SN18_ExtIEs( SI_XNAP_DT_PDU_COUNT_PDCP_SN18_ExtIEs ** objPDUCOUNT_PDCP_SN18_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Coverage_Modification_List_Item_ExtIEs( SI_XNAP_DT_PDU_Coverage_Modification_List_Item_ExtIEs * objPDUCoverage_Modification_List_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Coverage_Modification_List_Item_ExtIEs( SI_XNAP_DT_PDU_Coverage_Modification_List_Item_ExtIEs * objPDUCoverage_Modification_List_Item_ExtIEs);
void __si_xnap_debug_PDU_Coverage_Modification_List_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_Coverage_Modification_List_Item_ExtIEs * objPDUCoverage_Modification_List_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Coverage_Modification_List_Item_ExtIEs( SI_XNAP_DT_PDU_Coverage_Modification_List_Item_ExtIEs ** objPDUCoverage_Modification_List_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CPTransportLayerInformation_ExtIEs( SI_XNAP_DT_PDU_CPTransportLayerInformation_ExtIEs * objPDUCPTransportLayerInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CPTransportLayerInformation_ExtIEs( SI_XNAP_DT_PDU_CPTransportLayerInformation_ExtIEs * objPDUCPTransportLayerInformation_ExtIEs);
void __si_xnap_debug_PDU_CPTransportLayerInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_CPTransportLayerInformation_ExtIEs * objPDUCPTransportLayerInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CPTransportLayerInformation_ExtIEs( SI_XNAP_DT_PDU_CPTransportLayerInformation_ExtIEs ** objPDUCPTransportLayerInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CPACcandidatePSCells_item_ExtIEs( SI_XNAP_DT_PDU_CPACcandidatePSCells_item_ExtIEs * objPDUCPACcandidatePSCells_item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CPACcandidatePSCells_item_ExtIEs( SI_XNAP_DT_PDU_CPACcandidatePSCells_item_ExtIEs * objPDUCPACcandidatePSCells_item_ExtIEs);
void __si_xnap_debug_PDU_CPACcandidatePSCells_item_ExtIEs( char * key, SI_XNAP_DT_PDU_CPACcandidatePSCells_item_ExtIEs * objPDUCPACcandidatePSCells_item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CPACcandidatePSCells_item_ExtIEs( SI_XNAP_DT_PDU_CPACcandidatePSCells_item_ExtIEs ** objPDUCPACcandidatePSCells_item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CPACcandidatePSCells_wotherInfo_item_ExtIEs( SI_XNAP_DT_PDU_CPACcandidatePSCells_wotherInfo_item_ExtIEs * objPDUCPACcandidatePSCells_wotherInfo_item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CPACcandidatePSCells_wotherInfo_item_ExtIEs( SI_XNAP_DT_PDU_CPACcandidatePSCells_wotherInfo_item_ExtIEs * objPDUCPACcandidatePSCells_wotherInfo_item_ExtIEs);
void __si_xnap_debug_PDU_CPACcandidatePSCells_wotherInfo_item_ExtIEs( char * key, SI_XNAP_DT_PDU_CPACcandidatePSCells_wotherInfo_item_ExtIEs * objPDUCPACcandidatePSCells_wotherInfo_item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CPACcandidatePSCells_wotherInfo_item_ExtIEs( SI_XNAP_DT_PDU_CPACcandidatePSCells_wotherInfo_item_ExtIEs ** objPDUCPACcandidatePSCells_wotherInfo_item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CPACConfiguration_ExtIEs( SI_XNAP_DT_PDU_CPACConfiguration_ExtIEs * objPDUCPACConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CPACConfiguration_ExtIEs( SI_XNAP_DT_PDU_CPACConfiguration_ExtIEs * objPDUCPACConfiguration_ExtIEs);
void __si_xnap_debug_PDU_CPACConfiguration_ExtIEs( char * key, SI_XNAP_DT_PDU_CPACConfiguration_ExtIEs * objPDUCPACConfiguration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CPACConfiguration_ExtIEs( SI_XNAP_DT_PDU_CPACConfiguration_ExtIEs ** objPDUCPACConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CPACCandidateCell_Item_ExtIEs( SI_XNAP_DT_PDU_CPACCandidateCell_Item_ExtIEs * objPDUCPACCandidateCell_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CPACCandidateCell_Item_ExtIEs( SI_XNAP_DT_PDU_CPACCandidateCell_Item_ExtIEs * objPDUCPACCandidateCell_Item_ExtIEs);
void __si_xnap_debug_PDU_CPACCandidateCell_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_CPACCandidateCell_Item_ExtIEs * objPDUCPACCandidateCell_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CPACCandidateCell_Item_ExtIEs( SI_XNAP_DT_PDU_CPACCandidateCell_Item_ExtIEs ** objPDUCPACCandidateCell_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CPACExecutionCondition_Item_ExtIEs( SI_XNAP_DT_PDU_CPACExecutionCondition_Item_ExtIEs * objPDUCPACExecutionCondition_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CPACExecutionCondition_Item_ExtIEs( SI_XNAP_DT_PDU_CPACExecutionCondition_Item_ExtIEs * objPDUCPACExecutionCondition_Item_ExtIEs);
void __si_xnap_debug_PDU_CPACExecutionCondition_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_CPACExecutionCondition_Item_ExtIEs * objPDUCPACExecutionCondition_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CPACExecutionCondition_Item_ExtIEs( SI_XNAP_DT_PDU_CPACExecutionCondition_Item_ExtIEs ** objPDUCPACExecutionCondition_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CPAInformationRequest_ExtIEs( SI_XNAP_DT_PDU_CPAInformationRequest_ExtIEs * objPDUCPAInformationRequest_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CPAInformationRequest_ExtIEs( SI_XNAP_DT_PDU_CPAInformationRequest_ExtIEs * objPDUCPAInformationRequest_ExtIEs);
void __si_xnap_debug_PDU_CPAInformationRequest_ExtIEs( char * key, SI_XNAP_DT_PDU_CPAInformationRequest_ExtIEs * objPDUCPAInformationRequest_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CPAInformationRequest_ExtIEs( SI_XNAP_DT_PDU_CPAInformationRequest_ExtIEs ** objPDUCPAInformationRequest_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CPAInformationAck_ExtIEs( SI_XNAP_DT_PDU_CPAInformationAck_ExtIEs * objPDUCPAInformationAck_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CPAInformationAck_ExtIEs( SI_XNAP_DT_PDU_CPAInformationAck_ExtIEs * objPDUCPAInformationAck_ExtIEs);
void __si_xnap_debug_PDU_CPAInformationAck_ExtIEs( char * key, SI_XNAP_DT_PDU_CPAInformationAck_ExtIEs * objPDUCPAInformationAck_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CPAInformationAck_ExtIEs( SI_XNAP_DT_PDU_CPAInformationAck_ExtIEs ** objPDUCPAInformationAck_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CPCInformationRequired_ExtIEs( SI_XNAP_DT_PDU_CPCInformationRequired_ExtIEs * objPDUCPCInformationRequired_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CPCInformationRequired_ExtIEs( SI_XNAP_DT_PDU_CPCInformationRequired_ExtIEs * objPDUCPCInformationRequired_ExtIEs);
void __si_xnap_debug_PDU_CPCInformationRequired_ExtIEs( char * key, SI_XNAP_DT_PDU_CPCInformationRequired_ExtIEs * objPDUCPCInformationRequired_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CPCInformationRequired_ExtIEs( SI_XNAP_DT_PDU_CPCInformationRequired_ExtIEs ** objPDUCPCInformationRequired_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CPC_target_SN_required_list_Item_ExtIEs( SI_XNAP_DT_PDU_CPC_target_SN_required_list_Item_ExtIEs * objPDUCPC_target_SN_required_list_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CPC_target_SN_required_list_Item_ExtIEs( SI_XNAP_DT_PDU_CPC_target_SN_required_list_Item_ExtIEs * objPDUCPC_target_SN_required_list_Item_ExtIEs);
void __si_xnap_debug_PDU_CPC_target_SN_required_list_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_CPC_target_SN_required_list_Item_ExtIEs * objPDUCPC_target_SN_required_list_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CPC_target_SN_required_list_Item_ExtIEs( SI_XNAP_DT_PDU_CPC_target_SN_required_list_Item_ExtIEs ** objPDUCPC_target_SN_required_list_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CPCInformationConfirm_ExtIEs( SI_XNAP_DT_PDU_CPCInformationConfirm_ExtIEs * objPDUCPCInformationConfirm_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CPCInformationConfirm_ExtIEs( SI_XNAP_DT_PDU_CPCInformationConfirm_ExtIEs * objPDUCPCInformationConfirm_ExtIEs);
void __si_xnap_debug_PDU_CPCInformationConfirm_ExtIEs( char * key, SI_XNAP_DT_PDU_CPCInformationConfirm_ExtIEs * objPDUCPCInformationConfirm_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CPCInformationConfirm_ExtIEs( SI_XNAP_DT_PDU_CPCInformationConfirm_ExtIEs ** objPDUCPCInformationConfirm_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CPC_target_SN_confirm_list_Item_ExtIEs( SI_XNAP_DT_PDU_CPC_target_SN_confirm_list_Item_ExtIEs * objPDUCPC_target_SN_confirm_list_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CPC_target_SN_confirm_list_Item_ExtIEs( SI_XNAP_DT_PDU_CPC_target_SN_confirm_list_Item_ExtIEs * objPDUCPC_target_SN_confirm_list_Item_ExtIEs);
void __si_xnap_debug_PDU_CPC_target_SN_confirm_list_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_CPC_target_SN_confirm_list_Item_ExtIEs * objPDUCPC_target_SN_confirm_list_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CPC_target_SN_confirm_list_Item_ExtIEs( SI_XNAP_DT_PDU_CPC_target_SN_confirm_list_Item_ExtIEs ** objPDUCPC_target_SN_confirm_list_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CPAInformationModReq_ExtIEs( SI_XNAP_DT_PDU_CPAInformationModReq_ExtIEs * objPDUCPAInformationModReq_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CPAInformationModReq_ExtIEs( SI_XNAP_DT_PDU_CPAInformationModReq_ExtIEs * objPDUCPAInformationModReq_ExtIEs);
void __si_xnap_debug_PDU_CPAInformationModReq_ExtIEs( char * key, SI_XNAP_DT_PDU_CPAInformationModReq_ExtIEs * objPDUCPAInformationModReq_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CPAInformationModReq_ExtIEs( SI_XNAP_DT_PDU_CPAInformationModReq_ExtIEs ** objPDUCPAInformationModReq_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CPAInformationModReqAck_ExtIEs( SI_XNAP_DT_PDU_CPAInformationModReqAck_ExtIEs * objPDUCPAInformationModReqAck_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CPAInformationModReqAck_ExtIEs( SI_XNAP_DT_PDU_CPAInformationModReqAck_ExtIEs * objPDUCPAInformationModReqAck_ExtIEs);
void __si_xnap_debug_PDU_CPAInformationModReqAck_ExtIEs( char * key, SI_XNAP_DT_PDU_CPAInformationModReqAck_ExtIEs * objPDUCPAInformationModReqAck_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CPAInformationModReqAck_ExtIEs( SI_XNAP_DT_PDU_CPAInformationModReqAck_ExtIEs ** objPDUCPAInformationModReqAck_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CPACInformationModRequired_ExtIEs( SI_XNAP_DT_PDU_CPACInformationModRequired_ExtIEs * objPDUCPACInformationModRequired_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CPACInformationModRequired_ExtIEs( SI_XNAP_DT_PDU_CPACInformationModRequired_ExtIEs * objPDUCPACInformationModRequired_ExtIEs);
void __si_xnap_debug_PDU_CPACInformationModRequired_ExtIEs( char * key, SI_XNAP_DT_PDU_CPACInformationModRequired_ExtIEs * objPDUCPACInformationModRequired_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CPACInformationModRequired_ExtIEs( SI_XNAP_DT_PDU_CPACInformationModRequired_ExtIEs ** objPDUCPACInformationModRequired_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CPCInformationUpdate_ExtIEs( SI_XNAP_DT_PDU_CPCInformationUpdate_ExtIEs * objPDUCPCInformationUpdate_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CPCInformationUpdate_ExtIEs( SI_XNAP_DT_PDU_CPCInformationUpdate_ExtIEs * objPDUCPCInformationUpdate_ExtIEs);
void __si_xnap_debug_PDU_CPCInformationUpdate_ExtIEs( char * key, SI_XNAP_DT_PDU_CPCInformationUpdate_ExtIEs * objPDUCPCInformationUpdate_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CPCInformationUpdate_ExtIEs( SI_XNAP_DT_PDU_CPCInformationUpdate_ExtIEs ** objPDUCPCInformationUpdate_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CPC_target_SN_mod_item_ExtIEs( SI_XNAP_DT_PDU_CPC_target_SN_mod_item_ExtIEs * objPDUCPC_target_SN_mod_item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CPC_target_SN_mod_item_ExtIEs( SI_XNAP_DT_PDU_CPC_target_SN_mod_item_ExtIEs * objPDUCPC_target_SN_mod_item_ExtIEs);
void __si_xnap_debug_PDU_CPC_target_SN_mod_item_ExtIEs( char * key, SI_XNAP_DT_PDU_CPC_target_SN_mod_item_ExtIEs * objPDUCPC_target_SN_mod_item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CPC_target_SN_mod_item_ExtIEs( SI_XNAP_DT_PDU_CPC_target_SN_mod_item_ExtIEs ** objPDUCPC_target_SN_mod_item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CPCInformationUpdatePSCells_item_ExtIEs( SI_XNAP_DT_PDU_CPCInformationUpdatePSCells_item_ExtIEs * objPDUCPCInformationUpdatePSCells_item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CPCInformationUpdatePSCells_item_ExtIEs( SI_XNAP_DT_PDU_CPCInformationUpdatePSCells_item_ExtIEs * objPDUCPCInformationUpdatePSCells_item_ExtIEs);
void __si_xnap_debug_PDU_CPCInformationUpdatePSCells_item_ExtIEs( char * key, SI_XNAP_DT_PDU_CPCInformationUpdatePSCells_item_ExtIEs * objPDUCPCInformationUpdatePSCells_item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CPCInformationUpdatePSCells_item_ExtIEs( SI_XNAP_DT_PDU_CPCInformationUpdatePSCells_item_ExtIEs ** objPDUCPCInformationUpdatePSCells_item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CriticalityDiagnostics_ExtIEs( SI_XNAP_DT_PDU_CriticalityDiagnostics_ExtIEs * objPDUCriticalityDiagnostics_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CriticalityDiagnostics_ExtIEs( SI_XNAP_DT_PDU_CriticalityDiagnostics_ExtIEs * objPDUCriticalityDiagnostics_ExtIEs);
void __si_xnap_debug_PDU_CriticalityDiagnostics_ExtIEs( char * key, SI_XNAP_DT_PDU_CriticalityDiagnostics_ExtIEs * objPDUCriticalityDiagnostics_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CriticalityDiagnostics_ExtIEs( SI_XNAP_DT_PDU_CriticalityDiagnostics_ExtIEs ** objPDUCriticalityDiagnostics_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CriticalityDiagnostics_IE_List_ExtIEs( SI_XNAP_DT_PDU_CriticalityDiagnostics_IE_List_ExtIEs * objPDUCriticalityDiagnostics_IE_List_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CriticalityDiagnostics_IE_List_ExtIEs( SI_XNAP_DT_PDU_CriticalityDiagnostics_IE_List_ExtIEs * objPDUCriticalityDiagnostics_IE_List_ExtIEs);
void __si_xnap_debug_PDU_CriticalityDiagnostics_IE_List_ExtIEs( char * key, SI_XNAP_DT_PDU_CriticalityDiagnostics_IE_List_ExtIEs * objPDUCriticalityDiagnostics_IE_List_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CriticalityDiagnostics_IE_List_ExtIEs( SI_XNAP_DT_PDU_CriticalityDiagnostics_IE_List_ExtIEs ** objPDUCriticalityDiagnostics_IE_List_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CSI_RS_MTC_Configuration_Item_ExtIEs( SI_XNAP_DT_PDU_CSI_RS_MTC_Configuration_Item_ExtIEs * objPDUCSI_RS_MTC_Configuration_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CSI_RS_MTC_Configuration_Item_ExtIEs( SI_XNAP_DT_PDU_CSI_RS_MTC_Configuration_Item_ExtIEs * objPDUCSI_RS_MTC_Configuration_Item_ExtIEs);
void __si_xnap_debug_PDU_CSI_RS_MTC_Configuration_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_CSI_RS_MTC_Configuration_Item_ExtIEs * objPDUCSI_RS_MTC_Configuration_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CSI_RS_MTC_Configuration_Item_ExtIEs( SI_XNAP_DT_PDU_CSI_RS_MTC_Configuration_Item_ExtIEs ** objPDUCSI_RS_MTC_Configuration_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CSI_RS_Neighbour_Item_ExtIEs( SI_XNAP_DT_PDU_CSI_RS_Neighbour_Item_ExtIEs * objPDUCSI_RS_Neighbour_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CSI_RS_Neighbour_Item_ExtIEs( SI_XNAP_DT_PDU_CSI_RS_Neighbour_Item_ExtIEs * objPDUCSI_RS_Neighbour_Item_ExtIEs);
void __si_xnap_debug_PDU_CSI_RS_Neighbour_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_CSI_RS_Neighbour_Item_ExtIEs * objPDUCSI_RS_Neighbour_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CSI_RS_Neighbour_Item_ExtIEs( SI_XNAP_DT_PDU_CSI_RS_Neighbour_Item_ExtIEs ** objPDUCSI_RS_Neighbour_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CSI_RS_MTC_Neighbour_Item_ExtIEs( SI_XNAP_DT_PDU_CSI_RS_MTC_Neighbour_Item_ExtIEs * objPDUCSI_RS_MTC_Neighbour_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CSI_RS_MTC_Neighbour_Item_ExtIEs( SI_XNAP_DT_PDU_CSI_RS_MTC_Neighbour_Item_ExtIEs * objPDUCSI_RS_MTC_Neighbour_Item_ExtIEs);
void __si_xnap_debug_PDU_CSI_RS_MTC_Neighbour_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_CSI_RS_MTC_Neighbour_Item_ExtIEs * objPDUCSI_RS_MTC_Neighbour_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CSI_RS_MTC_Neighbour_Item_ExtIEs( SI_XNAP_DT_PDU_CSI_RS_MTC_Neighbour_Item_ExtIEs ** objPDUCSI_RS_MTC_Neighbour_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CAGListforMDTItem_ExtIEs( SI_XNAP_DT_PDU_CAGListforMDTItem_ExtIEs * objPDUCAGListforMDTItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CAGListforMDTItem_ExtIEs( SI_XNAP_DT_PDU_CAGListforMDTItem_ExtIEs * objPDUCAGListforMDTItem_ExtIEs);
void __si_xnap_debug_PDU_CAGListforMDTItem_ExtIEs( char * key, SI_XNAP_DT_PDU_CAGListforMDTItem_ExtIEs * objPDUCAGListforMDTItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CAGListforMDTItem_ExtIEs( SI_XNAP_DT_PDU_CAGListforMDTItem_ExtIEs ** objPDUCAGListforMDTItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_XnUAddressInfoperPDUSession_Item_ExtIEs( SI_XNAP_DT_PDU_XnUAddressInfoperPDUSession_Item_ExtIEs * objPDUXnUAddressInfoperPDUSession_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_XnUAddressInfoperPDUSession_Item_ExtIEs( SI_XNAP_DT_PDU_XnUAddressInfoperPDUSession_Item_ExtIEs * objPDUXnUAddressInfoperPDUSession_Item_ExtIEs);
void __si_xnap_debug_PDU_XnUAddressInfoperPDUSession_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_XnUAddressInfoperPDUSession_Item_ExtIEs * objPDUXnUAddressInfoperPDUSession_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_XnUAddressInfoperPDUSession_Item_ExtIEs( SI_XNAP_DT_PDU_XnUAddressInfoperPDUSession_Item_ExtIEs ** objPDUXnUAddressInfoperPDUSession_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DataForwardingInfoFromTargetE_UTRANnode_ExtIEs( SI_XNAP_DT_PDU_DataForwardingInfoFromTargetE_UTRANnode_ExtIEs * objPDUDataForwardingInfoFromTargetE_UTRANnode_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DataForwardingInfoFromTargetE_UTRANnode_ExtIEs( SI_XNAP_DT_PDU_DataForwardingInfoFromTargetE_UTRANnode_ExtIEs * objPDUDataForwardingInfoFromTargetE_UTRANnode_ExtIEs);
void __si_xnap_debug_PDU_DataForwardingInfoFromTargetE_UTRANnode_ExtIEs( char * key, SI_XNAP_DT_PDU_DataForwardingInfoFromTargetE_UTRANnode_ExtIEs * objPDUDataForwardingInfoFromTargetE_UTRANnode_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DataForwardingInfoFromTargetE_UTRANnode_ExtIEs( SI_XNAP_DT_PDU_DataForwardingInfoFromTargetE_UTRANnode_ExtIEs ** objPDUDataForwardingInfoFromTargetE_UTRANnode_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DataForwardingInfoFromTargetE_UTRANnode_Item_ExtIEs( SI_XNAP_DT_PDU_DataForwardingInfoFromTargetE_UTRANnode_Item_ExtIEs * objPDUDataForwardingInfoFromTargetE_UTRANnode_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DataForwardingInfoFromTargetE_UTRANnode_Item_ExtIEs( SI_XNAP_DT_PDU_DataForwardingInfoFromTargetE_UTRANnode_Item_ExtIEs * objPDUDataForwardingInfoFromTargetE_UTRANnode_Item_ExtIEs);
void __si_xnap_debug_PDU_DataForwardingInfoFromTargetE_UTRANnode_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DataForwardingInfoFromTargetE_UTRANnode_Item_ExtIEs * objPDUDataForwardingInfoFromTargetE_UTRANnode_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DataForwardingInfoFromTargetE_UTRANnode_Item_ExtIEs( SI_XNAP_DT_PDU_DataForwardingInfoFromTargetE_UTRANnode_Item_ExtIEs ** objPDUDataForwardingInfoFromTargetE_UTRANnode_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSFlowsToBeForwarded_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsToBeForwarded_Item_ExtIEs * objPDUQoSFlowsToBeForwarded_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSFlowsToBeForwarded_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsToBeForwarded_Item_ExtIEs * objPDUQoSFlowsToBeForwarded_Item_ExtIEs);
void __si_xnap_debug_PDU_QoSFlowsToBeForwarded_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSFlowsToBeForwarded_Item_ExtIEs * objPDUQoSFlowsToBeForwarded_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSFlowsToBeForwarded_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsToBeForwarded_Item_ExtIEs ** objPDUQoSFlowsToBeForwarded_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DataForwardingInfoFromTargetNGRANnode_ExtIEs( SI_XNAP_DT_PDU_DataForwardingInfoFromTargetNGRANnode_ExtIEs * objPDUDataForwardingInfoFromTargetNGRANnode_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DataForwardingInfoFromTargetNGRANnode_ExtIEs( SI_XNAP_DT_PDU_DataForwardingInfoFromTargetNGRANnode_ExtIEs * objPDUDataForwardingInfoFromTargetNGRANnode_ExtIEs);
void __si_xnap_debug_PDU_DataForwardingInfoFromTargetNGRANnode_ExtIEs( char * key, SI_XNAP_DT_PDU_DataForwardingInfoFromTargetNGRANnode_ExtIEs * objPDUDataForwardingInfoFromTargetNGRANnode_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DataForwardingInfoFromTargetNGRANnode_ExtIEs( SI_XNAP_DT_PDU_DataForwardingInfoFromTargetNGRANnode_ExtIEs ** objPDUDataForwardingInfoFromTargetNGRANnode_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSFLowsAcceptedToBeForwarded_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFLowsAcceptedToBeForwarded_Item_ExtIEs * objPDUQoSFLowsAcceptedToBeForwarded_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSFLowsAcceptedToBeForwarded_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFLowsAcceptedToBeForwarded_Item_ExtIEs * objPDUQoSFLowsAcceptedToBeForwarded_Item_ExtIEs);
void __si_xnap_debug_PDU_QoSFLowsAcceptedToBeForwarded_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSFLowsAcceptedToBeForwarded_Item_ExtIEs * objPDUQoSFLowsAcceptedToBeForwarded_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSFLowsAcceptedToBeForwarded_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFLowsAcceptedToBeForwarded_Item_ExtIEs ** objPDUQoSFLowsAcceptedToBeForwarded_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DataforwardingandOffloadingInfofromSource_ExtIEs( SI_XNAP_DT_PDU_DataforwardingandOffloadingInfofromSource_ExtIEs * objPDUDataforwardingandOffloadingInfofromSource_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DataforwardingandOffloadingInfofromSource_ExtIEs( SI_XNAP_DT_PDU_DataforwardingandOffloadingInfofromSource_ExtIEs * objPDUDataforwardingandOffloadingInfofromSource_ExtIEs);
void __si_xnap_debug_PDU_DataforwardingandOffloadingInfofromSource_ExtIEs( char * key, SI_XNAP_DT_PDU_DataforwardingandOffloadingInfofromSource_ExtIEs * objPDUDataforwardingandOffloadingInfofromSource_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DataforwardingandOffloadingInfofromSource_ExtIEs( SI_XNAP_DT_PDU_DataforwardingandOffloadingInfofromSource_ExtIEs ** objPDUDataforwardingandOffloadingInfofromSource_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSFLowsToBeForwarded_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFLowsToBeForwarded_Item_ExtIEs * objPDUQoSFLowsToBeForwarded_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSFLowsToBeForwarded_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFLowsToBeForwarded_Item_ExtIEs * objPDUQoSFLowsToBeForwarded_Item_ExtIEs);
void __si_xnap_debug_PDU_QoSFLowsToBeForwarded_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSFLowsToBeForwarded_Item_ExtIEs * objPDUQoSFLowsToBeForwarded_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSFLowsToBeForwarded_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFLowsToBeForwarded_Item_ExtIEs ** objPDUQoSFLowsToBeForwarded_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DataForwardingResponseDRBItem_ExtIEs( SI_XNAP_DT_PDU_DataForwardingResponseDRBItem_ExtIEs * objPDUDataForwardingResponseDRBItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DataForwardingResponseDRBItem_ExtIEs( SI_XNAP_DT_PDU_DataForwardingResponseDRBItem_ExtIEs * objPDUDataForwardingResponseDRBItem_ExtIEs);
void __si_xnap_debug_PDU_DataForwardingResponseDRBItem_ExtIEs( char * key, SI_XNAP_DT_PDU_DataForwardingResponseDRBItem_ExtIEs * objPDUDataForwardingResponseDRBItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DataForwardingResponseDRBItem_ExtIEs( SI_XNAP_DT_PDU_DataForwardingResponseDRBItem_ExtIEs ** objPDUDataForwardingResponseDRBItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DataTrafficResourceIndication_ExtIEs( SI_XNAP_DT_PDU_DataTrafficResourceIndication_ExtIEs * objPDUDataTrafficResourceIndication_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DataTrafficResourceIndication_ExtIEs( SI_XNAP_DT_PDU_DataTrafficResourceIndication_ExtIEs * objPDUDataTrafficResourceIndication_ExtIEs);
void __si_xnap_debug_PDU_DataTrafficResourceIndication_ExtIEs( char * key, SI_XNAP_DT_PDU_DataTrafficResourceIndication_ExtIEs * objPDUDataTrafficResourceIndication_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DataTrafficResourceIndication_ExtIEs( SI_XNAP_DT_PDU_DataTrafficResourceIndication_ExtIEs ** objPDUDataTrafficResourceIndication_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DAPSRequestInfo_ExtIEs( SI_XNAP_DT_PDU_DAPSRequestInfo_ExtIEs * objPDUDAPSRequestInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DAPSRequestInfo_ExtIEs( SI_XNAP_DT_PDU_DAPSRequestInfo_ExtIEs * objPDUDAPSRequestInfo_ExtIEs);
void __si_xnap_debug_PDU_DAPSRequestInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_DAPSRequestInfo_ExtIEs * objPDUDAPSRequestInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DAPSRequestInfo_ExtIEs( SI_XNAP_DT_PDU_DAPSRequestInfo_ExtIEs ** objPDUDAPSRequestInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DAPSResponseInfo_Item_ExtIEs( SI_XNAP_DT_PDU_DAPSResponseInfo_Item_ExtIEs * objPDUDAPSResponseInfo_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DAPSResponseInfo_Item_ExtIEs( SI_XNAP_DT_PDU_DAPSResponseInfo_Item_ExtIEs * objPDUDAPSResponseInfo_Item_ExtIEs);
void __si_xnap_debug_PDU_DAPSResponseInfo_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DAPSResponseInfo_Item_ExtIEs * objPDUDAPSResponseInfo_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DAPSResponseInfo_Item_ExtIEs( SI_XNAP_DT_PDU_DAPSResponseInfo_Item_ExtIEs ** objPDUDAPSResponseInfo_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DLCountChoice_ExtIEs( SI_XNAP_DT_PDU_DLCountChoice_ExtIEs * objPDUDLCountChoice_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DLCountChoice_ExtIEs( SI_XNAP_DT_PDU_DLCountChoice_ExtIEs * objPDUDLCountChoice_ExtIEs);
void __si_xnap_debug_PDU_DLCountChoice_ExtIEs( char * key, SI_XNAP_DT_PDU_DLCountChoice_ExtIEs * objPDUDLCountChoice_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DLCountChoice_ExtIEs( SI_XNAP_DT_PDU_DLCountChoice_ExtIEs ** objPDUDLCountChoice_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DLF1Terminating_BHInfo_ExtIEs( SI_XNAP_DT_PDU_DLF1Terminating_BHInfo_ExtIEs * objPDUDLF1Terminating_BHInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DLF1Terminating_BHInfo_ExtIEs( SI_XNAP_DT_PDU_DLF1Terminating_BHInfo_ExtIEs * objPDUDLF1Terminating_BHInfo_ExtIEs);
void __si_xnap_debug_PDU_DLF1Terminating_BHInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_DLF1Terminating_BHInfo_ExtIEs * objPDUDLF1Terminating_BHInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DLF1Terminating_BHInfo_ExtIEs( SI_XNAP_DT_PDU_DLF1Terminating_BHInfo_ExtIEs ** objPDUDLF1Terminating_BHInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DLLBTFailureInformationList_Item_ExtIEs( SI_XNAP_DT_PDU_DLLBTFailureInformationList_Item_ExtIEs * objPDUDLLBTFailureInformationList_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DLLBTFailureInformationList_Item_ExtIEs( SI_XNAP_DT_PDU_DLLBTFailureInformationList_Item_ExtIEs * objPDUDLLBTFailureInformationList_Item_ExtIEs);
void __si_xnap_debug_PDU_DLLBTFailureInformationList_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DLLBTFailureInformationList_Item_ExtIEs * objPDUDLLBTFailureInformationList_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DLLBTFailureInformationList_Item_ExtIEs( SI_XNAP_DT_PDU_DLLBTFailureInformationList_Item_ExtIEs ** objPDUDLLBTFailureInformationList_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DLNonF1Terminating_BHInfo_ExtIEs( SI_XNAP_DT_PDU_DLNonF1Terminating_BHInfo_ExtIEs * objPDUDLNonF1Terminating_BHInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DLNonF1Terminating_BHInfo_ExtIEs( SI_XNAP_DT_PDU_DLNonF1Terminating_BHInfo_ExtIEs * objPDUDLNonF1Terminating_BHInfo_ExtIEs);
void __si_xnap_debug_PDU_DLNonF1Terminating_BHInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_DLNonF1Terminating_BHInfo_ExtIEs * objPDUDLNonF1Terminating_BHInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DLNonF1Terminating_BHInfo_ExtIEs( SI_XNAP_DT_PDU_DLNonF1Terminating_BHInfo_ExtIEs ** objPDUDLNonF1Terminating_BHInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRB_List_withCause_Item_ExtIEs( SI_XNAP_DT_PDU_DRB_List_withCause_Item_ExtIEs * objPDUDRB_List_withCause_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRB_List_withCause_Item_ExtIEs( SI_XNAP_DT_PDU_DRB_List_withCause_Item_ExtIEs * objPDUDRB_List_withCause_Item_ExtIEs);
void __si_xnap_debug_PDU_DRB_List_withCause_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DRB_List_withCause_Item_ExtIEs * objPDUDRB_List_withCause_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRB_List_withCause_Item_ExtIEs( SI_XNAP_DT_PDU_DRB_List_withCause_Item_ExtIEs ** objPDUDRB_List_withCause_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs * objPDUDRBsSubjectToDLDiscarding_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs * objPDUDRBsSubjectToDLDiscarding_Item_ExtIEs);
void __si_xnap_debug_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs * objPDUDRBsSubjectToDLDiscarding_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsSubjectToDLDiscarding_Item_ExtIEs ** objPDUDRBsSubjectToDLDiscarding_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs * objPDUDRBsSubjectToEarlyStatusTransfer_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs * objPDUDRBsSubjectToEarlyStatusTransfer_Item_ExtIEs);
void __si_xnap_debug_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs * objPDUDRBsSubjectToEarlyStatusTransfer_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsSubjectToEarlyStatusTransfer_Item_ExtIEs ** objPDUDRBsSubjectToEarlyStatusTransfer_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBsSubjectToStatusTransfer_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsSubjectToStatusTransfer_Item_ExtIEs * objPDUDRBsSubjectToStatusTransfer_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBsSubjectToStatusTransfer_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsSubjectToStatusTransfer_Item_ExtIEs * objPDUDRBsSubjectToStatusTransfer_Item_ExtIEs);
void __si_xnap_debug_PDU_DRBsSubjectToStatusTransfer_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBsSubjectToStatusTransfer_Item_ExtIEs * objPDUDRBsSubjectToStatusTransfer_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBsSubjectToStatusTransfer_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsSubjectToStatusTransfer_Item_ExtIEs ** objPDUDRBsSubjectToStatusTransfer_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBBStatusTransferChoice_ExtIEs( SI_XNAP_DT_PDU_DRBBStatusTransferChoice_ExtIEs * objPDUDRBBStatusTransferChoice_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBBStatusTransferChoice_ExtIEs( SI_XNAP_DT_PDU_DRBBStatusTransferChoice_ExtIEs * objPDUDRBBStatusTransferChoice_ExtIEs);
void __si_xnap_debug_PDU_DRBBStatusTransferChoice_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBBStatusTransferChoice_ExtIEs * objPDUDRBBStatusTransferChoice_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBBStatusTransferChoice_ExtIEs( SI_XNAP_DT_PDU_DRBBStatusTransferChoice_ExtIEs ** objPDUDRBBStatusTransferChoice_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBBStatusTransfer12bitsSN_ExtIEs( SI_XNAP_DT_PDU_DRBBStatusTransfer12bitsSN_ExtIEs * objPDUDRBBStatusTransfer12bitsSN_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBBStatusTransfer12bitsSN_ExtIEs( SI_XNAP_DT_PDU_DRBBStatusTransfer12bitsSN_ExtIEs * objPDUDRBBStatusTransfer12bitsSN_ExtIEs);
void __si_xnap_debug_PDU_DRBBStatusTransfer12bitsSN_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBBStatusTransfer12bitsSN_ExtIEs * objPDUDRBBStatusTransfer12bitsSN_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBBStatusTransfer12bitsSN_ExtIEs( SI_XNAP_DT_PDU_DRBBStatusTransfer12bitsSN_ExtIEs ** objPDUDRBBStatusTransfer12bitsSN_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBBStatusTransfer18bitsSN_ExtIEs( SI_XNAP_DT_PDU_DRBBStatusTransfer18bitsSN_ExtIEs * objPDUDRBBStatusTransfer18bitsSN_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBBStatusTransfer18bitsSN_ExtIEs( SI_XNAP_DT_PDU_DRBBStatusTransfer18bitsSN_ExtIEs * objPDUDRBBStatusTransfer18bitsSN_ExtIEs);
void __si_xnap_debug_PDU_DRBBStatusTransfer18bitsSN_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBBStatusTransfer18bitsSN_ExtIEs * objPDUDRBBStatusTransfer18bitsSN_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBBStatusTransfer18bitsSN_ExtIEs( SI_XNAP_DT_PDU_DRBBStatusTransfer18bitsSN_ExtIEs ** objPDUDRBBStatusTransfer18bitsSN_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBToQoSFlowMapping_Item_ExtIEs( SI_XNAP_DT_PDU_DRBToQoSFlowMapping_Item_ExtIEs * objPDUDRBToQoSFlowMapping_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBToQoSFlowMapping_Item_ExtIEs( SI_XNAP_DT_PDU_DRBToQoSFlowMapping_Item_ExtIEs * objPDUDRBToQoSFlowMapping_Item_ExtIEs);
void __si_xnap_debug_PDU_DRBToQoSFlowMapping_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBToQoSFlowMapping_Item_ExtIEs * objPDUDRBToQoSFlowMapping_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBToQoSFlowMapping_Item_ExtIEs( SI_XNAP_DT_PDU_DRBToQoSFlowMapping_Item_ExtIEs ** objPDUDRBToQoSFlowMapping_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DUF_Slot_Config_Item_ExtIEs( SI_XNAP_DT_PDU_DUF_Slot_Config_Item_ExtIEs * objPDUDUF_Slot_Config_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DUF_Slot_Config_Item_ExtIEs( SI_XNAP_DT_PDU_DUF_Slot_Config_Item_ExtIEs * objPDUDUF_Slot_Config_Item_ExtIEs);
void __si_xnap_debug_PDU_DUF_Slot_Config_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DUF_Slot_Config_Item_ExtIEs * objPDUDUF_Slot_Config_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DUF_Slot_Config_Item_ExtIEs( SI_XNAP_DT_PDU_DUF_Slot_Config_Item_ExtIEs ** objPDUDUF_Slot_Config_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Dynamic5QIDescriptor_ExtIEs( SI_XNAP_DT_PDU_Dynamic5QIDescriptor_ExtIEs * objPDUDynamic5QIDescriptor_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Dynamic5QIDescriptor_ExtIEs( SI_XNAP_DT_PDU_Dynamic5QIDescriptor_ExtIEs * objPDUDynamic5QIDescriptor_ExtIEs);
void __si_xnap_debug_PDU_Dynamic5QIDescriptor_ExtIEs( char * key, SI_XNAP_DT_PDU_Dynamic5QIDescriptor_ExtIEs * objPDUDynamic5QIDescriptor_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Dynamic5QIDescriptor_ExtIEs( SI_XNAP_DT_PDU_Dynamic5QIDescriptor_ExtIEs ** objPDUDynamic5QIDescriptor_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs( SI_XNAP_DT_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs * objPDUECNMarkingorCongestionInformationReportingRequest_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs( SI_XNAP_DT_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs * objPDUECNMarkingorCongestionInformationReportingRequest_ExtIEs);
void __si_xnap_debug_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs( char * key, SI_XNAP_DT_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs * objPDUECNMarkingorCongestionInformationReportingRequest_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs( SI_XNAP_DT_PDU_ECNMarkingorCongestionInformationReportingRequest_ExtIEs ** objPDUECNMarkingorCongestionInformationReportingRequest_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_E_UTRA_CGI_ExtIEs( SI_XNAP_DT_PDU_E_UTRA_CGI_ExtIEs * objPDUE_UTRA_CGI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_E_UTRA_CGI_ExtIEs( SI_XNAP_DT_PDU_E_UTRA_CGI_ExtIEs * objPDUE_UTRA_CGI_ExtIEs);
void __si_xnap_debug_PDU_E_UTRA_CGI_ExtIEs( char * key, SI_XNAP_DT_PDU_E_UTRA_CGI_ExtIEs * objPDUE_UTRA_CGI_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_E_UTRA_CGI_ExtIEs( SI_XNAP_DT_PDU_E_UTRA_CGI_ExtIEs ** objPDUE_UTRA_CGI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_EUTRAPagingeDRXInformation_ExtIEs( SI_XNAP_DT_PDU_EUTRAPagingeDRXInformation_ExtIEs * objPDUEUTRAPagingeDRXInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_EUTRAPagingeDRXInformation_ExtIEs( SI_XNAP_DT_PDU_EUTRAPagingeDRXInformation_ExtIEs * objPDUEUTRAPagingeDRXInformation_ExtIEs);
void __si_xnap_debug_PDU_EUTRAPagingeDRXInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_EUTRAPagingeDRXInformation_ExtIEs * objPDUEUTRAPagingeDRXInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_EUTRAPagingeDRXInformation_ExtIEs( SI_XNAP_DT_PDU_EUTRAPagingeDRXInformation_ExtIEs ** objPDUEUTRAPagingeDRXInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_E_UTRAPRACHConfiguration_ExtIEs( SI_XNAP_DT_PDU_E_UTRAPRACHConfiguration_ExtIEs * objPDUE_UTRAPRACHConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_E_UTRAPRACHConfiguration_ExtIEs( SI_XNAP_DT_PDU_E_UTRAPRACHConfiguration_ExtIEs * objPDUE_UTRAPRACHConfiguration_ExtIEs);
void __si_xnap_debug_PDU_E_UTRAPRACHConfiguration_ExtIEs( char * key, SI_XNAP_DT_PDU_E_UTRAPRACHConfiguration_ExtIEs * objPDUE_UTRAPRACHConfiguration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_E_UTRAPRACHConfiguration_ExtIEs( SI_XNAP_DT_PDU_E_UTRAPRACHConfiguration_ExtIEs ** objPDUE_UTRAPRACHConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_EndpointIPAddressAndPort_ExtIEs( SI_XNAP_DT_PDU_EndpointIPAddressAndPort_ExtIEs * objPDUEndpointIPAddressAndPort_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_EndpointIPAddressAndPort_ExtIEs( SI_XNAP_DT_PDU_EndpointIPAddressAndPort_ExtIEs * objPDUEndpointIPAddressAndPort_ExtIEs);
void __si_xnap_debug_PDU_EndpointIPAddressAndPort_ExtIEs( char * key, SI_XNAP_DT_PDU_EndpointIPAddressAndPort_ExtIEs * objPDUEndpointIPAddressAndPort_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_EndpointIPAddressAndPort_ExtIEs( SI_XNAP_DT_PDU_EndpointIPAddressAndPort_ExtIEs ** objPDUEndpointIPAddressAndPort_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_EventTriggered_ExtIEs( SI_XNAP_DT_PDU_EventTriggered_ExtIEs * objPDUEventTriggered_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_EventTriggered_ExtIEs( SI_XNAP_DT_PDU_EventTriggered_ExtIEs * objPDUEventTriggered_ExtIEs);
void __si_xnap_debug_PDU_EventTriggered_ExtIEs( char * key, SI_XNAP_DT_PDU_EventTriggered_ExtIEs * objPDUEventTriggered_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_EventTriggered_ExtIEs( SI_XNAP_DT_PDU_EventTriggered_ExtIEs ** objPDUEventTriggered_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_EventTypeTrigger_ExtIEs( SI_XNAP_DT_PDU_EventTypeTrigger_ExtIEs * objPDUEventTypeTrigger_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_EventTypeTrigger_ExtIEs( SI_XNAP_DT_PDU_EventTypeTrigger_ExtIEs * objPDUEventTypeTrigger_ExtIEs);
void __si_xnap_debug_PDU_EventTypeTrigger_ExtIEs( char * key, SI_XNAP_DT_PDU_EventTypeTrigger_ExtIEs * objPDUEventTypeTrigger_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_EventTypeTrigger_ExtIEs( SI_XNAP_DT_PDU_EventTypeTrigger_ExtIEs ** objPDUEventTypeTrigger_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_EventL1_ExtIEs( SI_XNAP_DT_PDU_EventL1_ExtIEs * objPDUEventL1_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_EventL1_ExtIEs( SI_XNAP_DT_PDU_EventL1_ExtIEs * objPDUEventL1_ExtIEs);
void __si_xnap_debug_PDU_EventL1_ExtIEs( char * key, SI_XNAP_DT_PDU_EventL1_ExtIEs * objPDUEventL1_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_EventL1_ExtIEs( SI_XNAP_DT_PDU_EventL1_ExtIEs ** objPDUEventL1_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs( SI_XNAP_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs * objPDUMeasurementThresholdL1LoggedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs( SI_XNAP_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs * objPDUMeasurementThresholdL1LoggedMDT_ExtIEs);
void __si_xnap_debug_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs( char * key, SI_XNAP_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs * objPDUMeasurementThresholdL1LoggedMDT_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs( SI_XNAP_DT_PDU_MeasurementThresholdL1LoggedMDT_ExtIEs ** objPDUMeasurementThresholdL1LoggedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ExcessPacketDelayThresholdItem_ExtIEs( SI_XNAP_DT_PDU_ExcessPacketDelayThresholdItem_ExtIEs * objPDUExcessPacketDelayThresholdItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ExcessPacketDelayThresholdItem_ExtIEs( SI_XNAP_DT_PDU_ExcessPacketDelayThresholdItem_ExtIEs * objPDUExcessPacketDelayThresholdItem_ExtIEs);
void __si_xnap_debug_PDU_ExcessPacketDelayThresholdItem_ExtIEs( char * key, SI_XNAP_DT_PDU_ExcessPacketDelayThresholdItem_ExtIEs * objPDUExcessPacketDelayThresholdItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ExcessPacketDelayThresholdItem_ExtIEs( SI_XNAP_DT_PDU_ExcessPacketDelayThresholdItem_ExtIEs ** objPDUExcessPacketDelayThresholdItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ExpectedUEActivityBehaviour_ExtIEs( SI_XNAP_DT_PDU_ExpectedUEActivityBehaviour_ExtIEs * objPDUExpectedUEActivityBehaviour_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ExpectedUEActivityBehaviour_ExtIEs( SI_XNAP_DT_PDU_ExpectedUEActivityBehaviour_ExtIEs * objPDUExpectedUEActivityBehaviour_ExtIEs);
void __si_xnap_debug_PDU_ExpectedUEActivityBehaviour_ExtIEs( char * key, SI_XNAP_DT_PDU_ExpectedUEActivityBehaviour_ExtIEs * objPDUExpectedUEActivityBehaviour_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ExpectedUEActivityBehaviour_ExtIEs( SI_XNAP_DT_PDU_ExpectedUEActivityBehaviour_ExtIEs ** objPDUExpectedUEActivityBehaviour_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ExpectedUEBehaviour_ExtIEs( SI_XNAP_DT_PDU_ExpectedUEBehaviour_ExtIEs * objPDUExpectedUEBehaviour_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ExpectedUEBehaviour_ExtIEs( SI_XNAP_DT_PDU_ExpectedUEBehaviour_ExtIEs * objPDUExpectedUEBehaviour_ExtIEs);
void __si_xnap_debug_PDU_ExpectedUEBehaviour_ExtIEs( char * key, SI_XNAP_DT_PDU_ExpectedUEBehaviour_ExtIEs * objPDUExpectedUEBehaviour_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ExpectedUEBehaviour_ExtIEs( SI_XNAP_DT_PDU_ExpectedUEBehaviour_ExtIEs ** objPDUExpectedUEBehaviour_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs( SI_XNAP_DT_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs * objPDUExpectedUEMovingTrajectoryItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs( SI_XNAP_DT_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs * objPDUExpectedUEMovingTrajectoryItem_ExtIEs);
void __si_xnap_debug_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs( char * key, SI_XNAP_DT_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs * objPDUExpectedUEMovingTrajectoryItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs( SI_XNAP_DT_PDU_ExpectedUEMovingTrajectoryItem_ExtIEs ** objPDUExpectedUEMovingTrajectoryItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ExplicitFormat_ExtIEs( SI_XNAP_DT_PDU_ExplicitFormat_ExtIEs * objPDUExplicitFormat_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ExplicitFormat_ExtIEs( SI_XNAP_DT_PDU_ExplicitFormat_ExtIEs * objPDUExplicitFormat_ExtIEs);
void __si_xnap_debug_PDU_ExplicitFormat_ExtIEs( char * key, SI_XNAP_DT_PDU_ExplicitFormat_ExtIEs * objPDUExplicitFormat_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ExplicitFormat_ExtIEs( SI_XNAP_DT_PDU_ExplicitFormat_ExtIEs ** objPDUExplicitFormat_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ExtendedRATRestrictionInformation_ExtIEs( SI_XNAP_DT_PDU_ExtendedRATRestrictionInformation_ExtIEs * objPDUExtendedRATRestrictionInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ExtendedRATRestrictionInformation_ExtIEs( SI_XNAP_DT_PDU_ExtendedRATRestrictionInformation_ExtIEs * objPDUExtendedRATRestrictionInformation_ExtIEs);
void __si_xnap_debug_PDU_ExtendedRATRestrictionInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_ExtendedRATRestrictionInformation_ExtIEs * objPDUExtendedRATRestrictionInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ExtendedRATRestrictionInformation_ExtIEs( SI_XNAP_DT_PDU_ExtendedRATRestrictionInformation_ExtIEs ** objPDUExtendedRATRestrictionInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ExtTLA_Item_ExtIEs( SI_XNAP_DT_PDU_ExtTLA_Item_ExtIEs * objPDUExtTLA_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ExtTLA_Item_ExtIEs( SI_XNAP_DT_PDU_ExtTLA_Item_ExtIEs * objPDUExtTLA_Item_ExtIEs);
void __si_xnap_debug_PDU_ExtTLA_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_ExtTLA_Item_ExtIEs * objPDUExtTLA_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ExtTLA_Item_ExtIEs( SI_XNAP_DT_PDU_ExtTLA_Item_ExtIEs ** objPDUExtTLA_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_GTPTLA_Item_ExtIEs( SI_XNAP_DT_PDU_GTPTLA_Item_ExtIEs * objPDUGTPTLA_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_GTPTLA_Item_ExtIEs( SI_XNAP_DT_PDU_GTPTLA_Item_ExtIEs * objPDUGTPTLA_Item_ExtIEs);
void __si_xnap_debug_PDU_GTPTLA_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_GTPTLA_Item_ExtIEs * objPDUGTPTLA_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_GTPTLA_Item_ExtIEs( SI_XNAP_DT_PDU_GTPTLA_Item_ExtIEs ** objPDUGTPTLA_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_F1_TerminatingTopologyBHInformation_ExtIEs( SI_XNAP_DT_PDU_F1_TerminatingTopologyBHInformation_ExtIEs * objPDUF1_TerminatingTopologyBHInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_F1_TerminatingTopologyBHInformation_ExtIEs( SI_XNAP_DT_PDU_F1_TerminatingTopologyBHInformation_ExtIEs * objPDUF1_TerminatingTopologyBHInformation_ExtIEs);
void __si_xnap_debug_PDU_F1_TerminatingTopologyBHInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_F1_TerminatingTopologyBHInformation_ExtIEs * objPDUF1_TerminatingTopologyBHInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_F1_TerminatingTopologyBHInformation_ExtIEs( SI_XNAP_DT_PDU_F1_TerminatingTopologyBHInformation_ExtIEs ** objPDUF1_TerminatingTopologyBHInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_F1TerminatingBHInformation_Item_ExtIEs( SI_XNAP_DT_PDU_F1TerminatingBHInformation_Item_ExtIEs * objPDUF1TerminatingBHInformation_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_F1TerminatingBHInformation_Item_ExtIEs( SI_XNAP_DT_PDU_F1TerminatingBHInformation_Item_ExtIEs * objPDUF1TerminatingBHInformation_Item_ExtIEs);
void __si_xnap_debug_PDU_F1TerminatingBHInformation_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_F1TerminatingBHInformation_Item_ExtIEs * objPDUF1TerminatingBHInformation_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_F1TerminatingBHInformation_Item_ExtIEs( SI_XNAP_DT_PDU_F1TerminatingBHInformation_Item_ExtIEs ** objPDUF1TerminatingBHInformation_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_FiveGProSeAuthorized_ExtIEs( SI_XNAP_DT_PDU_FiveGProSeAuthorized_ExtIEs * objPDUFiveGProSeAuthorized_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_FiveGProSeAuthorized_ExtIEs( SI_XNAP_DT_PDU_FiveGProSeAuthorized_ExtIEs * objPDUFiveGProSeAuthorized_ExtIEs);
void __si_xnap_debug_PDU_FiveGProSeAuthorized_ExtIEs( char * key, SI_XNAP_DT_PDU_FiveGProSeAuthorized_ExtIEs * objPDUFiveGProSeAuthorized_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_FiveGProSeAuthorized_ExtIEs( SI_XNAP_DT_PDU_FiveGProSeAuthorized_ExtIEs ** objPDUFiveGProSeAuthorized_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_FiveGProSePC5QoSParameters_ExtIEs( SI_XNAP_DT_PDU_FiveGProSePC5QoSParameters_ExtIEs * objPDUFiveGProSePC5QoSParameters_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_FiveGProSePC5QoSParameters_ExtIEs( SI_XNAP_DT_PDU_FiveGProSePC5QoSParameters_ExtIEs * objPDUFiveGProSePC5QoSParameters_ExtIEs);
void __si_xnap_debug_PDU_FiveGProSePC5QoSParameters_ExtIEs( char * key, SI_XNAP_DT_PDU_FiveGProSePC5QoSParameters_ExtIEs * objPDUFiveGProSePC5QoSParameters_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_FiveGProSePC5QoSParameters_ExtIEs( SI_XNAP_DT_PDU_FiveGProSePC5QoSParameters_ExtIEs ** objPDUFiveGProSePC5QoSParameters_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_FiveGProSePC5QoSFlowItem_ExtIEs( SI_XNAP_DT_PDU_FiveGProSePC5QoSFlowItem_ExtIEs * objPDUFiveGProSePC5QoSFlowItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_FiveGProSePC5QoSFlowItem_ExtIEs( SI_XNAP_DT_PDU_FiveGProSePC5QoSFlowItem_ExtIEs * objPDUFiveGProSePC5QoSFlowItem_ExtIEs);
void __si_xnap_debug_PDU_FiveGProSePC5QoSFlowItem_ExtIEs( char * key, SI_XNAP_DT_PDU_FiveGProSePC5QoSFlowItem_ExtIEs * objPDUFiveGProSePC5QoSFlowItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_FiveGProSePC5QoSFlowItem_ExtIEs( SI_XNAP_DT_PDU_FiveGProSePC5QoSFlowItem_ExtIEs ** objPDUFiveGProSePC5QoSFlowItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_FiveGProSePC5FlowBitRates_ExtIEs( SI_XNAP_DT_PDU_FiveGProSePC5FlowBitRates_ExtIEs * objPDUFiveGProSePC5FlowBitRates_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_FiveGProSePC5FlowBitRates_ExtIEs( SI_XNAP_DT_PDU_FiveGProSePC5FlowBitRates_ExtIEs * objPDUFiveGProSePC5FlowBitRates_ExtIEs);
void __si_xnap_debug_PDU_FiveGProSePC5FlowBitRates_ExtIEs( char * key, SI_XNAP_DT_PDU_FiveGProSePC5FlowBitRates_ExtIEs * objPDUFiveGProSePC5FlowBitRates_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_FiveGProSePC5FlowBitRates_ExtIEs( SI_XNAP_DT_PDU_FiveGProSePC5FlowBitRates_ExtIEs ** objPDUFiveGProSePC5FlowBitRates_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Flows_Mapped_To_DRB_Item_ExtIEs( SI_XNAP_DT_PDU_Flows_Mapped_To_DRB_Item_ExtIEs * objPDUFlows_Mapped_To_DRB_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Flows_Mapped_To_DRB_Item_ExtIEs( SI_XNAP_DT_PDU_Flows_Mapped_To_DRB_Item_ExtIEs * objPDUFlows_Mapped_To_DRB_Item_ExtIEs);
void __si_xnap_debug_PDU_Flows_Mapped_To_DRB_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_Flows_Mapped_To_DRB_Item_ExtIEs * objPDUFlows_Mapped_To_DRB_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Flows_Mapped_To_DRB_Item_ExtIEs( SI_XNAP_DT_PDU_Flows_Mapped_To_DRB_Item_ExtIEs ** objPDUFlows_Mapped_To_DRB_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_FreqDomainHSNAconfiguration_List_Item_ExtIEs( SI_XNAP_DT_PDU_FreqDomainHSNAconfiguration_List_Item_ExtIEs * objPDUFreqDomainHSNAconfiguration_List_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_FreqDomainHSNAconfiguration_List_Item_ExtIEs( SI_XNAP_DT_PDU_FreqDomainHSNAconfiguration_List_Item_ExtIEs * objPDUFreqDomainHSNAconfiguration_List_Item_ExtIEs);
void __si_xnap_debug_PDU_FreqDomainHSNAconfiguration_List_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_FreqDomainHSNAconfiguration_List_Item_ExtIEs * objPDUFreqDomainHSNAconfiguration_List_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_FreqDomainHSNAconfiguration_List_Item_ExtIEs( SI_XNAP_DT_PDU_FreqDomainHSNAconfiguration_List_Item_ExtIEs ** objPDUFreqDomainHSNAconfiguration_List_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_FreqDomainSlotHSNAconfiguration_List_Item_ExtIEs( SI_XNAP_DT_PDU_FreqDomainSlotHSNAconfiguration_List_Item_ExtIEs * objPDUFreqDomainSlotHSNAconfiguration_List_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_FreqDomainSlotHSNAconfiguration_List_Item_ExtIEs( SI_XNAP_DT_PDU_FreqDomainSlotHSNAconfiguration_List_Item_ExtIEs * objPDUFreqDomainSlotHSNAconfiguration_List_Item_ExtIEs);
void __si_xnap_debug_PDU_FreqDomainSlotHSNAconfiguration_List_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_FreqDomainSlotHSNAconfiguration_List_Item_ExtIEs * objPDUFreqDomainSlotHSNAconfiguration_List_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_FreqDomainSlotHSNAconfiguration_List_Item_ExtIEs( SI_XNAP_DT_PDU_FreqDomainSlotHSNAconfiguration_List_Item_ExtIEs ** objPDUFreqDomainSlotHSNAconfiguration_List_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_GBRQoSFlowInfo_ExtIEs( SI_XNAP_DT_PDU_GBRQoSFlowInfo_ExtIEs * objPDUGBRQoSFlowInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_GBRQoSFlowInfo_ExtIEs( SI_XNAP_DT_PDU_GBRQoSFlowInfo_ExtIEs * objPDUGBRQoSFlowInfo_ExtIEs);
void __si_xnap_debug_PDU_GBRQoSFlowInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_GBRQoSFlowInfo_ExtIEs * objPDUGBRQoSFlowInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_GBRQoSFlowInfo_ExtIEs( SI_XNAP_DT_PDU_GBRQoSFlowInfo_ExtIEs ** objPDUGBRQoSFlowInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_GlobalgNB_ID_ExtIEs( SI_XNAP_DT_PDU_GlobalgNB_ID_ExtIEs * objPDUGlobalgNB_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_GlobalgNB_ID_ExtIEs( SI_XNAP_DT_PDU_GlobalgNB_ID_ExtIEs * objPDUGlobalgNB_ID_ExtIEs);
void __si_xnap_debug_PDU_GlobalgNB_ID_ExtIEs( char * key, SI_XNAP_DT_PDU_GlobalgNB_ID_ExtIEs * objPDUGlobalgNB_ID_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_GlobalgNB_ID_ExtIEs( SI_XNAP_DT_PDU_GlobalgNB_ID_ExtIEs ** objPDUGlobalgNB_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_GNB_DU_Cell_Resource_Configuration_ExtIEs( SI_XNAP_DT_PDU_GNB_DU_Cell_Resource_Configuration_ExtIEs * objPDUGNB_DU_Cell_Resource_Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_GNB_DU_Cell_Resource_Configuration_ExtIEs( SI_XNAP_DT_PDU_GNB_DU_Cell_Resource_Configuration_ExtIEs * objPDUGNB_DU_Cell_Resource_Configuration_ExtIEs);
void __si_xnap_debug_PDU_GNB_DU_Cell_Resource_Configuration_ExtIEs( char * key, SI_XNAP_DT_PDU_GNB_DU_Cell_Resource_Configuration_ExtIEs * objPDUGNB_DU_Cell_Resource_Configuration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_GNB_DU_Cell_Resource_Configuration_ExtIEs( SI_XNAP_DT_PDU_GNB_DU_Cell_Resource_Configuration_ExtIEs ** objPDUGNB_DU_Cell_Resource_Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_GNB_ID_Choice_ExtIEs( SI_XNAP_DT_PDU_GNB_ID_Choice_ExtIEs * objPDUGNB_ID_Choice_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_GNB_ID_Choice_ExtIEs( SI_XNAP_DT_PDU_GNB_ID_Choice_ExtIEs * objPDUGNB_ID_Choice_ExtIEs);
void __si_xnap_debug_PDU_GNB_ID_Choice_ExtIEs( char * key, SI_XNAP_DT_PDU_GNB_ID_Choice_ExtIEs * objPDUGNB_ID_Choice_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_GNB_ID_Choice_ExtIEs( SI_XNAP_DT_PDU_GNB_ID_Choice_ExtIEs ** objPDUGNB_ID_Choice_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_GNB_RadioResourceStatus_ExtIEs( SI_XNAP_DT_PDU_GNB_RadioResourceStatus_ExtIEs * objPDUGNB_RadioResourceStatus_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_GNB_RadioResourceStatus_ExtIEs( SI_XNAP_DT_PDU_GNB_RadioResourceStatus_ExtIEs * objPDUGNB_RadioResourceStatus_ExtIEs);
void __si_xnap_debug_PDU_GNB_RadioResourceStatus_ExtIEs( char * key, SI_XNAP_DT_PDU_GNB_RadioResourceStatus_ExtIEs * objPDUGNB_RadioResourceStatus_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_GNB_RadioResourceStatus_ExtIEs( SI_XNAP_DT_PDU_GNB_RadioResourceStatus_ExtIEs ** objPDUGNB_RadioResourceStatus_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_GlobalCell_ID_ExtIEs( SI_XNAP_DT_PDU_GlobalCell_ID_ExtIEs * objPDUGlobalCell_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_GlobalCell_ID_ExtIEs( SI_XNAP_DT_PDU_GlobalCell_ID_ExtIEs * objPDUGlobalCell_ID_ExtIEs);
void __si_xnap_debug_PDU_GlobalCell_ID_ExtIEs( char * key, SI_XNAP_DT_PDU_GlobalCell_ID_ExtIEs * objPDUGlobalCell_ID_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_GlobalCell_ID_ExtIEs( SI_XNAP_DT_PDU_GlobalCell_ID_ExtIEs ** objPDUGlobalCell_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_GlobaleNB_ID_ExtIEs( SI_XNAP_DT_PDU_GlobaleNB_ID_ExtIEs * objPDUGlobaleNB_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_GlobaleNB_ID_ExtIEs( SI_XNAP_DT_PDU_GlobaleNB_ID_ExtIEs * objPDUGlobaleNB_ID_ExtIEs);
void __si_xnap_debug_PDU_GlobaleNB_ID_ExtIEs( char * key, SI_XNAP_DT_PDU_GlobaleNB_ID_ExtIEs * objPDUGlobaleNB_ID_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_GlobaleNB_ID_ExtIEs( SI_XNAP_DT_PDU_GlobaleNB_ID_ExtIEs ** objPDUGlobaleNB_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ENB_ID_Choice_ExtIEs( SI_XNAP_DT_PDU_ENB_ID_Choice_ExtIEs * objPDUENB_ID_Choice_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ENB_ID_Choice_ExtIEs( SI_XNAP_DT_PDU_ENB_ID_Choice_ExtIEs * objPDUENB_ID_Choice_ExtIEs);
void __si_xnap_debug_PDU_ENB_ID_Choice_ExtIEs( char * key, SI_XNAP_DT_PDU_ENB_ID_Choice_ExtIEs * objPDUENB_ID_Choice_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ENB_ID_Choice_ExtIEs( SI_XNAP_DT_PDU_ENB_ID_Choice_ExtIEs ** objPDUENB_ID_Choice_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_GlobalNG_RANCell_ID_ExtIEs( SI_XNAP_DT_PDU_GlobalNG_RANCell_ID_ExtIEs * objPDUGlobalNG_RANCell_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_GlobalNG_RANCell_ID_ExtIEs( SI_XNAP_DT_PDU_GlobalNG_RANCell_ID_ExtIEs * objPDUGlobalNG_RANCell_ID_ExtIEs);
void __si_xnap_debug_PDU_GlobalNG_RANCell_ID_ExtIEs( char * key, SI_XNAP_DT_PDU_GlobalNG_RANCell_ID_ExtIEs * objPDUGlobalNG_RANCell_ID_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_GlobalNG_RANCell_ID_ExtIEs( SI_XNAP_DT_PDU_GlobalNG_RANCell_ID_ExtIEs ** objPDUGlobalNG_RANCell_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_GlobalNG_RANNode_ID_ExtIEs( SI_XNAP_DT_PDU_GlobalNG_RANNode_ID_ExtIEs * objPDUGlobalNG_RANNode_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_GlobalNG_RANNode_ID_ExtIEs( SI_XNAP_DT_PDU_GlobalNG_RANNode_ID_ExtIEs * objPDUGlobalNG_RANNode_ID_ExtIEs);
void __si_xnap_debug_PDU_GlobalNG_RANNode_ID_ExtIEs( char * key, SI_XNAP_DT_PDU_GlobalNG_RANNode_ID_ExtIEs * objPDUGlobalNG_RANNode_ID_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_GlobalNG_RANNode_ID_ExtIEs( SI_XNAP_DT_PDU_GlobalNG_RANNode_ID_ExtIEs ** objPDUGlobalNG_RANNode_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_GTPtunnelTransportLayerInformation_ExtIEs( SI_XNAP_DT_PDU_GTPtunnelTransportLayerInformation_ExtIEs * objPDUGTPtunnelTransportLayerInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_GTPtunnelTransportLayerInformation_ExtIEs( SI_XNAP_DT_PDU_GTPtunnelTransportLayerInformation_ExtIEs * objPDUGTPtunnelTransportLayerInformation_ExtIEs);
void __si_xnap_debug_PDU_GTPtunnelTransportLayerInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_GTPtunnelTransportLayerInformation_ExtIEs * objPDUGTPtunnelTransportLayerInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_GTPtunnelTransportLayerInformation_ExtIEs( SI_XNAP_DT_PDU_GTPtunnelTransportLayerInformation_ExtIEs ** objPDUGTPtunnelTransportLayerInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_GUAMI_ExtIEs( SI_XNAP_DT_PDU_GUAMI_ExtIEs * objPDUGUAMI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_GUAMI_ExtIEs( SI_XNAP_DT_PDU_GUAMI_ExtIEs * objPDUGUAMI_ExtIEs);
void __si_xnap_debug_PDU_GUAMI_ExtIEs( char * key, SI_XNAP_DT_PDU_GUAMI_ExtIEs * objPDUGUAMI_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_GUAMI_ExtIEs( SI_XNAP_DT_PDU_GUAMI_ExtIEs ** objPDUGUAMI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_HSNASlotConfigItem_ExtIEs( SI_XNAP_DT_PDU_HSNASlotConfigItem_ExtIEs * objPDUHSNASlotConfigItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_HSNASlotConfigItem_ExtIEs( SI_XNAP_DT_PDU_HSNASlotConfigItem_ExtIEs * objPDUHSNASlotConfigItem_ExtIEs);
void __si_xnap_debug_PDU_HSNASlotConfigItem_ExtIEs( char * key, SI_XNAP_DT_PDU_HSNASlotConfigItem_ExtIEs * objPDUHSNASlotConfigItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_HSNASlotConfigItem_ExtIEs( SI_XNAP_DT_PDU_HSNASlotConfigItem_ExtIEs ** objPDUHSNASlotConfigItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_IABCellInformation_ExtIEs( SI_XNAP_DT_PDU_IABCellInformation_ExtIEs * objPDUIABCellInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_IABCellInformation_ExtIEs( SI_XNAP_DT_PDU_IABCellInformation_ExtIEs * objPDUIABCellInformation_ExtIEs);
void __si_xnap_debug_PDU_IABCellInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_IABCellInformation_ExtIEs * objPDUIABCellInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_IABCellInformation_ExtIEs( SI_XNAP_DT_PDU_IABCellInformation_ExtIEs ** objPDUIABCellInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_IAB_DU_Cell_Resource_Configuration_Mode_Info_ExtIEs( SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_Mode_Info_ExtIEs * objPDUIAB_DU_Cell_Resource_Configuration_Mode_Info_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_IAB_DU_Cell_Resource_Configuration_Mode_Info_ExtIEs( SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_Mode_Info_ExtIEs * objPDUIAB_DU_Cell_Resource_Configuration_Mode_Info_ExtIEs);
void __si_xnap_debug_PDU_IAB_DU_Cell_Resource_Configuration_Mode_Info_ExtIEs( char * key, SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_Mode_Info_ExtIEs * objPDUIAB_DU_Cell_Resource_Configuration_Mode_Info_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_IAB_DU_Cell_Resource_Configuration_Mode_Info_ExtIEs( SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_Mode_Info_ExtIEs ** objPDUIAB_DU_Cell_Resource_Configuration_Mode_Info_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_IAB_DU_Cell_Resource_Configuration_FDD_Info_ExtIEs( SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_FDD_Info_ExtIEs * objPDUIAB_DU_Cell_Resource_Configuration_FDD_Info_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_IAB_DU_Cell_Resource_Configuration_FDD_Info_ExtIEs( SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_FDD_Info_ExtIEs * objPDUIAB_DU_Cell_Resource_Configuration_FDD_Info_ExtIEs);
void __si_xnap_debug_PDU_IAB_DU_Cell_Resource_Configuration_FDD_Info_ExtIEs( char * key, SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_FDD_Info_ExtIEs * objPDUIAB_DU_Cell_Resource_Configuration_FDD_Info_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_IAB_DU_Cell_Resource_Configuration_FDD_Info_ExtIEs( SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_FDD_Info_ExtIEs ** objPDUIAB_DU_Cell_Resource_Configuration_FDD_Info_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_IAB_DU_Cell_Resource_Configuration_TDD_Info_ExtIEs( SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_TDD_Info_ExtIEs * objPDUIAB_DU_Cell_Resource_Configuration_TDD_Info_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_IAB_DU_Cell_Resource_Configuration_TDD_Info_ExtIEs( SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_TDD_Info_ExtIEs * objPDUIAB_DU_Cell_Resource_Configuration_TDD_Info_ExtIEs);
void __si_xnap_debug_PDU_IAB_DU_Cell_Resource_Configuration_TDD_Info_ExtIEs( char * key, SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_TDD_Info_ExtIEs * objPDUIAB_DU_Cell_Resource_Configuration_TDD_Info_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_IAB_DU_Cell_Resource_Configuration_TDD_Info_ExtIEs( SI_XNAP_DT_PDU_IAB_DU_Cell_Resource_Configuration_TDD_Info_ExtIEs ** objPDUIAB_DU_Cell_Resource_Configuration_TDD_Info_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_IAB_MT_Cell_List_Item_ExtIEs( SI_XNAP_DT_PDU_IAB_MT_Cell_List_Item_ExtIEs * objPDUIAB_MT_Cell_List_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_IAB_MT_Cell_List_Item_ExtIEs( SI_XNAP_DT_PDU_IAB_MT_Cell_List_Item_ExtIEs * objPDUIAB_MT_Cell_List_Item_ExtIEs);
void __si_xnap_debug_PDU_IAB_MT_Cell_List_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_IAB_MT_Cell_List_Item_ExtIEs * objPDUIAB_MT_Cell_List_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_IAB_MT_Cell_List_Item_ExtIEs( SI_XNAP_DT_PDU_IAB_MT_Cell_List_Item_ExtIEs ** objPDUIAB_MT_Cell_List_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_IAB_QoS_Mapping_Information_ExtIEs( SI_XNAP_DT_PDU_IAB_QoS_Mapping_Information_ExtIEs * objPDUIAB_QoS_Mapping_Information_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_IAB_QoS_Mapping_Information_ExtIEs( SI_XNAP_DT_PDU_IAB_QoS_Mapping_Information_ExtIEs * objPDUIAB_QoS_Mapping_Information_ExtIEs);
void __si_xnap_debug_PDU_IAB_QoS_Mapping_Information_ExtIEs( char * key, SI_XNAP_DT_PDU_IAB_QoS_Mapping_Information_ExtIEs * objPDUIAB_QoS_Mapping_Information_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_IAB_QoS_Mapping_Information_ExtIEs( SI_XNAP_DT_PDU_IAB_QoS_Mapping_Information_ExtIEs ** objPDUIAB_QoS_Mapping_Information_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_IAB_STC_Info_ExtIEs( SI_XNAP_DT_PDU_IAB_STC_Info_ExtIEs * objPDUIAB_STC_Info_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_IAB_STC_Info_ExtIEs( SI_XNAP_DT_PDU_IAB_STC_Info_ExtIEs * objPDUIAB_STC_Info_ExtIEs);
void __si_xnap_debug_PDU_IAB_STC_Info_ExtIEs( char * key, SI_XNAP_DT_PDU_IAB_STC_Info_ExtIEs * objPDUIAB_STC_Info_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_IAB_STC_Info_ExtIEs( SI_XNAP_DT_PDU_IAB_STC_Info_ExtIEs ** objPDUIAB_STC_Info_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_IAB_STC_Info_Item_ExtIEs( SI_XNAP_DT_PDU_IAB_STC_Info_Item_ExtIEs * objPDUIAB_STC_Info_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_IAB_STC_Info_Item_ExtIEs( SI_XNAP_DT_PDU_IAB_STC_Info_Item_ExtIEs * objPDUIAB_STC_Info_Item_ExtIEs);
void __si_xnap_debug_PDU_IAB_STC_Info_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_IAB_STC_Info_Item_ExtIEs * objPDUIAB_STC_Info_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_IAB_STC_Info_Item_ExtIEs( SI_XNAP_DT_PDU_IAB_STC_Info_Item_ExtIEs ** objPDUIAB_STC_Info_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_IAB_TNL_Address_Request_ExtIEs( SI_XNAP_DT_PDU_IAB_TNL_Address_Request_ExtIEs * objPDUIAB_TNL_Address_Request_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_IAB_TNL_Address_Request_ExtIEs( SI_XNAP_DT_PDU_IAB_TNL_Address_Request_ExtIEs * objPDUIAB_TNL_Address_Request_ExtIEs);
void __si_xnap_debug_PDU_IAB_TNL_Address_Request_ExtIEs( char * key, SI_XNAP_DT_PDU_IAB_TNL_Address_Request_ExtIEs * objPDUIAB_TNL_Address_Request_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_IAB_TNL_Address_Request_ExtIEs( SI_XNAP_DT_PDU_IAB_TNL_Address_Request_ExtIEs ** objPDUIAB_TNL_Address_Request_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_IABIPv6RequestType_ExtIEs( SI_XNAP_DT_PDU_IABIPv6RequestType_ExtIEs * objPDUIABIPv6RequestType_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_IABIPv6RequestType_ExtIEs( SI_XNAP_DT_PDU_IABIPv6RequestType_ExtIEs * objPDUIABIPv6RequestType_ExtIEs);
void __si_xnap_debug_PDU_IABIPv6RequestType_ExtIEs( char * key, SI_XNAP_DT_PDU_IABIPv6RequestType_ExtIEs * objPDUIABIPv6RequestType_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_IABIPv6RequestType_ExtIEs( SI_XNAP_DT_PDU_IABIPv6RequestType_ExtIEs ** objPDUIABIPv6RequestType_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_IAB_TNL_Address_Response_ExtIEs( SI_XNAP_DT_PDU_IAB_TNL_Address_Response_ExtIEs * objPDUIAB_TNL_Address_Response_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_IAB_TNL_Address_Response_ExtIEs( SI_XNAP_DT_PDU_IAB_TNL_Address_Response_ExtIEs * objPDUIAB_TNL_Address_Response_ExtIEs);
void __si_xnap_debug_PDU_IAB_TNL_Address_Response_ExtIEs( char * key, SI_XNAP_DT_PDU_IAB_TNL_Address_Response_ExtIEs * objPDUIAB_TNL_Address_Response_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_IAB_TNL_Address_Response_ExtIEs( SI_XNAP_DT_PDU_IAB_TNL_Address_Response_ExtIEs ** objPDUIAB_TNL_Address_Response_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_IABAllocatedTNLAddress_Item_ExtIEs( SI_XNAP_DT_PDU_IABAllocatedTNLAddress_Item_ExtIEs * objPDUIABAllocatedTNLAddress_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_IABAllocatedTNLAddress_Item_ExtIEs( SI_XNAP_DT_PDU_IABAllocatedTNLAddress_Item_ExtIEs * objPDUIABAllocatedTNLAddress_Item_ExtIEs);
void __si_xnap_debug_PDU_IABAllocatedTNLAddress_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_IABAllocatedTNLAddress_Item_ExtIEs * objPDUIABAllocatedTNLAddress_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_IABAllocatedTNLAddress_Item_ExtIEs( SI_XNAP_DT_PDU_IABAllocatedTNLAddress_Item_ExtIEs ** objPDUIABAllocatedTNLAddress_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_IABTNLAddress_ExtIEs( SI_XNAP_DT_PDU_IABTNLAddress_ExtIEs * objPDUIABTNLAddress_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_IABTNLAddress_ExtIEs( SI_XNAP_DT_PDU_IABTNLAddress_ExtIEs * objPDUIABTNLAddress_ExtIEs);
void __si_xnap_debug_PDU_IABTNLAddress_ExtIEs( char * key, SI_XNAP_DT_PDU_IABTNLAddress_ExtIEs * objPDUIABTNLAddress_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_IABTNLAddress_ExtIEs( SI_XNAP_DT_PDU_IABTNLAddress_ExtIEs ** objPDUIABTNLAddress_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_IABTNLAddressesRequested_ExtIEs( SI_XNAP_DT_PDU_IABTNLAddressesRequested_ExtIEs * objPDUIABTNLAddressesRequested_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_IABTNLAddressesRequested_ExtIEs( SI_XNAP_DT_PDU_IABTNLAddressesRequested_ExtIEs * objPDUIABTNLAddressesRequested_ExtIEs);
void __si_xnap_debug_PDU_IABTNLAddressesRequested_ExtIEs( char * key, SI_XNAP_DT_PDU_IABTNLAddressesRequested_ExtIEs * objPDUIABTNLAddressesRequested_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_IABTNLAddressesRequested_ExtIEs( SI_XNAP_DT_PDU_IABTNLAddressesRequested_ExtIEs ** objPDUIABTNLAddressesRequested_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_IABTNLAddressToRemove_Item_ExtIEs( SI_XNAP_DT_PDU_IABTNLAddressToRemove_Item_ExtIEs * objPDUIABTNLAddressToRemove_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_IABTNLAddressToRemove_Item_ExtIEs( SI_XNAP_DT_PDU_IABTNLAddressToRemove_Item_ExtIEs * objPDUIABTNLAddressToRemove_Item_ExtIEs);
void __si_xnap_debug_PDU_IABTNLAddressToRemove_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_IABTNLAddressToRemove_Item_ExtIEs * objPDUIABTNLAddressToRemove_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_IABTNLAddressToRemove_Item_ExtIEs( SI_XNAP_DT_PDU_IABTNLAddressToRemove_Item_ExtIEs ** objPDUIABTNLAddressToRemove_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_IABTNLAddress_ItemExtIEs( SI_XNAP_DT_PDU_IABTNLAddress_ItemExtIEs * objPDUIABTNLAddress_ItemExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_IABTNLAddress_ItemExtIEs( SI_XNAP_DT_PDU_IABTNLAddress_ItemExtIEs * objPDUIABTNLAddress_ItemExtIEs);
void __si_xnap_debug_PDU_IABTNLAddress_ItemExtIEs( char * key, SI_XNAP_DT_PDU_IABTNLAddress_ItemExtIEs * objPDUIABTNLAddress_ItemExtIEs, int lvl);
int __si_xnap_Decode_PDU_IABTNLAddress_ItemExtIEs( SI_XNAP_DT_PDU_IABTNLAddress_ItemExtIEs ** objPDUIABTNLAddress_ItemExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ImmediateMDT_NR_ExtIEs( SI_XNAP_DT_PDU_ImmediateMDT_NR_ExtIEs * objPDUImmediateMDT_NR_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ImmediateMDT_NR_ExtIEs( SI_XNAP_DT_PDU_ImmediateMDT_NR_ExtIEs * objPDUImmediateMDT_NR_ExtIEs);
void __si_xnap_debug_PDU_ImmediateMDT_NR_ExtIEs( char * key, SI_XNAP_DT_PDU_ImmediateMDT_NR_ExtIEs * objPDUImmediateMDT_NR_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ImmediateMDT_NR_ExtIEs( SI_XNAP_DT_PDU_ImmediateMDT_NR_ExtIEs ** objPDUImmediateMDT_NR_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ImplicitFormat_ExtIEs( SI_XNAP_DT_PDU_ImplicitFormat_ExtIEs * objPDUImplicitFormat_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ImplicitFormat_ExtIEs( SI_XNAP_DT_PDU_ImplicitFormat_ExtIEs * objPDUImplicitFormat_ExtIEs);
void __si_xnap_debug_PDU_ImplicitFormat_ExtIEs( char * key, SI_XNAP_DT_PDU_ImplicitFormat_ExtIEs * objPDUImplicitFormat_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ImplicitFormat_ExtIEs( SI_XNAP_DT_PDU_ImplicitFormat_ExtIEs ** objPDUImplicitFormat_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_InitiatingCondition_FailureIndication_ExtIEs( SI_XNAP_DT_PDU_InitiatingCondition_FailureIndication_ExtIEs * objPDUInitiatingCondition_FailureIndication_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_InitiatingCondition_FailureIndication_ExtIEs( SI_XNAP_DT_PDU_InitiatingCondition_FailureIndication_ExtIEs * objPDUInitiatingCondition_FailureIndication_ExtIEs);
void __si_xnap_debug_PDU_InitiatingCondition_FailureIndication_ExtIEs( char * key, SI_XNAP_DT_PDU_InitiatingCondition_FailureIndication_ExtIEs * objPDUInitiatingCondition_FailureIndication_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_InitiatingCondition_FailureIndication_ExtIEs( SI_XNAP_DT_PDU_InitiatingCondition_FailureIndication_ExtIEs ** objPDUInitiatingCondition_FailureIndication_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_IntendedTDD_DL_ULConfiguration_NR_ExtIEs( SI_XNAP_DT_PDU_IntendedTDD_DL_ULConfiguration_NR_ExtIEs * objPDUIntendedTDD_DL_ULConfiguration_NR_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_IntendedTDD_DL_ULConfiguration_NR_ExtIEs( SI_XNAP_DT_PDU_IntendedTDD_DL_ULConfiguration_NR_ExtIEs * objPDUIntendedTDD_DL_ULConfiguration_NR_ExtIEs);
void __si_xnap_debug_PDU_IntendedTDD_DL_ULConfiguration_NR_ExtIEs( char * key, SI_XNAP_DT_PDU_IntendedTDD_DL_ULConfiguration_NR_ExtIEs * objPDUIntendedTDD_DL_ULConfiguration_NR_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_IntendedTDD_DL_ULConfiguration_NR_ExtIEs( SI_XNAP_DT_PDU_IntendedTDD_DL_ULConfiguration_NR_ExtIEs ** objPDUIntendedTDD_DL_ULConfiguration_NR_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_I_RNTI_ExtIEs( SI_XNAP_DT_PDU_I_RNTI_ExtIEs * objPDUI_RNTI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_I_RNTI_ExtIEs( SI_XNAP_DT_PDU_I_RNTI_ExtIEs * objPDUI_RNTI_ExtIEs);
void __si_xnap_debug_PDU_I_RNTI_ExtIEs( char * key, SI_XNAP_DT_PDU_I_RNTI_ExtIEs * objPDUI_RNTI_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_I_RNTI_ExtIEs( SI_XNAP_DT_PDU_I_RNTI_ExtIEs ** objPDUI_RNTI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Local_NG_RAN_Node_Identifier_ExtIEs( SI_XNAP_DT_PDU_Local_NG_RAN_Node_Identifier_ExtIEs * objPDULocal_NG_RAN_Node_Identifier_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Local_NG_RAN_Node_Identifier_ExtIEs( SI_XNAP_DT_PDU_Local_NG_RAN_Node_Identifier_ExtIEs * objPDULocal_NG_RAN_Node_Identifier_ExtIEs);
void __si_xnap_debug_PDU_Local_NG_RAN_Node_Identifier_ExtIEs( char * key, SI_XNAP_DT_PDU_Local_NG_RAN_Node_Identifier_ExtIEs * objPDULocal_NG_RAN_Node_Identifier_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Local_NG_RAN_Node_Identifier_ExtIEs( SI_XNAP_DT_PDU_Local_NG_RAN_Node_Identifier_ExtIEs ** objPDULocal_NG_RAN_Node_Identifier_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Full_and_Short_I_RNTI_Profile_List_ExtIEs( SI_XNAP_DT_PDU_Full_and_Short_I_RNTI_Profile_List_ExtIEs * objPDUFull_and_Short_I_RNTI_Profile_List_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Full_and_Short_I_RNTI_Profile_List_ExtIEs( SI_XNAP_DT_PDU_Full_and_Short_I_RNTI_Profile_List_ExtIEs * objPDUFull_and_Short_I_RNTI_Profile_List_ExtIEs);
void __si_xnap_debug_PDU_Full_and_Short_I_RNTI_Profile_List_ExtIEs( char * key, SI_XNAP_DT_PDU_Full_and_Short_I_RNTI_Profile_List_ExtIEs * objPDUFull_and_Short_I_RNTI_Profile_List_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Full_and_Short_I_RNTI_Profile_List_ExtIEs( SI_XNAP_DT_PDU_Full_and_Short_I_RNTI_Profile_List_ExtIEs ** objPDUFull_and_Short_I_RNTI_Profile_List_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Full_I_RNTI_Profile_List_ExtIEs( SI_XNAP_DT_PDU_Full_I_RNTI_Profile_List_ExtIEs * objPDUFull_I_RNTI_Profile_List_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Full_I_RNTI_Profile_List_ExtIEs( SI_XNAP_DT_PDU_Full_I_RNTI_Profile_List_ExtIEs * objPDUFull_I_RNTI_Profile_List_ExtIEs);
void __si_xnap_debug_PDU_Full_I_RNTI_Profile_List_ExtIEs( char * key, SI_XNAP_DT_PDU_Full_I_RNTI_Profile_List_ExtIEs * objPDUFull_I_RNTI_Profile_List_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Full_I_RNTI_Profile_List_ExtIEs( SI_XNAP_DT_PDU_Full_I_RNTI_Profile_List_ExtIEs ** objPDUFull_I_RNTI_Profile_List_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Short_I_RNTI_Profile_List_ExtIEs( SI_XNAP_DT_PDU_Short_I_RNTI_Profile_List_ExtIEs * objPDUShort_I_RNTI_Profile_List_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Short_I_RNTI_Profile_List_ExtIEs( SI_XNAP_DT_PDU_Short_I_RNTI_Profile_List_ExtIEs * objPDUShort_I_RNTI_Profile_List_ExtIEs);
void __si_xnap_debug_PDU_Short_I_RNTI_Profile_List_ExtIEs( char * key, SI_XNAP_DT_PDU_Short_I_RNTI_Profile_List_ExtIEs * objPDUShort_I_RNTI_Profile_List_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Short_I_RNTI_Profile_List_ExtIEs( SI_XNAP_DT_PDU_Short_I_RNTI_Profile_List_ExtIEs ** objPDUShort_I_RNTI_Profile_List_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_LastVisitedCell_Item_ExtIEs( SI_XNAP_DT_PDU_LastVisitedCell_Item_ExtIEs * objPDULastVisitedCell_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_LastVisitedCell_Item_ExtIEs( SI_XNAP_DT_PDU_LastVisitedCell_Item_ExtIEs * objPDULastVisitedCell_Item_ExtIEs);
void __si_xnap_debug_PDU_LastVisitedCell_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_LastVisitedCell_Item_ExtIEs * objPDULastVisitedCell_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_LastVisitedCell_Item_ExtIEs( SI_XNAP_DT_PDU_LastVisitedCell_Item_ExtIEs ** objPDULastVisitedCell_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_LastVisitedPSCellList_Item_ExtIEs( SI_XNAP_DT_PDU_LastVisitedPSCellList_Item_ExtIEs * objPDULastVisitedPSCellList_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_LastVisitedPSCellList_Item_ExtIEs( SI_XNAP_DT_PDU_LastVisitedPSCellList_Item_ExtIEs * objPDULastVisitedPSCellList_Item_ExtIEs);
void __si_xnap_debug_PDU_LastVisitedPSCellList_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_LastVisitedPSCellList_Item_ExtIEs * objPDULastVisitedPSCellList_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_LastVisitedPSCellList_Item_ExtIEs( SI_XNAP_DT_PDU_LastVisitedPSCellList_Item_ExtIEs ** objPDULastVisitedPSCellList_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SCGUEHistoryInformation_ExtIEs( SI_XNAP_DT_PDU_SCGUEHistoryInformation_ExtIEs * objPDUSCGUEHistoryInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SCGUEHistoryInformation_ExtIEs( SI_XNAP_DT_PDU_SCGUEHistoryInformation_ExtIEs * objPDUSCGUEHistoryInformation_ExtIEs);
void __si_xnap_debug_PDU_SCGUEHistoryInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_SCGUEHistoryInformation_ExtIEs * objPDUSCGUEHistoryInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SCGUEHistoryInformation_ExtIEs( SI_XNAP_DT_PDU_SCGUEHistoryInformation_ExtIEs ** objPDUSCGUEHistoryInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CellsinAoI_Item_ExtIEs( SI_XNAP_DT_PDU_CellsinAoI_Item_ExtIEs * objPDUCellsinAoI_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CellsinAoI_Item_ExtIEs( SI_XNAP_DT_PDU_CellsinAoI_Item_ExtIEs * objPDUCellsinAoI_Item_ExtIEs);
void __si_xnap_debug_PDU_CellsinAoI_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_CellsinAoI_Item_ExtIEs * objPDUCellsinAoI_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CellsinAoI_Item_ExtIEs( SI_XNAP_DT_PDU_CellsinAoI_Item_ExtIEs ** objPDUCellsinAoI_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_GlobalNG_RANNodesinAoI_Item_ExtIEs( SI_XNAP_DT_PDU_GlobalNG_RANNodesinAoI_Item_ExtIEs * objPDUGlobalNG_RANNodesinAoI_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_GlobalNG_RANNodesinAoI_Item_ExtIEs( SI_XNAP_DT_PDU_GlobalNG_RANNodesinAoI_Item_ExtIEs * objPDUGlobalNG_RANNodesinAoI_Item_ExtIEs);
void __si_xnap_debug_PDU_GlobalNG_RANNodesinAoI_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_GlobalNG_RANNodesinAoI_Item_ExtIEs * objPDUGlobalNG_RANNodesinAoI_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_GlobalNG_RANNodesinAoI_Item_ExtIEs( SI_XNAP_DT_PDU_GlobalNG_RANNodesinAoI_Item_ExtIEs ** objPDUGlobalNG_RANNodesinAoI_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TAIsinAoI_Item_ExtIEs( SI_XNAP_DT_PDU_TAIsinAoI_Item_ExtIEs * objPDUTAIsinAoI_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TAIsinAoI_Item_ExtIEs( SI_XNAP_DT_PDU_TAIsinAoI_Item_ExtIEs * objPDUTAIsinAoI_Item_ExtIEs);
void __si_xnap_debug_PDU_TAIsinAoI_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TAIsinAoI_Item_ExtIEs * objPDUTAIsinAoI_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TAIsinAoI_Item_ExtIEs( SI_XNAP_DT_PDU_TAIsinAoI_Item_ExtIEs ** objPDUTAIsinAoI_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_LocationReportingInformation_ExtIEs( SI_XNAP_DT_PDU_LocationReportingInformation_ExtIEs * objPDULocationReportingInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_LocationReportingInformation_ExtIEs( SI_XNAP_DT_PDU_LocationReportingInformation_ExtIEs * objPDULocationReportingInformation_ExtIEs);
void __si_xnap_debug_PDU_LocationReportingInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_LocationReportingInformation_ExtIEs * objPDULocationReportingInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_LocationReportingInformation_ExtIEs( SI_XNAP_DT_PDU_LocationReportingInformation_ExtIEs ** objPDULocationReportingInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_LoggedEventTriggeredConfig_ExtIEs( SI_XNAP_DT_PDU_LoggedEventTriggeredConfig_ExtIEs * objPDULoggedEventTriggeredConfig_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_LoggedEventTriggeredConfig_ExtIEs( SI_XNAP_DT_PDU_LoggedEventTriggeredConfig_ExtIEs * objPDULoggedEventTriggeredConfig_ExtIEs);
void __si_xnap_debug_PDU_LoggedEventTriggeredConfig_ExtIEs( char * key, SI_XNAP_DT_PDU_LoggedEventTriggeredConfig_ExtIEs * objPDULoggedEventTriggeredConfig_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_LoggedEventTriggeredConfig_ExtIEs( SI_XNAP_DT_PDU_LoggedEventTriggeredConfig_ExtIEs ** objPDULoggedEventTriggeredConfig_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_LoggedMDT_NR_ExtIEs( SI_XNAP_DT_PDU_LoggedMDT_NR_ExtIEs * objPDULoggedMDT_NR_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_LoggedMDT_NR_ExtIEs( SI_XNAP_DT_PDU_LoggedMDT_NR_ExtIEs * objPDULoggedMDT_NR_ExtIEs);
void __si_xnap_debug_PDU_LoggedMDT_NR_ExtIEs( char * key, SI_XNAP_DT_PDU_LoggedMDT_NR_ExtIEs * objPDULoggedMDT_NR_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_LoggedMDT_NR_ExtIEs( SI_XNAP_DT_PDU_LoggedMDT_NR_ExtIEs ** objPDULoggedMDT_NR_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_LTEA2XServicesAuthorized_ExtIEs( SI_XNAP_DT_PDU_LTEA2XServicesAuthorized_ExtIEs * objPDULTEA2XServicesAuthorized_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_LTEA2XServicesAuthorized_ExtIEs( SI_XNAP_DT_PDU_LTEA2XServicesAuthorized_ExtIEs * objPDULTEA2XServicesAuthorized_ExtIEs);
void __si_xnap_debug_PDU_LTEA2XServicesAuthorized_ExtIEs( char * key, SI_XNAP_DT_PDU_LTEA2XServicesAuthorized_ExtIEs * objPDULTEA2XServicesAuthorized_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_LTEA2XServicesAuthorized_ExtIEs( SI_XNAP_DT_PDU_LTEA2XServicesAuthorized_ExtIEs ** objPDULTEA2XServicesAuthorized_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_LTEV2XServicesAuthorized_ExtIEs( SI_XNAP_DT_PDU_LTEV2XServicesAuthorized_ExtIEs * objPDULTEV2XServicesAuthorized_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_LTEV2XServicesAuthorized_ExtIEs( SI_XNAP_DT_PDU_LTEV2XServicesAuthorized_ExtIEs * objPDULTEV2XServicesAuthorized_ExtIEs);
void __si_xnap_debug_PDU_LTEV2XServicesAuthorized_ExtIEs( char * key, SI_XNAP_DT_PDU_LTEV2XServicesAuthorized_ExtIEs * objPDULTEV2XServicesAuthorized_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_LTEV2XServicesAuthorized_ExtIEs( SI_XNAP_DT_PDU_LTEV2XServicesAuthorized_ExtIEs ** objPDULTEV2XServicesAuthorized_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_LTEUESidelinkAggregateMaximumBitRate_ExtIEs( SI_XNAP_DT_PDU_LTEUESidelinkAggregateMaximumBitRate_ExtIEs * objPDULTEUESidelinkAggregateMaximumBitRate_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_LTEUESidelinkAggregateMaximumBitRate_ExtIEs( SI_XNAP_DT_PDU_LTEUESidelinkAggregateMaximumBitRate_ExtIEs * objPDULTEUESidelinkAggregateMaximumBitRate_ExtIEs);
void __si_xnap_debug_PDU_LTEUESidelinkAggregateMaximumBitRate_ExtIEs( char * key, SI_XNAP_DT_PDU_LTEUESidelinkAggregateMaximumBitRate_ExtIEs * objPDULTEUESidelinkAggregateMaximumBitRate_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_LTEUESidelinkAggregateMaximumBitRate_ExtIEs( SI_XNAP_DT_PDU_LTEUESidelinkAggregateMaximumBitRate_ExtIEs ** objPDULTEUESidelinkAggregateMaximumBitRate_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MDTAlignmentInfo_ExtIEs( SI_XNAP_DT_PDU_MDTAlignmentInfo_ExtIEs * objPDUMDTAlignmentInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MDTAlignmentInfo_ExtIEs( SI_XNAP_DT_PDU_MDTAlignmentInfo_ExtIEs * objPDUMDTAlignmentInfo_ExtIEs);
void __si_xnap_debug_PDU_MDTAlignmentInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_MDTAlignmentInfo_ExtIEs * objPDUMDTAlignmentInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MDTAlignmentInfo_ExtIEs( SI_XNAP_DT_PDU_MDTAlignmentInfo_ExtIEs ** objPDUMDTAlignmentInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_M1Configuration_ExtIEs( SI_XNAP_DT_PDU_M1Configuration_ExtIEs * objPDUM1Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_M1Configuration_ExtIEs( SI_XNAP_DT_PDU_M1Configuration_ExtIEs * objPDUM1Configuration_ExtIEs);
void __si_xnap_debug_PDU_M1Configuration_ExtIEs( char * key, SI_XNAP_DT_PDU_M1Configuration_ExtIEs * objPDUM1Configuration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_M1Configuration_ExtIEs( SI_XNAP_DT_PDU_M1Configuration_ExtIEs ** objPDUM1Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_M1PeriodicReporting_ExtIEs( SI_XNAP_DT_PDU_M1PeriodicReporting_ExtIEs * objPDUM1PeriodicReporting_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_M1PeriodicReporting_ExtIEs( SI_XNAP_DT_PDU_M1PeriodicReporting_ExtIEs * objPDUM1PeriodicReporting_ExtIEs);
void __si_xnap_debug_PDU_M1PeriodicReporting_ExtIEs( char * key, SI_XNAP_DT_PDU_M1PeriodicReporting_ExtIEs * objPDUM1PeriodicReporting_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_M1PeriodicReporting_ExtIEs( SI_XNAP_DT_PDU_M1PeriodicReporting_ExtIEs ** objPDUM1PeriodicReporting_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_M1ThresholdEventA2_ExtIEs( SI_XNAP_DT_PDU_M1ThresholdEventA2_ExtIEs * objPDUM1ThresholdEventA2_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_M1ThresholdEventA2_ExtIEs( SI_XNAP_DT_PDU_M1ThresholdEventA2_ExtIEs * objPDUM1ThresholdEventA2_ExtIEs);
void __si_xnap_debug_PDU_M1ThresholdEventA2_ExtIEs( char * key, SI_XNAP_DT_PDU_M1ThresholdEventA2_ExtIEs * objPDUM1ThresholdEventA2_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_M1ThresholdEventA2_ExtIEs( SI_XNAP_DT_PDU_M1ThresholdEventA2_ExtIEs ** objPDUM1ThresholdEventA2_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_M4Configuration_ExtIEs( SI_XNAP_DT_PDU_M4Configuration_ExtIEs * objPDUM4Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_M4Configuration_ExtIEs( SI_XNAP_DT_PDU_M4Configuration_ExtIEs * objPDUM4Configuration_ExtIEs);
void __si_xnap_debug_PDU_M4Configuration_ExtIEs( char * key, SI_XNAP_DT_PDU_M4Configuration_ExtIEs * objPDUM4Configuration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_M4Configuration_ExtIEs( SI_XNAP_DT_PDU_M4Configuration_ExtIEs ** objPDUM4Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_M5Configuration_ExtIEs( SI_XNAP_DT_PDU_M5Configuration_ExtIEs * objPDUM5Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_M5Configuration_ExtIEs( SI_XNAP_DT_PDU_M5Configuration_ExtIEs * objPDUM5Configuration_ExtIEs);
void __si_xnap_debug_PDU_M5Configuration_ExtIEs( char * key, SI_XNAP_DT_PDU_M5Configuration_ExtIEs * objPDUM5Configuration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_M5Configuration_ExtIEs( SI_XNAP_DT_PDU_M5Configuration_ExtIEs ** objPDUM5Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_M6Configuration_ExtIEs( SI_XNAP_DT_PDU_M6Configuration_ExtIEs * objPDUM6Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_M6Configuration_ExtIEs( SI_XNAP_DT_PDU_M6Configuration_ExtIEs * objPDUM6Configuration_ExtIEs);
void __si_xnap_debug_PDU_M6Configuration_ExtIEs( char * key, SI_XNAP_DT_PDU_M6Configuration_ExtIEs * objPDUM6Configuration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_M6Configuration_ExtIEs( SI_XNAP_DT_PDU_M6Configuration_ExtIEs ** objPDUM6Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_M7Configuration_ExtIEs( SI_XNAP_DT_PDU_M7Configuration_ExtIEs * objPDUM7Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_M7Configuration_ExtIEs( SI_XNAP_DT_PDU_M7Configuration_ExtIEs * objPDUM7Configuration_ExtIEs);
void __si_xnap_debug_PDU_M7Configuration_ExtIEs( char * key, SI_XNAP_DT_PDU_M7Configuration_ExtIEs * objPDUM7Configuration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_M7Configuration_ExtIEs( SI_XNAP_DT_PDU_M7Configuration_ExtIEs ** objPDUM7Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MaximumIPdatarate_ExtIEs( SI_XNAP_DT_PDU_MaximumIPdatarate_ExtIEs * objPDUMaximumIPdatarate_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MaximumIPdatarate_ExtIEs( SI_XNAP_DT_PDU_MaximumIPdatarate_ExtIEs * objPDUMaximumIPdatarate_ExtIEs);
void __si_xnap_debug_PDU_MaximumIPdatarate_ExtIEs( char * key, SI_XNAP_DT_PDU_MaximumIPdatarate_ExtIEs * objPDUMaximumIPdatarate_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MaximumIPdatarate_ExtIEs( SI_XNAP_DT_PDU_MaximumIPdatarate_ExtIEs ** objPDUMaximumIPdatarate_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MBSFNSubframeAllocation_E_UTRA_ExtIEs( SI_XNAP_DT_PDU_MBSFNSubframeAllocation_E_UTRA_ExtIEs * objPDUMBSFNSubframeAllocation_E_UTRA_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MBSFNSubframeAllocation_E_UTRA_ExtIEs( SI_XNAP_DT_PDU_MBSFNSubframeAllocation_E_UTRA_ExtIEs * objPDUMBSFNSubframeAllocation_E_UTRA_ExtIEs);
void __si_xnap_debug_PDU_MBSFNSubframeAllocation_E_UTRA_ExtIEs( char * key, SI_XNAP_DT_PDU_MBSFNSubframeAllocation_E_UTRA_ExtIEs * objPDUMBSFNSubframeAllocation_E_UTRA_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MBSFNSubframeAllocation_E_UTRA_ExtIEs( SI_XNAP_DT_PDU_MBSFNSubframeAllocation_E_UTRA_ExtIEs ** objPDUMBSFNSubframeAllocation_E_UTRA_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MBSFNSubframeInfo_E_UTRA_Item_ExtIEs( SI_XNAP_DT_PDU_MBSFNSubframeInfo_E_UTRA_Item_ExtIEs * objPDUMBSFNSubframeInfo_E_UTRA_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MBSFNSubframeInfo_E_UTRA_Item_ExtIEs( SI_XNAP_DT_PDU_MBSFNSubframeInfo_E_UTRA_Item_ExtIEs * objPDUMBSFNSubframeInfo_E_UTRA_Item_ExtIEs);
void __si_xnap_debug_PDU_MBSFNSubframeInfo_E_UTRA_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_MBSFNSubframeInfo_E_UTRA_Item_ExtIEs * objPDUMBSFNSubframeInfo_E_UTRA_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MBSFNSubframeInfo_E_UTRA_Item_ExtIEs( SI_XNAP_DT_PDU_MBSFNSubframeInfo_E_UTRA_Item_ExtIEs ** objPDUMBSFNSubframeInfo_E_UTRA_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MBS_MappingandDataForwardingRequestInfofromSource_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_MappingandDataForwardingRequestInfofromSource_Item_ExtIEs * objPDUMBS_MappingandDataForwardingRequestInfofromSource_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MBS_MappingandDataForwardingRequestInfofromSource_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_MappingandDataForwardingRequestInfofromSource_Item_ExtIEs * objPDUMBS_MappingandDataForwardingRequestInfofromSource_Item_ExtIEs);
void __si_xnap_debug_PDU_MBS_MappingandDataForwardingRequestInfofromSource_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_MBS_MappingandDataForwardingRequestInfofromSource_Item_ExtIEs * objPDUMBS_MappingandDataForwardingRequestInfofromSource_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MBS_MappingandDataForwardingRequestInfofromSource_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_MappingandDataForwardingRequestInfofromSource_Item_ExtIEs ** objPDUMBS_MappingandDataForwardingRequestInfofromSource_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MBS_DataForwardingResponseInfofromTarget_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_DataForwardingResponseInfofromTarget_Item_ExtIEs * objPDUMBS_DataForwardingResponseInfofromTarget_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MBS_DataForwardingResponseInfofromTarget_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_DataForwardingResponseInfofromTarget_Item_ExtIEs * objPDUMBS_DataForwardingResponseInfofromTarget_Item_ExtIEs);
void __si_xnap_debug_PDU_MBS_DataForwardingResponseInfofromTarget_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_MBS_DataForwardingResponseInfofromTarget_Item_ExtIEs * objPDUMBS_DataForwardingResponseInfofromTarget_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MBS_DataForwardingResponseInfofromTarget_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_DataForwardingResponseInfofromTarget_Item_ExtIEs ** objPDUMBS_DataForwardingResponseInfofromTarget_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MBS_QoSFlowsToAdd_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_QoSFlowsToAdd_Item_ExtIEs * objPDUMBS_QoSFlowsToAdd_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MBS_QoSFlowsToAdd_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_QoSFlowsToAdd_Item_ExtIEs * objPDUMBS_QoSFlowsToAdd_Item_ExtIEs);
void __si_xnap_debug_PDU_MBS_QoSFlowsToAdd_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_MBS_QoSFlowsToAdd_Item_ExtIEs * objPDUMBS_QoSFlowsToAdd_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MBS_QoSFlowsToAdd_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_QoSFlowsToAdd_Item_ExtIEs ** objPDUMBS_QoSFlowsToAdd_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MBS_ServiceArea_ExtIEs( SI_XNAP_DT_PDU_MBS_ServiceArea_ExtIEs * objPDUMBS_ServiceArea_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MBS_ServiceArea_ExtIEs( SI_XNAP_DT_PDU_MBS_ServiceArea_ExtIEs * objPDUMBS_ServiceArea_ExtIEs);
void __si_xnap_debug_PDU_MBS_ServiceArea_ExtIEs( char * key, SI_XNAP_DT_PDU_MBS_ServiceArea_ExtIEs * objPDUMBS_ServiceArea_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MBS_ServiceArea_ExtIEs( SI_XNAP_DT_PDU_MBS_ServiceArea_ExtIEs ** objPDUMBS_ServiceArea_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MBS_ServiceAreaInformation_ExtIEs( SI_XNAP_DT_PDU_MBS_ServiceAreaInformation_ExtIEs * objPDUMBS_ServiceAreaInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MBS_ServiceAreaInformation_ExtIEs( SI_XNAP_DT_PDU_MBS_ServiceAreaInformation_ExtIEs * objPDUMBS_ServiceAreaInformation_ExtIEs);
void __si_xnap_debug_PDU_MBS_ServiceAreaInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_MBS_ServiceAreaInformation_ExtIEs * objPDUMBS_ServiceAreaInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MBS_ServiceAreaInformation_ExtIEs( SI_XNAP_DT_PDU_MBS_ServiceAreaInformation_ExtIEs ** objPDUMBS_ServiceAreaInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MBS_ServiceAreaInformation_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_ServiceAreaInformation_Item_ExtIEs * objPDUMBS_ServiceAreaInformation_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MBS_ServiceAreaInformation_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_ServiceAreaInformation_Item_ExtIEs * objPDUMBS_ServiceAreaInformation_Item_ExtIEs);
void __si_xnap_debug_PDU_MBS_ServiceAreaInformation_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_MBS_ServiceAreaInformation_Item_ExtIEs * objPDUMBS_ServiceAreaInformation_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MBS_ServiceAreaInformation_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_ServiceAreaInformation_Item_ExtIEs ** objPDUMBS_ServiceAreaInformation_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MBS_ServiceAreaTAI_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_ServiceAreaTAI_Item_ExtIEs * objPDUMBS_ServiceAreaTAI_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MBS_ServiceAreaTAI_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_ServiceAreaTAI_Item_ExtIEs * objPDUMBS_ServiceAreaTAI_Item_ExtIEs);
void __si_xnap_debug_PDU_MBS_ServiceAreaTAI_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_MBS_ServiceAreaTAI_Item_ExtIEs * objPDUMBS_ServiceAreaTAI_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MBS_ServiceAreaTAI_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_ServiceAreaTAI_Item_ExtIEs ** objPDUMBS_ServiceAreaTAI_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MBS_Session_ID_ExtIEs( SI_XNAP_DT_PDU_MBS_Session_ID_ExtIEs * objPDUMBS_Session_ID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MBS_Session_ID_ExtIEs( SI_XNAP_DT_PDU_MBS_Session_ID_ExtIEs * objPDUMBS_Session_ID_ExtIEs);
void __si_xnap_debug_PDU_MBS_Session_ID_ExtIEs( char * key, SI_XNAP_DT_PDU_MBS_Session_ID_ExtIEs * objPDUMBS_Session_ID_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MBS_Session_ID_ExtIEs( SI_XNAP_DT_PDU_MBS_Session_ID_ExtIEs ** objPDUMBS_Session_ID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MBS_SessionAssociatedInformation_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_SessionAssociatedInformation_Item_ExtIEs * objPDUMBS_SessionAssociatedInformation_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MBS_SessionAssociatedInformation_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_SessionAssociatedInformation_Item_ExtIEs * objPDUMBS_SessionAssociatedInformation_Item_ExtIEs);
void __si_xnap_debug_PDU_MBS_SessionAssociatedInformation_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_MBS_SessionAssociatedInformation_Item_ExtIEs * objPDUMBS_SessionAssociatedInformation_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MBS_SessionAssociatedInformation_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_SessionAssociatedInformation_Item_ExtIEs ** objPDUMBS_SessionAssociatedInformation_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MBS_SessionInformation_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_SessionInformation_Item_ExtIEs * objPDUMBS_SessionInformation_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MBS_SessionInformation_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_SessionInformation_Item_ExtIEs * objPDUMBS_SessionInformation_Item_ExtIEs);
void __si_xnap_debug_PDU_MBS_SessionInformation_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_MBS_SessionInformation_Item_ExtIEs * objPDUMBS_SessionInformation_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MBS_SessionInformation_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_SessionInformation_Item_ExtIEs ** objPDUMBS_SessionInformation_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MBS_SessionInformationResponse_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_SessionInformationResponse_Item_ExtIEs * objPDUMBS_SessionInformationResponse_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MBS_SessionInformationResponse_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_SessionInformationResponse_Item_ExtIEs * objPDUMBS_SessionInformationResponse_Item_ExtIEs);
void __si_xnap_debug_PDU_MBS_SessionInformationResponse_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_MBS_SessionInformationResponse_Item_ExtIEs * objPDUMBS_SessionInformationResponse_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MBS_SessionInformationResponse_Item_ExtIEs( SI_XNAP_DT_PDU_MBS_SessionInformationResponse_Item_ExtIEs ** objPDUMBS_SessionInformationResponse_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MRB_ProgressInformation_ExtIEs( SI_XNAP_DT_PDU_MRB_ProgressInformation_ExtIEs * objPDUMRB_ProgressInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MRB_ProgressInformation_ExtIEs( SI_XNAP_DT_PDU_MRB_ProgressInformation_ExtIEs * objPDUMRB_ProgressInformation_ExtIEs);
void __si_xnap_debug_PDU_MRB_ProgressInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_MRB_ProgressInformation_ExtIEs * objPDUMRB_ProgressInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MRB_ProgressInformation_ExtIEs( SI_XNAP_DT_PDU_MRB_ProgressInformation_ExtIEs ** objPDUMRB_ProgressInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MDT_Configuration_ExtIEs( SI_XNAP_DT_PDU_MDT_Configuration_ExtIEs * objPDUMDT_Configuration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MDT_Configuration_ExtIEs( SI_XNAP_DT_PDU_MDT_Configuration_ExtIEs * objPDUMDT_Configuration_ExtIEs);
void __si_xnap_debug_PDU_MDT_Configuration_ExtIEs( char * key, SI_XNAP_DT_PDU_MDT_Configuration_ExtIEs * objPDUMDT_Configuration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MDT_Configuration_ExtIEs( SI_XNAP_DT_PDU_MDT_Configuration_ExtIEs ** objPDUMDT_Configuration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MDT_Configuration_NR_ExtIEs( SI_XNAP_DT_PDU_MDT_Configuration_NR_ExtIEs * objPDUMDT_Configuration_NR_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MDT_Configuration_NR_ExtIEs( SI_XNAP_DT_PDU_MDT_Configuration_NR_ExtIEs * objPDUMDT_Configuration_NR_ExtIEs);
void __si_xnap_debug_PDU_MDT_Configuration_NR_ExtIEs( char * key, SI_XNAP_DT_PDU_MDT_Configuration_NR_ExtIEs * objPDUMDT_Configuration_NR_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MDT_Configuration_NR_ExtIEs( SI_XNAP_DT_PDU_MDT_Configuration_NR_ExtIEs ** objPDUMDT_Configuration_NR_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MDT_Configuration_EUTRA_ExtIEs( SI_XNAP_DT_PDU_MDT_Configuration_EUTRA_ExtIEs * objPDUMDT_Configuration_EUTRA_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MDT_Configuration_EUTRA_ExtIEs( SI_XNAP_DT_PDU_MDT_Configuration_EUTRA_ExtIEs * objPDUMDT_Configuration_EUTRA_ExtIEs);
void __si_xnap_debug_PDU_MDT_Configuration_EUTRA_ExtIEs( char * key, SI_XNAP_DT_PDU_MDT_Configuration_EUTRA_ExtIEs * objPDUMDT_Configuration_EUTRA_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MDT_Configuration_EUTRA_ExtIEs( SI_XNAP_DT_PDU_MDT_Configuration_EUTRA_ExtIEs ** objPDUMDT_Configuration_EUTRA_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MDTMode_NR_ExtensionIE( SI_XNAP_DT_PDU_MDTMode_NR_ExtensionIE * objPDUMDTMode_NR_ExtensionIE, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MDTMode_NR_ExtensionIE( SI_XNAP_DT_PDU_MDTMode_NR_ExtensionIE * objPDUMDTMode_NR_ExtensionIE);
void __si_xnap_debug_PDU_MDTMode_NR_ExtensionIE( char * key, SI_XNAP_DT_PDU_MDTMode_NR_ExtensionIE * objPDUMDTMode_NR_ExtensionIE, int lvl);
int __si_xnap_Decode_PDU_MDTMode_NR_ExtensionIE( SI_XNAP_DT_PDU_MDTMode_NR_ExtensionIE ** objPDUMDTMode_NR_ExtensionIE, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MeasurementThresholdA2_ExtIEs( SI_XNAP_DT_PDU_MeasurementThresholdA2_ExtIEs * objPDUMeasurementThresholdA2_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MeasurementThresholdA2_ExtIEs( SI_XNAP_DT_PDU_MeasurementThresholdA2_ExtIEs * objPDUMeasurementThresholdA2_ExtIEs);
void __si_xnap_debug_PDU_MeasurementThresholdA2_ExtIEs( char * key, SI_XNAP_DT_PDU_MeasurementThresholdA2_ExtIEs * objPDUMeasurementThresholdA2_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MeasurementThresholdA2_ExtIEs( SI_XNAP_DT_PDU_MeasurementThresholdA2_ExtIEs ** objPDUMeasurementThresholdA2_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MIMOPRBusageInformation_ExtIEs( SI_XNAP_DT_PDU_MIMOPRBusageInformation_ExtIEs * objPDUMIMOPRBusageInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MIMOPRBusageInformation_ExtIEs( SI_XNAP_DT_PDU_MIMOPRBusageInformation_ExtIEs * objPDUMIMOPRBusageInformation_ExtIEs);
void __si_xnap_debug_PDU_MIMOPRBusageInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_MIMOPRBusageInformation_ExtIEs * objPDUMIMOPRBusageInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MIMOPRBusageInformation_ExtIEs( SI_XNAP_DT_PDU_MIMOPRBusageInformation_ExtIEs ** objPDUMIMOPRBusageInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MobilityRestrictionList_ExtIEs( SI_XNAP_DT_PDU_MobilityRestrictionList_ExtIEs * objPDUMobilityRestrictionList_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MobilityRestrictionList_ExtIEs( SI_XNAP_DT_PDU_MobilityRestrictionList_ExtIEs * objPDUMobilityRestrictionList_ExtIEs);
void __si_xnap_debug_PDU_MobilityRestrictionList_ExtIEs( char * key, SI_XNAP_DT_PDU_MobilityRestrictionList_ExtIEs * objPDUMobilityRestrictionList_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MobilityRestrictionList_ExtIEs( SI_XNAP_DT_PDU_MobilityRestrictionList_ExtIEs ** objPDUMobilityRestrictionList_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs( SI_XNAP_DT_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs * objPDUCNTypeRestrictionsForEquivalentItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs( SI_XNAP_DT_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs * objPDUCNTypeRestrictionsForEquivalentItem_ExtIEs);
void __si_xnap_debug_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs( char * key, SI_XNAP_DT_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs * objPDUCNTypeRestrictionsForEquivalentItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs( SI_XNAP_DT_PDU_CNTypeRestrictionsForEquivalentItem_ExtIEs ** objPDUCNTypeRestrictionsForEquivalentItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RAT_RestrictionsItem_ExtIEs( SI_XNAP_DT_PDU_RAT_RestrictionsItem_ExtIEs * objPDURAT_RestrictionsItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RAT_RestrictionsItem_ExtIEs( SI_XNAP_DT_PDU_RAT_RestrictionsItem_ExtIEs * objPDURAT_RestrictionsItem_ExtIEs);
void __si_xnap_debug_PDU_RAT_RestrictionsItem_ExtIEs( char * key, SI_XNAP_DT_PDU_RAT_RestrictionsItem_ExtIEs * objPDURAT_RestrictionsItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RAT_RestrictionsItem_ExtIEs( SI_XNAP_DT_PDU_RAT_RestrictionsItem_ExtIEs ** objPDURAT_RestrictionsItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ForbiddenAreaItem_ExtIEs( SI_XNAP_DT_PDU_ForbiddenAreaItem_ExtIEs * objPDUForbiddenAreaItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ForbiddenAreaItem_ExtIEs( SI_XNAP_DT_PDU_ForbiddenAreaItem_ExtIEs * objPDUForbiddenAreaItem_ExtIEs);
void __si_xnap_debug_PDU_ForbiddenAreaItem_ExtIEs( char * key, SI_XNAP_DT_PDU_ForbiddenAreaItem_ExtIEs * objPDUForbiddenAreaItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ForbiddenAreaItem_ExtIEs( SI_XNAP_DT_PDU_ForbiddenAreaItem_ExtIEs ** objPDUForbiddenAreaItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ServiceAreaItem_ExtIEs( SI_XNAP_DT_PDU_ServiceAreaItem_ExtIEs * objPDUServiceAreaItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ServiceAreaItem_ExtIEs( SI_XNAP_DT_PDU_ServiceAreaItem_ExtIEs * objPDUServiceAreaItem_ExtIEs);
void __si_xnap_debug_PDU_ServiceAreaItem_ExtIEs( char * key, SI_XNAP_DT_PDU_ServiceAreaItem_ExtIEs * objPDUServiceAreaItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ServiceAreaItem_ExtIEs( SI_XNAP_DT_PDU_ServiceAreaItem_ExtIEs ** objPDUServiceAreaItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MR_DC_ResourceCoordinationInfo_ExtIEs( SI_XNAP_DT_PDU_MR_DC_ResourceCoordinationInfo_ExtIEs * objPDUMR_DC_ResourceCoordinationInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MR_DC_ResourceCoordinationInfo_ExtIEs( SI_XNAP_DT_PDU_MR_DC_ResourceCoordinationInfo_ExtIEs * objPDUMR_DC_ResourceCoordinationInfo_ExtIEs);
void __si_xnap_debug_PDU_MR_DC_ResourceCoordinationInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_MR_DC_ResourceCoordinationInfo_ExtIEs * objPDUMR_DC_ResourceCoordinationInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MR_DC_ResourceCoordinationInfo_ExtIEs( SI_XNAP_DT_PDU_MR_DC_ResourceCoordinationInfo_ExtIEs ** objPDUMR_DC_ResourceCoordinationInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_E_UTRA_ResourceCoordinationInfo_ExtIEs( SI_XNAP_DT_PDU_E_UTRA_ResourceCoordinationInfo_ExtIEs * objPDUE_UTRA_ResourceCoordinationInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_E_UTRA_ResourceCoordinationInfo_ExtIEs( SI_XNAP_DT_PDU_E_UTRA_ResourceCoordinationInfo_ExtIEs * objPDUE_UTRA_ResourceCoordinationInfo_ExtIEs);
void __si_xnap_debug_PDU_E_UTRA_ResourceCoordinationInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_E_UTRA_ResourceCoordinationInfo_ExtIEs * objPDUE_UTRA_ResourceCoordinationInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_E_UTRA_ResourceCoordinationInfo_ExtIEs( SI_XNAP_DT_PDU_E_UTRA_ResourceCoordinationInfo_ExtIEs ** objPDUE_UTRA_ResourceCoordinationInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NR_ResourceCoordinationInfo_ExtIEs( SI_XNAP_DT_PDU_NR_ResourceCoordinationInfo_ExtIEs * objPDUNR_ResourceCoordinationInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NR_ResourceCoordinationInfo_ExtIEs( SI_XNAP_DT_PDU_NR_ResourceCoordinationInfo_ExtIEs * objPDUNR_ResourceCoordinationInfo_ExtIEs);
void __si_xnap_debug_PDU_NR_ResourceCoordinationInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_NR_ResourceCoordinationInfo_ExtIEs * objPDUNR_ResourceCoordinationInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NR_ResourceCoordinationInfo_ExtIEs( SI_XNAP_DT_PDU_NR_ResourceCoordinationInfo_ExtIEs ** objPDUNR_ResourceCoordinationInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MessageOversizeNotification_ExtIEs( SI_XNAP_DT_PDU_MessageOversizeNotification_ExtIEs * objPDUMessageOversizeNotification_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MessageOversizeNotification_ExtIEs( SI_XNAP_DT_PDU_MessageOversizeNotification_ExtIEs * objPDUMessageOversizeNotification_ExtIEs);
void __si_xnap_debug_PDU_MessageOversizeNotification_ExtIEs( char * key, SI_XNAP_DT_PDU_MessageOversizeNotification_ExtIEs * objPDUMessageOversizeNotification_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MessageOversizeNotification_ExtIEs( SI_XNAP_DT_PDU_MessageOversizeNotification_ExtIEs ** objPDUMessageOversizeNotification_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MT_SDT_Information_ExtIEs( SI_XNAP_DT_PDU_MT_SDT_Information_ExtIEs * objPDUMT_SDT_Information_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MT_SDT_Information_ExtIEs( SI_XNAP_DT_PDU_MT_SDT_Information_ExtIEs * objPDUMT_SDT_Information_ExtIEs);
void __si_xnap_debug_PDU_MT_SDT_Information_ExtIEs( char * key, SI_XNAP_DT_PDU_MT_SDT_Information_ExtIEs * objPDUMT_SDT_Information_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MT_SDT_Information_ExtIEs( SI_XNAP_DT_PDU_MT_SDT_Information_ExtIEs ** objPDUMT_SDT_Information_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MultiplexingInfo_ExtIEs( SI_XNAP_DT_PDU_MultiplexingInfo_ExtIEs * objPDUMultiplexingInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MultiplexingInfo_ExtIEs( SI_XNAP_DT_PDU_MultiplexingInfo_ExtIEs * objPDUMultiplexingInfo_ExtIEs);
void __si_xnap_debug_PDU_MultiplexingInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_MultiplexingInfo_ExtIEs * objPDUMultiplexingInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MultiplexingInfo_ExtIEs( SI_XNAP_DT_PDU_MultiplexingInfo_ExtIEs ** objPDUMultiplexingInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MeasuredUETrajectory_Item_ExtIEs( SI_XNAP_DT_PDU_MeasuredUETrajectory_Item_ExtIEs * objPDUMeasuredUETrajectory_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MeasuredUETrajectory_Item_ExtIEs( SI_XNAP_DT_PDU_MeasuredUETrajectory_Item_ExtIEs * objPDUMeasuredUETrajectory_Item_ExtIEs);
void __si_xnap_debug_PDU_MeasuredUETrajectory_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_MeasuredUETrajectory_Item_ExtIEs * objPDUMeasuredUETrajectory_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MeasuredUETrajectory_Item_ExtIEs( SI_XNAP_DT_PDU_MeasuredUETrajectory_Item_ExtIEs ** objPDUMeasuredUETrajectory_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MeasuredTrajectoryCellInfo_ExtIEs( SI_XNAP_DT_PDU_MeasuredTrajectoryCellInfo_ExtIEs * objPDUMeasuredTrajectoryCellInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MeasuredTrajectoryCellInfo_ExtIEs( SI_XNAP_DT_PDU_MeasuredTrajectoryCellInfo_ExtIEs * objPDUMeasuredTrajectoryCellInfo_ExtIEs);
void __si_xnap_debug_PDU_MeasuredTrajectoryCellInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_MeasuredTrajectoryCellInfo_ExtIEs * objPDUMeasuredTrajectoryCellInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MeasuredTrajectoryCellInfo_ExtIEs( SI_XNAP_DT_PDU_MeasuredTrajectoryCellInfo_ExtIEs ** objPDUMeasuredTrajectoryCellInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MeasuredTrajectoryNGRANCellInfo_ExtIEs( SI_XNAP_DT_PDU_MeasuredTrajectoryNGRANCellInfo_ExtIEs * objPDUMeasuredTrajectoryNGRANCellInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MeasuredTrajectoryNGRANCellInfo_ExtIEs( SI_XNAP_DT_PDU_MeasuredTrajectoryNGRANCellInfo_ExtIEs * objPDUMeasuredTrajectoryNGRANCellInfo_ExtIEs);
void __si_xnap_debug_PDU_MeasuredTrajectoryNGRANCellInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_MeasuredTrajectoryNGRANCellInfo_ExtIEs * objPDUMeasuredTrajectoryNGRANCellInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MeasuredTrajectoryNGRANCellInfo_ExtIEs( SI_XNAP_DT_PDU_MeasuredTrajectoryNGRANCellInfo_ExtIEs ** objPDUMeasuredTrajectoryNGRANCellInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_N6JitterInformationExtIEs( SI_XNAP_DT_PDU_N6JitterInformationExtIEs * objPDUN6JitterInformationExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_N6JitterInformationExtIEs( SI_XNAP_DT_PDU_N6JitterInformationExtIEs * objPDUN6JitterInformationExtIEs);
void __si_xnap_debug_PDU_N6JitterInformationExtIEs( char * key, SI_XNAP_DT_PDU_N6JitterInformationExtIEs * objPDUN6JitterInformationExtIEs, int lvl);
int __si_xnap_Decode_PDU_N6JitterInformationExtIEs( SI_XNAP_DT_PDU_N6JitterInformationExtIEs ** objPDUN6JitterInformationExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NACellResourceConfiguration_Item_ExtIEs( SI_XNAP_DT_PDU_NACellResourceConfiguration_Item_ExtIEs * objPDUNACellResourceConfiguration_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NACellResourceConfiguration_Item_ExtIEs( SI_XNAP_DT_PDU_NACellResourceConfiguration_Item_ExtIEs * objPDUNACellResourceConfiguration_Item_ExtIEs);
void __si_xnap_debug_PDU_NACellResourceConfiguration_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_NACellResourceConfiguration_Item_ExtIEs * objPDUNACellResourceConfiguration_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NACellResourceConfiguration_Item_ExtIEs( SI_XNAP_DT_PDU_NACellResourceConfiguration_Item_ExtIEs ** objPDUNACellResourceConfiguration_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NE_DC_TDM_Pattern_ExtIEs( SI_XNAP_DT_PDU_NE_DC_TDM_Pattern_ExtIEs * objPDUNE_DC_TDM_Pattern_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NE_DC_TDM_Pattern_ExtIEs( SI_XNAP_DT_PDU_NE_DC_TDM_Pattern_ExtIEs * objPDUNE_DC_TDM_Pattern_ExtIEs);
void __si_xnap_debug_PDU_NE_DC_TDM_Pattern_ExtIEs( char * key, SI_XNAP_DT_PDU_NE_DC_TDM_Pattern_ExtIEs * objPDUNE_DC_TDM_Pattern_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NE_DC_TDM_Pattern_ExtIEs( SI_XNAP_DT_PDU_NE_DC_TDM_Pattern_ExtIEs ** objPDUNE_DC_TDM_Pattern_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NeighbourInformation_E_UTRA_Item_ExtIEs( SI_XNAP_DT_PDU_NeighbourInformation_E_UTRA_Item_ExtIEs * objPDUNeighbourInformation_E_UTRA_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NeighbourInformation_E_UTRA_Item_ExtIEs( SI_XNAP_DT_PDU_NeighbourInformation_E_UTRA_Item_ExtIEs * objPDUNeighbourInformation_E_UTRA_Item_ExtIEs);
void __si_xnap_debug_PDU_NeighbourInformation_E_UTRA_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_NeighbourInformation_E_UTRA_Item_ExtIEs * objPDUNeighbourInformation_E_UTRA_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NeighbourInformation_E_UTRA_Item_ExtIEs( SI_XNAP_DT_PDU_NeighbourInformation_E_UTRA_Item_ExtIEs ** objPDUNeighbourInformation_E_UTRA_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NeighbourInformation_NR_Item_ExtIEs( SI_XNAP_DT_PDU_NeighbourInformation_NR_Item_ExtIEs * objPDUNeighbourInformation_NR_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NeighbourInformation_NR_Item_ExtIEs( SI_XNAP_DT_PDU_NeighbourInformation_NR_Item_ExtIEs * objPDUNeighbourInformation_NR_Item_ExtIEs);
void __si_xnap_debug_PDU_NeighbourInformation_NR_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_NeighbourInformation_NR_Item_ExtIEs * objPDUNeighbourInformation_NR_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NeighbourInformation_NR_Item_ExtIEs( SI_XNAP_DT_PDU_NeighbourInformation_NR_Item_ExtIEs ** objPDUNeighbourInformation_NR_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NeighbourInformation_NR_ModeInfo_ExtIEs( SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeInfo_ExtIEs * objPDUNeighbourInformation_NR_ModeInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NeighbourInformation_NR_ModeInfo_ExtIEs( SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeInfo_ExtIEs * objPDUNeighbourInformation_NR_ModeInfo_ExtIEs);
void __si_xnap_debug_PDU_NeighbourInformation_NR_ModeInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeInfo_ExtIEs * objPDUNeighbourInformation_NR_ModeInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NeighbourInformation_NR_ModeInfo_ExtIEs( SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeInfo_ExtIEs ** objPDUNeighbourInformation_NR_ModeInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NeighbourInformation_NR_ModeFDDInfo_ExtIEs( SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeFDDInfo_ExtIEs * objPDUNeighbourInformation_NR_ModeFDDInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NeighbourInformation_NR_ModeFDDInfo_ExtIEs( SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeFDDInfo_ExtIEs * objPDUNeighbourInformation_NR_ModeFDDInfo_ExtIEs);
void __si_xnap_debug_PDU_NeighbourInformation_NR_ModeFDDInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeFDDInfo_ExtIEs * objPDUNeighbourInformation_NR_ModeFDDInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NeighbourInformation_NR_ModeFDDInfo_ExtIEs( SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeFDDInfo_ExtIEs ** objPDUNeighbourInformation_NR_ModeFDDInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NeighbourInformation_NR_ModeTDDInfo_ExtIEs( SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeTDDInfo_ExtIEs * objPDUNeighbourInformation_NR_ModeTDDInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NeighbourInformation_NR_ModeTDDInfo_ExtIEs( SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeTDDInfo_ExtIEs * objPDUNeighbourInformation_NR_ModeTDDInfo_ExtIEs);
void __si_xnap_debug_PDU_NeighbourInformation_NR_ModeTDDInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeTDDInfo_ExtIEs * objPDUNeighbourInformation_NR_ModeTDDInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NeighbourInformation_NR_ModeTDDInfo_ExtIEs( SI_XNAP_DT_PDU_NeighbourInformation_NR_ModeTDDInfo_ExtIEs ** objPDUNeighbourInformation_NR_ModeTDDInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Neighbour_NG_RAN_Node_Item_ExtIEs( SI_XNAP_DT_PDU_Neighbour_NG_RAN_Node_Item_ExtIEs * objPDUNeighbour_NG_RAN_Node_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Neighbour_NG_RAN_Node_Item_ExtIEs( SI_XNAP_DT_PDU_Neighbour_NG_RAN_Node_Item_ExtIEs * objPDUNeighbour_NG_RAN_Node_Item_ExtIEs);
void __si_xnap_debug_PDU_Neighbour_NG_RAN_Node_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_Neighbour_NG_RAN_Node_Item_ExtIEs * objPDUNeighbour_NG_RAN_Node_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Neighbour_NG_RAN_Node_Item_ExtIEs( SI_XNAP_DT_PDU_Neighbour_NG_RAN_Node_Item_ExtIEs ** objPDUNeighbour_NG_RAN_Node_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NRCarrierItem_ExtIEs( SI_XNAP_DT_PDU_NRCarrierItem_ExtIEs * objPDUNRCarrierItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NRCarrierItem_ExtIEs( SI_XNAP_DT_PDU_NRCarrierItem_ExtIEs * objPDUNRCarrierItem_ExtIEs);
void __si_xnap_debug_PDU_NRCarrierItem_ExtIEs( char * key, SI_XNAP_DT_PDU_NRCarrierItem_ExtIEs * objPDUNRCarrierItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NRCarrierItem_ExtIEs( SI_XNAP_DT_PDU_NRCarrierItem_ExtIEs ** objPDUNRCarrierItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NG_RAN_Cell_Identity_ExtIEs( SI_XNAP_DT_PDU_NG_RAN_Cell_Identity_ExtIEs * objPDUNG_RAN_Cell_Identity_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NG_RAN_Cell_Identity_ExtIEs( SI_XNAP_DT_PDU_NG_RAN_Cell_Identity_ExtIEs * objPDUNG_RAN_Cell_Identity_ExtIEs);
void __si_xnap_debug_PDU_NG_RAN_Cell_Identity_ExtIEs( char * key, SI_XNAP_DT_PDU_NG_RAN_Cell_Identity_ExtIEs * objPDUNG_RAN_Cell_Identity_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NG_RAN_Cell_Identity_ExtIEs( SI_XNAP_DT_PDU_NG_RAN_Cell_Identity_ExtIEs ** objPDUNG_RAN_Cell_Identity_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NG_RAN_CellPCI_ExtIEs( SI_XNAP_DT_PDU_NG_RAN_CellPCI_ExtIEs * objPDUNG_RAN_CellPCI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NG_RAN_CellPCI_ExtIEs( SI_XNAP_DT_PDU_NG_RAN_CellPCI_ExtIEs * objPDUNG_RAN_CellPCI_ExtIEs);
void __si_xnap_debug_PDU_NG_RAN_CellPCI_ExtIEs( char * key, SI_XNAP_DT_PDU_NG_RAN_CellPCI_ExtIEs * objPDUNG_RAN_CellPCI_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NG_RAN_CellPCI_ExtIEs( SI_XNAP_DT_PDU_NG_RAN_CellPCI_ExtIEs ** objPDUNG_RAN_CellPCI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NodeAssociatedInfoResult_ExtIEs( SI_XNAP_DT_PDU_NodeAssociatedInfoResult_ExtIEs * objPDUNodeAssociatedInfoResult_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NodeAssociatedInfoResult_ExtIEs( SI_XNAP_DT_PDU_NodeAssociatedInfoResult_ExtIEs * objPDUNodeAssociatedInfoResult_ExtIEs);
void __si_xnap_debug_PDU_NodeAssociatedInfoResult_ExtIEs( char * key, SI_XNAP_DT_PDU_NodeAssociatedInfoResult_ExtIEs * objPDUNodeAssociatedInfoResult_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NodeAssociatedInfoResult_ExtIEs( SI_XNAP_DT_PDU_NodeAssociatedInfoResult_ExtIEs ** objPDUNodeAssociatedInfoResult_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NodeMeasurementInitiationResult_Item_ExtIEs( SI_XNAP_DT_PDU_NodeMeasurementInitiationResult_Item_ExtIEs * objPDUNodeMeasurementInitiationResult_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NodeMeasurementInitiationResult_Item_ExtIEs( SI_XNAP_DT_PDU_NodeMeasurementInitiationResult_Item_ExtIEs * objPDUNodeMeasurementInitiationResult_Item_ExtIEs);
void __si_xnap_debug_PDU_NodeMeasurementInitiationResult_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_NodeMeasurementInitiationResult_Item_ExtIEs * objPDUNodeMeasurementInitiationResult_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NodeMeasurementInitiationResult_Item_ExtIEs( SI_XNAP_DT_PDU_NodeMeasurementInitiationResult_Item_ExtIEs ** objPDUNodeMeasurementInitiationResult_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NonDynamic5QIDescriptor_ExtIEs( SI_XNAP_DT_PDU_NonDynamic5QIDescriptor_ExtIEs * objPDUNonDynamic5QIDescriptor_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NonDynamic5QIDescriptor_ExtIEs( SI_XNAP_DT_PDU_NonDynamic5QIDescriptor_ExtIEs * objPDUNonDynamic5QIDescriptor_ExtIEs);
void __si_xnap_debug_PDU_NonDynamic5QIDescriptor_ExtIEs( char * key, SI_XNAP_DT_PDU_NonDynamic5QIDescriptor_ExtIEs * objPDUNonDynamic5QIDescriptor_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NonDynamic5QIDescriptor_ExtIEs( SI_XNAP_DT_PDU_NonDynamic5QIDescriptor_ExtIEs ** objPDUNonDynamic5QIDescriptor_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NG_eNB_RadioResourceStatus_ExtIEs( SI_XNAP_DT_PDU_NG_eNB_RadioResourceStatus_ExtIEs * objPDUNG_eNB_RadioResourceStatus_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NG_eNB_RadioResourceStatus_ExtIEs( SI_XNAP_DT_PDU_NG_eNB_RadioResourceStatus_ExtIEs * objPDUNG_eNB_RadioResourceStatus_ExtIEs);
void __si_xnap_debug_PDU_NG_eNB_RadioResourceStatus_ExtIEs( char * key, SI_XNAP_DT_PDU_NG_eNB_RadioResourceStatus_ExtIEs * objPDUNG_eNB_RadioResourceStatus_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NG_eNB_RadioResourceStatus_ExtIEs( SI_XNAP_DT_PDU_NG_eNB_RadioResourceStatus_ExtIEs ** objPDUNG_eNB_RadioResourceStatus_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TNLCapacityIndicator_ExtIEs( SI_XNAP_DT_PDU_TNLCapacityIndicator_ExtIEs * objPDUTNLCapacityIndicator_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TNLCapacityIndicator_ExtIEs( SI_XNAP_DT_PDU_TNLCapacityIndicator_ExtIEs * objPDUTNLCapacityIndicator_ExtIEs);
void __si_xnap_debug_PDU_TNLCapacityIndicator_ExtIEs( char * key, SI_XNAP_DT_PDU_TNLCapacityIndicator_ExtIEs * objPDUTNLCapacityIndicator_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TNLCapacityIndicator_ExtIEs( SI_XNAP_DT_PDU_TNLCapacityIndicator_ExtIEs ** objPDUTNLCapacityIndicator_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Non_F1_TerminatingTopologyBHInformation_ExtIEs( SI_XNAP_DT_PDU_Non_F1_TerminatingTopologyBHInformation_ExtIEs * objPDUNon_F1_TerminatingTopologyBHInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Non_F1_TerminatingTopologyBHInformation_ExtIEs( SI_XNAP_DT_PDU_Non_F1_TerminatingTopologyBHInformation_ExtIEs * objPDUNon_F1_TerminatingTopologyBHInformation_ExtIEs);
void __si_xnap_debug_PDU_Non_F1_TerminatingTopologyBHInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_Non_F1_TerminatingTopologyBHInformation_ExtIEs * objPDUNon_F1_TerminatingTopologyBHInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Non_F1_TerminatingTopologyBHInformation_ExtIEs( SI_XNAP_DT_PDU_Non_F1_TerminatingTopologyBHInformation_ExtIEs ** objPDUNon_F1_TerminatingTopologyBHInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NonF1TerminatingBHInformation_Item_ExtIEs( SI_XNAP_DT_PDU_NonF1TerminatingBHInformation_Item_ExtIEs * objPDUNonF1TerminatingBHInformation_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NonF1TerminatingBHInformation_Item_ExtIEs( SI_XNAP_DT_PDU_NonF1TerminatingBHInformation_Item_ExtIEs * objPDUNonF1TerminatingBHInformation_Item_ExtIEs);
void __si_xnap_debug_PDU_NonF1TerminatingBHInformation_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_NonF1TerminatingBHInformation_Item_ExtIEs * objPDUNonF1TerminatingBHInformation_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NonF1TerminatingBHInformation_Item_ExtIEs( SI_XNAP_DT_PDU_NonF1TerminatingBHInformation_Item_ExtIEs ** objPDUNonF1TerminatingBHInformation_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NonUPTraffic_ExtIEs( SI_XNAP_DT_PDU_NonUPTraffic_ExtIEs * objPDUNonUPTraffic_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NonUPTraffic_ExtIEs( SI_XNAP_DT_PDU_NonUPTraffic_ExtIEs * objPDUNonUPTraffic_ExtIEs);
void __si_xnap_debug_PDU_NonUPTraffic_ExtIEs( char * key, SI_XNAP_DT_PDU_NonUPTraffic_ExtIEs * objPDUNonUPTraffic_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NonUPTraffic_ExtIEs( SI_XNAP_DT_PDU_NonUPTraffic_ExtIEs ** objPDUNonUPTraffic_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NPN_Broadcast_Information_ExtIEs( SI_XNAP_DT_PDU_NPN_Broadcast_Information_ExtIEs * objPDUNPN_Broadcast_Information_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NPN_Broadcast_Information_ExtIEs( SI_XNAP_DT_PDU_NPN_Broadcast_Information_ExtIEs * objPDUNPN_Broadcast_Information_ExtIEs);
void __si_xnap_debug_PDU_NPN_Broadcast_Information_ExtIEs( char * key, SI_XNAP_DT_PDU_NPN_Broadcast_Information_ExtIEs * objPDUNPN_Broadcast_Information_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NPN_Broadcast_Information_ExtIEs( SI_XNAP_DT_PDU_NPN_Broadcast_Information_ExtIEs ** objPDUNPN_Broadcast_Information_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NPN_Broadcast_Information_SNPN_ExtIEs( SI_XNAP_DT_PDU_NPN_Broadcast_Information_SNPN_ExtIEs * objPDUNPN_Broadcast_Information_SNPN_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NPN_Broadcast_Information_SNPN_ExtIEs( SI_XNAP_DT_PDU_NPN_Broadcast_Information_SNPN_ExtIEs * objPDUNPN_Broadcast_Information_SNPN_ExtIEs);
void __si_xnap_debug_PDU_NPN_Broadcast_Information_SNPN_ExtIEs( char * key, SI_XNAP_DT_PDU_NPN_Broadcast_Information_SNPN_ExtIEs * objPDUNPN_Broadcast_Information_SNPN_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NPN_Broadcast_Information_SNPN_ExtIEs( SI_XNAP_DT_PDU_NPN_Broadcast_Information_SNPN_ExtIEs ** objPDUNPN_Broadcast_Information_SNPN_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NPN_Broadcast_Information_PNI_NPN_ExtIEs( SI_XNAP_DT_PDU_NPN_Broadcast_Information_PNI_NPN_ExtIEs * objPDUNPN_Broadcast_Information_PNI_NPN_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NPN_Broadcast_Information_PNI_NPN_ExtIEs( SI_XNAP_DT_PDU_NPN_Broadcast_Information_PNI_NPN_ExtIEs * objPDUNPN_Broadcast_Information_PNI_NPN_ExtIEs);
void __si_xnap_debug_PDU_NPN_Broadcast_Information_PNI_NPN_ExtIEs( char * key, SI_XNAP_DT_PDU_NPN_Broadcast_Information_PNI_NPN_ExtIEs * objPDUNPN_Broadcast_Information_PNI_NPN_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NPN_Broadcast_Information_PNI_NPN_ExtIEs( SI_XNAP_DT_PDU_NPN_Broadcast_Information_PNI_NPN_ExtIEs ** objPDUNPN_Broadcast_Information_PNI_NPN_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NPNMobilityInformation_ExtIEs( SI_XNAP_DT_PDU_NPNMobilityInformation_ExtIEs * objPDUNPNMobilityInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NPNMobilityInformation_ExtIEs( SI_XNAP_DT_PDU_NPNMobilityInformation_ExtIEs * objPDUNPNMobilityInformation_ExtIEs);
void __si_xnap_debug_PDU_NPNMobilityInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_NPNMobilityInformation_ExtIEs * objPDUNPNMobilityInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NPNMobilityInformation_ExtIEs( SI_XNAP_DT_PDU_NPNMobilityInformation_ExtIEs ** objPDUNPNMobilityInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NPNMobilityInformation_SNPN_ExtIEs( SI_XNAP_DT_PDU_NPNMobilityInformation_SNPN_ExtIEs * objPDUNPNMobilityInformation_SNPN_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NPNMobilityInformation_SNPN_ExtIEs( SI_XNAP_DT_PDU_NPNMobilityInformation_SNPN_ExtIEs * objPDUNPNMobilityInformation_SNPN_ExtIEs);
void __si_xnap_debug_PDU_NPNMobilityInformation_SNPN_ExtIEs( char * key, SI_XNAP_DT_PDU_NPNMobilityInformation_SNPN_ExtIEs * objPDUNPNMobilityInformation_SNPN_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NPNMobilityInformation_SNPN_ExtIEs( SI_XNAP_DT_PDU_NPNMobilityInformation_SNPN_ExtIEs ** objPDUNPNMobilityInformation_SNPN_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NPNMobilityInformation_PNI_NPN_ExtIEs( SI_XNAP_DT_PDU_NPNMobilityInformation_PNI_NPN_ExtIEs * objPDUNPNMobilityInformation_PNI_NPN_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NPNMobilityInformation_PNI_NPN_ExtIEs( SI_XNAP_DT_PDU_NPNMobilityInformation_PNI_NPN_ExtIEs * objPDUNPNMobilityInformation_PNI_NPN_ExtIEs);
void __si_xnap_debug_PDU_NPNMobilityInformation_PNI_NPN_ExtIEs( char * key, SI_XNAP_DT_PDU_NPNMobilityInformation_PNI_NPN_ExtIEs * objPDUNPNMobilityInformation_PNI_NPN_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NPNMobilityInformation_PNI_NPN_ExtIEs( SI_XNAP_DT_PDU_NPNMobilityInformation_PNI_NPN_ExtIEs ** objPDUNPNMobilityInformation_PNI_NPN_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NPNPagingAssistanceInformation_ExtIEs( SI_XNAP_DT_PDU_NPNPagingAssistanceInformation_ExtIEs * objPDUNPNPagingAssistanceInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NPNPagingAssistanceInformation_ExtIEs( SI_XNAP_DT_PDU_NPNPagingAssistanceInformation_ExtIEs * objPDUNPNPagingAssistanceInformation_ExtIEs);
void __si_xnap_debug_PDU_NPNPagingAssistanceInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_NPNPagingAssistanceInformation_ExtIEs * objPDUNPNPagingAssistanceInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NPNPagingAssistanceInformation_ExtIEs( SI_XNAP_DT_PDU_NPNPagingAssistanceInformation_ExtIEs ** objPDUNPNPagingAssistanceInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NPNPagingAssistanceInformation_PNI_NPN_ExtIEs( SI_XNAP_DT_PDU_NPNPagingAssistanceInformation_PNI_NPN_ExtIEs * objPDUNPNPagingAssistanceInformation_PNI_NPN_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NPNPagingAssistanceInformation_PNI_NPN_ExtIEs( SI_XNAP_DT_PDU_NPNPagingAssistanceInformation_PNI_NPN_ExtIEs * objPDUNPNPagingAssistanceInformation_PNI_NPN_ExtIEs);
void __si_xnap_debug_PDU_NPNPagingAssistanceInformation_PNI_NPN_ExtIEs( char * key, SI_XNAP_DT_PDU_NPNPagingAssistanceInformation_PNI_NPN_ExtIEs * objPDUNPNPagingAssistanceInformation_PNI_NPN_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NPNPagingAssistanceInformation_PNI_NPN_ExtIEs( SI_XNAP_DT_PDU_NPNPagingAssistanceInformation_PNI_NPN_ExtIEs ** objPDUNPNPagingAssistanceInformation_PNI_NPN_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NPN_Support_ExtIEs( SI_XNAP_DT_PDU_NPN_Support_ExtIEs * objPDUNPN_Support_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NPN_Support_ExtIEs( SI_XNAP_DT_PDU_NPN_Support_ExtIEs * objPDUNPN_Support_ExtIEs);
void __si_xnap_debug_PDU_NPN_Support_ExtIEs( char * key, SI_XNAP_DT_PDU_NPN_Support_ExtIEs * objPDUNPN_Support_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NPN_Support_ExtIEs( SI_XNAP_DT_PDU_NPN_Support_ExtIEs ** objPDUNPN_Support_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NPN_Support_SNPN_ExtIEs( SI_XNAP_DT_PDU_NPN_Support_SNPN_ExtIEs * objPDUNPN_Support_SNPN_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NPN_Support_SNPN_ExtIEs( SI_XNAP_DT_PDU_NPN_Support_SNPN_ExtIEs * objPDUNPN_Support_SNPN_ExtIEs);
void __si_xnap_debug_PDU_NPN_Support_SNPN_ExtIEs( char * key, SI_XNAP_DT_PDU_NPN_Support_SNPN_ExtIEs * objPDUNPN_Support_SNPN_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NPN_Support_SNPN_ExtIEs( SI_XNAP_DT_PDU_NPN_Support_SNPN_ExtIEs ** objPDUNPN_Support_SNPN_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NPRACHConfiguration_ExtIEs( SI_XNAP_DT_PDU_NPRACHConfiguration_ExtIEs * objPDUNPRACHConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NPRACHConfiguration_ExtIEs( SI_XNAP_DT_PDU_NPRACHConfiguration_ExtIEs * objPDUNPRACHConfiguration_ExtIEs);
void __si_xnap_debug_PDU_NPRACHConfiguration_ExtIEs( char * key, SI_XNAP_DT_PDU_NPRACHConfiguration_ExtIEs * objPDUNPRACHConfiguration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NPRACHConfiguration_ExtIEs( SI_XNAP_DT_PDU_NPRACHConfiguration_ExtIEs ** objPDUNPRACHConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_FDD_or_TDD_in_NPRACHConfiguration_Choice_ExtIEs( SI_XNAP_DT_PDU_FDD_or_TDD_in_NPRACHConfiguration_Choice_ExtIEs * objPDUFDD_or_TDD_in_NPRACHConfiguration_Choice_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_FDD_or_TDD_in_NPRACHConfiguration_Choice_ExtIEs( SI_XNAP_DT_PDU_FDD_or_TDD_in_NPRACHConfiguration_Choice_ExtIEs * objPDUFDD_or_TDD_in_NPRACHConfiguration_Choice_ExtIEs);
void __si_xnap_debug_PDU_FDD_or_TDD_in_NPRACHConfiguration_Choice_ExtIEs( char * key, SI_XNAP_DT_PDU_FDD_or_TDD_in_NPRACHConfiguration_Choice_ExtIEs * objPDUFDD_or_TDD_in_NPRACHConfiguration_Choice_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_FDD_or_TDD_in_NPRACHConfiguration_Choice_ExtIEs( SI_XNAP_DT_PDU_FDD_or_TDD_in_NPRACHConfiguration_Choice_ExtIEs ** objPDUFDD_or_TDD_in_NPRACHConfiguration_Choice_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NPRACHConfiguration_FDD_ExtIEs( SI_XNAP_DT_PDU_NPRACHConfiguration_FDD_ExtIEs * objPDUNPRACHConfiguration_FDD_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NPRACHConfiguration_FDD_ExtIEs( SI_XNAP_DT_PDU_NPRACHConfiguration_FDD_ExtIEs * objPDUNPRACHConfiguration_FDD_ExtIEs);
void __si_xnap_debug_PDU_NPRACHConfiguration_FDD_ExtIEs( char * key, SI_XNAP_DT_PDU_NPRACHConfiguration_FDD_ExtIEs * objPDUNPRACHConfiguration_FDD_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NPRACHConfiguration_FDD_ExtIEs( SI_XNAP_DT_PDU_NPRACHConfiguration_FDD_ExtIEs ** objPDUNPRACHConfiguration_FDD_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NPRACHConfiguration_TDD_ExtIEs( SI_XNAP_DT_PDU_NPRACHConfiguration_TDD_ExtIEs * objPDUNPRACHConfiguration_TDD_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NPRACHConfiguration_TDD_ExtIEs( SI_XNAP_DT_PDU_NPRACHConfiguration_TDD_ExtIEs * objPDUNPRACHConfiguration_TDD_ExtIEs);
void __si_xnap_debug_PDU_NPRACHConfiguration_TDD_ExtIEs( char * key, SI_XNAP_DT_PDU_NPRACHConfiguration_TDD_ExtIEs * objPDUNPRACHConfiguration_TDD_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NPRACHConfiguration_TDD_ExtIEs( SI_XNAP_DT_PDU_NPRACHConfiguration_TDD_ExtIEs ** objPDUNPRACHConfiguration_TDD_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Non_AnchorCarrierFrequencylist_ExtIEs( SI_XNAP_DT_PDU_Non_AnchorCarrierFrequencylist_ExtIEs * objPDUNon_AnchorCarrierFrequencylist_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Non_AnchorCarrierFrequencylist_ExtIEs( SI_XNAP_DT_PDU_Non_AnchorCarrierFrequencylist_ExtIEs * objPDUNon_AnchorCarrierFrequencylist_ExtIEs);
void __si_xnap_debug_PDU_Non_AnchorCarrierFrequencylist_ExtIEs( char * key, SI_XNAP_DT_PDU_Non_AnchorCarrierFrequencylist_ExtIEs * objPDUNon_AnchorCarrierFrequencylist_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Non_AnchorCarrierFrequencylist_ExtIEs( SI_XNAP_DT_PDU_Non_AnchorCarrierFrequencylist_ExtIEs ** objPDUNon_AnchorCarrierFrequencylist_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NR_CGI_ExtIEs( SI_XNAP_DT_PDU_NR_CGI_ExtIEs * objPDUNR_CGI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NR_CGI_ExtIEs( SI_XNAP_DT_PDU_NR_CGI_ExtIEs * objPDUNR_CGI_ExtIEs);
void __si_xnap_debug_PDU_NR_CGI_ExtIEs( char * key, SI_XNAP_DT_PDU_NR_CGI_ExtIEs * objPDUNR_CGI_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NR_CGI_ExtIEs( SI_XNAP_DT_PDU_NR_CGI_ExtIEs ** objPDUNR_CGI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NR_U_Channel_Item_ExtIEs( SI_XNAP_DT_PDU_NR_U_Channel_Item_ExtIEs * objPDUNR_U_Channel_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NR_U_Channel_Item_ExtIEs( SI_XNAP_DT_PDU_NR_U_Channel_Item_ExtIEs * objPDUNR_U_Channel_Item_ExtIEs);
void __si_xnap_debug_PDU_NR_U_Channel_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_NR_U_Channel_Item_ExtIEs * objPDUNR_U_Channel_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NR_U_Channel_Item_ExtIEs( SI_XNAP_DT_PDU_NR_U_Channel_Item_ExtIEs ** objPDUNR_U_Channel_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NR_U_ChannelInfo_Item_ExtIEs( SI_XNAP_DT_PDU_NR_U_ChannelInfo_Item_ExtIEs * objPDUNR_U_ChannelInfo_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NR_U_ChannelInfo_Item_ExtIEs( SI_XNAP_DT_PDU_NR_U_ChannelInfo_Item_ExtIEs * objPDUNR_U_ChannelInfo_Item_ExtIEs);
void __si_xnap_debug_PDU_NR_U_ChannelInfo_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_NR_U_ChannelInfo_Item_ExtIEs * objPDUNR_U_ChannelInfo_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NR_U_ChannelInfo_Item_ExtIEs( SI_XNAP_DT_PDU_NR_U_ChannelInfo_Item_ExtIEs ** objPDUNR_U_ChannelInfo_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NRA2XServicesAuthorized_ExtIEs( SI_XNAP_DT_PDU_NRA2XServicesAuthorized_ExtIEs * objPDUNRA2XServicesAuthorized_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NRA2XServicesAuthorized_ExtIEs( SI_XNAP_DT_PDU_NRA2XServicesAuthorized_ExtIEs * objPDUNRA2XServicesAuthorized_ExtIEs);
void __si_xnap_debug_PDU_NRA2XServicesAuthorized_ExtIEs( char * key, SI_XNAP_DT_PDU_NRA2XServicesAuthorized_ExtIEs * objPDUNRA2XServicesAuthorized_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NRA2XServicesAuthorized_ExtIEs( SI_XNAP_DT_PDU_NRA2XServicesAuthorized_ExtIEs ** objPDUNRA2XServicesAuthorized_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NRFrequencyBandItem_ExtIEs( SI_XNAP_DT_PDU_NRFrequencyBandItem_ExtIEs * objPDUNRFrequencyBandItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NRFrequencyBandItem_ExtIEs( SI_XNAP_DT_PDU_NRFrequencyBandItem_ExtIEs * objPDUNRFrequencyBandItem_ExtIEs);
void __si_xnap_debug_PDU_NRFrequencyBandItem_ExtIEs( char * key, SI_XNAP_DT_PDU_NRFrequencyBandItem_ExtIEs * objPDUNRFrequencyBandItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NRFrequencyBandItem_ExtIEs( SI_XNAP_DT_PDU_NRFrequencyBandItem_ExtIEs ** objPDUNRFrequencyBandItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NRFrequencyInfo_ExtIEs( SI_XNAP_DT_PDU_NRFrequencyInfo_ExtIEs * objPDUNRFrequencyInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NRFrequencyInfo_ExtIEs( SI_XNAP_DT_PDU_NRFrequencyInfo_ExtIEs * objPDUNRFrequencyInfo_ExtIEs);
void __si_xnap_debug_PDU_NRFrequencyInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_NRFrequencyInfo_ExtIEs * objPDUNRFrequencyInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NRFrequencyInfo_ExtIEs( SI_XNAP_DT_PDU_NRFrequencyInfo_ExtIEs ** objPDUNRFrequencyInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NRModeInfo_ExtIEs( SI_XNAP_DT_PDU_NRModeInfo_ExtIEs * objPDUNRModeInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NRModeInfo_ExtIEs( SI_XNAP_DT_PDU_NRModeInfo_ExtIEs * objPDUNRModeInfo_ExtIEs);
void __si_xnap_debug_PDU_NRModeInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_NRModeInfo_ExtIEs * objPDUNRModeInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NRModeInfo_ExtIEs( SI_XNAP_DT_PDU_NRModeInfo_ExtIEs ** objPDUNRModeInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NRModeInfoFDD_ExtIEs( SI_XNAP_DT_PDU_NRModeInfoFDD_ExtIEs * objPDUNRModeInfoFDD_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NRModeInfoFDD_ExtIEs( SI_XNAP_DT_PDU_NRModeInfoFDD_ExtIEs * objPDUNRModeInfoFDD_ExtIEs);
void __si_xnap_debug_PDU_NRModeInfoFDD_ExtIEs( char * key, SI_XNAP_DT_PDU_NRModeInfoFDD_ExtIEs * objPDUNRModeInfoFDD_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NRModeInfoFDD_ExtIEs( SI_XNAP_DT_PDU_NRModeInfoFDD_ExtIEs ** objPDUNRModeInfoFDD_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NRModeInfoTDD_ExtIEs( SI_XNAP_DT_PDU_NRModeInfoTDD_ExtIEs * objPDUNRModeInfoTDD_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NRModeInfoTDD_ExtIEs( SI_XNAP_DT_PDU_NRModeInfoTDD_ExtIEs * objPDUNRModeInfoTDD_ExtIEs);
void __si_xnap_debug_PDU_NRModeInfoTDD_ExtIEs( char * key, SI_XNAP_DT_PDU_NRModeInfoTDD_ExtIEs * objPDUNRModeInfoTDD_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NRModeInfoTDD_ExtIEs( SI_XNAP_DT_PDU_NRModeInfoTDD_ExtIEs ** objPDUNRModeInfoTDD_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NRPagingeDRXInformation_ExtIEs( SI_XNAP_DT_PDU_NRPagingeDRXInformation_ExtIEs * objPDUNRPagingeDRXInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NRPagingeDRXInformation_ExtIEs( SI_XNAP_DT_PDU_NRPagingeDRXInformation_ExtIEs * objPDUNRPagingeDRXInformation_ExtIEs);
void __si_xnap_debug_PDU_NRPagingeDRXInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_NRPagingeDRXInformation_ExtIEs * objPDUNRPagingeDRXInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NRPagingeDRXInformation_ExtIEs( SI_XNAP_DT_PDU_NRPagingeDRXInformation_ExtIEs ** objPDUNRPagingeDRXInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NRPagingeDRXInformationforRRCINACTIVE_ExtIEs( SI_XNAP_DT_PDU_NRPagingeDRXInformationforRRCINACTIVE_ExtIEs * objPDUNRPagingeDRXInformationforRRCINACTIVE_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NRPagingeDRXInformationforRRCINACTIVE_ExtIEs( SI_XNAP_DT_PDU_NRPagingeDRXInformationforRRCINACTIVE_ExtIEs * objPDUNRPagingeDRXInformationforRRCINACTIVE_ExtIEs);
void __si_xnap_debug_PDU_NRPagingeDRXInformationforRRCINACTIVE_ExtIEs( char * key, SI_XNAP_DT_PDU_NRPagingeDRXInformationforRRCINACTIVE_ExtIEs * objPDUNRPagingeDRXInformationforRRCINACTIVE_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NRPagingeDRXInformationforRRCINACTIVE_ExtIEs( SI_XNAP_DT_PDU_NRPagingeDRXInformationforRRCINACTIVE_ExtIEs ** objPDUNRPagingeDRXInformationforRRCINACTIVE_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NRPagingLongeDRXInformationforRRCINACTIVE_ExtIEs( SI_XNAP_DT_PDU_NRPagingLongeDRXInformationforRRCINACTIVE_ExtIEs * objPDUNRPagingLongeDRXInformationforRRCINACTIVE_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NRPagingLongeDRXInformationforRRCINACTIVE_ExtIEs( SI_XNAP_DT_PDU_NRPagingLongeDRXInformationforRRCINACTIVE_ExtIEs * objPDUNRPagingLongeDRXInformationforRRCINACTIVE_ExtIEs);
void __si_xnap_debug_PDU_NRPagingLongeDRXInformationforRRCINACTIVE_ExtIEs( char * key, SI_XNAP_DT_PDU_NRPagingLongeDRXInformationforRRCINACTIVE_ExtIEs * objPDUNRPagingLongeDRXInformationforRRCINACTIVE_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NRPagingLongeDRXInformationforRRCINACTIVE_ExtIEs( SI_XNAP_DT_PDU_NRPagingLongeDRXInformationforRRCINACTIVE_ExtIEs ** objPDUNRPagingLongeDRXInformationforRRCINACTIVE_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NRPPaPositioningInformation_ExtIEs( SI_XNAP_DT_PDU_NRPPaPositioningInformation_ExtIEs * objPDUNRPPaPositioningInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NRPPaPositioningInformation_ExtIEs( SI_XNAP_DT_PDU_NRPPaPositioningInformation_ExtIEs * objPDUNRPPaPositioningInformation_ExtIEs);
void __si_xnap_debug_PDU_NRPPaPositioningInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_NRPPaPositioningInformation_ExtIEs * objPDUNRPPaPositioningInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NRPPaPositioningInformation_ExtIEs( SI_XNAP_DT_PDU_NRPPaPositioningInformation_ExtIEs ** objPDUNRPPaPositioningInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NRTransmissionBandwidth_ExtIEs( SI_XNAP_DT_PDU_NRTransmissionBandwidth_ExtIEs * objPDUNRTransmissionBandwidth_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NRTransmissionBandwidth_ExtIEs( SI_XNAP_DT_PDU_NRTransmissionBandwidth_ExtIEs * objPDUNRTransmissionBandwidth_ExtIEs);
void __si_xnap_debug_PDU_NRTransmissionBandwidth_ExtIEs( char * key, SI_XNAP_DT_PDU_NRTransmissionBandwidth_ExtIEs * objPDUNRTransmissionBandwidth_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NRTransmissionBandwidth_ExtIEs( SI_XNAP_DT_PDU_NRTransmissionBandwidth_ExtIEs ** objPDUNRTransmissionBandwidth_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Transmission_Bandwidth_asymmetric_ExtIEs( SI_XNAP_DT_PDU_Transmission_Bandwidth_asymmetric_ExtIEs * objPDUTransmission_Bandwidth_asymmetric_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Transmission_Bandwidth_asymmetric_ExtIEs( SI_XNAP_DT_PDU_Transmission_Bandwidth_asymmetric_ExtIEs * objPDUTransmission_Bandwidth_asymmetric_ExtIEs);
void __si_xnap_debug_PDU_Transmission_Bandwidth_asymmetric_ExtIEs( char * key, SI_XNAP_DT_PDU_Transmission_Bandwidth_asymmetric_ExtIEs * objPDUTransmission_Bandwidth_asymmetric_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Transmission_Bandwidth_asymmetric_ExtIEs( SI_XNAP_DT_PDU_Transmission_Bandwidth_asymmetric_ExtIEs ** objPDUTransmission_Bandwidth_asymmetric_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NRV2XServicesAuthorized_ExtIEs( SI_XNAP_DT_PDU_NRV2XServicesAuthorized_ExtIEs * objPDUNRV2XServicesAuthorized_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NRV2XServicesAuthorized_ExtIEs( SI_XNAP_DT_PDU_NRV2XServicesAuthorized_ExtIEs * objPDUNRV2XServicesAuthorized_ExtIEs);
void __si_xnap_debug_PDU_NRV2XServicesAuthorized_ExtIEs( char * key, SI_XNAP_DT_PDU_NRV2XServicesAuthorized_ExtIEs * objPDUNRV2XServicesAuthorized_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NRV2XServicesAuthorized_ExtIEs( SI_XNAP_DT_PDU_NRV2XServicesAuthorized_ExtIEs ** objPDUNRV2XServicesAuthorized_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_NRUESidelinkAggregateMaximumBitRate_ExtIEs( SI_XNAP_DT_PDU_NRUESidelinkAggregateMaximumBitRate_ExtIEs * objPDUNRUESidelinkAggregateMaximumBitRate_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_NRUESidelinkAggregateMaximumBitRate_ExtIEs( SI_XNAP_DT_PDU_NRUESidelinkAggregateMaximumBitRate_ExtIEs * objPDUNRUESidelinkAggregateMaximumBitRate_ExtIEs);
void __si_xnap_debug_PDU_NRUESidelinkAggregateMaximumBitRate_ExtIEs( char * key, SI_XNAP_DT_PDU_NRUESidelinkAggregateMaximumBitRate_ExtIEs * objPDUNRUESidelinkAggregateMaximumBitRate_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_NRUESidelinkAggregateMaximumBitRate_ExtIEs( SI_XNAP_DT_PDU_NRUESidelinkAggregateMaximumBitRate_ExtIEs ** objPDUNRUESidelinkAggregateMaximumBitRate_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PositioningInformation_ExtIEs( SI_XNAP_DT_PDU_PositioningInformation_ExtIEs * objPDUPositioningInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PositioningInformation_ExtIEs( SI_XNAP_DT_PDU_PositioningInformation_ExtIEs * objPDUPositioningInformation_ExtIEs);
void __si_xnap_debug_PDU_PositioningInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_PositioningInformation_ExtIEs * objPDUPositioningInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PositioningInformation_ExtIEs( SI_XNAP_DT_PDU_PositioningInformation_ExtIEs ** objPDUPositioningInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PacketErrorRate_ExtIEs( SI_XNAP_DT_PDU_PacketErrorRate_ExtIEs * objPDUPacketErrorRate_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PacketErrorRate_ExtIEs( SI_XNAP_DT_PDU_PacketErrorRate_ExtIEs * objPDUPacketErrorRate_ExtIEs);
void __si_xnap_debug_PDU_PacketErrorRate_ExtIEs( char * key, SI_XNAP_DT_PDU_PacketErrorRate_ExtIEs * objPDUPacketErrorRate_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PacketErrorRate_ExtIEs( SI_XNAP_DT_PDU_PacketErrorRate_ExtIEs ** objPDUPacketErrorRate_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PEIPSassistanceInformation_ExtIEs( SI_XNAP_DT_PDU_PEIPSassistanceInformation_ExtIEs * objPDUPEIPSassistanceInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PEIPSassistanceInformation_ExtIEs( SI_XNAP_DT_PDU_PEIPSassistanceInformation_ExtIEs * objPDUPEIPSassistanceInformation_ExtIEs);
void __si_xnap_debug_PDU_PEIPSassistanceInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_PEIPSassistanceInformation_ExtIEs * objPDUPEIPSassistanceInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PEIPSassistanceInformation_ExtIEs( SI_XNAP_DT_PDU_PEIPSassistanceInformation_ExtIEs ** objPDUPEIPSassistanceInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PC5QoSParameters_ExtIEs( SI_XNAP_DT_PDU_PC5QoSParameters_ExtIEs * objPDUPC5QoSParameters_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PC5QoSParameters_ExtIEs( SI_XNAP_DT_PDU_PC5QoSParameters_ExtIEs * objPDUPC5QoSParameters_ExtIEs);
void __si_xnap_debug_PDU_PC5QoSParameters_ExtIEs( char * key, SI_XNAP_DT_PDU_PC5QoSParameters_ExtIEs * objPDUPC5QoSParameters_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PC5QoSParameters_ExtIEs( SI_XNAP_DT_PDU_PC5QoSParameters_ExtIEs ** objPDUPC5QoSParameters_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PC5QoSFlowItem_ExtIEs( SI_XNAP_DT_PDU_PC5QoSFlowItem_ExtIEs * objPDUPC5QoSFlowItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PC5QoSFlowItem_ExtIEs( SI_XNAP_DT_PDU_PC5QoSFlowItem_ExtIEs * objPDUPC5QoSFlowItem_ExtIEs);
void __si_xnap_debug_PDU_PC5QoSFlowItem_ExtIEs( char * key, SI_XNAP_DT_PDU_PC5QoSFlowItem_ExtIEs * objPDUPC5QoSFlowItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PC5QoSFlowItem_ExtIEs( SI_XNAP_DT_PDU_PC5QoSFlowItem_ExtIEs ** objPDUPC5QoSFlowItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PC5FlowBitRates_ExtIEs( SI_XNAP_DT_PDU_PC5FlowBitRates_ExtIEs * objPDUPC5FlowBitRates_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PC5FlowBitRates_ExtIEs( SI_XNAP_DT_PDU_PC5FlowBitRates_ExtIEs * objPDUPC5FlowBitRates_ExtIEs);
void __si_xnap_debug_PDU_PC5FlowBitRates_ExtIEs( char * key, SI_XNAP_DT_PDU_PC5FlowBitRates_ExtIEs * objPDUPC5FlowBitRates_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PC5FlowBitRates_ExtIEs( SI_XNAP_DT_PDU_PC5FlowBitRates_ExtIEs ** objPDUPC5FlowBitRates_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDCPChangeIndication_ExtIEs( SI_XNAP_DT_PDU_PDCPChangeIndication_ExtIEs * objPDUPDCPChangeIndication_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDCPChangeIndication_ExtIEs( SI_XNAP_DT_PDU_PDCPChangeIndication_ExtIEs * objPDUPDCPChangeIndication_ExtIEs);
void __si_xnap_debug_PDU_PDCPChangeIndication_ExtIEs( char * key, SI_XNAP_DT_PDU_PDCPChangeIndication_ExtIEs * objPDUPDCPChangeIndication_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDCPChangeIndication_ExtIEs( SI_XNAP_DT_PDU_PDCPChangeIndication_ExtIEs ** objPDUPDCPChangeIndication_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDCPSNLength_ExtIEs( SI_XNAP_DT_PDU_PDCPSNLength_ExtIEs * objPDUPDCPSNLength_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDCPSNLength_ExtIEs( SI_XNAP_DT_PDU_PDCPSNLength_ExtIEs * objPDUPDCPSNLength_ExtIEs);
void __si_xnap_debug_PDU_PDCPSNLength_ExtIEs( char * key, SI_XNAP_DT_PDU_PDCPSNLength_ExtIEs * objPDUPDCPSNLength_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDCPSNLength_ExtIEs( SI_XNAP_DT_PDU_PDCPSNLength_ExtIEs ** objPDUPDCPSNLength_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSetQoSParameters_ExtIEs( SI_XNAP_DT_PDU_PDUSetQoSParameters_ExtIEs * objPDUPDUSetQoSParameters_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSetQoSParameters_ExtIEs( SI_XNAP_DT_PDU_PDUSetQoSParameters_ExtIEs * objPDUPDUSetQoSParameters_ExtIEs);
void __si_xnap_debug_PDU_PDUSetQoSParameters_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSetQoSParameters_ExtIEs * objPDUPDUSetQoSParameters_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSetQoSParameters_ExtIEs( SI_XNAP_DT_PDU_PDUSetQoSParameters_ExtIEs ** objPDUPDUSetQoSParameters_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSetQoSInformation_ExtIEs( SI_XNAP_DT_PDU_PDUSetQoSInformation_ExtIEs * objPDUPDUSetQoSInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSetQoSInformation_ExtIEs( SI_XNAP_DT_PDU_PDUSetQoSInformation_ExtIEs * objPDUPDUSetQoSInformation_ExtIEs);
void __si_xnap_debug_PDU_PDUSetQoSInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSetQoSInformation_ExtIEs * objPDUPDUSetQoSInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSetQoSInformation_ExtIEs( SI_XNAP_DT_PDU_PDUSetQoSInformation_ExtIEs ** objPDUPDUSetQoSInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs * objPDUPDUSessionAggregateMaximumBitRate_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs * objPDUPDUSessionAggregateMaximumBitRate_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs * objPDUPDUSessionAggregateMaximumBitRate_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAggregateMaximumBitRate_ExtIEs ** objPDUPDUSessionAggregateMaximumBitRate_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSession_List_withCause_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSession_List_withCause_Item_ExtIEs * objPDUPDUSession_List_withCause_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSession_List_withCause_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSession_List_withCause_Item_ExtIEs * objPDUPDUSession_List_withCause_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSession_List_withCause_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSession_List_withCause_Item_ExtIEs * objPDUPDUSession_List_withCause_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSession_List_withCause_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSession_List_withCause_Item_ExtIEs ** objPDUPDUSession_List_withCause_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSession_List_withDataForwardingFromTarget_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSession_List_withDataForwardingFromTarget_Item_ExtIEs * objPDUPDUSession_List_withDataForwardingFromTarget_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSession_List_withDataForwardingFromTarget_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSession_List_withDataForwardingFromTarget_Item_ExtIEs * objPDUPDUSession_List_withDataForwardingFromTarget_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSession_List_withDataForwardingFromTarget_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSession_List_withDataForwardingFromTarget_Item_ExtIEs * objPDUPDUSession_List_withDataForwardingFromTarget_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSession_List_withDataForwardingFromTarget_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSession_List_withDataForwardingFromTarget_Item_ExtIEs ** objPDUPDUSession_List_withDataForwardingFromTarget_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSession_List_withDataForwardingRequest_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSession_List_withDataForwardingRequest_Item_ExtIEs * objPDUPDUSession_List_withDataForwardingRequest_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSession_List_withDataForwardingRequest_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSession_List_withDataForwardingRequest_Item_ExtIEs * objPDUPDUSession_List_withDataForwardingRequest_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSession_List_withDataForwardingRequest_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSession_List_withDataForwardingRequest_Item_ExtIEs * objPDUPDUSession_List_withDataForwardingRequest_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSession_List_withDataForwardingRequest_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSession_List_withDataForwardingRequest_Item_ExtIEs ** objPDUPDUSession_List_withDataForwardingRequest_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionsListToBeReleased_UPError_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionsListToBeReleased_UPError_Item_ExtIEs * objPDUPDUSessionsListToBeReleased_UPError_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionsListToBeReleased_UPError_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionsListToBeReleased_UPError_Item_ExtIEs * objPDUPDUSessionsListToBeReleased_UPError_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionsListToBeReleased_UPError_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionsListToBeReleased_UPError_Item_ExtIEs * objPDUPDUSessionsListToBeReleased_UPError_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionsListToBeReleased_UPError_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionsListToBeReleased_UPError_Item_ExtIEs ** objPDUPDUSessionsListToBeReleased_UPError_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourcesAdmitted_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourcesAdmitted_Item_ExtIEs * objPDUPDUSessionResourcesAdmitted_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourcesAdmitted_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourcesAdmitted_Item_ExtIEs * objPDUPDUSessionResourcesAdmitted_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourcesAdmitted_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourcesAdmitted_Item_ExtIEs * objPDUPDUSessionResourcesAdmitted_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourcesAdmitted_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourcesAdmitted_Item_ExtIEs ** objPDUPDUSessionResourcesAdmitted_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceAdmittedInfo_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceAdmittedInfo_ExtIEs * objPDUPDUSessionResourceAdmittedInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceAdmittedInfo_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceAdmittedInfo_ExtIEs * objPDUPDUSessionResourceAdmittedInfo_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceAdmittedInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceAdmittedInfo_ExtIEs * objPDUPDUSessionResourceAdmittedInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceAdmittedInfo_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceAdmittedInfo_ExtIEs ** objPDUPDUSessionResourceAdmittedInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourcesNotAdmitted_Item_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourcesNotAdmitted_Item_Item_ExtIEs * objPDUPDUSessionResourcesNotAdmitted_Item_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourcesNotAdmitted_Item_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourcesNotAdmitted_Item_Item_ExtIEs * objPDUPDUSessionResourcesNotAdmitted_Item_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourcesNotAdmitted_Item_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourcesNotAdmitted_Item_Item_ExtIEs * objPDUPDUSessionResourcesNotAdmitted_Item_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourcesNotAdmitted_Item_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourcesNotAdmitted_Item_Item_ExtIEs ** objPDUPDUSessionResourcesNotAdmitted_Item_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourcesToBeSetup_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourcesToBeSetup_Item_ExtIEs * objPDUPDUSessionResourcesToBeSetup_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourcesToBeSetup_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourcesToBeSetup_Item_ExtIEs * objPDUPDUSessionResourcesToBeSetup_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourcesToBeSetup_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourcesToBeSetup_Item_ExtIEs * objPDUPDUSessionResourcesToBeSetup_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourcesToBeSetup_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourcesToBeSetup_Item_ExtIEs ** objPDUPDUSessionResourcesToBeSetup_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceSetupInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceSetupInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceSetupInfo_SNterminated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceSetupInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceSetupInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceSetupInfo_SNterminated_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceSetupInfo_SNterminated_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceSetupInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceSetupInfo_SNterminated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceSetupInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceSetupInfo_SNterminated_ExtIEs ** objPDUPDUSessionResourceSetupInfo_SNterminated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSFlowsToBeSetup_List_Setup_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsToBeSetup_List_Setup_SNterminated_Item_ExtIEs * objPDUQoSFlowsToBeSetup_List_Setup_SNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSFlowsToBeSetup_List_Setup_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsToBeSetup_List_Setup_SNterminated_Item_ExtIEs * objPDUQoSFlowsToBeSetup_List_Setup_SNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_QoSFlowsToBeSetup_List_Setup_SNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSFlowsToBeSetup_List_Setup_SNterminated_Item_ExtIEs * objPDUQoSFlowsToBeSetup_List_Setup_SNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSFlowsToBeSetup_List_Setup_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsToBeSetup_List_Setup_SNterminated_Item_ExtIEs ** objPDUQoSFlowsToBeSetup_List_Setup_SNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceSetupResponseInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceSetupResponseInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceSetupResponseInfo_SNterminated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceSetupResponseInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceSetupResponseInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceSetupResponseInfo_SNterminated_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceSetupResponseInfo_SNterminated_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceSetupResponseInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceSetupResponseInfo_SNterminated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceSetupResponseInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceSetupResponseInfo_SNterminated_ExtIEs ** objPDUPDUSessionResourceSetupResponseInfo_SNterminated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBsToBeSetupList_SetupResponse_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeSetupList_SetupResponse_SNterminated_Item_ExtIEs * objPDUDRBsToBeSetupList_SetupResponse_SNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBsToBeSetupList_SetupResponse_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeSetupList_SetupResponse_SNterminated_Item_ExtIEs * objPDUDRBsToBeSetupList_SetupResponse_SNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_DRBsToBeSetupList_SetupResponse_SNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBsToBeSetupList_SetupResponse_SNterminated_Item_ExtIEs * objPDUDRBsToBeSetupList_SetupResponse_SNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBsToBeSetupList_SetupResponse_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeSetupList_SetupResponse_SNterminated_Item_ExtIEs ** objPDUDRBsToBeSetupList_SetupResponse_SNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item_ExtIEs * objPDUQoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item_ExtIEs * objPDUQoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item_ExtIEs * objPDUQoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item_ExtIEs ** objPDUQoSFlowsMappedtoDRB_SetupResponse_SNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceSetupInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceSetupInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceSetupInfo_MNterminated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceSetupInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceSetupInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceSetupInfo_MNterminated_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceSetupInfo_MNterminated_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceSetupInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceSetupInfo_MNterminated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceSetupInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceSetupInfo_MNterminated_ExtIEs ** objPDUPDUSessionResourceSetupInfo_MNterminated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBsToBeSetupList_Setup_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeSetupList_Setup_MNterminated_Item_ExtIEs * objPDUDRBsToBeSetupList_Setup_MNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBsToBeSetupList_Setup_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeSetupList_Setup_MNterminated_Item_ExtIEs * objPDUDRBsToBeSetupList_Setup_MNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_DRBsToBeSetupList_Setup_MNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBsToBeSetupList_Setup_MNterminated_Item_ExtIEs * objPDUDRBsToBeSetupList_Setup_MNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBsToBeSetupList_Setup_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeSetupList_Setup_MNterminated_Item_ExtIEs ** objPDUDRBsToBeSetupList_Setup_MNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSFlowsMappedtoDRB_Setup_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsMappedtoDRB_Setup_MNterminated_Item_ExtIEs * objPDUQoSFlowsMappedtoDRB_Setup_MNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSFlowsMappedtoDRB_Setup_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsMappedtoDRB_Setup_MNterminated_Item_ExtIEs * objPDUQoSFlowsMappedtoDRB_Setup_MNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_QoSFlowsMappedtoDRB_Setup_MNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSFlowsMappedtoDRB_Setup_MNterminated_Item_ExtIEs * objPDUQoSFlowsMappedtoDRB_Setup_MNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSFlowsMappedtoDRB_Setup_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsMappedtoDRB_Setup_MNterminated_Item_ExtIEs ** objPDUQoSFlowsMappedtoDRB_Setup_MNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceSetupResponseInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceSetupResponseInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceSetupResponseInfo_MNterminated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceSetupResponseInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceSetupResponseInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceSetupResponseInfo_MNterminated_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceSetupResponseInfo_MNterminated_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceSetupResponseInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceSetupResponseInfo_MNterminated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceSetupResponseInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceSetupResponseInfo_MNterminated_ExtIEs ** objPDUPDUSessionResourceSetupResponseInfo_MNterminated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBsAdmittedList_SetupResponse_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsAdmittedList_SetupResponse_MNterminated_Item_ExtIEs * objPDUDRBsAdmittedList_SetupResponse_MNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBsAdmittedList_SetupResponse_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsAdmittedList_SetupResponse_MNterminated_Item_ExtIEs * objPDUDRBsAdmittedList_SetupResponse_MNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_DRBsAdmittedList_SetupResponse_MNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBsAdmittedList_SetupResponse_MNterminated_Item_ExtIEs * objPDUDRBsAdmittedList_SetupResponse_MNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBsAdmittedList_SetupResponse_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsAdmittedList_SetupResponse_MNterminated_Item_ExtIEs ** objPDUDRBsAdmittedList_SetupResponse_MNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item_ExtIEs * objPDUQoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item_ExtIEs * objPDUQoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item_ExtIEs * objPDUQoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item_ExtIEs ** objPDUQoSFlowsMappedtoDRB_SetupResponse_MNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceModificationInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModificationInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceModificationInfo_SNterminated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceModificationInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModificationInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceModificationInfo_SNterminated_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceModificationInfo_SNterminated_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceModificationInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceModificationInfo_SNterminated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceModificationInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModificationInfo_SNterminated_ExtIEs ** objPDUPDUSessionResourceModificationInfo_SNterminated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSFlowsToBeSetup_List_Modified_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsToBeSetup_List_Modified_SNterminated_Item_ExtIEs * objPDUQoSFlowsToBeSetup_List_Modified_SNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSFlowsToBeSetup_List_Modified_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsToBeSetup_List_Modified_SNterminated_Item_ExtIEs * objPDUQoSFlowsToBeSetup_List_Modified_SNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_QoSFlowsToBeSetup_List_Modified_SNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSFlowsToBeSetup_List_Modified_SNterminated_Item_ExtIEs * objPDUQoSFlowsToBeSetup_List_Modified_SNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSFlowsToBeSetup_List_Modified_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsToBeSetup_List_Modified_SNterminated_Item_ExtIEs ** objPDUQoSFlowsToBeSetup_List_Modified_SNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBsToBeModified_List_Modified_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeModified_List_Modified_SNterminated_Item_ExtIEs * objPDUDRBsToBeModified_List_Modified_SNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBsToBeModified_List_Modified_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeModified_List_Modified_SNterminated_Item_ExtIEs * objPDUDRBsToBeModified_List_Modified_SNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_DRBsToBeModified_List_Modified_SNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBsToBeModified_List_Modified_SNterminated_Item_ExtIEs * objPDUDRBsToBeModified_List_Modified_SNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBsToBeModified_List_Modified_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeModified_List_Modified_SNterminated_Item_ExtIEs ** objPDUDRBsToBeModified_List_Modified_SNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceModificationResponseInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModificationResponseInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceModificationResponseInfo_SNterminated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceModificationResponseInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModificationResponseInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceModificationResponseInfo_SNterminated_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceModificationResponseInfo_SNterminated_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceModificationResponseInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceModificationResponseInfo_SNterminated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceModificationResponseInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModificationResponseInfo_SNterminated_ExtIEs ** objPDUPDUSessionResourceModificationResponseInfo_SNterminated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item_ExtIEs * objPDUDRBsToBeModifiedList_ModificationResponse_SNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item_ExtIEs * objPDUDRBsToBeModifiedList_ModificationResponse_SNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item_ExtIEs * objPDUDRBsToBeModifiedList_ModificationResponse_SNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeModifiedList_ModificationResponse_SNterminated_Item_ExtIEs ** objPDUDRBsToBeModifiedList_ModificationResponse_SNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceModificationInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModificationInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceModificationInfo_MNterminated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceModificationInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModificationInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceModificationInfo_MNterminated_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceModificationInfo_MNterminated_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceModificationInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceModificationInfo_MNterminated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceModificationInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModificationInfo_MNterminated_ExtIEs ** objPDUPDUSessionResourceModificationInfo_MNterminated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBsToBeModifiedList_Modification_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeModifiedList_Modification_MNterminated_Item_ExtIEs * objPDUDRBsToBeModifiedList_Modification_MNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBsToBeModifiedList_Modification_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeModifiedList_Modification_MNterminated_Item_ExtIEs * objPDUDRBsToBeModifiedList_Modification_MNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_DRBsToBeModifiedList_Modification_MNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBsToBeModifiedList_Modification_MNterminated_Item_ExtIEs * objPDUDRBsToBeModifiedList_Modification_MNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBsToBeModifiedList_Modification_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeModifiedList_Modification_MNterminated_Item_ExtIEs ** objPDUDRBsToBeModifiedList_Modification_MNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceModificationResponseInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModificationResponseInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceModificationResponseInfo_MNterminated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceModificationResponseInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModificationResponseInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceModificationResponseInfo_MNterminated_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceModificationResponseInfo_MNterminated_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceModificationResponseInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceModificationResponseInfo_MNterminated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceModificationResponseInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModificationResponseInfo_MNterminated_ExtIEs ** objPDUPDUSessionResourceModificationResponseInfo_MNterminated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBsAdmittedList_ModificationResponse_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsAdmittedList_ModificationResponse_MNterminated_Item_ExtIEs * objPDUDRBsAdmittedList_ModificationResponse_MNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBsAdmittedList_ModificationResponse_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsAdmittedList_ModificationResponse_MNterminated_Item_ExtIEs * objPDUDRBsAdmittedList_ModificationResponse_MNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_DRBsAdmittedList_ModificationResponse_MNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBsAdmittedList_ModificationResponse_MNterminated_Item_ExtIEs * objPDUDRBsAdmittedList_ModificationResponse_MNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBsAdmittedList_ModificationResponse_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsAdmittedList_ModificationResponse_MNterminated_Item_ExtIEs ** objPDUDRBsAdmittedList_ModificationResponse_MNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceChangeRequiredInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceChangeRequiredInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceChangeRequiredInfo_SNterminated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceChangeRequiredInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceChangeRequiredInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceChangeRequiredInfo_SNterminated_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceChangeRequiredInfo_SNterminated_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceChangeRequiredInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceChangeRequiredInfo_SNterminated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceChangeRequiredInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceChangeRequiredInfo_SNterminated_ExtIEs ** objPDUPDUSessionResourceChangeRequiredInfo_SNterminated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceChangeConfirmInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceChangeConfirmInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceChangeConfirmInfo_SNterminated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceChangeConfirmInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceChangeConfirmInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceChangeConfirmInfo_SNterminated_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceChangeConfirmInfo_SNterminated_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceChangeConfirmInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceChangeConfirmInfo_SNterminated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceChangeConfirmInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceChangeConfirmInfo_SNterminated_ExtIEs ** objPDUPDUSessionResourceChangeConfirmInfo_SNterminated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceChangeRequiredInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceChangeRequiredInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceChangeRequiredInfo_MNterminated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceChangeRequiredInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceChangeRequiredInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceChangeRequiredInfo_MNterminated_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceChangeRequiredInfo_MNterminated_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceChangeRequiredInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceChangeRequiredInfo_MNterminated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceChangeRequiredInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceChangeRequiredInfo_MNterminated_ExtIEs ** objPDUPDUSessionResourceChangeRequiredInfo_MNterminated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceChangeConfirmInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceChangeConfirmInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceChangeConfirmInfo_MNterminated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceChangeConfirmInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceChangeConfirmInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceChangeConfirmInfo_MNterminated_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceChangeConfirmInfo_MNterminated_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceChangeConfirmInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceChangeConfirmInfo_MNterminated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceChangeConfirmInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceChangeConfirmInfo_MNterminated_ExtIEs ** objPDUPDUSessionResourceChangeConfirmInfo_MNterminated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceModRqdInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModRqdInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceModRqdInfo_SNterminated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceModRqdInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModRqdInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceModRqdInfo_SNterminated_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceModRqdInfo_SNterminated_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceModRqdInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceModRqdInfo_SNterminated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceModRqdInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModRqdInfo_SNterminated_ExtIEs ** objPDUPDUSessionResourceModRqdInfo_SNterminated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBsToBeSetup_List_ModRqd_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeSetup_List_ModRqd_SNterminated_Item_ExtIEs * objPDUDRBsToBeSetup_List_ModRqd_SNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBsToBeSetup_List_ModRqd_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeSetup_List_ModRqd_SNterminated_Item_ExtIEs * objPDUDRBsToBeSetup_List_ModRqd_SNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_DRBsToBeSetup_List_ModRqd_SNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBsToBeSetup_List_ModRqd_SNterminated_Item_ExtIEs * objPDUDRBsToBeSetup_List_ModRqd_SNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBsToBeSetup_List_ModRqd_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeSetup_List_ModRqd_SNterminated_Item_ExtIEs ** objPDUDRBsToBeSetup_List_ModRqd_SNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs * objPDUQoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs * objPDUQoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs * objPDUQoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs ** objPDUQoSFlowsSetupMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBsToBeModified_List_ModRqd_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeModified_List_ModRqd_SNterminated_Item_ExtIEs * objPDUDRBsToBeModified_List_ModRqd_SNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBsToBeModified_List_ModRqd_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeModified_List_ModRqd_SNterminated_Item_ExtIEs * objPDUDRBsToBeModified_List_ModRqd_SNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_DRBsToBeModified_List_ModRqd_SNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBsToBeModified_List_ModRqd_SNterminated_Item_ExtIEs * objPDUDRBsToBeModified_List_ModRqd_SNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBsToBeModified_List_ModRqd_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeModified_List_ModRqd_SNterminated_Item_ExtIEs ** objPDUDRBsToBeModified_List_ModRqd_SNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs * objPDUQoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs * objPDUQoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs * objPDUQoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs ** objPDUQoSFlowsModifiedMappedtoDRB_ModRqd_SNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceModConfirmInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModConfirmInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceModConfirmInfo_SNterminated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceModConfirmInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModConfirmInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceModConfirmInfo_SNterminated_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceModConfirmInfo_SNterminated_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceModConfirmInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceModConfirmInfo_SNterminated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceModConfirmInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModConfirmInfo_SNterminated_ExtIEs ** objPDUPDUSessionResourceModConfirmInfo_SNterminated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBsAdmittedList_ModConfirm_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsAdmittedList_ModConfirm_SNterminated_Item_ExtIEs * objPDUDRBsAdmittedList_ModConfirm_SNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBsAdmittedList_ModConfirm_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsAdmittedList_ModConfirm_SNterminated_Item_ExtIEs * objPDUDRBsAdmittedList_ModConfirm_SNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_DRBsAdmittedList_ModConfirm_SNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBsAdmittedList_ModConfirm_SNterminated_Item_ExtIEs * objPDUDRBsAdmittedList_ModConfirm_SNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBsAdmittedList_ModConfirm_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsAdmittedList_ModConfirm_SNterminated_Item_ExtIEs ** objPDUDRBsAdmittedList_ModConfirm_SNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceModRqdInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModRqdInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceModRqdInfo_MNterminated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceModRqdInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModRqdInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceModRqdInfo_MNterminated_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceModRqdInfo_MNterminated_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceModRqdInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceModRqdInfo_MNterminated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceModRqdInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModRqdInfo_MNterminated_ExtIEs ** objPDUPDUSessionResourceModRqdInfo_MNterminated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBsToBeModified_List_ModRqd_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeModified_List_ModRqd_MNterminated_Item_ExtIEs * objPDUDRBsToBeModified_List_ModRqd_MNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBsToBeModified_List_ModRqd_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeModified_List_ModRqd_MNterminated_Item_ExtIEs * objPDUDRBsToBeModified_List_ModRqd_MNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_DRBsToBeModified_List_ModRqd_MNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBsToBeModified_List_ModRqd_MNterminated_Item_ExtIEs * objPDUDRBsToBeModified_List_ModRqd_MNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBsToBeModified_List_ModRqd_MNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeModified_List_ModRqd_MNterminated_Item_ExtIEs ** objPDUDRBsToBeModified_List_ModRqd_MNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceModConfirmInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModConfirmInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceModConfirmInfo_MNterminated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceModConfirmInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModConfirmInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceModConfirmInfo_MNterminated_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceModConfirmInfo_MNterminated_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceModConfirmInfo_MNterminated_ExtIEs * objPDUPDUSessionResourceModConfirmInfo_MNterminated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceModConfirmInfo_MNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceModConfirmInfo_MNterminated_ExtIEs ** objPDUPDUSessionResourceModConfirmInfo_MNterminated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceBearerSetupCompleteInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceBearerSetupCompleteInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceBearerSetupCompleteInfo_SNterminated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceBearerSetupCompleteInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceBearerSetupCompleteInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceBearerSetupCompleteInfo_SNterminated_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceBearerSetupCompleteInfo_SNterminated_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceBearerSetupCompleteInfo_SNterminated_ExtIEs * objPDUPDUSessionResourceBearerSetupCompleteInfo_SNterminated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceBearerSetupCompleteInfo_SNterminated_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceBearerSetupCompleteInfo_SNterminated_ExtIEs ** objPDUPDUSessionResourceBearerSetupCompleteInfo_SNterminated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item_ExtIEs * objPDUDRBsToBeSetupList_BearerSetupComplete_SNterminated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item_ExtIEs * objPDUDRBsToBeSetupList_BearerSetupComplete_SNterminated_Item_ExtIEs);
void __si_xnap_debug_PDU_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item_ExtIEs * objPDUDRBsToBeSetupList_BearerSetupComplete_SNterminated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item_ExtIEs( SI_XNAP_DT_PDU_DRBsToBeSetupList_BearerSetupComplete_SNterminated_Item_ExtIEs ** objPDUDRBsToBeSetupList_BearerSetupComplete_SNterminated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs * objPDUPDUSessionResourceSecondaryRATUsageItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs * objPDUPDUSessionResourceSecondaryRATUsageItem_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs * objPDUPDUSessionResourceSecondaryRATUsageItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourceSecondaryRATUsageItem_ExtIEs ** objPDUPDUSessionResourceSecondaryRATUsageItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionUsageReport_ExtIEs( SI_XNAP_DT_PDU_PDUSessionUsageReport_ExtIEs * objPDUPDUSessionUsageReport_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionUsageReport_ExtIEs( SI_XNAP_DT_PDU_PDUSessionUsageReport_ExtIEs * objPDUPDUSessionUsageReport_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionUsageReport_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionUsageReport_ExtIEs * objPDUPDUSessionUsageReport_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionUsageReport_ExtIEs( SI_XNAP_DT_PDU_PDUSessionUsageReport_ExtIEs ** objPDUPDUSessionUsageReport_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Periodical_ExtIEs( SI_XNAP_DT_PDU_Periodical_ExtIEs * objPDUPeriodical_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Periodical_ExtIEs( SI_XNAP_DT_PDU_Periodical_ExtIEs * objPDUPeriodical_ExtIEs);
void __si_xnap_debug_PDU_Periodical_ExtIEs( char * key, SI_XNAP_DT_PDU_Periodical_ExtIEs * objPDUPeriodical_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Periodical_ExtIEs( SI_XNAP_DT_PDU_Periodical_ExtIEs ** objPDUPeriodical_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PLMNAreaBasedQMC_ExtIEs( SI_XNAP_DT_PDU_PLMNAreaBasedQMC_ExtIEs * objPDUPLMNAreaBasedQMC_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PLMNAreaBasedQMC_ExtIEs( SI_XNAP_DT_PDU_PLMNAreaBasedQMC_ExtIEs * objPDUPLMNAreaBasedQMC_ExtIEs);
void __si_xnap_debug_PDU_PLMNAreaBasedQMC_ExtIEs( char * key, SI_XNAP_DT_PDU_PLMNAreaBasedQMC_ExtIEs * objPDUPLMNAreaBasedQMC_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PLMNAreaBasedQMC_ExtIEs( SI_XNAP_DT_PDU_PLMNAreaBasedQMC_ExtIEs ** objPDUPLMNAreaBasedQMC_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PosPartialUEContextInfo_ExtIEs( SI_XNAP_DT_PDU_PosPartialUEContextInfo_ExtIEs * objPDUPosPartialUEContextInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PosPartialUEContextInfo_ExtIEs( SI_XNAP_DT_PDU_PosPartialUEContextInfo_ExtIEs * objPDUPosPartialUEContextInfo_ExtIEs);
void __si_xnap_debug_PDU_PosPartialUEContextInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_PosPartialUEContextInfo_ExtIEs * objPDUPosPartialUEContextInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PosPartialUEContextInfo_ExtIEs( SI_XNAP_DT_PDU_PosPartialUEContextInfo_ExtIEs ** objPDUPosPartialUEContextInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PredictedUETrajectory_Item_ExtIEs( SI_XNAP_DT_PDU_PredictedUETrajectory_Item_ExtIEs * objPDUPredictedUETrajectory_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PredictedUETrajectory_Item_ExtIEs( SI_XNAP_DT_PDU_PredictedUETrajectory_Item_ExtIEs * objPDUPredictedUETrajectory_Item_ExtIEs);
void __si_xnap_debug_PDU_PredictedUETrajectory_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PredictedUETrajectory_Item_ExtIEs * objPDUPredictedUETrajectory_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PredictedUETrajectory_Item_ExtIEs( SI_XNAP_DT_PDU_PredictedUETrajectory_Item_ExtIEs ** objPDUPredictedUETrajectory_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PredictedTrajectoryCellInfo_ExtIEs( SI_XNAP_DT_PDU_PredictedTrajectoryCellInfo_ExtIEs * objPDUPredictedTrajectoryCellInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PredictedTrajectoryCellInfo_ExtIEs( SI_XNAP_DT_PDU_PredictedTrajectoryCellInfo_ExtIEs * objPDUPredictedTrajectoryCellInfo_ExtIEs);
void __si_xnap_debug_PDU_PredictedTrajectoryCellInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_PredictedTrajectoryCellInfo_ExtIEs * objPDUPredictedTrajectoryCellInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PredictedTrajectoryCellInfo_ExtIEs( SI_XNAP_DT_PDU_PredictedTrajectoryCellInfo_ExtIEs ** objPDUPredictedTrajectoryCellInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PredictedTrajectoryNGRANCellInfo_ExtIEs( SI_XNAP_DT_PDU_PredictedTrajectoryNGRANCellInfo_ExtIEs * objPDUPredictedTrajectoryNGRANCellInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PredictedTrajectoryNGRANCellInfo_ExtIEs( SI_XNAP_DT_PDU_PredictedTrajectoryNGRANCellInfo_ExtIEs * objPDUPredictedTrajectoryNGRANCellInfo_ExtIEs);
void __si_xnap_debug_PDU_PredictedTrajectoryNGRANCellInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_PredictedTrajectoryNGRANCellInfo_ExtIEs * objPDUPredictedTrajectoryNGRANCellInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PredictedTrajectoryNGRANCellInfo_ExtIEs( SI_XNAP_DT_PDU_PredictedTrajectoryNGRANCellInfo_ExtIEs ** objPDUPredictedTrajectoryNGRANCellInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ProtectedE_UTRAResourceIndication_ExtIEs( SI_XNAP_DT_PDU_ProtectedE_UTRAResourceIndication_ExtIEs * objPDUProtectedE_UTRAResourceIndication_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ProtectedE_UTRAResourceIndication_ExtIEs( SI_XNAP_DT_PDU_ProtectedE_UTRAResourceIndication_ExtIEs * objPDUProtectedE_UTRAResourceIndication_ExtIEs);
void __si_xnap_debug_PDU_ProtectedE_UTRAResourceIndication_ExtIEs( char * key, SI_XNAP_DT_PDU_ProtectedE_UTRAResourceIndication_ExtIEs * objPDUProtectedE_UTRAResourceIndication_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ProtectedE_UTRAResourceIndication_ExtIEs( SI_XNAP_DT_PDU_ProtectedE_UTRAResourceIndication_ExtIEs ** objPDUProtectedE_UTRAResourceIndication_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ProtectedE_UTRAResource_Item_ExtIEs( SI_XNAP_DT_PDU_ProtectedE_UTRAResource_Item_ExtIEs * objPDUProtectedE_UTRAResource_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ProtectedE_UTRAResource_Item_ExtIEs( SI_XNAP_DT_PDU_ProtectedE_UTRAResource_Item_ExtIEs * objPDUProtectedE_UTRAResource_Item_ExtIEs);
void __si_xnap_debug_PDU_ProtectedE_UTRAResource_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_ProtectedE_UTRAResource_Item_ExtIEs * objPDUProtectedE_UTRAResource_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ProtectedE_UTRAResource_Item_ExtIEs( SI_XNAP_DT_PDU_ProtectedE_UTRAResource_Item_ExtIEs ** objPDUProtectedE_UTRAResource_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ProtectedE_UTRAFootprintTimePattern_ExtIEs( SI_XNAP_DT_PDU_ProtectedE_UTRAFootprintTimePattern_ExtIEs * objPDUProtectedE_UTRAFootprintTimePattern_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ProtectedE_UTRAFootprintTimePattern_ExtIEs( SI_XNAP_DT_PDU_ProtectedE_UTRAFootprintTimePattern_ExtIEs * objPDUProtectedE_UTRAFootprintTimePattern_ExtIEs);
void __si_xnap_debug_PDU_ProtectedE_UTRAFootprintTimePattern_ExtIEs( char * key, SI_XNAP_DT_PDU_ProtectedE_UTRAFootprintTimePattern_ExtIEs * objPDUProtectedE_UTRAFootprintTimePattern_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ProtectedE_UTRAFootprintTimePattern_ExtIEs( SI_XNAP_DT_PDU_ProtectedE_UTRAFootprintTimePattern_ExtIEs ** objPDUProtectedE_UTRAFootprintTimePattern_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs( SI_XNAP_DT_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs * objPDUPNI_NPN_AreaScopeofMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs( SI_XNAP_DT_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs * objPDUPNI_NPN_AreaScopeofMDT_ExtIEs);
void __si_xnap_debug_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs( char * key, SI_XNAP_DT_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs * objPDUPNI_NPN_AreaScopeofMDT_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs( SI_XNAP_DT_PDU_PNI_NPN_AreaScopeofMDT_ExtIEs ** objPDUPNI_NPN_AreaScopeofMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PNI_NPNBasedMDT_ExtIEs( SI_XNAP_DT_PDU_PNI_NPNBasedMDT_ExtIEs * objPDUPNI_NPNBasedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PNI_NPNBasedMDT_ExtIEs( SI_XNAP_DT_PDU_PNI_NPNBasedMDT_ExtIEs * objPDUPNI_NPNBasedMDT_ExtIEs);
void __si_xnap_debug_PDU_PNI_NPNBasedMDT_ExtIEs( char * key, SI_XNAP_DT_PDU_PNI_NPNBasedMDT_ExtIEs * objPDUPNI_NPNBasedMDT_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PNI_NPNBasedMDT_ExtIEs( SI_XNAP_DT_PDU_PNI_NPNBasedMDT_ExtIEs ** objPDUPNI_NPNBasedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QMCConfigInfo_ExtIEs( SI_XNAP_DT_PDU_QMCConfigInfo_ExtIEs * objPDUQMCConfigInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QMCConfigInfo_ExtIEs( SI_XNAP_DT_PDU_QMCConfigInfo_ExtIEs * objPDUQMCConfigInfo_ExtIEs);
void __si_xnap_debug_PDU_QMCConfigInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_QMCConfigInfo_ExtIEs * objPDUQMCConfigInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QMCConfigInfo_ExtIEs( SI_XNAP_DT_PDU_QMCConfigInfo_ExtIEs ** objPDUQMCConfigInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UEAppLayerMeasInfo_Item_ExtIEs( SI_XNAP_DT_PDU_UEAppLayerMeasInfo_Item_ExtIEs * objPDUUEAppLayerMeasInfo_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UEAppLayerMeasInfo_Item_ExtIEs( SI_XNAP_DT_PDU_UEAppLayerMeasInfo_Item_ExtIEs * objPDUUEAppLayerMeasInfo_Item_ExtIEs);
void __si_xnap_debug_PDU_UEAppLayerMeasInfo_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_UEAppLayerMeasInfo_Item_ExtIEs * objPDUUEAppLayerMeasInfo_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UEAppLayerMeasInfo_Item_ExtIEs( SI_XNAP_DT_PDU_UEAppLayerMeasInfo_Item_ExtIEs ** objPDUUEAppLayerMeasInfo_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QMCCoordinationRequest_ExtIEs( SI_XNAP_DT_PDU_QMCCoordinationRequest_ExtIEs * objPDUQMCCoordinationRequest_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QMCCoordinationRequest_ExtIEs( SI_XNAP_DT_PDU_QMCCoordinationRequest_ExtIEs * objPDUQMCCoordinationRequest_ExtIEs);
void __si_xnap_debug_PDU_QMCCoordinationRequest_ExtIEs( char * key, SI_XNAP_DT_PDU_QMCCoordinationRequest_ExtIEs * objPDUQMCCoordinationRequest_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QMCCoordinationRequest_ExtIEs( SI_XNAP_DT_PDU_QMCCoordinationRequest_ExtIEs ** objPDUQMCCoordinationRequest_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MN_to_SN_QMCCoordRequestList_Item_ExtIEs( SI_XNAP_DT_PDU_MN_to_SN_QMCCoordRequestList_Item_ExtIEs * objPDUMN_to_SN_QMCCoordRequestList_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MN_to_SN_QMCCoordRequestList_Item_ExtIEs( SI_XNAP_DT_PDU_MN_to_SN_QMCCoordRequestList_Item_ExtIEs * objPDUMN_to_SN_QMCCoordRequestList_Item_ExtIEs);
void __si_xnap_debug_PDU_MN_to_SN_QMCCoordRequestList_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_MN_to_SN_QMCCoordRequestList_Item_ExtIEs * objPDUMN_to_SN_QMCCoordRequestList_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MN_to_SN_QMCCoordRequestList_Item_ExtIEs( SI_XNAP_DT_PDU_MN_to_SN_QMCCoordRequestList_Item_ExtIEs ** objPDUMN_to_SN_QMCCoordRequestList_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SN_to_MN_QMCCoordRequestList_Item_ExtIEs( SI_XNAP_DT_PDU_SN_to_MN_QMCCoordRequestList_Item_ExtIEs * objPDUSN_to_MN_QMCCoordRequestList_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SN_to_MN_QMCCoordRequestList_Item_ExtIEs( SI_XNAP_DT_PDU_SN_to_MN_QMCCoordRequestList_Item_ExtIEs * objPDUSN_to_MN_QMCCoordRequestList_Item_ExtIEs);
void __si_xnap_debug_PDU_SN_to_MN_QMCCoordRequestList_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SN_to_MN_QMCCoordRequestList_Item_ExtIEs * objPDUSN_to_MN_QMCCoordRequestList_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SN_to_MN_QMCCoordRequestList_Item_ExtIEs( SI_XNAP_DT_PDU_SN_to_MN_QMCCoordRequestList_Item_ExtIEs ** objPDUSN_to_MN_QMCCoordRequestList_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QMCCoordinationResponse_ExtIEs( SI_XNAP_DT_PDU_QMCCoordinationResponse_ExtIEs * objPDUQMCCoordinationResponse_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QMCCoordinationResponse_ExtIEs( SI_XNAP_DT_PDU_QMCCoordinationResponse_ExtIEs * objPDUQMCCoordinationResponse_ExtIEs);
void __si_xnap_debug_PDU_QMCCoordinationResponse_ExtIEs( char * key, SI_XNAP_DT_PDU_QMCCoordinationResponse_ExtIEs * objPDUQMCCoordinationResponse_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QMCCoordinationResponse_ExtIEs( SI_XNAP_DT_PDU_QMCCoordinationResponse_ExtIEs ** objPDUQMCCoordinationResponse_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_MN_to_SN_QMCCoordResponseList_Item_ExtIEs( SI_XNAP_DT_PDU_MN_to_SN_QMCCoordResponseList_Item_ExtIEs * objPDUMN_to_SN_QMCCoordResponseList_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_MN_to_SN_QMCCoordResponseList_Item_ExtIEs( SI_XNAP_DT_PDU_MN_to_SN_QMCCoordResponseList_Item_ExtIEs * objPDUMN_to_SN_QMCCoordResponseList_Item_ExtIEs);
void __si_xnap_debug_PDU_MN_to_SN_QMCCoordResponseList_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_MN_to_SN_QMCCoordResponseList_Item_ExtIEs * objPDUMN_to_SN_QMCCoordResponseList_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_MN_to_SN_QMCCoordResponseList_Item_ExtIEs( SI_XNAP_DT_PDU_MN_to_SN_QMCCoordResponseList_Item_ExtIEs ** objPDUMN_to_SN_QMCCoordResponseList_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SN_to_MN_QMCCoordResponseList_Item_ExtIEs( SI_XNAP_DT_PDU_SN_to_MN_QMCCoordResponseList_Item_ExtIEs * objPDUSN_to_MN_QMCCoordResponseList_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SN_to_MN_QMCCoordResponseList_Item_ExtIEs( SI_XNAP_DT_PDU_SN_to_MN_QMCCoordResponseList_Item_ExtIEs * objPDUSN_to_MN_QMCCoordResponseList_Item_ExtIEs);
void __si_xnap_debug_PDU_SN_to_MN_QMCCoordResponseList_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SN_to_MN_QMCCoordResponseList_Item_ExtIEs * objPDUSN_to_MN_QMCCoordResponseList_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SN_to_MN_QMCCoordResponseList_Item_ExtIEs( SI_XNAP_DT_PDU_SN_to_MN_QMCCoordResponseList_Item_ExtIEs ** objPDUSN_to_MN_QMCCoordResponseList_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoERVQoEReportingPaths_ExtIEs( SI_XNAP_DT_PDU_QoERVQoEReportingPaths_ExtIEs * objPDUQoERVQoEReportingPaths_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoERVQoEReportingPaths_ExtIEs( SI_XNAP_DT_PDU_QoERVQoEReportingPaths_ExtIEs * objPDUQoERVQoEReportingPaths_ExtIEs);
void __si_xnap_debug_PDU_QoERVQoEReportingPaths_ExtIEs( char * key, SI_XNAP_DT_PDU_QoERVQoEReportingPaths_ExtIEs * objPDUQoERVQoEReportingPaths_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoERVQoEReportingPaths_ExtIEs( SI_XNAP_DT_PDU_QoERVQoEReportingPaths_ExtIEs ** objPDUQoERVQoEReportingPaths_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RVQoEConfig_ExtIEs( SI_XNAP_DT_PDU_RVQoEConfig_ExtIEs * objPDURVQoEConfig_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RVQoEConfig_ExtIEs( SI_XNAP_DT_PDU_RVQoEConfig_ExtIEs * objPDURVQoEConfig_ExtIEs);
void __si_xnap_debug_PDU_RVQoEConfig_ExtIEs( char * key, SI_XNAP_DT_PDU_RVQoEConfig_ExtIEs * objPDURVQoEConfig_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RVQoEConfig_ExtIEs( SI_XNAP_DT_PDU_RVQoEConfig_ExtIEs ** objPDURVQoEConfig_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSCharacteristics_ExtIEs( SI_XNAP_DT_PDU_QoSCharacteristics_ExtIEs * objPDUQoSCharacteristics_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSCharacteristics_ExtIEs( SI_XNAP_DT_PDU_QoSCharacteristics_ExtIEs * objPDUQoSCharacteristics_ExtIEs);
void __si_xnap_debug_PDU_QoSCharacteristics_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSCharacteristics_ExtIEs * objPDUQoSCharacteristics_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSCharacteristics_ExtIEs( SI_XNAP_DT_PDU_QoSCharacteristics_ExtIEs ** objPDUQoSCharacteristics_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSFlowLevelQoSParameters_ExtIEs( SI_XNAP_DT_PDU_QoSFlowLevelQoSParameters_ExtIEs * objPDUQoSFlowLevelQoSParameters_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSFlowLevelQoSParameters_ExtIEs( SI_XNAP_DT_PDU_QoSFlowLevelQoSParameters_ExtIEs * objPDUQoSFlowLevelQoSParameters_ExtIEs);
void __si_xnap_debug_PDU_QoSFlowLevelQoSParameters_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSFlowLevelQoSParameters_ExtIEs * objPDUQoSFlowLevelQoSParameters_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSFlowLevelQoSParameters_ExtIEs( SI_XNAP_DT_PDU_QoSFlowLevelQoSParameters_ExtIEs ** objPDUQoSFlowLevelQoSParameters_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSFlowNotificationControlIndicationInfo_ExtIEs( SI_XNAP_DT_PDU_QoSFlowNotificationControlIndicationInfo_ExtIEs * objPDUQoSFlowNotificationControlIndicationInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSFlowNotificationControlIndicationInfo_ExtIEs( SI_XNAP_DT_PDU_QoSFlowNotificationControlIndicationInfo_ExtIEs * objPDUQoSFlowNotificationControlIndicationInfo_ExtIEs);
void __si_xnap_debug_PDU_QoSFlowNotificationControlIndicationInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSFlowNotificationControlIndicationInfo_ExtIEs * objPDUQoSFlowNotificationControlIndicationInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSFlowNotificationControlIndicationInfo_ExtIEs( SI_XNAP_DT_PDU_QoSFlowNotificationControlIndicationInfo_ExtIEs ** objPDUQoSFlowNotificationControlIndicationInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSFlow_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlow_Item_ExtIEs * objPDUQoSFlow_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSFlow_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlow_Item_ExtIEs * objPDUQoSFlow_Item_ExtIEs);
void __si_xnap_debug_PDU_QoSFlow_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSFlow_Item_ExtIEs * objPDUQoSFlow_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSFlow_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlow_Item_ExtIEs ** objPDUQoSFlow_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSFlowwithCause_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowwithCause_Item_ExtIEs * objPDUQoSFlowwithCause_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSFlowwithCause_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowwithCause_Item_ExtIEs * objPDUQoSFlowwithCause_Item_ExtIEs);
void __si_xnap_debug_PDU_QoSFlowwithCause_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSFlowwithCause_Item_ExtIEs * objPDUQoSFlowwithCause_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSFlowwithCause_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowwithCause_Item_ExtIEs ** objPDUQoSFlowwithCause_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoS_Mapping_Information_ExtIEs( SI_XNAP_DT_PDU_QoS_Mapping_Information_ExtIEs * objPDUQoS_Mapping_Information_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoS_Mapping_Information_ExtIEs( SI_XNAP_DT_PDU_QoS_Mapping_Information_ExtIEs * objPDUQoS_Mapping_Information_ExtIEs);
void __si_xnap_debug_PDU_QoS_Mapping_Information_ExtIEs( char * key, SI_XNAP_DT_PDU_QoS_Mapping_Information_ExtIEs * objPDUQoS_Mapping_Information_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoS_Mapping_Information_ExtIEs( SI_XNAP_DT_PDU_QoS_Mapping_Information_ExtIEs ** objPDUQoS_Mapping_Information_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSFlowsAdmitted_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsAdmitted_Item_ExtIEs * objPDUQoSFlowsAdmitted_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSFlowsAdmitted_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsAdmitted_Item_ExtIEs * objPDUQoSFlowsAdmitted_Item_ExtIEs);
void __si_xnap_debug_PDU_QoSFlowsAdmitted_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSFlowsAdmitted_Item_ExtIEs * objPDUQoSFlowsAdmitted_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSFlowsAdmitted_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsAdmitted_Item_ExtIEs ** objPDUQoSFlowsAdmitted_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSFlowsToBeSetup_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsToBeSetup_Item_ExtIEs * objPDUQoSFlowsToBeSetup_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSFlowsToBeSetup_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsToBeSetup_Item_ExtIEs * objPDUQoSFlowsToBeSetup_Item_ExtIEs);
void __si_xnap_debug_PDU_QoSFlowsToBeSetup_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSFlowsToBeSetup_Item_ExtIEs * objPDUQoSFlowsToBeSetup_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSFlowsToBeSetup_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsToBeSetup_Item_ExtIEs ** objPDUQoSFlowsToBeSetup_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSFlowsUsageReport_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsUsageReport_Item_ExtIEs * objPDUQoSFlowsUsageReport_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSFlowsUsageReport_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsUsageReport_Item_ExtIEs * objPDUQoSFlowsUsageReport_Item_ExtIEs);
void __si_xnap_debug_PDU_QoSFlowsUsageReport_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSFlowsUsageReport_Item_ExtIEs * objPDUQoSFlowsUsageReport_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSFlowsUsageReport_Item_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsUsageReport_Item_ExtIEs ** objPDUQoSFlowsUsageReport_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RAReportList_Item_ExtIEs( SI_XNAP_DT_PDU_RAReportList_Item_ExtIEs * objPDURAReportList_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RAReportList_Item_ExtIEs( SI_XNAP_DT_PDU_RAReportList_Item_ExtIEs * objPDURAReportList_Item_ExtIEs);
void __si_xnap_debug_PDU_RAReportList_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_RAReportList_Item_ExtIEs * objPDURAReportList_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RAReportList_Item_ExtIEs( SI_XNAP_DT_PDU_RAReportList_Item_ExtIEs ** objPDURAReportList_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RadioResourceStatus_ExtIEs( SI_XNAP_DT_PDU_RadioResourceStatus_ExtIEs * objPDURadioResourceStatus_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RadioResourceStatus_ExtIEs( SI_XNAP_DT_PDU_RadioResourceStatus_ExtIEs * objPDURadioResourceStatus_ExtIEs);
void __si_xnap_debug_PDU_RadioResourceStatus_ExtIEs( char * key, SI_XNAP_DT_PDU_RadioResourceStatus_ExtIEs * objPDURadioResourceStatus_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RadioResourceStatus_ExtIEs( SI_XNAP_DT_PDU_RadioResourceStatus_ExtIEs ** objPDURadioResourceStatus_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RANAreaID_ExtIEs( SI_XNAP_DT_PDU_RANAreaID_ExtIEs * objPDURANAreaID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RANAreaID_ExtIEs( SI_XNAP_DT_PDU_RANAreaID_ExtIEs * objPDURANAreaID_ExtIEs);
void __si_xnap_debug_PDU_RANAreaID_ExtIEs( char * key, SI_XNAP_DT_PDU_RANAreaID_ExtIEs * objPDURANAreaID_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RANAreaID_ExtIEs( SI_XNAP_DT_PDU_RANAreaID_ExtIEs ** objPDURANAreaID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RANPagingArea_ExtIEs( SI_XNAP_DT_PDU_RANPagingArea_ExtIEs * objPDURANPagingArea_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RANPagingArea_ExtIEs( SI_XNAP_DT_PDU_RANPagingArea_ExtIEs * objPDURANPagingArea_ExtIEs);
void __si_xnap_debug_PDU_RANPagingArea_ExtIEs( char * key, SI_XNAP_DT_PDU_RANPagingArea_ExtIEs * objPDURANPagingArea_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RANPagingArea_ExtIEs( SI_XNAP_DT_PDU_RANPagingArea_ExtIEs ** objPDURANPagingArea_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RANPagingAreaChoice_ExtIEs( SI_XNAP_DT_PDU_RANPagingAreaChoice_ExtIEs * objPDURANPagingAreaChoice_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RANPagingAreaChoice_ExtIEs( SI_XNAP_DT_PDU_RANPagingAreaChoice_ExtIEs * objPDURANPagingAreaChoice_ExtIEs);
void __si_xnap_debug_PDU_RANPagingAreaChoice_ExtIEs( char * key, SI_XNAP_DT_PDU_RANPagingAreaChoice_ExtIEs * objPDURANPagingAreaChoice_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RANPagingAreaChoice_ExtIEs( SI_XNAP_DT_PDU_RANPagingAreaChoice_ExtIEs ** objPDURANPagingAreaChoice_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RANPagingAttemptInfo_ExtIEs( SI_XNAP_DT_PDU_RANPagingAttemptInfo_ExtIEs * objPDURANPagingAttemptInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RANPagingAttemptInfo_ExtIEs( SI_XNAP_DT_PDU_RANPagingAttemptInfo_ExtIEs * objPDURANPagingAttemptInfo_ExtIEs);
void __si_xnap_debug_PDU_RANPagingAttemptInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_RANPagingAttemptInfo_ExtIEs * objPDURANPagingAttemptInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RANPagingAttemptInfo_ExtIEs( SI_XNAP_DT_PDU_RANPagingAttemptInfo_ExtIEs ** objPDURANPagingAttemptInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RBsetConfiguration_ExtIEs( SI_XNAP_DT_PDU_RBsetConfiguration_ExtIEs * objPDURBsetConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RBsetConfiguration_ExtIEs( SI_XNAP_DT_PDU_RBsetConfiguration_ExtIEs * objPDURBsetConfiguration_ExtIEs);
void __si_xnap_debug_PDU_RBsetConfiguration_ExtIEs( char * key, SI_XNAP_DT_PDU_RBsetConfiguration_ExtIEs * objPDURBsetConfiguration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RBsetConfiguration_ExtIEs( SI_XNAP_DT_PDU_RBsetConfiguration_ExtIEs ** objPDURBsetConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RedundantPDUSessionInformation_ExtIEs( SI_XNAP_DT_PDU_RedundantPDUSessionInformation_ExtIEs * objPDURedundantPDUSessionInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RedundantPDUSessionInformation_ExtIEs( SI_XNAP_DT_PDU_RedundantPDUSessionInformation_ExtIEs * objPDURedundantPDUSessionInformation_ExtIEs);
void __si_xnap_debug_PDU_RedundantPDUSessionInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_RedundantPDUSessionInformation_ExtIEs * objPDURedundantPDUSessionInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RedundantPDUSessionInformation_ExtIEs( SI_XNAP_DT_PDU_RedundantPDUSessionInformation_ExtIEs ** objPDURedundantPDUSessionInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ReplacingCells_Item_ExtIEs( SI_XNAP_DT_PDU_ReplacingCells_Item_ExtIEs * objPDUReplacingCells_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ReplacingCells_Item_ExtIEs( SI_XNAP_DT_PDU_ReplacingCells_Item_ExtIEs * objPDUReplacingCells_Item_ExtIEs);
void __si_xnap_debug_PDU_ReplacingCells_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_ReplacingCells_Item_ExtIEs * objPDUReplacingCells_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ReplacingCells_Item_ExtIEs( SI_XNAP_DT_PDU_ReplacingCells_Item_ExtIEs ** objPDUReplacingCells_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ReportType_ExtIEs( SI_XNAP_DT_PDU_ReportType_ExtIEs * objPDUReportType_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ReportType_ExtIEs( SI_XNAP_DT_PDU_ReportType_ExtIEs * objPDUReportType_ExtIEs);
void __si_xnap_debug_PDU_ReportType_ExtIEs( char * key, SI_XNAP_DT_PDU_ReportType_ExtIEs * objPDUReportType_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ReportType_ExtIEs( SI_XNAP_DT_PDU_ReportType_ExtIEs ** objPDUReportType_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ReservedSubframePattern_ExtIEs( SI_XNAP_DT_PDU_ReservedSubframePattern_ExtIEs * objPDUReservedSubframePattern_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ReservedSubframePattern_ExtIEs( SI_XNAP_DT_PDU_ReservedSubframePattern_ExtIEs * objPDUReservedSubframePattern_ExtIEs);
void __si_xnap_debug_PDU_ReservedSubframePattern_ExtIEs( char * key, SI_XNAP_DT_PDU_ReservedSubframePattern_ExtIEs * objPDUReservedSubframePattern_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ReservedSubframePattern_ExtIEs( SI_XNAP_DT_PDU_ReservedSubframePattern_ExtIEs ** objPDUReservedSubframePattern_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ResetRequestTypeInfo_ExtIEs( SI_XNAP_DT_PDU_ResetRequestTypeInfo_ExtIEs * objPDUResetRequestTypeInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ResetRequestTypeInfo_ExtIEs( SI_XNAP_DT_PDU_ResetRequestTypeInfo_ExtIEs * objPDUResetRequestTypeInfo_ExtIEs);
void __si_xnap_debug_PDU_ResetRequestTypeInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_ResetRequestTypeInfo_ExtIEs * objPDUResetRequestTypeInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ResetRequestTypeInfo_ExtIEs( SI_XNAP_DT_PDU_ResetRequestTypeInfo_ExtIEs ** objPDUResetRequestTypeInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ResetRequestTypeInfo_Full_ExtIEs( SI_XNAP_DT_PDU_ResetRequestTypeInfo_Full_ExtIEs * objPDUResetRequestTypeInfo_Full_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ResetRequestTypeInfo_Full_ExtIEs( SI_XNAP_DT_PDU_ResetRequestTypeInfo_Full_ExtIEs * objPDUResetRequestTypeInfo_Full_ExtIEs);
void __si_xnap_debug_PDU_ResetRequestTypeInfo_Full_ExtIEs( char * key, SI_XNAP_DT_PDU_ResetRequestTypeInfo_Full_ExtIEs * objPDUResetRequestTypeInfo_Full_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ResetRequestTypeInfo_Full_ExtIEs( SI_XNAP_DT_PDU_ResetRequestTypeInfo_Full_ExtIEs ** objPDUResetRequestTypeInfo_Full_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ResetRequestTypeInfo_Partial_ExtIEs( SI_XNAP_DT_PDU_ResetRequestTypeInfo_Partial_ExtIEs * objPDUResetRequestTypeInfo_Partial_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ResetRequestTypeInfo_Partial_ExtIEs( SI_XNAP_DT_PDU_ResetRequestTypeInfo_Partial_ExtIEs * objPDUResetRequestTypeInfo_Partial_ExtIEs);
void __si_xnap_debug_PDU_ResetRequestTypeInfo_Partial_ExtIEs( char * key, SI_XNAP_DT_PDU_ResetRequestTypeInfo_Partial_ExtIEs * objPDUResetRequestTypeInfo_Partial_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ResetRequestTypeInfo_Partial_ExtIEs( SI_XNAP_DT_PDU_ResetRequestTypeInfo_Partial_ExtIEs ** objPDUResetRequestTypeInfo_Partial_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ResetRequestPartialReleaseItem_ExtIEs( SI_XNAP_DT_PDU_ResetRequestPartialReleaseItem_ExtIEs * objPDUResetRequestPartialReleaseItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ResetRequestPartialReleaseItem_ExtIEs( SI_XNAP_DT_PDU_ResetRequestPartialReleaseItem_ExtIEs * objPDUResetRequestPartialReleaseItem_ExtIEs);
void __si_xnap_debug_PDU_ResetRequestPartialReleaseItem_ExtIEs( char * key, SI_XNAP_DT_PDU_ResetRequestPartialReleaseItem_ExtIEs * objPDUResetRequestPartialReleaseItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ResetRequestPartialReleaseItem_ExtIEs( SI_XNAP_DT_PDU_ResetRequestPartialReleaseItem_ExtIEs ** objPDUResetRequestPartialReleaseItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ResetResponseTypeInfo_ExtIEs( SI_XNAP_DT_PDU_ResetResponseTypeInfo_ExtIEs * objPDUResetResponseTypeInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ResetResponseTypeInfo_ExtIEs( SI_XNAP_DT_PDU_ResetResponseTypeInfo_ExtIEs * objPDUResetResponseTypeInfo_ExtIEs);
void __si_xnap_debug_PDU_ResetResponseTypeInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_ResetResponseTypeInfo_ExtIEs * objPDUResetResponseTypeInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ResetResponseTypeInfo_ExtIEs( SI_XNAP_DT_PDU_ResetResponseTypeInfo_ExtIEs ** objPDUResetResponseTypeInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ResetResponseTypeInfo_Full_ExtIEs( SI_XNAP_DT_PDU_ResetResponseTypeInfo_Full_ExtIEs * objPDUResetResponseTypeInfo_Full_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ResetResponseTypeInfo_Full_ExtIEs( SI_XNAP_DT_PDU_ResetResponseTypeInfo_Full_ExtIEs * objPDUResetResponseTypeInfo_Full_ExtIEs);
void __si_xnap_debug_PDU_ResetResponseTypeInfo_Full_ExtIEs( char * key, SI_XNAP_DT_PDU_ResetResponseTypeInfo_Full_ExtIEs * objPDUResetResponseTypeInfo_Full_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ResetResponseTypeInfo_Full_ExtIEs( SI_XNAP_DT_PDU_ResetResponseTypeInfo_Full_ExtIEs ** objPDUResetResponseTypeInfo_Full_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ResetResponseTypeInfo_Partial_ExtIEs( SI_XNAP_DT_PDU_ResetResponseTypeInfo_Partial_ExtIEs * objPDUResetResponseTypeInfo_Partial_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ResetResponseTypeInfo_Partial_ExtIEs( SI_XNAP_DT_PDU_ResetResponseTypeInfo_Partial_ExtIEs * objPDUResetResponseTypeInfo_Partial_ExtIEs);
void __si_xnap_debug_PDU_ResetResponseTypeInfo_Partial_ExtIEs( char * key, SI_XNAP_DT_PDU_ResetResponseTypeInfo_Partial_ExtIEs * objPDUResetResponseTypeInfo_Partial_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ResetResponseTypeInfo_Partial_ExtIEs( SI_XNAP_DT_PDU_ResetResponseTypeInfo_Partial_ExtIEs ** objPDUResetResponseTypeInfo_Partial_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ResetResponsePartialReleaseItem_ExtIEs( SI_XNAP_DT_PDU_ResetResponsePartialReleaseItem_ExtIEs * objPDUResetResponsePartialReleaseItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ResetResponsePartialReleaseItem_ExtIEs( SI_XNAP_DT_PDU_ResetResponsePartialReleaseItem_ExtIEs * objPDUResetResponsePartialReleaseItem_ExtIEs);
void __si_xnap_debug_PDU_ResetResponsePartialReleaseItem_ExtIEs( char * key, SI_XNAP_DT_PDU_ResetResponsePartialReleaseItem_ExtIEs * objPDUResetResponsePartialReleaseItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ResetResponsePartialReleaseItem_ExtIEs( SI_XNAP_DT_PDU_ResetResponsePartialReleaseItem_ExtIEs ** objPDUResetResponsePartialReleaseItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RLC_Status_ExtIEs( SI_XNAP_DT_PDU_RLC_Status_ExtIEs * objPDURLC_Status_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RLC_Status_ExtIEs( SI_XNAP_DT_PDU_RLC_Status_ExtIEs * objPDURLC_Status_ExtIEs);
void __si_xnap_debug_PDU_RLC_Status_ExtIEs( char * key, SI_XNAP_DT_PDU_RLC_Status_ExtIEs * objPDURLC_Status_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RLC_Status_ExtIEs( SI_XNAP_DT_PDU_RLC_Status_ExtIEs ** objPDURLC_Status_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RLCDuplicationInformation_ItemExtIEs( SI_XNAP_DT_PDU_RLCDuplicationInformation_ItemExtIEs * objPDURLCDuplicationInformation_ItemExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RLCDuplicationInformation_ItemExtIEs( SI_XNAP_DT_PDU_RLCDuplicationInformation_ItemExtIEs * objPDURLCDuplicationInformation_ItemExtIEs);
void __si_xnap_debug_PDU_RLCDuplicationInformation_ItemExtIEs( char * key, SI_XNAP_DT_PDU_RLCDuplicationInformation_ItemExtIEs * objPDURLCDuplicationInformation_ItemExtIEs, int lvl);
int __si_xnap_Decode_PDU_RLCDuplicationInformation_ItemExtIEs( SI_XNAP_DT_PDU_RLCDuplicationInformation_ItemExtIEs ** objPDURLCDuplicationInformation_ItemExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RLCDuplicationState_ItemExtIEs( SI_XNAP_DT_PDU_RLCDuplicationState_ItemExtIEs * objPDURLCDuplicationState_ItemExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RLCDuplicationState_ItemExtIEs( SI_XNAP_DT_PDU_RLCDuplicationState_ItemExtIEs * objPDURLCDuplicationState_ItemExtIEs);
void __si_xnap_debug_PDU_RLCDuplicationState_ItemExtIEs( char * key, SI_XNAP_DT_PDU_RLCDuplicationState_ItemExtIEs * objPDURLCDuplicationState_ItemExtIEs, int lvl);
int __si_xnap_Decode_PDU_RLCDuplicationState_ItemExtIEs( SI_XNAP_DT_PDU_RLCDuplicationState_ItemExtIEs ** objPDURLCDuplicationState_ItemExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RRCConnections_ExtIEs( SI_XNAP_DT_PDU_RRCConnections_ExtIEs * objPDURRCConnections_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RRCConnections_ExtIEs( SI_XNAP_DT_PDU_RRCConnections_ExtIEs * objPDURRCConnections_ExtIEs);
void __si_xnap_debug_PDU_RRCConnections_ExtIEs( char * key, SI_XNAP_DT_PDU_RRCConnections_ExtIEs * objPDURRCConnections_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RRCConnections_ExtIEs( SI_XNAP_DT_PDU_RRCConnections_ExtIEs ** objPDURRCConnections_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RRCReestab_initiated_ExtIEs( SI_XNAP_DT_PDU_RRCReestab_initiated_ExtIEs * objPDURRCReestab_initiated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RRCReestab_initiated_ExtIEs( SI_XNAP_DT_PDU_RRCReestab_initiated_ExtIEs * objPDURRCReestab_initiated_ExtIEs);
void __si_xnap_debug_PDU_RRCReestab_initiated_ExtIEs( char * key, SI_XNAP_DT_PDU_RRCReestab_initiated_ExtIEs * objPDURRCReestab_initiated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RRCReestab_initiated_ExtIEs( SI_XNAP_DT_PDU_RRCReestab_initiated_ExtIEs ** objPDURRCReestab_initiated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RRCReestab_Initiated_Reporting_ExtIEs( SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_ExtIEs * objPDURRCReestab_Initiated_Reporting_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RRCReestab_Initiated_Reporting_ExtIEs( SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_ExtIEs * objPDURRCReestab_Initiated_Reporting_ExtIEs);
void __si_xnap_debug_PDU_RRCReestab_Initiated_Reporting_ExtIEs( char * key, SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_ExtIEs * objPDURRCReestab_Initiated_Reporting_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RRCReestab_Initiated_Reporting_ExtIEs( SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_ExtIEs ** objPDURRCReestab_Initiated_Reporting_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RRCReestab_Initiated_Reporting_wo_UERLFReport_ExtIEs( SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_wo_UERLFReport_ExtIEs * objPDURRCReestab_Initiated_Reporting_wo_UERLFReport_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RRCReestab_Initiated_Reporting_wo_UERLFReport_ExtIEs( SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_wo_UERLFReport_ExtIEs * objPDURRCReestab_Initiated_Reporting_wo_UERLFReport_ExtIEs);
void __si_xnap_debug_PDU_RRCReestab_Initiated_Reporting_wo_UERLFReport_ExtIEs( char * key, SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_wo_UERLFReport_ExtIEs * objPDURRCReestab_Initiated_Reporting_wo_UERLFReport_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RRCReestab_Initiated_Reporting_wo_UERLFReport_ExtIEs( SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_wo_UERLFReport_ExtIEs ** objPDURRCReestab_Initiated_Reporting_wo_UERLFReport_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RRCReestab_Initiated_Reporting_with_UERLFReport_ExtIEs( SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_with_UERLFReport_ExtIEs * objPDURRCReestab_Initiated_Reporting_with_UERLFReport_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RRCReestab_Initiated_Reporting_with_UERLFReport_ExtIEs( SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_with_UERLFReport_ExtIEs * objPDURRCReestab_Initiated_Reporting_with_UERLFReport_ExtIEs);
void __si_xnap_debug_PDU_RRCReestab_Initiated_Reporting_with_UERLFReport_ExtIEs( char * key, SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_with_UERLFReport_ExtIEs * objPDURRCReestab_Initiated_Reporting_with_UERLFReport_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RRCReestab_Initiated_Reporting_with_UERLFReport_ExtIEs( SI_XNAP_DT_PDU_RRCReestab_Initiated_Reporting_with_UERLFReport_ExtIEs ** objPDURRCReestab_Initiated_Reporting_with_UERLFReport_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RRCSetup_initiated_ExtIEs( SI_XNAP_DT_PDU_RRCSetup_initiated_ExtIEs * objPDURRCSetup_initiated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RRCSetup_initiated_ExtIEs( SI_XNAP_DT_PDU_RRCSetup_initiated_ExtIEs * objPDURRCSetup_initiated_ExtIEs);
void __si_xnap_debug_PDU_RRCSetup_initiated_ExtIEs( char * key, SI_XNAP_DT_PDU_RRCSetup_initiated_ExtIEs * objPDURRCSetup_initiated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RRCSetup_initiated_ExtIEs( SI_XNAP_DT_PDU_RRCSetup_initiated_ExtIEs ** objPDURRCSetup_initiated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RRCSetup_Initiated_Reporting_ExtIEs( SI_XNAP_DT_PDU_RRCSetup_Initiated_Reporting_ExtIEs * objPDURRCSetup_Initiated_Reporting_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RRCSetup_Initiated_Reporting_ExtIEs( SI_XNAP_DT_PDU_RRCSetup_Initiated_Reporting_ExtIEs * objPDURRCSetup_Initiated_Reporting_ExtIEs);
void __si_xnap_debug_PDU_RRCSetup_Initiated_Reporting_ExtIEs( char * key, SI_XNAP_DT_PDU_RRCSetup_Initiated_Reporting_ExtIEs * objPDURRCSetup_Initiated_Reporting_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RRCSetup_Initiated_Reporting_ExtIEs( SI_XNAP_DT_PDU_RRCSetup_Initiated_Reporting_ExtIEs ** objPDURRCSetup_Initiated_Reporting_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RRCSetup_Initiated_Reporting_with_UERLFReport_ExtIEs( SI_XNAP_DT_PDU_RRCSetup_Initiated_Reporting_with_UERLFReport_ExtIEs * objPDURRCSetup_Initiated_Reporting_with_UERLFReport_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RRCSetup_Initiated_Reporting_with_UERLFReport_ExtIEs( SI_XNAP_DT_PDU_RRCSetup_Initiated_Reporting_with_UERLFReport_ExtIEs * objPDURRCSetup_Initiated_Reporting_with_UERLFReport_ExtIEs);
void __si_xnap_debug_PDU_RRCSetup_Initiated_Reporting_with_UERLFReport_ExtIEs( char * key, SI_XNAP_DT_PDU_RRCSetup_Initiated_Reporting_with_UERLFReport_ExtIEs * objPDURRCSetup_Initiated_Reporting_with_UERLFReport_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RRCSetup_Initiated_Reporting_with_UERLFReport_ExtIEs( SI_XNAP_DT_PDU_RRCSetup_Initiated_Reporting_with_UERLFReport_ExtIEs ** objPDURRCSetup_Initiated_Reporting_with_UERLFReport_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RaReportIndicationList_Item_ExtIEs( SI_XNAP_DT_PDU_RaReportIndicationList_Item_ExtIEs * objPDURaReportIndicationList_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RaReportIndicationList_Item_ExtIEs( SI_XNAP_DT_PDU_RaReportIndicationList_Item_ExtIEs * objPDURaReportIndicationList_Item_ExtIEs);
void __si_xnap_debug_PDU_RaReportIndicationList_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_RaReportIndicationList_Item_ExtIEs * objPDURaReportIndicationList_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RaReportIndicationList_Item_ExtIEs( SI_XNAP_DT_PDU_RaReportIndicationList_Item_ExtIEs ** objPDURaReportIndicationList_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RadioResourceStatusNR_U_ExtIEs( SI_XNAP_DT_PDU_RadioResourceStatusNR_U_ExtIEs * objPDURadioResourceStatusNR_U_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RadioResourceStatusNR_U_ExtIEs( SI_XNAP_DT_PDU_RadioResourceStatusNR_U_ExtIEs * objPDURadioResourceStatusNR_U_ExtIEs);
void __si_xnap_debug_PDU_RadioResourceStatusNR_U_ExtIEs( char * key, SI_XNAP_DT_PDU_RadioResourceStatusNR_U_ExtIEs * objPDURadioResourceStatusNR_U_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RadioResourceStatusNR_U_ExtIEs( SI_XNAP_DT_PDU_RadioResourceStatusNR_U_ExtIEs ** objPDURadioResourceStatusNR_U_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_S_BasedMDT_ExtIEs( SI_XNAP_DT_PDU_S_BasedMDT_ExtIEs * objPDUS_BasedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_S_BasedMDT_ExtIEs( SI_XNAP_DT_PDU_S_BasedMDT_ExtIEs * objPDUS_BasedMDT_ExtIEs);
void __si_xnap_debug_PDU_S_BasedMDT_ExtIEs( char * key, SI_XNAP_DT_PDU_S_BasedMDT_ExtIEs * objPDUS_BasedMDT_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_S_BasedMDT_ExtIEs( SI_XNAP_DT_PDU_S_BasedMDT_ExtIEs ** objPDUS_BasedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_S_CPAC_Request_Info_ExtIEs( SI_XNAP_DT_PDU_S_CPAC_Request_Info_ExtIEs * objPDUS_CPAC_Request_Info_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_S_CPAC_Request_Info_ExtIEs( SI_XNAP_DT_PDU_S_CPAC_Request_Info_ExtIEs * objPDUS_CPAC_Request_Info_ExtIEs);
void __si_xnap_debug_PDU_S_CPAC_Request_Info_ExtIEs( char * key, SI_XNAP_DT_PDU_S_CPAC_Request_Info_ExtIEs * objPDUS_CPAC_Request_Info_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_S_CPAC_Request_Info_ExtIEs( SI_XNAP_DT_PDU_S_CPAC_Request_Info_ExtIEs ** objPDUS_CPAC_Request_Info_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_S_CPAC_SecurityConfig_Item_ExtIEs( SI_XNAP_DT_PDU_S_CPAC_SecurityConfig_Item_ExtIEs * objPDUS_CPAC_SecurityConfig_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_S_CPAC_SecurityConfig_Item_ExtIEs( SI_XNAP_DT_PDU_S_CPAC_SecurityConfig_Item_ExtIEs * objPDUS_CPAC_SecurityConfig_Item_ExtIEs);
void __si_xnap_debug_PDU_S_CPAC_SecurityConfig_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_S_CPAC_SecurityConfig_Item_ExtIEs * objPDUS_CPAC_SecurityConfig_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_S_CPAC_SecurityConfig_Item_ExtIEs( SI_XNAP_DT_PDU_S_CPAC_SecurityConfig_Item_ExtIEs ** objPDUS_CPAC_SecurityConfig_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_S_CPAC_MultiTargetSN_Item_ExtIEs( SI_XNAP_DT_PDU_S_CPAC_MultiTargetSN_Item_ExtIEs * objPDUS_CPAC_MultiTargetSN_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_S_CPAC_MultiTargetSN_Item_ExtIEs( SI_XNAP_DT_PDU_S_CPAC_MultiTargetSN_Item_ExtIEs * objPDUS_CPAC_MultiTargetSN_Item_ExtIEs);
void __si_xnap_debug_PDU_S_CPAC_MultiTargetSN_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_S_CPAC_MultiTargetSN_Item_ExtIEs * objPDUS_CPAC_MultiTargetSN_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_S_CPAC_MultiTargetSN_Item_ExtIEs( SI_XNAP_DT_PDU_S_CPAC_MultiTargetSN_Item_ExtIEs ** objPDUS_CPAC_MultiTargetSN_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SecondarydataForwardingInfoFromTarget_Item_ExtIEs( SI_XNAP_DT_PDU_SecondarydataForwardingInfoFromTarget_Item_ExtIEs * objPDUSecondarydataForwardingInfoFromTarget_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SecondarydataForwardingInfoFromTarget_Item_ExtIEs( SI_XNAP_DT_PDU_SecondarydataForwardingInfoFromTarget_Item_ExtIEs * objPDUSecondarydataForwardingInfoFromTarget_Item_ExtIEs);
void __si_xnap_debug_PDU_SecondarydataForwardingInfoFromTarget_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SecondarydataForwardingInfoFromTarget_Item_ExtIEs * objPDUSecondarydataForwardingInfoFromTarget_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SecondarydataForwardingInfoFromTarget_Item_ExtIEs( SI_XNAP_DT_PDU_SecondarydataForwardingInfoFromTarget_Item_ExtIEs ** objPDUSecondarydataForwardingInfoFromTarget_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SDTSupportRequest_ExtIEs( SI_XNAP_DT_PDU_SDTSupportRequest_ExtIEs * objPDUSDTSupportRequest_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SDTSupportRequest_ExtIEs( SI_XNAP_DT_PDU_SDTSupportRequest_ExtIEs * objPDUSDTSupportRequest_ExtIEs);
void __si_xnap_debug_PDU_SDTSupportRequest_ExtIEs( char * key, SI_XNAP_DT_PDU_SDTSupportRequest_ExtIEs * objPDUSDTSupportRequest_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SDTSupportRequest_ExtIEs( SI_XNAP_DT_PDU_SDTSupportRequest_ExtIEs ** objPDUSDTSupportRequest_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SDTPartialUEContextInfo_ExtIEs( SI_XNAP_DT_PDU_SDTPartialUEContextInfo_ExtIEs * objPDUSDTPartialUEContextInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SDTPartialUEContextInfo_ExtIEs( SI_XNAP_DT_PDU_SDTPartialUEContextInfo_ExtIEs * objPDUSDTPartialUEContextInfo_ExtIEs);
void __si_xnap_debug_PDU_SDTPartialUEContextInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_SDTPartialUEContextInfo_ExtIEs * objPDUSDTPartialUEContextInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SDTPartialUEContextInfo_ExtIEs( SI_XNAP_DT_PDU_SDTPartialUEContextInfo_ExtIEs ** objPDUSDTPartialUEContextInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SDT_DRBsToBeSetupList_Item_ExtIEs( SI_XNAP_DT_PDU_SDT_DRBsToBeSetupList_Item_ExtIEs * objPDUSDT_DRBsToBeSetupList_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SDT_DRBsToBeSetupList_Item_ExtIEs( SI_XNAP_DT_PDU_SDT_DRBsToBeSetupList_Item_ExtIEs * objPDUSDT_DRBsToBeSetupList_Item_ExtIEs);
void __si_xnap_debug_PDU_SDT_DRBsToBeSetupList_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SDT_DRBsToBeSetupList_Item_ExtIEs * objPDUSDT_DRBsToBeSetupList_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SDT_DRBsToBeSetupList_Item_ExtIEs( SI_XNAP_DT_PDU_SDT_DRBsToBeSetupList_Item_ExtIEs ** objPDUSDT_DRBsToBeSetupList_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SDT_SRBsToBeSetupList_Item_ExtIEs( SI_XNAP_DT_PDU_SDT_SRBsToBeSetupList_Item_ExtIEs * objPDUSDT_SRBsToBeSetupList_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SDT_SRBsToBeSetupList_Item_ExtIEs( SI_XNAP_DT_PDU_SDT_SRBsToBeSetupList_Item_ExtIEs * objPDUSDT_SRBsToBeSetupList_Item_ExtIEs);
void __si_xnap_debug_PDU_SDT_SRBsToBeSetupList_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SDT_SRBsToBeSetupList_Item_ExtIEs * objPDUSDT_SRBsToBeSetupList_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SDT_SRBsToBeSetupList_Item_ExtIEs( SI_XNAP_DT_PDU_SDT_SRBsToBeSetupList_Item_ExtIEs ** objPDUSDT_SRBsToBeSetupList_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SDTDataForwardingDRBList_Item_ExtIEs( SI_XNAP_DT_PDU_SDTDataForwardingDRBList_Item_ExtIEs * objPDUSDTDataForwardingDRBList_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SDTDataForwardingDRBList_Item_ExtIEs( SI_XNAP_DT_PDU_SDTDataForwardingDRBList_Item_ExtIEs * objPDUSDTDataForwardingDRBList_Item_ExtIEs);
void __si_xnap_debug_PDU_SDTDataForwardingDRBList_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SDTDataForwardingDRBList_Item_ExtIEs * objPDUSDTDataForwardingDRBList_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SDTDataForwardingDRBList_Item_ExtIEs( SI_XNAP_DT_PDU_SDTDataForwardingDRBList_Item_ExtIEs ** objPDUSDTDataForwardingDRBList_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SecondaryRATUsageInformation_ExtIEs( SI_XNAP_DT_PDU_SecondaryRATUsageInformation_ExtIEs * objPDUSecondaryRATUsageInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SecondaryRATUsageInformation_ExtIEs( SI_XNAP_DT_PDU_SecondaryRATUsageInformation_ExtIEs * objPDUSecondaryRATUsageInformation_ExtIEs);
void __si_xnap_debug_PDU_SecondaryRATUsageInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_SecondaryRATUsageInformation_ExtIEs * objPDUSecondaryRATUsageInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SecondaryRATUsageInformation_ExtIEs( SI_XNAP_DT_PDU_SecondaryRATUsageInformation_ExtIEs ** objPDUSecondaryRATUsageInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SecurityIndication_ExtIEs( SI_XNAP_DT_PDU_SecurityIndication_ExtIEs * objPDUSecurityIndication_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SecurityIndication_ExtIEs( SI_XNAP_DT_PDU_SecurityIndication_ExtIEs * objPDUSecurityIndication_ExtIEs);
void __si_xnap_debug_PDU_SecurityIndication_ExtIEs( char * key, SI_XNAP_DT_PDU_SecurityIndication_ExtIEs * objPDUSecurityIndication_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SecurityIndication_ExtIEs( SI_XNAP_DT_PDU_SecurityIndication_ExtIEs ** objPDUSecurityIndication_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SecurityResult_ExtIEs( SI_XNAP_DT_PDU_SecurityResult_ExtIEs * objPDUSecurityResult_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SecurityResult_ExtIEs( SI_XNAP_DT_PDU_SecurityResult_ExtIEs * objPDUSecurityResult_ExtIEs);
void __si_xnap_debug_PDU_SecurityResult_ExtIEs( char * key, SI_XNAP_DT_PDU_SecurityResult_ExtIEs * objPDUSecurityResult_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SecurityResult_ExtIEs( SI_XNAP_DT_PDU_SecurityResult_ExtIEs ** objPDUSecurityResult_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SensorMeasurementConfiguration_ExtIEs( SI_XNAP_DT_PDU_SensorMeasurementConfiguration_ExtIEs * objPDUSensorMeasurementConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SensorMeasurementConfiguration_ExtIEs( SI_XNAP_DT_PDU_SensorMeasurementConfiguration_ExtIEs * objPDUSensorMeasurementConfiguration_ExtIEs);
void __si_xnap_debug_PDU_SensorMeasurementConfiguration_ExtIEs( char * key, SI_XNAP_DT_PDU_SensorMeasurementConfiguration_ExtIEs * objPDUSensorMeasurementConfiguration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SensorMeasurementConfiguration_ExtIEs( SI_XNAP_DT_PDU_SensorMeasurementConfiguration_ExtIEs ** objPDUSensorMeasurementConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SensorNameConfig_ExtIEs( SI_XNAP_DT_PDU_SensorNameConfig_ExtIEs * objPDUSensorNameConfig_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SensorNameConfig_ExtIEs( SI_XNAP_DT_PDU_SensorNameConfig_ExtIEs * objPDUSensorNameConfig_ExtIEs);
void __si_xnap_debug_PDU_SensorNameConfig_ExtIEs( char * key, SI_XNAP_DT_PDU_SensorNameConfig_ExtIEs * objPDUSensorNameConfig_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SensorNameConfig_ExtIEs( SI_XNAP_DT_PDU_SensorNameConfig_ExtIEs ** objPDUSensorNameConfig_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ServedCellInformation_E_UTRA_ExtIEs( SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_ExtIEs * objPDUServedCellInformation_E_UTRA_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ServedCellInformation_E_UTRA_ExtIEs( SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_ExtIEs * objPDUServedCellInformation_E_UTRA_ExtIEs);
void __si_xnap_debug_PDU_ServedCellInformation_E_UTRA_ExtIEs( char * key, SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_ExtIEs * objPDUServedCellInformation_E_UTRA_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ServedCellInformation_E_UTRA_ExtIEs( SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_ExtIEs ** objPDUServedCellInformation_E_UTRA_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ServedCellInformation_E_UTRA_perBPLMN_ExtIEs( SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_perBPLMN_ExtIEs * objPDUServedCellInformation_E_UTRA_perBPLMN_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ServedCellInformation_E_UTRA_perBPLMN_ExtIEs( SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_perBPLMN_ExtIEs * objPDUServedCellInformation_E_UTRA_perBPLMN_ExtIEs);
void __si_xnap_debug_PDU_ServedCellInformation_E_UTRA_perBPLMN_ExtIEs( char * key, SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_perBPLMN_ExtIEs * objPDUServedCellInformation_E_UTRA_perBPLMN_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ServedCellInformation_E_UTRA_perBPLMN_ExtIEs( SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_perBPLMN_ExtIEs ** objPDUServedCellInformation_E_UTRA_perBPLMN_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ServedCellInformation_E_UTRA_ModeInfo_ExtIEs( SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_ModeInfo_ExtIEs * objPDUServedCellInformation_E_UTRA_ModeInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ServedCellInformation_E_UTRA_ModeInfo_ExtIEs( SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_ModeInfo_ExtIEs * objPDUServedCellInformation_E_UTRA_ModeInfo_ExtIEs);
void __si_xnap_debug_PDU_ServedCellInformation_E_UTRA_ModeInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_ModeInfo_ExtIEs * objPDUServedCellInformation_E_UTRA_ModeInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ServedCellInformation_E_UTRA_ModeInfo_ExtIEs( SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_ModeInfo_ExtIEs ** objPDUServedCellInformation_E_UTRA_ModeInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ServedCellInformation_E_UTRA_FDDInfo_ExtIEs( SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_FDDInfo_ExtIEs * objPDUServedCellInformation_E_UTRA_FDDInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ServedCellInformation_E_UTRA_FDDInfo_ExtIEs( SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_FDDInfo_ExtIEs * objPDUServedCellInformation_E_UTRA_FDDInfo_ExtIEs);
void __si_xnap_debug_PDU_ServedCellInformation_E_UTRA_FDDInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_FDDInfo_ExtIEs * objPDUServedCellInformation_E_UTRA_FDDInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ServedCellInformation_E_UTRA_FDDInfo_ExtIEs( SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_FDDInfo_ExtIEs ** objPDUServedCellInformation_E_UTRA_FDDInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ServedCellInformation_E_UTRA_TDDInfo_ExtIEs( SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_TDDInfo_ExtIEs * objPDUServedCellInformation_E_UTRA_TDDInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ServedCellInformation_E_UTRA_TDDInfo_ExtIEs( SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_TDDInfo_ExtIEs * objPDUServedCellInformation_E_UTRA_TDDInfo_ExtIEs);
void __si_xnap_debug_PDU_ServedCellInformation_E_UTRA_TDDInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_TDDInfo_ExtIEs * objPDUServedCellInformation_E_UTRA_TDDInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ServedCellInformation_E_UTRA_TDDInfo_ExtIEs( SI_XNAP_DT_PDU_ServedCellInformation_E_UTRA_TDDInfo_ExtIEs ** objPDUServedCellInformation_E_UTRA_TDDInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ServedCells_E_UTRA_Item_ExtIEs( SI_XNAP_DT_PDU_ServedCells_E_UTRA_Item_ExtIEs * objPDUServedCells_E_UTRA_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ServedCells_E_UTRA_Item_ExtIEs( SI_XNAP_DT_PDU_ServedCells_E_UTRA_Item_ExtIEs * objPDUServedCells_E_UTRA_Item_ExtIEs);
void __si_xnap_debug_PDU_ServedCells_E_UTRA_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_ServedCells_E_UTRA_Item_ExtIEs * objPDUServedCells_E_UTRA_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ServedCells_E_UTRA_Item_ExtIEs( SI_XNAP_DT_PDU_ServedCells_E_UTRA_Item_ExtIEs ** objPDUServedCells_E_UTRA_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ServedCellsToUpdate_E_UTRA_ExtIEs( SI_XNAP_DT_PDU_ServedCellsToUpdate_E_UTRA_ExtIEs * objPDUServedCellsToUpdate_E_UTRA_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ServedCellsToUpdate_E_UTRA_ExtIEs( SI_XNAP_DT_PDU_ServedCellsToUpdate_E_UTRA_ExtIEs * objPDUServedCellsToUpdate_E_UTRA_ExtIEs);
void __si_xnap_debug_PDU_ServedCellsToUpdate_E_UTRA_ExtIEs( char * key, SI_XNAP_DT_PDU_ServedCellsToUpdate_E_UTRA_ExtIEs * objPDUServedCellsToUpdate_E_UTRA_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ServedCellsToUpdate_E_UTRA_ExtIEs( SI_XNAP_DT_PDU_ServedCellsToUpdate_E_UTRA_ExtIEs ** objPDUServedCellsToUpdate_E_UTRA_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Served_cells_ToModify_E_UTRA_Item_ExtIEs( SI_XNAP_DT_PDU_Served_cells_ToModify_E_UTRA_Item_ExtIEs * objPDUServed_cells_ToModify_E_UTRA_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Served_cells_ToModify_E_UTRA_Item_ExtIEs( SI_XNAP_DT_PDU_Served_cells_ToModify_E_UTRA_Item_ExtIEs * objPDUServed_cells_ToModify_E_UTRA_Item_ExtIEs);
void __si_xnap_debug_PDU_Served_cells_ToModify_E_UTRA_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_Served_cells_ToModify_E_UTRA_Item_ExtIEs * objPDUServed_cells_ToModify_E_UTRA_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Served_cells_ToModify_E_UTRA_Item_ExtIEs( SI_XNAP_DT_PDU_Served_cells_ToModify_E_UTRA_Item_ExtIEs ** objPDUServed_cells_ToModify_E_UTRA_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ServedCellInformation_NR_ExtIEs( SI_XNAP_DT_PDU_ServedCellInformation_NR_ExtIEs * objPDUServedCellInformation_NR_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ServedCellInformation_NR_ExtIEs( SI_XNAP_DT_PDU_ServedCellInformation_NR_ExtIEs * objPDUServedCellInformation_NR_ExtIEs);
void __si_xnap_debug_PDU_ServedCellInformation_NR_ExtIEs( char * key, SI_XNAP_DT_PDU_ServedCellInformation_NR_ExtIEs * objPDUServedCellInformation_NR_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ServedCellInformation_NR_ExtIEs( SI_XNAP_DT_PDU_ServedCellInformation_NR_ExtIEs ** objPDUServedCellInformation_NR_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SFN_Offset_ExtIEs( SI_XNAP_DT_PDU_SFN_Offset_ExtIEs * objPDUSFN_Offset_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SFN_Offset_ExtIEs( SI_XNAP_DT_PDU_SFN_Offset_ExtIEs * objPDUSFN_Offset_ExtIEs);
void __si_xnap_debug_PDU_SFN_Offset_ExtIEs( char * key, SI_XNAP_DT_PDU_SFN_Offset_ExtIEs * objPDUSFN_Offset_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SFN_Offset_ExtIEs( SI_XNAP_DT_PDU_SFN_Offset_ExtIEs ** objPDUSFN_Offset_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ServedCells_NR_Item_ExtIEs( SI_XNAP_DT_PDU_ServedCells_NR_Item_ExtIEs * objPDUServedCells_NR_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ServedCells_NR_Item_ExtIEs( SI_XNAP_DT_PDU_ServedCells_NR_Item_ExtIEs * objPDUServedCells_NR_Item_ExtIEs);
void __si_xnap_debug_PDU_ServedCells_NR_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_ServedCells_NR_Item_ExtIEs * objPDUServedCells_NR_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ServedCells_NR_Item_ExtIEs( SI_XNAP_DT_PDU_ServedCells_NR_Item_ExtIEs ** objPDUServedCells_NR_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Served_cells_ToModify_NR_Item_ExtIEs( SI_XNAP_DT_PDU_Served_cells_ToModify_NR_Item_ExtIEs * objPDUServed_cells_ToModify_NR_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Served_cells_ToModify_NR_Item_ExtIEs( SI_XNAP_DT_PDU_Served_cells_ToModify_NR_Item_ExtIEs * objPDUServed_cells_ToModify_NR_Item_ExtIEs);
void __si_xnap_debug_PDU_Served_cells_ToModify_NR_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_Served_cells_ToModify_NR_Item_ExtIEs * objPDUServed_cells_ToModify_NR_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Served_cells_ToModify_NR_Item_ExtIEs( SI_XNAP_DT_PDU_Served_cells_ToModify_NR_Item_ExtIEs ** objPDUServed_cells_ToModify_NR_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ServedCellSpecificInfoReq_NR_Item_ExtIEs( SI_XNAP_DT_PDU_ServedCellSpecificInfoReq_NR_Item_ExtIEs * objPDUServedCellSpecificInfoReq_NR_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ServedCellSpecificInfoReq_NR_Item_ExtIEs( SI_XNAP_DT_PDU_ServedCellSpecificInfoReq_NR_Item_ExtIEs * objPDUServedCellSpecificInfoReq_NR_Item_ExtIEs);
void __si_xnap_debug_PDU_ServedCellSpecificInfoReq_NR_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_ServedCellSpecificInfoReq_NR_Item_ExtIEs * objPDUServedCellSpecificInfoReq_NR_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ServedCellSpecificInfoReq_NR_Item_ExtIEs( SI_XNAP_DT_PDU_ServedCellSpecificInfoReq_NR_Item_ExtIEs ** objPDUServedCellSpecificInfoReq_NR_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ServedCellsToUpdate_NR_ExtIEs( SI_XNAP_DT_PDU_ServedCellsToUpdate_NR_ExtIEs * objPDUServedCellsToUpdate_NR_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ServedCellsToUpdate_NR_ExtIEs( SI_XNAP_DT_PDU_ServedCellsToUpdate_NR_ExtIEs * objPDUServedCellsToUpdate_NR_ExtIEs);
void __si_xnap_debug_PDU_ServedCellsToUpdate_NR_ExtIEs( char * key, SI_XNAP_DT_PDU_ServedCellsToUpdate_NR_ExtIEs * objPDUServedCellsToUpdate_NR_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ServedCellsToUpdate_NR_ExtIEs( SI_XNAP_DT_PDU_ServedCellsToUpdate_NR_ExtIEs ** objPDUServedCellsToUpdate_NR_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SharedResourceType_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_ExtIEs * objPDUSharedResourceType_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SharedResourceType_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_ExtIEs * objPDUSharedResourceType_ExtIEs);
void __si_xnap_debug_PDU_SharedResourceType_ExtIEs( char * key, SI_XNAP_DT_PDU_SharedResourceType_ExtIEs * objPDUSharedResourceType_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SharedResourceType_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_ExtIEs ** objPDUSharedResourceType_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SharedResourceType_UL_OnlySharing_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_UL_OnlySharing_ExtIEs * objPDUSharedResourceType_UL_OnlySharing_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SharedResourceType_UL_OnlySharing_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_UL_OnlySharing_ExtIEs * objPDUSharedResourceType_UL_OnlySharing_ExtIEs);
void __si_xnap_debug_PDU_SharedResourceType_UL_OnlySharing_ExtIEs( char * key, SI_XNAP_DT_PDU_SharedResourceType_UL_OnlySharing_ExtIEs * objPDUSharedResourceType_UL_OnlySharing_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SharedResourceType_UL_OnlySharing_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_UL_OnlySharing_ExtIEs ** objPDUSharedResourceType_UL_OnlySharing_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SharedResourceType_ULDL_Sharing_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_ExtIEs * objPDUSharedResourceType_ULDL_Sharing_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SharedResourceType_ULDL_Sharing_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_ExtIEs * objPDUSharedResourceType_ULDL_Sharing_ExtIEs);
void __si_xnap_debug_PDU_SharedResourceType_ULDL_Sharing_ExtIEs( char * key, SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_ExtIEs * objPDUSharedResourceType_ULDL_Sharing_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SharedResourceType_ULDL_Sharing_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_ExtIEs ** objPDUSharedResourceType_ULDL_Sharing_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SharedResourceType_ULDL_Sharing_UL_Resources_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_UL_Resources_ExtIEs * objPDUSharedResourceType_ULDL_Sharing_UL_Resources_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SharedResourceType_ULDL_Sharing_UL_Resources_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_UL_Resources_ExtIEs * objPDUSharedResourceType_ULDL_Sharing_UL_Resources_ExtIEs);
void __si_xnap_debug_PDU_SharedResourceType_ULDL_Sharing_UL_Resources_ExtIEs( char * key, SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_UL_Resources_ExtIEs * objPDUSharedResourceType_ULDL_Sharing_UL_Resources_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SharedResourceType_ULDL_Sharing_UL_Resources_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_UL_Resources_ExtIEs ** objPDUSharedResourceType_ULDL_Sharing_UL_Resources_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged_ExtIEs * objPDUSharedResourceType_ULDL_Sharing_UL_ResourcesChanged_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged_ExtIEs * objPDUSharedResourceType_ULDL_Sharing_UL_ResourcesChanged_ExtIEs);
void __si_xnap_debug_PDU_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged_ExtIEs( char * key, SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged_ExtIEs * objPDUSharedResourceType_ULDL_Sharing_UL_ResourcesChanged_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_UL_ResourcesChanged_ExtIEs ** objPDUSharedResourceType_ULDL_Sharing_UL_ResourcesChanged_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SharedResourceType_ULDL_Sharing_DL_Resources_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_DL_Resources_ExtIEs * objPDUSharedResourceType_ULDL_Sharing_DL_Resources_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SharedResourceType_ULDL_Sharing_DL_Resources_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_DL_Resources_ExtIEs * objPDUSharedResourceType_ULDL_Sharing_DL_Resources_ExtIEs);
void __si_xnap_debug_PDU_SharedResourceType_ULDL_Sharing_DL_Resources_ExtIEs( char * key, SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_DL_Resources_ExtIEs * objPDUSharedResourceType_ULDL_Sharing_DL_Resources_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SharedResourceType_ULDL_Sharing_DL_Resources_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_DL_Resources_ExtIEs ** objPDUSharedResourceType_ULDL_Sharing_DL_Resources_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged_ExtIEs * objPDUSharedResourceType_ULDL_Sharing_DL_ResourcesChanged_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged_ExtIEs * objPDUSharedResourceType_ULDL_Sharing_DL_ResourcesChanged_ExtIEs);
void __si_xnap_debug_PDU_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged_ExtIEs( char * key, SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged_ExtIEs * objPDUSharedResourceType_ULDL_Sharing_DL_ResourcesChanged_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged_ExtIEs( SI_XNAP_DT_PDU_SharedResourceType_ULDL_Sharing_DL_ResourcesChanged_ExtIEs ** objPDUSharedResourceType_ULDL_Sharing_DL_ResourcesChanged_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SliceAvailableCapacity_Item_ExtIEs( SI_XNAP_DT_PDU_SliceAvailableCapacity_Item_ExtIEs * objPDUSliceAvailableCapacity_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SliceAvailableCapacity_Item_ExtIEs( SI_XNAP_DT_PDU_SliceAvailableCapacity_Item_ExtIEs * objPDUSliceAvailableCapacity_Item_ExtIEs);
void __si_xnap_debug_PDU_SliceAvailableCapacity_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SliceAvailableCapacity_Item_ExtIEs * objPDUSliceAvailableCapacity_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SliceAvailableCapacity_Item_ExtIEs( SI_XNAP_DT_PDU_SliceAvailableCapacity_Item_ExtIEs ** objPDUSliceAvailableCapacity_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SNSSAIAvailableCapacity_Item_ExtIEs( SI_XNAP_DT_PDU_SNSSAIAvailableCapacity_Item_ExtIEs * objPDUSNSSAIAvailableCapacity_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SNSSAIAvailableCapacity_Item_ExtIEs( SI_XNAP_DT_PDU_SNSSAIAvailableCapacity_Item_ExtIEs * objPDUSNSSAIAvailableCapacity_Item_ExtIEs);
void __si_xnap_debug_PDU_SNSSAIAvailableCapacity_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SNSSAIAvailableCapacity_Item_ExtIEs * objPDUSNSSAIAvailableCapacity_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SNSSAIAvailableCapacity_Item_ExtIEs( SI_XNAP_DT_PDU_SNSSAIAvailableCapacity_Item_ExtIEs ** objPDUSNSSAIAvailableCapacity_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SliceRadioResourceStatus_Item_ExtIEs( SI_XNAP_DT_PDU_SliceRadioResourceStatus_Item_ExtIEs * objPDUSliceRadioResourceStatus_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SliceRadioResourceStatus_Item_ExtIEs( SI_XNAP_DT_PDU_SliceRadioResourceStatus_Item_ExtIEs * objPDUSliceRadioResourceStatus_Item_ExtIEs);
void __si_xnap_debug_PDU_SliceRadioResourceStatus_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SliceRadioResourceStatus_Item_ExtIEs * objPDUSliceRadioResourceStatus_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SliceRadioResourceStatus_Item_ExtIEs( SI_XNAP_DT_PDU_SliceRadioResourceStatus_Item_ExtIEs ** objPDUSliceRadioResourceStatus_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SLPositioning_Ranging_Services_Info_ExtIEs( SI_XNAP_DT_PDU_SLPositioning_Ranging_Services_Info_ExtIEs * objPDUSLPositioning_Ranging_Services_Info_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SLPositioning_Ranging_Services_Info_ExtIEs( SI_XNAP_DT_PDU_SLPositioning_Ranging_Services_Info_ExtIEs * objPDUSLPositioning_Ranging_Services_Info_ExtIEs);
void __si_xnap_debug_PDU_SLPositioning_Ranging_Services_Info_ExtIEs( char * key, SI_XNAP_DT_PDU_SLPositioning_Ranging_Services_Info_ExtIEs * objPDUSLPositioning_Ranging_Services_Info_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SLPositioning_Ranging_Services_Info_ExtIEs( SI_XNAP_DT_PDU_SLPositioning_Ranging_Services_Info_ExtIEs ** objPDUSLPositioning_Ranging_Services_Info_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RSPP_transport_QoS_parameters_ExtIEs( SI_XNAP_DT_PDU_RSPP_transport_QoS_parameters_ExtIEs * objPDURSPP_transport_QoS_parameters_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RSPP_transport_QoS_parameters_ExtIEs( SI_XNAP_DT_PDU_RSPP_transport_QoS_parameters_ExtIEs * objPDURSPP_transport_QoS_parameters_ExtIEs);
void __si_xnap_debug_PDU_RSPP_transport_QoS_parameters_ExtIEs( char * key, SI_XNAP_DT_PDU_RSPP_transport_QoS_parameters_ExtIEs * objPDURSPP_transport_QoS_parameters_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RSPP_transport_QoS_parameters_ExtIEs( SI_XNAP_DT_PDU_RSPP_transport_QoS_parameters_ExtIEs ** objPDURSPP_transport_QoS_parameters_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RSPPQoSFlowItem_ExtIEs( SI_XNAP_DT_PDU_RSPPQoSFlowItem_ExtIEs * objPDURSPPQoSFlowItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RSPPQoSFlowItem_ExtIEs( SI_XNAP_DT_PDU_RSPPQoSFlowItem_ExtIEs * objPDURSPPQoSFlowItem_ExtIEs);
void __si_xnap_debug_PDU_RSPPQoSFlowItem_ExtIEs( char * key, SI_XNAP_DT_PDU_RSPPQoSFlowItem_ExtIEs * objPDURSPPQoSFlowItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RSPPQoSFlowItem_ExtIEs( SI_XNAP_DT_PDU_RSPPQoSFlowItem_ExtIEs ** objPDURSPPQoSFlowItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RSPPFlowBitRates_ExtIEs( SI_XNAP_DT_PDU_RSPPFlowBitRates_ExtIEs * objPDURSPPFlowBitRates_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RSPPFlowBitRates_ExtIEs( SI_XNAP_DT_PDU_RSPPFlowBitRates_ExtIEs * objPDURSPPFlowBitRates_ExtIEs);
void __si_xnap_debug_PDU_RSPPFlowBitRates_ExtIEs( char * key, SI_XNAP_DT_PDU_RSPPFlowBitRates_ExtIEs * objPDURSPPFlowBitRates_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RSPPFlowBitRates_ExtIEs( SI_XNAP_DT_PDU_RSPPFlowBitRates_ExtIEs ** objPDURSPPFlowBitRates_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SNSSAIRadioResourceStatus_Item_ExtIEs( SI_XNAP_DT_PDU_SNSSAIRadioResourceStatus_Item_ExtIEs * objPDUSNSSAIRadioResourceStatus_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SNSSAIRadioResourceStatus_Item_ExtIEs( SI_XNAP_DT_PDU_SNSSAIRadioResourceStatus_Item_ExtIEs * objPDUSNSSAIRadioResourceStatus_Item_ExtIEs);
void __si_xnap_debug_PDU_SNSSAIRadioResourceStatus_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SNSSAIRadioResourceStatus_Item_ExtIEs * objPDUSNSSAIRadioResourceStatus_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SNSSAIRadioResourceStatus_Item_ExtIEs( SI_XNAP_DT_PDU_SNSSAIRadioResourceStatus_Item_ExtIEs ** objPDUSNSSAIRadioResourceStatus_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SliceToReport_List_Item_ExtIEs( SI_XNAP_DT_PDU_SliceToReport_List_Item_ExtIEs * objPDUSliceToReport_List_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SliceToReport_List_Item_ExtIEs( SI_XNAP_DT_PDU_SliceToReport_List_Item_ExtIEs * objPDUSliceToReport_List_Item_ExtIEs);
void __si_xnap_debug_PDU_SliceToReport_List_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SliceToReport_List_Item_ExtIEs * objPDUSliceToReport_List_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SliceToReport_List_Item_ExtIEs( SI_XNAP_DT_PDU_SliceToReport_List_Item_ExtIEs ** objPDUSliceToReport_List_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SNSSAI_Item_ExtIEs( SI_XNAP_DT_PDU_SNSSAI_Item_ExtIEs * objPDUSNSSAI_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SNSSAI_Item_ExtIEs( SI_XNAP_DT_PDU_SNSSAI_Item_ExtIEs * objPDUSNSSAI_Item_ExtIEs);
void __si_xnap_debug_PDU_SNSSAI_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SNSSAI_Item_ExtIEs * objPDUSNSSAI_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SNSSAI_Item_ExtIEs( SI_XNAP_DT_PDU_SNSSAI_Item_ExtIEs ** objPDUSNSSAI_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SlotConfiguration_List_Item_ExtIEs( SI_XNAP_DT_PDU_SlotConfiguration_List_Item_ExtIEs * objPDUSlotConfiguration_List_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SlotConfiguration_List_Item_ExtIEs( SI_XNAP_DT_PDU_SlotConfiguration_List_Item_ExtIEs * objPDUSlotConfiguration_List_Item_ExtIEs);
void __si_xnap_debug_PDU_SlotConfiguration_List_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SlotConfiguration_List_Item_ExtIEs * objPDUSlotConfiguration_List_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SlotConfiguration_List_Item_ExtIEs( SI_XNAP_DT_PDU_SlotConfiguration_List_Item_ExtIEs ** objPDUSlotConfiguration_List_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_S_NSSAI_ExtIEs( SI_XNAP_DT_PDU_S_NSSAI_ExtIEs * objPDUS_NSSAI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_S_NSSAI_ExtIEs( SI_XNAP_DT_PDU_S_NSSAI_ExtIEs * objPDUS_NSSAI_ExtIEs);
void __si_xnap_debug_PDU_S_NSSAI_ExtIEs( char * key, SI_XNAP_DT_PDU_S_NSSAI_ExtIEs * objPDUS_NSSAI_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_S_NSSAI_ExtIEs( SI_XNAP_DT_PDU_S_NSSAI_ExtIEs ** objPDUS_NSSAI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SNPNIdentity_ExtIEs( SI_XNAP_DT_PDU_SNPNIdentity_ExtIEs * objPDUSNPNIdentity_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SNPNIdentity_ExtIEs( SI_XNAP_DT_PDU_SNPNIdentity_ExtIEs * objPDUSNPNIdentity_ExtIEs);
void __si_xnap_debug_PDU_SNPNIdentity_ExtIEs( char * key, SI_XNAP_DT_PDU_SNPNIdentity_ExtIEs * objPDUSNPNIdentity_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SNPNIdentity_ExtIEs( SI_XNAP_DT_PDU_SNPNIdentity_ExtIEs ** objPDUSNPNIdentity_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SpecialSubframeInfo_E_UTRA_ExtIEs( SI_XNAP_DT_PDU_SpecialSubframeInfo_E_UTRA_ExtIEs * objPDUSpecialSubframeInfo_E_UTRA_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SpecialSubframeInfo_E_UTRA_ExtIEs( SI_XNAP_DT_PDU_SpecialSubframeInfo_E_UTRA_ExtIEs * objPDUSpecialSubframeInfo_E_UTRA_ExtIEs);
void __si_xnap_debug_PDU_SpecialSubframeInfo_E_UTRA_ExtIEs( char * key, SI_XNAP_DT_PDU_SpecialSubframeInfo_E_UTRA_ExtIEs * objPDUSpecialSubframeInfo_E_UTRA_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SpecialSubframeInfo_E_UTRA_ExtIEs( SI_XNAP_DT_PDU_SpecialSubframeInfo_E_UTRA_ExtIEs ** objPDUSpecialSubframeInfo_E_UTRA_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SSBAreaCapacityValue_List_Item_ExtIEs( SI_XNAP_DT_PDU_SSBAreaCapacityValue_List_Item_ExtIEs * objPDUSSBAreaCapacityValue_List_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SSBAreaCapacityValue_List_Item_ExtIEs( SI_XNAP_DT_PDU_SSBAreaCapacityValue_List_Item_ExtIEs * objPDUSSBAreaCapacityValue_List_Item_ExtIEs);
void __si_xnap_debug_PDU_SSBAreaCapacityValue_List_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SSBAreaCapacityValue_List_Item_ExtIEs * objPDUSSBAreaCapacityValue_List_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SSBAreaCapacityValue_List_Item_ExtIEs( SI_XNAP_DT_PDU_SSBAreaCapacityValue_List_Item_ExtIEs ** objPDUSSBAreaCapacityValue_List_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SSBAreaRadioResourceStatus_List_Item_ExtIEs( SI_XNAP_DT_PDU_SSBAreaRadioResourceStatus_List_Item_ExtIEs * objPDUSSBAreaRadioResourceStatus_List_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SSBAreaRadioResourceStatus_List_Item_ExtIEs( SI_XNAP_DT_PDU_SSBAreaRadioResourceStatus_List_Item_ExtIEs * objPDUSSBAreaRadioResourceStatus_List_Item_ExtIEs);
void __si_xnap_debug_PDU_SSBAreaRadioResourceStatus_List_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SSBAreaRadioResourceStatus_List_Item_ExtIEs * objPDUSSBAreaRadioResourceStatus_List_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SSBAreaRadioResourceStatus_List_Item_ExtIEs( SI_XNAP_DT_PDU_SSBAreaRadioResourceStatus_List_Item_ExtIEs ** objPDUSSBAreaRadioResourceStatus_List_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SSB_Coverage_Modification_List_Item_ExtIEs( SI_XNAP_DT_PDU_SSB_Coverage_Modification_List_Item_ExtIEs * objPDUSSB_Coverage_Modification_List_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SSB_Coverage_Modification_List_Item_ExtIEs( SI_XNAP_DT_PDU_SSB_Coverage_Modification_List_Item_ExtIEs * objPDUSSB_Coverage_Modification_List_Item_ExtIEs);
void __si_xnap_debug_PDU_SSB_Coverage_Modification_List_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SSB_Coverage_Modification_List_Item_ExtIEs * objPDUSSB_Coverage_Modification_List_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SSB_Coverage_Modification_List_Item_ExtIEs( SI_XNAP_DT_PDU_SSB_Coverage_Modification_List_Item_ExtIEs ** objPDUSSB_Coverage_Modification_List_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SSB_PositionsInBurst_ExtIEs( SI_XNAP_DT_PDU_SSB_PositionsInBurst_ExtIEs * objPDUSSB_PositionsInBurst_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SSB_PositionsInBurst_ExtIEs( SI_XNAP_DT_PDU_SSB_PositionsInBurst_ExtIEs * objPDUSSB_PositionsInBurst_ExtIEs);
void __si_xnap_debug_PDU_SSB_PositionsInBurst_ExtIEs( char * key, SI_XNAP_DT_PDU_SSB_PositionsInBurst_ExtIEs * objPDUSSB_PositionsInBurst_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SSB_PositionsInBurst_ExtIEs( SI_XNAP_DT_PDU_SSB_PositionsInBurst_ExtIEs ** objPDUSSB_PositionsInBurst_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SSBOffsets_Item_ExtIEs( SI_XNAP_DT_PDU_SSBOffsets_Item_ExtIEs * objPDUSSBOffsets_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SSBOffsets_Item_ExtIEs( SI_XNAP_DT_PDU_SSBOffsets_Item_ExtIEs * objPDUSSBOffsets_Item_ExtIEs);
void __si_xnap_debug_PDU_SSBOffsets_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SSBOffsets_Item_ExtIEs * objPDUSSBOffsets_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SSBOffsets_Item_ExtIEs( SI_XNAP_DT_PDU_SSBOffsets_Item_ExtIEs ** objPDUSSBOffsets_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SSBOffsetInformation_ExtIEs( SI_XNAP_DT_PDU_SSBOffsetInformation_ExtIEs * objPDUSSBOffsetInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SSBOffsetInformation_ExtIEs( SI_XNAP_DT_PDU_SSBOffsetInformation_ExtIEs * objPDUSSBOffsetInformation_ExtIEs);
void __si_xnap_debug_PDU_SSBOffsetInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_SSBOffsetInformation_ExtIEs * objPDUSSBOffsetInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SSBOffsetInformation_ExtIEs( SI_XNAP_DT_PDU_SSBOffsetInformation_ExtIEs ** objPDUSSBOffsetInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SSBOffsetModificationRange_ExtIEs( SI_XNAP_DT_PDU_SSBOffsetModificationRange_ExtIEs * objPDUSSBOffsetModificationRange_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SSBOffsetModificationRange_ExtIEs( SI_XNAP_DT_PDU_SSBOffsetModificationRange_ExtIEs * objPDUSSBOffsetModificationRange_ExtIEs);
void __si_xnap_debug_PDU_SSBOffsetModificationRange_ExtIEs( char * key, SI_XNAP_DT_PDU_SSBOffsetModificationRange_ExtIEs * objPDUSSBOffsetModificationRange_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SSBOffsetModificationRange_ExtIEs( SI_XNAP_DT_PDU_SSBOffsetModificationRange_ExtIEs ** objPDUSSBOffsetModificationRange_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SSBToReport_List_Item_ExtIEs( SI_XNAP_DT_PDU_SSBToReport_List_Item_ExtIEs * objPDUSSBToReport_List_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SSBToReport_List_Item_ExtIEs( SI_XNAP_DT_PDU_SSBToReport_List_Item_ExtIEs * objPDUSSBToReport_List_Item_ExtIEs);
void __si_xnap_debug_PDU_SSBToReport_List_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SSBToReport_List_Item_ExtIEs * objPDUSSBToReport_List_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SSBToReport_List_Item_ExtIEs( SI_XNAP_DT_PDU_SSBToReport_List_Item_ExtIEs ** objPDUSSBToReport_List_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SSB_transmisisonBitmap_ExtIEs( SI_XNAP_DT_PDU_SSB_transmisisonBitmap_ExtIEs * objPDUSSB_transmisisonBitmap_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SSB_transmisisonBitmap_ExtIEs( SI_XNAP_DT_PDU_SSB_transmisisonBitmap_ExtIEs * objPDUSSB_transmisisonBitmap_ExtIEs);
void __si_xnap_debug_PDU_SSB_transmisisonBitmap_ExtIEs( char * key, SI_XNAP_DT_PDU_SSB_transmisisonBitmap_ExtIEs * objPDUSSB_transmisisonBitmap_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SSB_transmisisonBitmap_ExtIEs( SI_XNAP_DT_PDU_SSB_transmisisonBitmap_ExtIEs ** objPDUSSB_transmisisonBitmap_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SuccessfulHOReportList_Item_ExtIEs( SI_XNAP_DT_PDU_SuccessfulHOReportList_Item_ExtIEs * objPDUSuccessfulHOReportList_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SuccessfulHOReportList_Item_ExtIEs( SI_XNAP_DT_PDU_SuccessfulHOReportList_Item_ExtIEs * objPDUSuccessfulHOReportList_Item_ExtIEs);
void __si_xnap_debug_PDU_SuccessfulHOReportList_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SuccessfulHOReportList_Item_ExtIEs * objPDUSuccessfulHOReportList_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SuccessfulHOReportList_Item_ExtIEs( SI_XNAP_DT_PDU_SuccessfulHOReportList_Item_ExtIEs ** objPDUSuccessfulHOReportList_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SuccessfulPSCellChangeReportList_Item_ExtIEs( SI_XNAP_DT_PDU_SuccessfulPSCellChangeReportList_Item_ExtIEs * objPDUSuccessfulPSCellChangeReportList_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SuccessfulPSCellChangeReportList_Item_ExtIEs( SI_XNAP_DT_PDU_SuccessfulPSCellChangeReportList_Item_ExtIEs * objPDUSuccessfulPSCellChangeReportList_Item_ExtIEs);
void __si_xnap_debug_PDU_SuccessfulPSCellChangeReportList_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SuccessfulPSCellChangeReportList_Item_ExtIEs * objPDUSuccessfulPSCellChangeReportList_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SuccessfulPSCellChangeReportList_Item_ExtIEs( SI_XNAP_DT_PDU_SuccessfulPSCellChangeReportList_Item_ExtIEs ** objPDUSuccessfulPSCellChangeReportList_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SUL_Information_ExtIEs( SI_XNAP_DT_PDU_SUL_Information_ExtIEs * objPDUSUL_Information_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SUL_Information_ExtIEs( SI_XNAP_DT_PDU_SUL_Information_ExtIEs * objPDUSUL_Information_ExtIEs);
void __si_xnap_debug_PDU_SUL_Information_ExtIEs( char * key, SI_XNAP_DT_PDU_SUL_Information_ExtIEs * objPDUSUL_Information_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SUL_Information_ExtIEs( SI_XNAP_DT_PDU_SUL_Information_ExtIEs ** objPDUSUL_Information_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SupportedSULBandItem_ExtIEs( SI_XNAP_DT_PDU_SupportedSULBandItem_ExtIEs * objPDUSupportedSULBandItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SupportedSULBandItem_ExtIEs( SI_XNAP_DT_PDU_SupportedSULBandItem_ExtIEs * objPDUSupportedSULBandItem_ExtIEs);
void __si_xnap_debug_PDU_SupportedSULBandItem_ExtIEs( char * key, SI_XNAP_DT_PDU_SupportedSULBandItem_ExtIEs * objPDUSupportedSULBandItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SupportedSULBandItem_ExtIEs( SI_XNAP_DT_PDU_SupportedSULBandItem_ExtIEs ** objPDUSupportedSULBandItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SymbolAllocation_in_Slot_ExtIEs( SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_ExtIEs * objPDUSymbolAllocation_in_Slot_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SymbolAllocation_in_Slot_ExtIEs( SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_ExtIEs * objPDUSymbolAllocation_in_Slot_ExtIEs);
void __si_xnap_debug_PDU_SymbolAllocation_in_Slot_ExtIEs( char * key, SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_ExtIEs * objPDUSymbolAllocation_in_Slot_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SymbolAllocation_in_Slot_ExtIEs( SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_ExtIEs ** objPDUSymbolAllocation_in_Slot_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SymbolAllocation_in_Slot_AllDL_ExtIEs( SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_AllDL_ExtIEs * objPDUSymbolAllocation_in_Slot_AllDL_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SymbolAllocation_in_Slot_AllDL_ExtIEs( SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_AllDL_ExtIEs * objPDUSymbolAllocation_in_Slot_AllDL_ExtIEs);
void __si_xnap_debug_PDU_SymbolAllocation_in_Slot_AllDL_ExtIEs( char * key, SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_AllDL_ExtIEs * objPDUSymbolAllocation_in_Slot_AllDL_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SymbolAllocation_in_Slot_AllDL_ExtIEs( SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_AllDL_ExtIEs ** objPDUSymbolAllocation_in_Slot_AllDL_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SymbolAllocation_in_Slot_AllUL_ExtIEs( SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_AllUL_ExtIEs * objPDUSymbolAllocation_in_Slot_AllUL_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SymbolAllocation_in_Slot_AllUL_ExtIEs( SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_AllUL_ExtIEs * objPDUSymbolAllocation_in_Slot_AllUL_ExtIEs);
void __si_xnap_debug_PDU_SymbolAllocation_in_Slot_AllUL_ExtIEs( char * key, SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_AllUL_ExtIEs * objPDUSymbolAllocation_in_Slot_AllUL_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SymbolAllocation_in_Slot_AllUL_ExtIEs( SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_AllUL_ExtIEs ** objPDUSymbolAllocation_in_Slot_AllUL_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SymbolAllocation_in_Slot_BothDLandUL_ExtIEs( SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_BothDLandUL_ExtIEs * objPDUSymbolAllocation_in_Slot_BothDLandUL_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SymbolAllocation_in_Slot_BothDLandUL_ExtIEs( SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_BothDLandUL_ExtIEs * objPDUSymbolAllocation_in_Slot_BothDLandUL_ExtIEs);
void __si_xnap_debug_PDU_SymbolAllocation_in_Slot_BothDLandUL_ExtIEs( char * key, SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_BothDLandUL_ExtIEs * objPDUSymbolAllocation_in_Slot_BothDLandUL_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SymbolAllocation_in_Slot_BothDLandUL_ExtIEs( SI_XNAP_DT_PDU_SymbolAllocation_in_Slot_BothDLandUL_ExtIEs ** objPDUSymbolAllocation_in_Slot_BothDLandUL_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SNPN_CellBasedMDT_ExtIEs( SI_XNAP_DT_PDU_SNPN_CellBasedMDT_ExtIEs * objPDUSNPN_CellBasedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SNPN_CellBasedMDT_ExtIEs( SI_XNAP_DT_PDU_SNPN_CellBasedMDT_ExtIEs * objPDUSNPN_CellBasedMDT_ExtIEs);
void __si_xnap_debug_PDU_SNPN_CellBasedMDT_ExtIEs( char * key, SI_XNAP_DT_PDU_SNPN_CellBasedMDT_ExtIEs * objPDUSNPN_CellBasedMDT_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SNPN_CellBasedMDT_ExtIEs( SI_XNAP_DT_PDU_SNPN_CellBasedMDT_ExtIEs ** objPDUSNPN_CellBasedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SNPN_CellIdforMDT_Item_ExtIEs( SI_XNAP_DT_PDU_SNPN_CellIdforMDT_Item_ExtIEs * objPDUSNPN_CellIdforMDT_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SNPN_CellIdforMDT_Item_ExtIEs( SI_XNAP_DT_PDU_SNPN_CellIdforMDT_Item_ExtIEs * objPDUSNPN_CellIdforMDT_Item_ExtIEs);
void __si_xnap_debug_PDU_SNPN_CellIdforMDT_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SNPN_CellIdforMDT_Item_ExtIEs * objPDUSNPN_CellIdforMDT_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SNPN_CellIdforMDT_Item_ExtIEs( SI_XNAP_DT_PDU_SNPN_CellIdforMDT_Item_ExtIEs ** objPDUSNPN_CellIdforMDT_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SNPN_TAIBasedMDT_ExtIEs( SI_XNAP_DT_PDU_SNPN_TAIBasedMDT_ExtIEs * objPDUSNPN_TAIBasedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SNPN_TAIBasedMDT_ExtIEs( SI_XNAP_DT_PDU_SNPN_TAIBasedMDT_ExtIEs * objPDUSNPN_TAIBasedMDT_ExtIEs);
void __si_xnap_debug_PDU_SNPN_TAIBasedMDT_ExtIEs( char * key, SI_XNAP_DT_PDU_SNPN_TAIBasedMDT_ExtIEs * objPDUSNPN_TAIBasedMDT_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SNPN_TAIBasedMDT_ExtIEs( SI_XNAP_DT_PDU_SNPN_TAIBasedMDT_ExtIEs ** objPDUSNPN_TAIBasedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SNPN_TAIforMDT_Item_ExtIEs( SI_XNAP_DT_PDU_SNPN_TAIforMDT_Item_ExtIEs * objPDUSNPN_TAIforMDT_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SNPN_TAIforMDT_Item_ExtIEs( SI_XNAP_DT_PDU_SNPN_TAIforMDT_Item_ExtIEs * objPDUSNPN_TAIforMDT_Item_ExtIEs);
void __si_xnap_debug_PDU_SNPN_TAIforMDT_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SNPN_TAIforMDT_Item_ExtIEs * objPDUSNPN_TAIforMDT_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SNPN_TAIforMDT_Item_ExtIEs( SI_XNAP_DT_PDU_SNPN_TAIforMDT_Item_ExtIEs ** objPDUSNPN_TAIforMDT_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SNPN_BasedMDT_ExtIEs( SI_XNAP_DT_PDU_SNPN_BasedMDT_ExtIEs * objPDUSNPN_BasedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SNPN_BasedMDT_ExtIEs( SI_XNAP_DT_PDU_SNPN_BasedMDT_ExtIEs * objPDUSNPN_BasedMDT_ExtIEs);
void __si_xnap_debug_PDU_SNPN_BasedMDT_ExtIEs( char * key, SI_XNAP_DT_PDU_SNPN_BasedMDT_ExtIEs * objPDUSNPN_BasedMDT_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SNPN_BasedMDT_ExtIEs( SI_XNAP_DT_PDU_SNPN_BasedMDT_ExtIEs ** objPDUSNPN_BasedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SNPNforMDT_Item_ExtIEs( SI_XNAP_DT_PDU_SNPNforMDT_Item_ExtIEs * objPDUSNPNforMDT_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SNPNforMDT_Item_ExtIEs( SI_XNAP_DT_PDU_SNPNforMDT_Item_ExtIEs * objPDUSNPNforMDT_Item_ExtIEs);
void __si_xnap_debug_PDU_SNPNforMDT_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SNPNforMDT_Item_ExtIEs * objPDUSNPNforMDT_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SNPNforMDT_Item_ExtIEs( SI_XNAP_DT_PDU_SNPNforMDT_Item_ExtIEs ** objPDUSNPNforMDT_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TABasedMDT_ExtIEs( SI_XNAP_DT_PDU_TABasedMDT_ExtIEs * objPDUTABasedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TABasedMDT_ExtIEs( SI_XNAP_DT_PDU_TABasedMDT_ExtIEs * objPDUTABasedMDT_ExtIEs);
void __si_xnap_debug_PDU_TABasedMDT_ExtIEs( char * key, SI_XNAP_DT_PDU_TABasedMDT_ExtIEs * objPDUTABasedMDT_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TABasedMDT_ExtIEs( SI_XNAP_DT_PDU_TABasedMDT_ExtIEs ** objPDUTABasedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TAIBasedMDT_ExtIEs( SI_XNAP_DT_PDU_TAIBasedMDT_ExtIEs * objPDUTAIBasedMDT_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TAIBasedMDT_ExtIEs( SI_XNAP_DT_PDU_TAIBasedMDT_ExtIEs * objPDUTAIBasedMDT_ExtIEs);
void __si_xnap_debug_PDU_TAIBasedMDT_ExtIEs( char * key, SI_XNAP_DT_PDU_TAIBasedMDT_ExtIEs * objPDUTAIBasedMDT_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TAIBasedMDT_ExtIEs( SI_XNAP_DT_PDU_TAIBasedMDT_ExtIEs ** objPDUTAIBasedMDT_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TAIforMDT_Item_ExtIEs( SI_XNAP_DT_PDU_TAIforMDT_Item_ExtIEs * objPDUTAIforMDT_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TAIforMDT_Item_ExtIEs( SI_XNAP_DT_PDU_TAIforMDT_Item_ExtIEs * objPDUTAIforMDT_Item_ExtIEs);
void __si_xnap_debug_PDU_TAIforMDT_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TAIforMDT_Item_ExtIEs * objPDUTAIforMDT_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TAIforMDT_Item_ExtIEs( SI_XNAP_DT_PDU_TAIforMDT_Item_ExtIEs ** objPDUTAIforMDT_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TAINSAGSupportItem_ExtIEs( SI_XNAP_DT_PDU_TAINSAGSupportItem_ExtIEs * objPDUTAINSAGSupportItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TAINSAGSupportItem_ExtIEs( SI_XNAP_DT_PDU_TAINSAGSupportItem_ExtIEs * objPDUTAINSAGSupportItem_ExtIEs);
void __si_xnap_debug_PDU_TAINSAGSupportItem_ExtIEs( char * key, SI_XNAP_DT_PDU_TAINSAGSupportItem_ExtIEs * objPDUTAINSAGSupportItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TAINSAGSupportItem_ExtIEs( SI_XNAP_DT_PDU_TAINSAGSupportItem_ExtIEs ** objPDUTAINSAGSupportItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TAISliceUnavailableCellItem_ExtIEs( SI_XNAP_DT_PDU_TAISliceUnavailableCellItem_ExtIEs * objPDUTAISliceUnavailableCellItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TAISliceUnavailableCellItem_ExtIEs( SI_XNAP_DT_PDU_TAISliceUnavailableCellItem_ExtIEs * objPDUTAISliceUnavailableCellItem_ExtIEs);
void __si_xnap_debug_PDU_TAISliceUnavailableCellItem_ExtIEs( char * key, SI_XNAP_DT_PDU_TAISliceUnavailableCellItem_ExtIEs * objPDUTAISliceUnavailableCellItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TAISliceUnavailableCellItem_ExtIEs( SI_XNAP_DT_PDU_TAISliceUnavailableCellItem_ExtIEs ** objPDUTAISliceUnavailableCellItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SliceAvailabilityList_ExtIEs( SI_XNAP_DT_PDU_SliceAvailabilityList_ExtIEs * objPDUSliceAvailabilityList_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SliceAvailabilityList_ExtIEs( SI_XNAP_DT_PDU_SliceAvailabilityList_ExtIEs * objPDUSliceAvailabilityList_ExtIEs);
void __si_xnap_debug_PDU_SliceAvailabilityList_ExtIEs( char * key, SI_XNAP_DT_PDU_SliceAvailabilityList_ExtIEs * objPDUSliceAvailabilityList_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SliceAvailabilityList_ExtIEs( SI_XNAP_DT_PDU_SliceAvailabilityList_ExtIEs ** objPDUSliceAvailabilityList_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_AvailableCellList_ExtIEs( SI_XNAP_DT_PDU_AvailableCellList_ExtIEs * objPDUAvailableCellList_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_AvailableCellList_ExtIEs( SI_XNAP_DT_PDU_AvailableCellList_ExtIEs * objPDUAvailableCellList_ExtIEs);
void __si_xnap_debug_PDU_AvailableCellList_ExtIEs( char * key, SI_XNAP_DT_PDU_AvailableCellList_ExtIEs * objPDUAvailableCellList_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_AvailableCellList_ExtIEs( SI_XNAP_DT_PDU_AvailableCellList_ExtIEs ** objPDUAvailableCellList_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UnavailableCellList_ExtIEs( SI_XNAP_DT_PDU_UnavailableCellList_ExtIEs * objPDUUnavailableCellList_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UnavailableCellList_ExtIEs( SI_XNAP_DT_PDU_UnavailableCellList_ExtIEs * objPDUUnavailableCellList_ExtIEs);
void __si_xnap_debug_PDU_UnavailableCellList_ExtIEs( char * key, SI_XNAP_DT_PDU_UnavailableCellList_ExtIEs * objPDUUnavailableCellList_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UnavailableCellList_ExtIEs( SI_XNAP_DT_PDU_UnavailableCellList_ExtIEs ** objPDUUnavailableCellList_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TAISupport_Item_ExtIEs( SI_XNAP_DT_PDU_TAISupport_Item_ExtIEs * objPDUTAISupport_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TAISupport_Item_ExtIEs( SI_XNAP_DT_PDU_TAISupport_Item_ExtIEs * objPDUTAISupport_Item_ExtIEs);
void __si_xnap_debug_PDU_TAISupport_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TAISupport_Item_ExtIEs * objPDUTAISupport_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TAISupport_Item_ExtIEs( SI_XNAP_DT_PDU_TAISupport_Item_ExtIEs ** objPDUTAISupport_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TABasedQMC_ExtIEs( SI_XNAP_DT_PDU_TABasedQMC_ExtIEs * objPDUTABasedQMC_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TABasedQMC_ExtIEs( SI_XNAP_DT_PDU_TABasedQMC_ExtIEs * objPDUTABasedQMC_ExtIEs);
void __si_xnap_debug_PDU_TABasedQMC_ExtIEs( char * key, SI_XNAP_DT_PDU_TABasedQMC_ExtIEs * objPDUTABasedQMC_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TABasedQMC_ExtIEs( SI_XNAP_DT_PDU_TABasedQMC_ExtIEs ** objPDUTABasedQMC_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TAIBasedQMC_ExtIEs( SI_XNAP_DT_PDU_TAIBasedQMC_ExtIEs * objPDUTAIBasedQMC_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TAIBasedQMC_ExtIEs( SI_XNAP_DT_PDU_TAIBasedQMC_ExtIEs * objPDUTAIBasedQMC_ExtIEs);
void __si_xnap_debug_PDU_TAIBasedQMC_ExtIEs( char * key, SI_XNAP_DT_PDU_TAIBasedQMC_ExtIEs * objPDUTAIBasedQMC_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TAIBasedQMC_ExtIEs( SI_XNAP_DT_PDU_TAIBasedQMC_ExtIEs ** objPDUTAIBasedQMC_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TAI_Item_ExtIEs( SI_XNAP_DT_PDU_TAI_Item_ExtIEs * objPDUTAI_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TAI_Item_ExtIEs( SI_XNAP_DT_PDU_TAI_Item_ExtIEs * objPDUTAI_Item_ExtIEs);
void __si_xnap_debug_PDU_TAI_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TAI_Item_ExtIEs * objPDUTAI_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TAI_Item_ExtIEs( SI_XNAP_DT_PDU_TAI_Item_ExtIEs ** objPDUTAI_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TargetCGI_ExtIEs( SI_XNAP_DT_PDU_TargetCGI_ExtIEs * objPDUTargetCGI_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TargetCGI_ExtIEs( SI_XNAP_DT_PDU_TargetCGI_ExtIEs * objPDUTargetCGI_ExtIEs);
void __si_xnap_debug_PDU_TargetCGI_ExtIEs( char * key, SI_XNAP_DT_PDU_TargetCGI_ExtIEs * objPDUTargetCGI_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TargetCGI_ExtIEs( SI_XNAP_DT_PDU_TargetCGI_ExtIEs ** objPDUTargetCGI_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TargetCellList_Item_ExtIEs( SI_XNAP_DT_PDU_TargetCellList_Item_ExtIEs * objPDUTargetCellList_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TargetCellList_Item_ExtIEs( SI_XNAP_DT_PDU_TargetCellList_Item_ExtIEs * objPDUTargetCellList_Item_ExtIEs);
void __si_xnap_debug_PDU_TargetCellList_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TargetCellList_Item_ExtIEs * objPDUTargetCellList_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TargetCellList_Item_ExtIEs( SI_XNAP_DT_PDU_TargetCellList_Item_ExtIEs ** objPDUTargetCellList_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TimeSynchronizationAssistanceInformation_ExtIEs( SI_XNAP_DT_PDU_TimeSynchronizationAssistanceInformation_ExtIEs * objPDUTimeSynchronizationAssistanceInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TimeSynchronizationAssistanceInformation_ExtIEs( SI_XNAP_DT_PDU_TimeSynchronizationAssistanceInformation_ExtIEs * objPDUTimeSynchronizationAssistanceInformation_ExtIEs);
void __si_xnap_debug_PDU_TimeSynchronizationAssistanceInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_TimeSynchronizationAssistanceInformation_ExtIEs * objPDUTimeSynchronizationAssistanceInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TimeSynchronizationAssistanceInformation_ExtIEs( SI_XNAP_DT_PDU_TimeSynchronizationAssistanceInformation_ExtIEs ** objPDUTimeSynchronizationAssistanceInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TNLConfigurationInfo_ExtIEs( SI_XNAP_DT_PDU_TNLConfigurationInfo_ExtIEs * objPDUTNLConfigurationInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TNLConfigurationInfo_ExtIEs( SI_XNAP_DT_PDU_TNLConfigurationInfo_ExtIEs * objPDUTNLConfigurationInfo_ExtIEs);
void __si_xnap_debug_PDU_TNLConfigurationInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_TNLConfigurationInfo_ExtIEs * objPDUTNLConfigurationInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TNLConfigurationInfo_ExtIEs( SI_XNAP_DT_PDU_TNLConfigurationInfo_ExtIEs ** objPDUTNLConfigurationInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TNLA_To_Add_Item_ExtIEs( SI_XNAP_DT_PDU_TNLA_To_Add_Item_ExtIEs * objPDUTNLA_To_Add_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TNLA_To_Add_Item_ExtIEs( SI_XNAP_DT_PDU_TNLA_To_Add_Item_ExtIEs * objPDUTNLA_To_Add_Item_ExtIEs);
void __si_xnap_debug_PDU_TNLA_To_Add_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TNLA_To_Add_Item_ExtIEs * objPDUTNLA_To_Add_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TNLA_To_Add_Item_ExtIEs( SI_XNAP_DT_PDU_TNLA_To_Add_Item_ExtIEs ** objPDUTNLA_To_Add_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TNLA_To_Update_Item_ExtIEs( SI_XNAP_DT_PDU_TNLA_To_Update_Item_ExtIEs * objPDUTNLA_To_Update_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TNLA_To_Update_Item_ExtIEs( SI_XNAP_DT_PDU_TNLA_To_Update_Item_ExtIEs * objPDUTNLA_To_Update_Item_ExtIEs);
void __si_xnap_debug_PDU_TNLA_To_Update_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TNLA_To_Update_Item_ExtIEs * objPDUTNLA_To_Update_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TNLA_To_Update_Item_ExtIEs( SI_XNAP_DT_PDU_TNLA_To_Update_Item_ExtIEs ** objPDUTNLA_To_Update_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TNLA_To_Remove_Item_ExtIEs( SI_XNAP_DT_PDU_TNLA_To_Remove_Item_ExtIEs * objPDUTNLA_To_Remove_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TNLA_To_Remove_Item_ExtIEs( SI_XNAP_DT_PDU_TNLA_To_Remove_Item_ExtIEs * objPDUTNLA_To_Remove_Item_ExtIEs);
void __si_xnap_debug_PDU_TNLA_To_Remove_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TNLA_To_Remove_Item_ExtIEs * objPDUTNLA_To_Remove_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TNLA_To_Remove_Item_ExtIEs( SI_XNAP_DT_PDU_TNLA_To_Remove_Item_ExtIEs ** objPDUTNLA_To_Remove_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TNLA_Setup_Item_ExtIEs( SI_XNAP_DT_PDU_TNLA_Setup_Item_ExtIEs * objPDUTNLA_Setup_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TNLA_Setup_Item_ExtIEs( SI_XNAP_DT_PDU_TNLA_Setup_Item_ExtIEs * objPDUTNLA_Setup_Item_ExtIEs);
void __si_xnap_debug_PDU_TNLA_Setup_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TNLA_Setup_Item_ExtIEs * objPDUTNLA_Setup_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TNLA_Setup_Item_ExtIEs( SI_XNAP_DT_PDU_TNLA_Setup_Item_ExtIEs ** objPDUTNLA_Setup_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TNLA_Failed_To_Setup_Item_ExtIEs( SI_XNAP_DT_PDU_TNLA_Failed_To_Setup_Item_ExtIEs * objPDUTNLA_Failed_To_Setup_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TNLA_Failed_To_Setup_Item_ExtIEs( SI_XNAP_DT_PDU_TNLA_Failed_To_Setup_Item_ExtIEs * objPDUTNLA_Failed_To_Setup_Item_ExtIEs);
void __si_xnap_debug_PDU_TNLA_Failed_To_Setup_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TNLA_Failed_To_Setup_Item_ExtIEs * objPDUTNLA_Failed_To_Setup_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TNLA_Failed_To_Setup_Item_ExtIEs( SI_XNAP_DT_PDU_TNLA_Failed_To_Setup_Item_ExtIEs ** objPDUTNLA_Failed_To_Setup_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TraceActivation_ExtIEs( SI_XNAP_DT_PDU_TraceActivation_ExtIEs * objPDUTraceActivation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TraceActivation_ExtIEs( SI_XNAP_DT_PDU_TraceActivation_ExtIEs * objPDUTraceActivation_ExtIEs);
void __si_xnap_debug_PDU_TraceActivation_ExtIEs( char * key, SI_XNAP_DT_PDU_TraceActivation_ExtIEs * objPDUTraceActivation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TraceActivation_ExtIEs( SI_XNAP_DT_PDU_TraceActivation_ExtIEs ** objPDUTraceActivation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TrafficProfile_ExtIEs( SI_XNAP_DT_PDU_TrafficProfile_ExtIEs * objPDUTrafficProfile_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TrafficProfile_ExtIEs( SI_XNAP_DT_PDU_TrafficProfile_ExtIEs * objPDUTrafficProfile_ExtIEs);
void __si_xnap_debug_PDU_TrafficProfile_ExtIEs( char * key, SI_XNAP_DT_PDU_TrafficProfile_ExtIEs * objPDUTrafficProfile_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TrafficProfile_ExtIEs( SI_XNAP_DT_PDU_TrafficProfile_ExtIEs ** objPDUTrafficProfile_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TrafficReleaseType_ExtIEs( SI_XNAP_DT_PDU_TrafficReleaseType_ExtIEs * objPDUTrafficReleaseType_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TrafficReleaseType_ExtIEs( SI_XNAP_DT_PDU_TrafficReleaseType_ExtIEs * objPDUTrafficReleaseType_ExtIEs);
void __si_xnap_debug_PDU_TrafficReleaseType_ExtIEs( char * key, SI_XNAP_DT_PDU_TrafficReleaseType_ExtIEs * objPDUTrafficReleaseType_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TrafficReleaseType_ExtIEs( SI_XNAP_DT_PDU_TrafficReleaseType_ExtIEs ** objPDUTrafficReleaseType_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TrafficToBeReleaseInformation_ExtIEs( SI_XNAP_DT_PDU_TrafficToBeReleaseInformation_ExtIEs * objPDUTrafficToBeReleaseInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TrafficToBeReleaseInformation_ExtIEs( SI_XNAP_DT_PDU_TrafficToBeReleaseInformation_ExtIEs * objPDUTrafficToBeReleaseInformation_ExtIEs);
void __si_xnap_debug_PDU_TrafficToBeReleaseInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_TrafficToBeReleaseInformation_ExtIEs * objPDUTrafficToBeReleaseInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TrafficToBeReleaseInformation_ExtIEs( SI_XNAP_DT_PDU_TrafficToBeReleaseInformation_ExtIEs ** objPDUTrafficToBeReleaseInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TrafficToBeRelease_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficToBeRelease_Item_ExtIEs * objPDUTrafficToBeRelease_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TrafficToBeRelease_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficToBeRelease_Item_ExtIEs * objPDUTrafficToBeRelease_Item_ExtIEs);
void __si_xnap_debug_PDU_TrafficToBeRelease_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TrafficToBeRelease_Item_ExtIEs * objPDUTrafficToBeRelease_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TrafficToBeRelease_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficToBeRelease_Item_ExtIEs ** objPDUTrafficToBeRelease_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TSCTrafficCharacteristics_ExtIEs( SI_XNAP_DT_PDU_TSCTrafficCharacteristics_ExtIEs * objPDUTSCTrafficCharacteristics_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TSCTrafficCharacteristics_ExtIEs( SI_XNAP_DT_PDU_TSCTrafficCharacteristics_ExtIEs * objPDUTSCTrafficCharacteristics_ExtIEs);
void __si_xnap_debug_PDU_TSCTrafficCharacteristics_ExtIEs( char * key, SI_XNAP_DT_PDU_TSCTrafficCharacteristics_ExtIEs * objPDUTSCTrafficCharacteristics_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TSCTrafficCharacteristics_ExtIEs( SI_XNAP_DT_PDU_TSCTrafficCharacteristics_ExtIEs ** objPDUTSCTrafficCharacteristics_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TSCAssistanceInformation_ExtIEs( SI_XNAP_DT_PDU_TSCAssistanceInformation_ExtIEs * objPDUTSCAssistanceInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TSCAssistanceInformation_ExtIEs( SI_XNAP_DT_PDU_TSCAssistanceInformation_ExtIEs * objPDUTSCAssistanceInformation_ExtIEs);
void __si_xnap_debug_PDU_TSCAssistanceInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_TSCAssistanceInformation_ExtIEs * objPDUTSCAssistanceInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TSCAssistanceInformation_ExtIEs( SI_XNAP_DT_PDU_TSCAssistanceInformation_ExtIEs ** objPDUTSCAssistanceInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UEAggregateMaximumBitRate_ExtIEs( SI_XNAP_DT_PDU_UEAggregateMaximumBitRate_ExtIEs * objPDUUEAggregateMaximumBitRate_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UEAggregateMaximumBitRate_ExtIEs( SI_XNAP_DT_PDU_UEAggregateMaximumBitRate_ExtIEs * objPDUUEAggregateMaximumBitRate_ExtIEs);
void __si_xnap_debug_PDU_UEAggregateMaximumBitRate_ExtIEs( char * key, SI_XNAP_DT_PDU_UEAggregateMaximumBitRate_ExtIEs * objPDUUEAggregateMaximumBitRate_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UEAggregateMaximumBitRate_ExtIEs( SI_XNAP_DT_PDU_UEAggregateMaximumBitRate_ExtIEs ** objPDUUEAggregateMaximumBitRate_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UEAppLayerMeasConfigInfo_ExtIEs( SI_XNAP_DT_PDU_UEAppLayerMeasConfigInfo_ExtIEs * objPDUUEAppLayerMeasConfigInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UEAppLayerMeasConfigInfo_ExtIEs( SI_XNAP_DT_PDU_UEAppLayerMeasConfigInfo_ExtIEs * objPDUUEAppLayerMeasConfigInfo_ExtIEs);
void __si_xnap_debug_PDU_UEAppLayerMeasConfigInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_UEAppLayerMeasConfigInfo_ExtIEs * objPDUUEAppLayerMeasConfigInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UEAppLayerMeasConfigInfo_ExtIEs( SI_XNAP_DT_PDU_UEAppLayerMeasConfigInfo_ExtIEs ** objPDUUEAppLayerMeasConfigInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UEContextID_ExtIEs( SI_XNAP_DT_PDU_UEContextID_ExtIEs * objPDUUEContextID_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UEContextID_ExtIEs( SI_XNAP_DT_PDU_UEContextID_ExtIEs * objPDUUEContextID_ExtIEs);
void __si_xnap_debug_PDU_UEContextID_ExtIEs( char * key, SI_XNAP_DT_PDU_UEContextID_ExtIEs * objPDUUEContextID_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UEContextID_ExtIEs( SI_XNAP_DT_PDU_UEContextID_ExtIEs ** objPDUUEContextID_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UEContextIDforRRCResume_ExtIEs( SI_XNAP_DT_PDU_UEContextIDforRRCResume_ExtIEs * objPDUUEContextIDforRRCResume_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UEContextIDforRRCResume_ExtIEs( SI_XNAP_DT_PDU_UEContextIDforRRCResume_ExtIEs * objPDUUEContextIDforRRCResume_ExtIEs);
void __si_xnap_debug_PDU_UEContextIDforRRCResume_ExtIEs( char * key, SI_XNAP_DT_PDU_UEContextIDforRRCResume_ExtIEs * objPDUUEContextIDforRRCResume_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UEContextIDforRRCResume_ExtIEs( SI_XNAP_DT_PDU_UEContextIDforRRCResume_ExtIEs ** objPDUUEContextIDforRRCResume_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UEContextIDforRRCReestablishment_ExtIEs( SI_XNAP_DT_PDU_UEContextIDforRRCReestablishment_ExtIEs * objPDUUEContextIDforRRCReestablishment_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UEContextIDforRRCReestablishment_ExtIEs( SI_XNAP_DT_PDU_UEContextIDforRRCReestablishment_ExtIEs * objPDUUEContextIDforRRCReestablishment_ExtIEs);
void __si_xnap_debug_PDU_UEContextIDforRRCReestablishment_ExtIEs( char * key, SI_XNAP_DT_PDU_UEContextIDforRRCReestablishment_ExtIEs * objPDUUEContextIDforRRCReestablishment_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UEContextIDforRRCReestablishment_ExtIEs( SI_XNAP_DT_PDU_UEContextIDforRRCReestablishment_ExtIEs ** objPDUUEContextIDforRRCReestablishment_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UEContextInfoRetrUECtxtResp_ExtIEs( SI_XNAP_DT_PDU_UEContextInfoRetrUECtxtResp_ExtIEs * objPDUUEContextInfoRetrUECtxtResp_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UEContextInfoRetrUECtxtResp_ExtIEs( SI_XNAP_DT_PDU_UEContextInfoRetrUECtxtResp_ExtIEs * objPDUUEContextInfoRetrUECtxtResp_ExtIEs);
void __si_xnap_debug_PDU_UEContextInfoRetrUECtxtResp_ExtIEs( char * key, SI_XNAP_DT_PDU_UEContextInfoRetrUECtxtResp_ExtIEs * objPDUUEContextInfoRetrUECtxtResp_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UEContextInfoRetrUECtxtResp_ExtIEs( SI_XNAP_DT_PDU_UEContextInfoRetrUECtxtResp_ExtIEs ** objPDUUEContextInfoRetrUECtxtResp_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UEHistoryInformationFromTheUE_ExtIEs( SI_XNAP_DT_PDU_UEHistoryInformationFromTheUE_ExtIEs * objPDUUEHistoryInformationFromTheUE_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UEHistoryInformationFromTheUE_ExtIEs( SI_XNAP_DT_PDU_UEHistoryInformationFromTheUE_ExtIEs * objPDUUEHistoryInformationFromTheUE_ExtIEs);
void __si_xnap_debug_PDU_UEHistoryInformationFromTheUE_ExtIEs( char * key, SI_XNAP_DT_PDU_UEHistoryInformationFromTheUE_ExtIEs * objPDUUEHistoryInformationFromTheUE_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UEHistoryInformationFromTheUE_ExtIEs( SI_XNAP_DT_PDU_UEHistoryInformationFromTheUE_ExtIEs ** objPDUUEHistoryInformationFromTheUE_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UEIdentityIndexValue_ExtIEs( SI_XNAP_DT_PDU_UEIdentityIndexValue_ExtIEs * objPDUUEIdentityIndexValue_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UEIdentityIndexValue_ExtIEs( SI_XNAP_DT_PDU_UEIdentityIndexValue_ExtIEs * objPDUUEIdentityIndexValue_ExtIEs);
void __si_xnap_debug_PDU_UEIdentityIndexValue_ExtIEs( char * key, SI_XNAP_DT_PDU_UEIdentityIndexValue_ExtIEs * objPDUUEIdentityIndexValue_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UEIdentityIndexValue_ExtIEs( SI_XNAP_DT_PDU_UEIdentityIndexValue_ExtIEs ** objPDUUEIdentityIndexValue_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UEIdentityIndexList_MBSGroupPaging_Item_ExtIEs( SI_XNAP_DT_PDU_UEIdentityIndexList_MBSGroupPaging_Item_ExtIEs * objPDUUEIdentityIndexList_MBSGroupPaging_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UEIdentityIndexList_MBSGroupPaging_Item_ExtIEs( SI_XNAP_DT_PDU_UEIdentityIndexList_MBSGroupPaging_Item_ExtIEs * objPDUUEIdentityIndexList_MBSGroupPaging_Item_ExtIEs);
void __si_xnap_debug_PDU_UEIdentityIndexList_MBSGroupPaging_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_UEIdentityIndexList_MBSGroupPaging_Item_ExtIEs * objPDUUEIdentityIndexList_MBSGroupPaging_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UEIdentityIndexList_MBSGroupPaging_Item_ExtIEs( SI_XNAP_DT_PDU_UEIdentityIndexList_MBSGroupPaging_Item_ExtIEs ** objPDUUEIdentityIndexList_MBSGroupPaging_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UEIdentityIndexValueMBSGroupPaging_ExtIEs( SI_XNAP_DT_PDU_UEIdentityIndexValueMBSGroupPaging_ExtIEs * objPDUUEIdentityIndexValueMBSGroupPaging_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UEIdentityIndexValueMBSGroupPaging_ExtIEs( SI_XNAP_DT_PDU_UEIdentityIndexValueMBSGroupPaging_ExtIEs * objPDUUEIdentityIndexValueMBSGroupPaging_ExtIEs);
void __si_xnap_debug_PDU_UEIdentityIndexValueMBSGroupPaging_ExtIEs( char * key, SI_XNAP_DT_PDU_UEIdentityIndexValueMBSGroupPaging_ExtIEs * objPDUUEIdentityIndexValueMBSGroupPaging_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UEIdentityIndexValueMBSGroupPaging_ExtIEs( SI_XNAP_DT_PDU_UEIdentityIndexValueMBSGroupPaging_ExtIEs ** objPDUUEIdentityIndexValueMBSGroupPaging_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UERadioCapabilityForPaging_ExtIEs( SI_XNAP_DT_PDU_UERadioCapabilityForPaging_ExtIEs * objPDUUERadioCapabilityForPaging_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UERadioCapabilityForPaging_ExtIEs( SI_XNAP_DT_PDU_UERadioCapabilityForPaging_ExtIEs * objPDUUERadioCapabilityForPaging_ExtIEs);
void __si_xnap_debug_PDU_UERadioCapabilityForPaging_ExtIEs( char * key, SI_XNAP_DT_PDU_UERadioCapabilityForPaging_ExtIEs * objPDUUERadioCapabilityForPaging_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UERadioCapabilityForPaging_ExtIEs( SI_XNAP_DT_PDU_UERadioCapabilityForPaging_ExtIEs ** objPDUUERadioCapabilityForPaging_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UERANPagingIdentity_ExtIEs( SI_XNAP_DT_PDU_UERANPagingIdentity_ExtIEs * objPDUUERANPagingIdentity_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UERANPagingIdentity_ExtIEs( SI_XNAP_DT_PDU_UERANPagingIdentity_ExtIEs * objPDUUERANPagingIdentity_ExtIEs);
void __si_xnap_debug_PDU_UERANPagingIdentity_ExtIEs( char * key, SI_XNAP_DT_PDU_UERANPagingIdentity_ExtIEs * objPDUUERANPagingIdentity_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UERANPagingIdentity_ExtIEs( SI_XNAP_DT_PDU_UERANPagingIdentity_ExtIEs ** objPDUUERANPagingIdentity_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UERLFReportContainer_ExtIEs( SI_XNAP_DT_PDU_UERLFReportContainer_ExtIEs * objPDUUERLFReportContainer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UERLFReportContainer_ExtIEs( SI_XNAP_DT_PDU_UERLFReportContainer_ExtIEs * objPDUUERLFReportContainer_ExtIEs);
void __si_xnap_debug_PDU_UERLFReportContainer_ExtIEs( char * key, SI_XNAP_DT_PDU_UERLFReportContainer_ExtIEs * objPDUUERLFReportContainer_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UERLFReportContainer_ExtIEs( SI_XNAP_DT_PDU_UERLFReportContainer_ExtIEs ** objPDUUERLFReportContainer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UERLFReportContainerLTEExtension_ExtIEs( SI_XNAP_DT_PDU_UERLFReportContainerLTEExtension_ExtIEs * objPDUUERLFReportContainerLTEExtension_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UERLFReportContainerLTEExtension_ExtIEs( SI_XNAP_DT_PDU_UERLFReportContainerLTEExtension_ExtIEs * objPDUUERLFReportContainerLTEExtension_ExtIEs);
void __si_xnap_debug_PDU_UERLFReportContainerLTEExtension_ExtIEs( char * key, SI_XNAP_DT_PDU_UERLFReportContainerLTEExtension_ExtIEs * objPDUUERLFReportContainerLTEExtension_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UERLFReportContainerLTEExtension_ExtIEs( SI_XNAP_DT_PDU_UERLFReportContainerLTEExtension_ExtIEs ** objPDUUERLFReportContainerLTEExtension_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UESliceMaximumBitRate_Item_ExtIEs( SI_XNAP_DT_PDU_UESliceMaximumBitRate_Item_ExtIEs * objPDUUESliceMaximumBitRate_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UESliceMaximumBitRate_Item_ExtIEs( SI_XNAP_DT_PDU_UESliceMaximumBitRate_Item_ExtIEs * objPDUUESliceMaximumBitRate_Item_ExtIEs);
void __si_xnap_debug_PDU_UESliceMaximumBitRate_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_UESliceMaximumBitRate_Item_ExtIEs * objPDUUESliceMaximumBitRate_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UESliceMaximumBitRate_Item_ExtIEs( SI_XNAP_DT_PDU_UESliceMaximumBitRate_Item_ExtIEs ** objPDUUESliceMaximumBitRate_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UESecurityCapabilities_ExtIEs( SI_XNAP_DT_PDU_UESecurityCapabilities_ExtIEs * objPDUUESecurityCapabilities_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UESecurityCapabilities_ExtIEs( SI_XNAP_DT_PDU_UESecurityCapabilities_ExtIEs * objPDUUESecurityCapabilities_ExtIEs);
void __si_xnap_debug_PDU_UESecurityCapabilities_ExtIEs( char * key, SI_XNAP_DT_PDU_UESecurityCapabilities_ExtIEs * objPDUUESecurityCapabilities_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UESecurityCapabilities_ExtIEs( SI_XNAP_DT_PDU_UESecurityCapabilities_ExtIEs ** objPDUUESecurityCapabilities_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ULConfiguration_ExtIEs( SI_XNAP_DT_PDU_ULConfiguration_ExtIEs * objPDUULConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ULConfiguration_ExtIEs( SI_XNAP_DT_PDU_ULConfiguration_ExtIEs * objPDUULConfiguration_ExtIEs);
void __si_xnap_debug_PDU_ULConfiguration_ExtIEs( char * key, SI_XNAP_DT_PDU_ULConfiguration_ExtIEs * objPDUULConfiguration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ULConfiguration_ExtIEs( SI_XNAP_DT_PDU_ULConfiguration_ExtIEs ** objPDUULConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ULF1Terminating_BHInfo_ExtIEs( SI_XNAP_DT_PDU_ULF1Terminating_BHInfo_ExtIEs * objPDUULF1Terminating_BHInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ULF1Terminating_BHInfo_ExtIEs( SI_XNAP_DT_PDU_ULF1Terminating_BHInfo_ExtIEs * objPDUULF1Terminating_BHInfo_ExtIEs);
void __si_xnap_debug_PDU_ULF1Terminating_BHInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_ULF1Terminating_BHInfo_ExtIEs * objPDUULF1Terminating_BHInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ULF1Terminating_BHInfo_ExtIEs( SI_XNAP_DT_PDU_ULF1Terminating_BHInfo_ExtIEs ** objPDUULF1Terminating_BHInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ULNonF1Terminating_BHInfo_ExtIEs( SI_XNAP_DT_PDU_ULNonF1Terminating_BHInfo_ExtIEs * objPDUULNonF1Terminating_BHInfo_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ULNonF1Terminating_BHInfo_ExtIEs( SI_XNAP_DT_PDU_ULNonF1Terminating_BHInfo_ExtIEs * objPDUULNonF1Terminating_BHInfo_ExtIEs);
void __si_xnap_debug_PDU_ULNonF1Terminating_BHInfo_ExtIEs( char * key, SI_XNAP_DT_PDU_ULNonF1Terminating_BHInfo_ExtIEs * objPDUULNonF1Terminating_BHInfo_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ULNonF1Terminating_BHInfo_ExtIEs( SI_XNAP_DT_PDU_ULNonF1Terminating_BHInfo_ExtIEs ** objPDUULNonF1Terminating_BHInfo_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UPTransportLayerInformation_ExtIEs( SI_XNAP_DT_PDU_UPTransportLayerInformation_ExtIEs * objPDUUPTransportLayerInformation_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UPTransportLayerInformation_ExtIEs( SI_XNAP_DT_PDU_UPTransportLayerInformation_ExtIEs * objPDUUPTransportLayerInformation_ExtIEs);
void __si_xnap_debug_PDU_UPTransportLayerInformation_ExtIEs( char * key, SI_XNAP_DT_PDU_UPTransportLayerInformation_ExtIEs * objPDUUPTransportLayerInformation_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UPTransportLayerInformation_ExtIEs( SI_XNAP_DT_PDU_UPTransportLayerInformation_ExtIEs ** objPDUUPTransportLayerInformation_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UPTransportParametersItem_ExtIEs( SI_XNAP_DT_PDU_UPTransportParametersItem_ExtIEs * objPDUUPTransportParametersItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UPTransportParametersItem_ExtIEs( SI_XNAP_DT_PDU_UPTransportParametersItem_ExtIEs * objPDUUPTransportParametersItem_ExtIEs);
void __si_xnap_debug_PDU_UPTransportParametersItem_ExtIEs( char * key, SI_XNAP_DT_PDU_UPTransportParametersItem_ExtIEs * objPDUUPTransportParametersItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UPTransportParametersItem_ExtIEs( SI_XNAP_DT_PDU_UPTransportParametersItem_ExtIEs ** objPDUUPTransportParametersItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UserPlaneFailureIndication_ExtIEs( SI_XNAP_DT_PDU_UserPlaneFailureIndication_ExtIEs * objPDUUserPlaneFailureIndication_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UserPlaneFailureIndication_ExtIEs( SI_XNAP_DT_PDU_UserPlaneFailureIndication_ExtIEs * objPDUUserPlaneFailureIndication_ExtIEs);
void __si_xnap_debug_PDU_UserPlaneFailureIndication_ExtIEs( char * key, SI_XNAP_DT_PDU_UserPlaneFailureIndication_ExtIEs * objPDUUserPlaneFailureIndication_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UserPlaneFailureIndication_ExtIEs( SI_XNAP_DT_PDU_UserPlaneFailureIndication_ExtIEs ** objPDUUserPlaneFailureIndication_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UEAssociatedInfoResult_Item_ExtIEs( SI_XNAP_DT_PDU_UEAssociatedInfoResult_Item_ExtIEs * objPDUUEAssociatedInfoResult_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UEAssociatedInfoResult_Item_ExtIEs( SI_XNAP_DT_PDU_UEAssociatedInfoResult_Item_ExtIEs * objPDUUEAssociatedInfoResult_Item_ExtIEs);
void __si_xnap_debug_PDU_UEAssociatedInfoResult_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_UEAssociatedInfoResult_Item_ExtIEs * objPDUUEAssociatedInfoResult_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UEAssociatedInfoResult_Item_ExtIEs( SI_XNAP_DT_PDU_UEAssociatedInfoResult_Item_ExtIEs ** objPDUUEAssociatedInfoResult_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UEPerformance_ExtIEs( SI_XNAP_DT_PDU_UEPerformance_ExtIEs * objPDUUEPerformance_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UEPerformance_ExtIEs( SI_XNAP_DT_PDU_UEPerformance_ExtIEs * objPDUUEPerformance_ExtIEs);
void __si_xnap_debug_PDU_UEPerformance_ExtIEs( char * key, SI_XNAP_DT_PDU_UEPerformance_ExtIEs * objPDUUEPerformance_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UEPerformance_ExtIEs( SI_XNAP_DT_PDU_UEPerformance_ExtIEs ** objPDUUEPerformance_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UEPerformanceCollectionConfiguration_ExtIEs( SI_XNAP_DT_PDU_UEPerformanceCollectionConfiguration_ExtIEs * objPDUUEPerformanceCollectionConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UEPerformanceCollectionConfiguration_ExtIEs( SI_XNAP_DT_PDU_UEPerformanceCollectionConfiguration_ExtIEs * objPDUUEPerformanceCollectionConfiguration_ExtIEs);
void __si_xnap_debug_PDU_UEPerformanceCollectionConfiguration_ExtIEs( char * key, SI_XNAP_DT_PDU_UEPerformanceCollectionConfiguration_ExtIEs * objPDUUEPerformanceCollectionConfiguration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UEPerformanceCollectionConfiguration_ExtIEs( SI_XNAP_DT_PDU_UEPerformanceCollectionConfiguration_ExtIEs ** objPDUUEPerformanceCollectionConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UETrajectoryCollectionConfiguration_ExtIEs( SI_XNAP_DT_PDU_UETrajectoryCollectionConfiguration_ExtIEs * objPDUUETrajectoryCollectionConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UETrajectoryCollectionConfiguration_ExtIEs( SI_XNAP_DT_PDU_UETrajectoryCollectionConfiguration_ExtIEs * objPDUUETrajectoryCollectionConfiguration_ExtIEs);
void __si_xnap_debug_PDU_UETrajectoryCollectionConfiguration_ExtIEs( char * key, SI_XNAP_DT_PDU_UETrajectoryCollectionConfiguration_ExtIEs * objPDUUETrajectoryCollectionConfiguration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UETrajectoryCollectionConfiguration_ExtIEs( SI_XNAP_DT_PDU_UETrajectoryCollectionConfiguration_ExtIEs ** objPDUUETrajectoryCollectionConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_VolumeTimedReport_Item_ExtIEs( SI_XNAP_DT_PDU_VolumeTimedReport_Item_ExtIEs * objPDUVolumeTimedReport_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_VolumeTimedReport_Item_ExtIEs( SI_XNAP_DT_PDU_VolumeTimedReport_Item_ExtIEs * objPDUVolumeTimedReport_Item_ExtIEs);
void __si_xnap_debug_PDU_VolumeTimedReport_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_VolumeTimedReport_Item_ExtIEs * objPDUVolumeTimedReport_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_VolumeTimedReport_Item_ExtIEs( SI_XNAP_DT_PDU_VolumeTimedReport_Item_ExtIEs ** objPDUVolumeTimedReport_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_WLANMeasurementConfiguration_ExtIEs( SI_XNAP_DT_PDU_WLANMeasurementConfiguration_ExtIEs * objPDUWLANMeasurementConfiguration_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_WLANMeasurementConfiguration_ExtIEs( SI_XNAP_DT_PDU_WLANMeasurementConfiguration_ExtIEs * objPDUWLANMeasurementConfiguration_ExtIEs);
void __si_xnap_debug_PDU_WLANMeasurementConfiguration_ExtIEs( char * key, SI_XNAP_DT_PDU_WLANMeasurementConfiguration_ExtIEs * objPDUWLANMeasurementConfiguration_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_WLANMeasurementConfiguration_ExtIEs( SI_XNAP_DT_PDU_WLANMeasurementConfiguration_ExtIEs ** objPDUWLANMeasurementConfiguration_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ProcedureStageChoice_ExtIEs( SI_XNAP_DT_PDU_ProcedureStageChoice_ExtIEs * objPDUProcedureStageChoice_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ProcedureStageChoice_ExtIEs( SI_XNAP_DT_PDU_ProcedureStageChoice_ExtIEs * objPDUProcedureStageChoice_ExtIEs);
void __si_xnap_debug_PDU_ProcedureStageChoice_ExtIEs( char * key, SI_XNAP_DT_PDU_ProcedureStageChoice_ExtIEs * objPDUProcedureStageChoice_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ProcedureStageChoice_ExtIEs( SI_XNAP_DT_PDU_ProcedureStageChoice_ExtIEs ** objPDUProcedureStageChoice_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ResponseType_ReconfComplete_ExtIEs( SI_XNAP_DT_PDU_ResponseType_ReconfComplete_ExtIEs * objPDUResponseType_ReconfComplete_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ResponseType_ReconfComplete_ExtIEs( SI_XNAP_DT_PDU_ResponseType_ReconfComplete_ExtIEs * objPDUResponseType_ReconfComplete_ExtIEs);
void __si_xnap_debug_PDU_ResponseType_ReconfComplete_ExtIEs( char * key, SI_XNAP_DT_PDU_ResponseType_ReconfComplete_ExtIEs * objPDUResponseType_ReconfComplete_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ResponseType_ReconfComplete_ExtIEs( SI_XNAP_DT_PDU_ResponseType_ReconfComplete_ExtIEs ** objPDUResponseType_ReconfComplete_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ServedCellsToUpdateInitiatingNodeChoice_ExtIEs( SI_XNAP_DT_PDU_ServedCellsToUpdateInitiatingNodeChoice_ExtIEs * objPDUServedCellsToUpdateInitiatingNodeChoice_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ServedCellsToUpdateInitiatingNodeChoice_ExtIEs( SI_XNAP_DT_PDU_ServedCellsToUpdateInitiatingNodeChoice_ExtIEs * objPDUServedCellsToUpdateInitiatingNodeChoice_ExtIEs);
void __si_xnap_debug_PDU_ServedCellsToUpdateInitiatingNodeChoice_ExtIEs( char * key, SI_XNAP_DT_PDU_ServedCellsToUpdateInitiatingNodeChoice_ExtIEs * objPDUServedCellsToUpdateInitiatingNodeChoice_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ServedCellsToUpdateInitiatingNodeChoice_ExtIEs( SI_XNAP_DT_PDU_ServedCellsToUpdateInitiatingNodeChoice_ExtIEs ** objPDUServedCellsToUpdateInitiatingNodeChoice_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ConfigurationUpdate_gNB( SI_XNAP_DT_PDU_ConfigurationUpdate_gNB * objPDUConfigurationUpdate_gNB, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ConfigurationUpdate_gNB( SI_XNAP_DT_PDU_ConfigurationUpdate_gNB * objPDUConfigurationUpdate_gNB);
void __si_xnap_debug_PDU_ConfigurationUpdate_gNB( char * key, SI_XNAP_DT_PDU_ConfigurationUpdate_gNB * objPDUConfigurationUpdate_gNB, int lvl);
int __si_xnap_Decode_PDU_ConfigurationUpdate_gNB( SI_XNAP_DT_PDU_ConfigurationUpdate_gNB ** objPDUConfigurationUpdate_gNB, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ConfigurationUpdate_ng_eNB( SI_XNAP_DT_PDU_ConfigurationUpdate_ng_eNB * objPDUConfigurationUpdate_ng_eNB, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ConfigurationUpdate_ng_eNB( SI_XNAP_DT_PDU_ConfigurationUpdate_ng_eNB * objPDUConfigurationUpdate_ng_eNB);
void __si_xnap_debug_PDU_ConfigurationUpdate_ng_eNB( char * key, SI_XNAP_DT_PDU_ConfigurationUpdate_ng_eNB * objPDUConfigurationUpdate_ng_eNB, int lvl);
int __si_xnap_Decode_PDU_ConfigurationUpdate_ng_eNB( SI_XNAP_DT_PDU_ConfigurationUpdate_ng_eNB ** objPDUConfigurationUpdate_ng_eNB, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RespondingNodeTypeConfigUpdateAck_ExtIEs( SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_ExtIEs * objPDURespondingNodeTypeConfigUpdateAck_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RespondingNodeTypeConfigUpdateAck_ExtIEs( SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_ExtIEs * objPDURespondingNodeTypeConfigUpdateAck_ExtIEs);
void __si_xnap_debug_PDU_RespondingNodeTypeConfigUpdateAck_ExtIEs( char * key, SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_ExtIEs * objPDURespondingNodeTypeConfigUpdateAck_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RespondingNodeTypeConfigUpdateAck_ExtIEs( SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_ExtIEs ** objPDURespondingNodeTypeConfigUpdateAck_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_InitiatingNodeType_ResourceCoordRequest_ExtIEs( SI_XNAP_DT_PDU_InitiatingNodeType_ResourceCoordRequest_ExtIEs * objPDUInitiatingNodeType_ResourceCoordRequest_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_InitiatingNodeType_ResourceCoordRequest_ExtIEs( SI_XNAP_DT_PDU_InitiatingNodeType_ResourceCoordRequest_ExtIEs * objPDUInitiatingNodeType_ResourceCoordRequest_ExtIEs);
void __si_xnap_debug_PDU_InitiatingNodeType_ResourceCoordRequest_ExtIEs( char * key, SI_XNAP_DT_PDU_InitiatingNodeType_ResourceCoordRequest_ExtIEs * objPDUInitiatingNodeType_ResourceCoordRequest_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_InitiatingNodeType_ResourceCoordRequest_ExtIEs( SI_XNAP_DT_PDU_InitiatingNodeType_ResourceCoordRequest_ExtIEs ** objPDUInitiatingNodeType_ResourceCoordRequest_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RespondingNodeType_ResourceCoordResponse_ExtIEs( SI_XNAP_DT_PDU_RespondingNodeType_ResourceCoordResponse_ExtIEs * objPDURespondingNodeType_ResourceCoordResponse_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RespondingNodeType_ResourceCoordResponse_ExtIEs( SI_XNAP_DT_PDU_RespondingNodeType_ResourceCoordResponse_ExtIEs * objPDURespondingNodeType_ResourceCoordResponse_ExtIEs);
void __si_xnap_debug_PDU_RespondingNodeType_ResourceCoordResponse_ExtIEs( char * key, SI_XNAP_DT_PDU_RespondingNodeType_ResourceCoordResponse_ExtIEs * objPDURespondingNodeType_ResourceCoordResponse_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RespondingNodeType_ResourceCoordResponse_ExtIEs( SI_XNAP_DT_PDU_RespondingNodeType_ResourceCoordResponse_ExtIEs ** objPDURespondingNodeType_ResourceCoordResponse_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ServedCellsToActivate_ExtIEs( SI_XNAP_DT_PDU_ServedCellsToActivate_ExtIEs * objPDUServedCellsToActivate_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ServedCellsToActivate_ExtIEs( SI_XNAP_DT_PDU_ServedCellsToActivate_ExtIEs * objPDUServedCellsToActivate_ExtIEs);
void __si_xnap_debug_PDU_ServedCellsToActivate_ExtIEs( char * key, SI_XNAP_DT_PDU_ServedCellsToActivate_ExtIEs * objPDUServedCellsToActivate_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ServedCellsToActivate_ExtIEs( SI_XNAP_DT_PDU_ServedCellsToActivate_ExtIEs ** objPDUServedCellsToActivate_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ActivatedServedCells_ExtIEs( SI_XNAP_DT_PDU_ActivatedServedCells_ExtIEs * objPDUActivatedServedCells_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ActivatedServedCells_ExtIEs( SI_XNAP_DT_PDU_ActivatedServedCells_ExtIEs * objPDUActivatedServedCells_ExtIEs);
void __si_xnap_debug_PDU_ActivatedServedCells_ExtIEs( char * key, SI_XNAP_DT_PDU_ActivatedServedCells_ExtIEs * objPDUActivatedServedCells_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ActivatedServedCells_ExtIEs( SI_XNAP_DT_PDU_ActivatedServedCells_ExtIEs ** objPDUActivatedServedCells_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UEContextInfoHORequest_ExtIEs( SI_XNAP_DT_PDU_UEContextInfoHORequest_ExtIEs * objPDUUEContextInfoHORequest_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UEContextInfoHORequest_ExtIEs( SI_XNAP_DT_PDU_UEContextInfoHORequest_ExtIEs * objPDUUEContextInfoHORequest_ExtIEs);
void __si_xnap_debug_PDU_UEContextInfoHORequest_ExtIEs( char * key, SI_XNAP_DT_PDU_UEContextInfoHORequest_ExtIEs * objPDUUEContextInfoHORequest_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UEContextInfoHORequest_ExtIEs( SI_XNAP_DT_PDU_UEContextInfoHORequest_ExtIEs ** objPDUUEContextInfoHORequest_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UEContextRefAtSN_HORequest_ExtIEs( SI_XNAP_DT_PDU_UEContextRefAtSN_HORequest_ExtIEs * objPDUUEContextRefAtSN_HORequest_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UEContextRefAtSN_HORequest_ExtIEs( SI_XNAP_DT_PDU_UEContextRefAtSN_HORequest_ExtIEs * objPDUUEContextRefAtSN_HORequest_ExtIEs);
void __si_xnap_debug_PDU_UEContextRefAtSN_HORequest_ExtIEs( char * key, SI_XNAP_DT_PDU_UEContextRefAtSN_HORequest_ExtIEs * objPDUUEContextRefAtSN_HORequest_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UEContextRefAtSN_HORequest_ExtIEs( SI_XNAP_DT_PDU_UEContextRefAtSN_HORequest_ExtIEs ** objPDUUEContextRefAtSN_HORequest_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_FirstDLCount_ExtIEs( SI_XNAP_DT_PDU_FirstDLCount_ExtIEs * objPDUFirstDLCount_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_FirstDLCount_ExtIEs( SI_XNAP_DT_PDU_FirstDLCount_ExtIEs * objPDUFirstDLCount_ExtIEs);
void __si_xnap_debug_PDU_FirstDLCount_ExtIEs( char * key, SI_XNAP_DT_PDU_FirstDLCount_ExtIEs * objPDUFirstDLCount_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_FirstDLCount_ExtIEs( SI_XNAP_DT_PDU_FirstDLCount_ExtIEs ** objPDUFirstDLCount_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_DLDiscarding_ExtIEs( SI_XNAP_DT_PDU_DLDiscarding_ExtIEs * objPDUDLDiscarding_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_DLDiscarding_ExtIEs( SI_XNAP_DT_PDU_DLDiscarding_ExtIEs * objPDUDLDiscarding_ExtIEs);
void __si_xnap_debug_PDU_DLDiscarding_ExtIEs( char * key, SI_XNAP_DT_PDU_DLDiscarding_ExtIEs * objPDUDLDiscarding_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_DLDiscarding_ExtIEs( SI_XNAP_DT_PDU_DLDiscarding_ExtIEs ** objPDUDLDiscarding_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionToBeAddedAddReq_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionToBeAddedAddReq_Item_ExtIEs * objPDUPDUSessionToBeAddedAddReq_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionToBeAddedAddReq_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionToBeAddedAddReq_Item_ExtIEs * objPDUPDUSessionToBeAddedAddReq_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionToBeAddedAddReq_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionToBeAddedAddReq_Item_ExtIEs * objPDUPDUSessionToBeAddedAddReq_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionToBeAddedAddReq_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionToBeAddedAddReq_Item_ExtIEs ** objPDUPDUSessionToBeAddedAddReq_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionAdmittedAddedAddReqAck_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmittedAddedAddReqAck_Item_ExtIEs * objPDUPDUSessionAdmittedAddedAddReqAck_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionAdmittedAddedAddReqAck_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmittedAddedAddReqAck_Item_ExtIEs * objPDUPDUSessionAdmittedAddedAddReqAck_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionAdmittedAddedAddReqAck_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionAdmittedAddedAddReqAck_Item_ExtIEs * objPDUPDUSessionAdmittedAddedAddReqAck_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionAdmittedAddedAddReqAck_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmittedAddedAddReqAck_Item_ExtIEs ** objPDUPDUSessionAdmittedAddedAddReqAck_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionNotAdmittedAddReqAck_ExtIEs( SI_XNAP_DT_PDU_PDUSessionNotAdmittedAddReqAck_ExtIEs * objPDUPDUSessionNotAdmittedAddReqAck_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionNotAdmittedAddReqAck_ExtIEs( SI_XNAP_DT_PDU_PDUSessionNotAdmittedAddReqAck_ExtIEs * objPDUPDUSessionNotAdmittedAddReqAck_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionNotAdmittedAddReqAck_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionNotAdmittedAddReqAck_ExtIEs * objPDUPDUSessionNotAdmittedAddReqAck_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionNotAdmittedAddReqAck_ExtIEs( SI_XNAP_DT_PDU_PDUSessionNotAdmittedAddReqAck_ExtIEs ** objPDUPDUSessionNotAdmittedAddReqAck_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ResponseInfo_ReconfCompl_ExtIEs( SI_XNAP_DT_PDU_ResponseInfo_ReconfCompl_ExtIEs * objPDUResponseInfo_ReconfCompl_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ResponseInfo_ReconfCompl_ExtIEs( SI_XNAP_DT_PDU_ResponseInfo_ReconfCompl_ExtIEs * objPDUResponseInfo_ReconfCompl_ExtIEs);
void __si_xnap_debug_PDU_ResponseInfo_ReconfCompl_ExtIEs( char * key, SI_XNAP_DT_PDU_ResponseInfo_ReconfCompl_ExtIEs * objPDUResponseInfo_ReconfCompl_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ResponseInfo_ReconfCompl_ExtIEs( SI_XNAP_DT_PDU_ResponseInfo_ReconfCompl_ExtIEs ** objPDUResponseInfo_ReconfCompl_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Configuration_successfully_applied_ExtIEs( SI_XNAP_DT_PDU_Configuration_successfully_applied_ExtIEs * objPDUConfiguration_successfully_applied_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Configuration_successfully_applied_ExtIEs( SI_XNAP_DT_PDU_Configuration_successfully_applied_ExtIEs * objPDUConfiguration_successfully_applied_ExtIEs);
void __si_xnap_debug_PDU_Configuration_successfully_applied_ExtIEs( char * key, SI_XNAP_DT_PDU_Configuration_successfully_applied_ExtIEs * objPDUConfiguration_successfully_applied_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Configuration_successfully_applied_ExtIEs( SI_XNAP_DT_PDU_Configuration_successfully_applied_ExtIEs ** objPDUConfiguration_successfully_applied_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_Configuration_rejected_by_M_NG_RANNode_ExtIEs( SI_XNAP_DT_PDU_Configuration_rejected_by_M_NG_RANNode_ExtIEs * objPDUConfiguration_rejected_by_M_NG_RANNode_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_Configuration_rejected_by_M_NG_RANNode_ExtIEs( SI_XNAP_DT_PDU_Configuration_rejected_by_M_NG_RANNode_ExtIEs * objPDUConfiguration_rejected_by_M_NG_RANNode_ExtIEs);
void __si_xnap_debug_PDU_Configuration_rejected_by_M_NG_RANNode_ExtIEs( char * key, SI_XNAP_DT_PDU_Configuration_rejected_by_M_NG_RANNode_ExtIEs * objPDUConfiguration_rejected_by_M_NG_RANNode_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_Configuration_rejected_by_M_NG_RANNode_ExtIEs( SI_XNAP_DT_PDU_Configuration_rejected_by_M_NG_RANNode_ExtIEs ** objPDUConfiguration_rejected_by_M_NG_RANNode_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UEContextInfo_SNModRequest_ExtIEs( SI_XNAP_DT_PDU_UEContextInfo_SNModRequest_ExtIEs * objPDUUEContextInfo_SNModRequest_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UEContextInfo_SNModRequest_ExtIEs( SI_XNAP_DT_PDU_UEContextInfo_SNModRequest_ExtIEs * objPDUUEContextInfo_SNModRequest_ExtIEs);
void __si_xnap_debug_PDU_UEContextInfo_SNModRequest_ExtIEs( char * key, SI_XNAP_DT_PDU_UEContextInfo_SNModRequest_ExtIEs * objPDUUEContextInfo_SNModRequest_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UEContextInfo_SNModRequest_ExtIEs( SI_XNAP_DT_PDU_UEContextInfo_SNModRequest_ExtIEs ** objPDUUEContextInfo_SNModRequest_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionsToBeAdded_SNModRequest_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionsToBeAdded_SNModRequest_Item_ExtIEs * objPDUPDUSessionsToBeAdded_SNModRequest_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionsToBeAdded_SNModRequest_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionsToBeAdded_SNModRequest_Item_ExtIEs * objPDUPDUSessionsToBeAdded_SNModRequest_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionsToBeAdded_SNModRequest_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionsToBeAdded_SNModRequest_Item_ExtIEs * objPDUPDUSessionsToBeAdded_SNModRequest_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionsToBeAdded_SNModRequest_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionsToBeAdded_SNModRequest_Item_ExtIEs ** objPDUPDUSessionsToBeAdded_SNModRequest_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionsToBeModified_SNModRequest_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionsToBeModified_SNModRequest_Item_ExtIEs * objPDUPDUSessionsToBeModified_SNModRequest_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionsToBeModified_SNModRequest_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionsToBeModified_SNModRequest_Item_ExtIEs * objPDUPDUSessionsToBeModified_SNModRequest_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionsToBeModified_SNModRequest_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionsToBeModified_SNModRequest_Item_ExtIEs * objPDUPDUSessionsToBeModified_SNModRequest_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionsToBeModified_SNModRequest_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionsToBeModified_SNModRequest_Item_ExtIEs ** objPDUPDUSessionsToBeModified_SNModRequest_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionsToBeReleased_SNModRequest_List_ExtIEs( SI_XNAP_DT_PDU_PDUSessionsToBeReleased_SNModRequest_List_ExtIEs * objPDUPDUSessionsToBeReleased_SNModRequest_List_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionsToBeReleased_SNModRequest_List_ExtIEs( SI_XNAP_DT_PDU_PDUSessionsToBeReleased_SNModRequest_List_ExtIEs * objPDUPDUSessionsToBeReleased_SNModRequest_List_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionsToBeReleased_SNModRequest_List_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionsToBeReleased_SNModRequest_List_ExtIEs * objPDUPDUSessionsToBeReleased_SNModRequest_List_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionsToBeReleased_SNModRequest_List_ExtIEs( SI_XNAP_DT_PDU_PDUSessionsToBeReleased_SNModRequest_List_ExtIEs ** objPDUPDUSessionsToBeReleased_SNModRequest_List_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionAdmitted_SNModResponse_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmitted_SNModResponse_ExtIEs * objPDUPDUSessionAdmitted_SNModResponse_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionAdmitted_SNModResponse_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmitted_SNModResponse_ExtIEs * objPDUPDUSessionAdmitted_SNModResponse_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionAdmitted_SNModResponse_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionAdmitted_SNModResponse_ExtIEs * objPDUPDUSessionAdmitted_SNModResponse_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionAdmitted_SNModResponse_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmitted_SNModResponse_ExtIEs ** objPDUPDUSessionAdmitted_SNModResponse_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionAdmittedToBeAddedSNModResponse_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmittedToBeAddedSNModResponse_Item_ExtIEs * objPDUPDUSessionAdmittedToBeAddedSNModResponse_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionAdmittedToBeAddedSNModResponse_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmittedToBeAddedSNModResponse_Item_ExtIEs * objPDUPDUSessionAdmittedToBeAddedSNModResponse_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionAdmittedToBeAddedSNModResponse_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionAdmittedToBeAddedSNModResponse_Item_ExtIEs * objPDUPDUSessionAdmittedToBeAddedSNModResponse_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionAdmittedToBeAddedSNModResponse_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmittedToBeAddedSNModResponse_Item_ExtIEs ** objPDUPDUSessionAdmittedToBeAddedSNModResponse_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionAdmittedToBeModifiedSNModResponse_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmittedToBeModifiedSNModResponse_Item_ExtIEs * objPDUPDUSessionAdmittedToBeModifiedSNModResponse_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionAdmittedToBeModifiedSNModResponse_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmittedToBeModifiedSNModResponse_Item_ExtIEs * objPDUPDUSessionAdmittedToBeModifiedSNModResponse_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionAdmittedToBeModifiedSNModResponse_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionAdmittedToBeModifiedSNModResponse_Item_ExtIEs * objPDUPDUSessionAdmittedToBeModifiedSNModResponse_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionAdmittedToBeModifiedSNModResponse_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmittedToBeModifiedSNModResponse_Item_ExtIEs ** objPDUPDUSessionAdmittedToBeModifiedSNModResponse_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionAdmittedToBeReleasedSNModResponse_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmittedToBeReleasedSNModResponse_ExtIEs * objPDUPDUSessionAdmittedToBeReleasedSNModResponse_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionAdmittedToBeReleasedSNModResponse_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmittedToBeReleasedSNModResponse_ExtIEs * objPDUPDUSessionAdmittedToBeReleasedSNModResponse_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionAdmittedToBeReleasedSNModResponse_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionAdmittedToBeReleasedSNModResponse_ExtIEs * objPDUPDUSessionAdmittedToBeReleasedSNModResponse_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionAdmittedToBeReleasedSNModResponse_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmittedToBeReleasedSNModResponse_ExtIEs ** objPDUPDUSessionAdmittedToBeReleasedSNModResponse_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionNotAdmitted_SNModResponse_ExtIEs( SI_XNAP_DT_PDU_PDUSessionNotAdmitted_SNModResponse_ExtIEs * objPDUPDUSessionNotAdmitted_SNModResponse_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionNotAdmitted_SNModResponse_ExtIEs( SI_XNAP_DT_PDU_PDUSessionNotAdmitted_SNModResponse_ExtIEs * objPDUPDUSessionNotAdmitted_SNModResponse_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionNotAdmitted_SNModResponse_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionNotAdmitted_SNModResponse_ExtIEs * objPDUPDUSessionNotAdmitted_SNModResponse_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionNotAdmitted_SNModResponse_ExtIEs( SI_XNAP_DT_PDU_PDUSessionNotAdmitted_SNModResponse_ExtIEs ** objPDUPDUSessionNotAdmitted_SNModResponse_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionDataForwarding_SNModResponse_ExtIEs( SI_XNAP_DT_PDU_PDUSessionDataForwarding_SNModResponse_ExtIEs * objPDUPDUSessionDataForwarding_SNModResponse_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionDataForwarding_SNModResponse_ExtIEs( SI_XNAP_DT_PDU_PDUSessionDataForwarding_SNModResponse_ExtIEs * objPDUPDUSessionDataForwarding_SNModResponse_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionDataForwarding_SNModResponse_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionDataForwarding_SNModResponse_ExtIEs * objPDUPDUSessionDataForwarding_SNModResponse_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionDataForwarding_SNModResponse_ExtIEs( SI_XNAP_DT_PDU_PDUSessionDataForwarding_SNModResponse_ExtIEs ** objPDUPDUSessionDataForwarding_SNModResponse_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionToBeModifiedSNModRequired_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionToBeModifiedSNModRequired_Item_ExtIEs * objPDUPDUSessionToBeModifiedSNModRequired_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionToBeModifiedSNModRequired_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionToBeModifiedSNModRequired_Item_ExtIEs * objPDUPDUSessionToBeModifiedSNModRequired_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionToBeModifiedSNModRequired_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionToBeModifiedSNModRequired_Item_ExtIEs * objPDUPDUSessionToBeModifiedSNModRequired_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionToBeModifiedSNModRequired_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionToBeModifiedSNModRequired_Item_ExtIEs ** objPDUPDUSessionToBeModifiedSNModRequired_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionToBeReleasedSNModRequired_ExtIEs( SI_XNAP_DT_PDU_PDUSessionToBeReleasedSNModRequired_ExtIEs * objPDUPDUSessionToBeReleasedSNModRequired_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionToBeReleasedSNModRequired_ExtIEs( SI_XNAP_DT_PDU_PDUSessionToBeReleasedSNModRequired_ExtIEs * objPDUPDUSessionToBeReleasedSNModRequired_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionToBeReleasedSNModRequired_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionToBeReleasedSNModRequired_ExtIEs * objPDUPDUSessionToBeReleasedSNModRequired_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionToBeReleasedSNModRequired_ExtIEs( SI_XNAP_DT_PDU_PDUSessionToBeReleasedSNModRequired_ExtIEs ** objPDUPDUSessionToBeReleasedSNModRequired_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionAdmittedModSNModConfirm_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmittedModSNModConfirm_Item_ExtIEs * objPDUPDUSessionAdmittedModSNModConfirm_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionAdmittedModSNModConfirm_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmittedModSNModConfirm_Item_ExtIEs * objPDUPDUSessionAdmittedModSNModConfirm_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionAdmittedModSNModConfirm_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionAdmittedModSNModConfirm_Item_ExtIEs * objPDUPDUSessionAdmittedModSNModConfirm_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionAdmittedModSNModConfirm_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmittedModSNModConfirm_Item_ExtIEs ** objPDUPDUSessionAdmittedModSNModConfirm_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionAdmittedToBeReleasedSNModConfirm_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmittedToBeReleasedSNModConfirm_ExtIEs * objPDUPDUSessionAdmittedToBeReleasedSNModConfirm_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionAdmittedToBeReleasedSNModConfirm_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmittedToBeReleasedSNModConfirm_ExtIEs * objPDUPDUSessionAdmittedToBeReleasedSNModConfirm_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionAdmittedToBeReleasedSNModConfirm_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionAdmittedToBeReleasedSNModConfirm_ExtIEs * objPDUPDUSessionAdmittedToBeReleasedSNModConfirm_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionAdmittedToBeReleasedSNModConfirm_ExtIEs( SI_XNAP_DT_PDU_PDUSessionAdmittedToBeReleasedSNModConfirm_ExtIEs ** objPDUPDUSessionAdmittedToBeReleasedSNModConfirm_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionToBeReleasedList_RelReqAck_ExtIEs( SI_XNAP_DT_PDU_PDUSessionToBeReleasedList_RelReqAck_ExtIEs * objPDUPDUSessionToBeReleasedList_RelReqAck_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionToBeReleasedList_RelReqAck_ExtIEs( SI_XNAP_DT_PDU_PDUSessionToBeReleasedList_RelReqAck_ExtIEs * objPDUPDUSessionToBeReleasedList_RelReqAck_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionToBeReleasedList_RelReqAck_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionToBeReleasedList_RelReqAck_ExtIEs * objPDUPDUSessionToBeReleasedList_RelReqAck_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionToBeReleasedList_RelReqAck_ExtIEs( SI_XNAP_DT_PDU_PDUSessionToBeReleasedList_RelReqAck_ExtIEs ** objPDUPDUSessionToBeReleasedList_RelReqAck_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionToBeReleasedList_RelRqd_ExtIEs( SI_XNAP_DT_PDU_PDUSessionToBeReleasedList_RelRqd_ExtIEs * objPDUPDUSessionToBeReleasedList_RelRqd_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionToBeReleasedList_RelRqd_ExtIEs( SI_XNAP_DT_PDU_PDUSessionToBeReleasedList_RelRqd_ExtIEs * objPDUPDUSessionToBeReleasedList_RelRqd_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionToBeReleasedList_RelRqd_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionToBeReleasedList_RelRqd_ExtIEs * objPDUPDUSessionToBeReleasedList_RelRqd_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionToBeReleasedList_RelRqd_ExtIEs( SI_XNAP_DT_PDU_PDUSessionToBeReleasedList_RelRqd_ExtIEs ** objPDUPDUSessionToBeReleasedList_RelRqd_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionReleasedList_RelConf_ExtIEs( SI_XNAP_DT_PDU_PDUSessionReleasedList_RelConf_ExtIEs * objPDUPDUSessionReleasedList_RelConf_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionReleasedList_RelConf_ExtIEs( SI_XNAP_DT_PDU_PDUSessionReleasedList_RelConf_ExtIEs * objPDUPDUSessionReleasedList_RelConf_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionReleasedList_RelConf_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionReleasedList_RelConf_ExtIEs * objPDUPDUSessionReleasedList_RelConf_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionReleasedList_RelConf_ExtIEs( SI_XNAP_DT_PDU_PDUSessionReleasedList_RelConf_ExtIEs ** objPDUPDUSessionReleasedList_RelConf_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_BearersSubjectToCounterCheck_Item_ExtIEs( SI_XNAP_DT_PDU_BearersSubjectToCounterCheck_Item_ExtIEs * objPDUBearersSubjectToCounterCheck_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_BearersSubjectToCounterCheck_Item_ExtIEs( SI_XNAP_DT_PDU_BearersSubjectToCounterCheck_Item_ExtIEs * objPDUBearersSubjectToCounterCheck_Item_ExtIEs);
void __si_xnap_debug_PDU_BearersSubjectToCounterCheck_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_BearersSubjectToCounterCheck_Item_ExtIEs * objPDUBearersSubjectToCounterCheck_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_BearersSubjectToCounterCheck_Item_ExtIEs( SI_XNAP_DT_PDU_BearersSubjectToCounterCheck_Item_ExtIEs ** objPDUBearersSubjectToCounterCheck_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSession_SNChangeRequired_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSession_SNChangeRequired_Item_ExtIEs * objPDUPDUSession_SNChangeRequired_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSession_SNChangeRequired_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSession_SNChangeRequired_Item_ExtIEs * objPDUPDUSession_SNChangeRequired_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSession_SNChangeRequired_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSession_SNChangeRequired_Item_ExtIEs * objPDUPDUSession_SNChangeRequired_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSession_SNChangeRequired_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSession_SNChangeRequired_Item_ExtIEs ** objPDUPDUSession_SNChangeRequired_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSession_SNChangeConfirm_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSession_SNChangeConfirm_Item_ExtIEs * objPDUPDUSession_SNChangeConfirm_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSession_SNChangeConfirm_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSession_SNChangeConfirm_Item_ExtIEs * objPDUPDUSession_SNChangeConfirm_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSession_SNChangeConfirm_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSession_SNChangeConfirm_Item_ExtIEs * objPDUPDUSession_SNChangeConfirm_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSession_SNChangeConfirm_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSession_SNChangeConfirm_Item_ExtIEs ** objPDUPDUSession_SNChangeConfirm_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SplitSRB_RRCTransfer_ExtIEs( SI_XNAP_DT_PDU_SplitSRB_RRCTransfer_ExtIEs * objPDUSplitSRB_RRCTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SplitSRB_RRCTransfer_ExtIEs( SI_XNAP_DT_PDU_SplitSRB_RRCTransfer_ExtIEs * objPDUSplitSRB_RRCTransfer_ExtIEs);
void __si_xnap_debug_PDU_SplitSRB_RRCTransfer_ExtIEs( char * key, SI_XNAP_DT_PDU_SplitSRB_RRCTransfer_ExtIEs * objPDUSplitSRB_RRCTransfer_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SplitSRB_RRCTransfer_ExtIEs( SI_XNAP_DT_PDU_SplitSRB_RRCTransfer_ExtIEs ** objPDUSplitSRB_RRCTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_UEReportRRCTransfer_ExtIEs( SI_XNAP_DT_PDU_UEReportRRCTransfer_ExtIEs * objPDUUEReportRRCTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_UEReportRRCTransfer_ExtIEs( SI_XNAP_DT_PDU_UEReportRRCTransfer_ExtIEs * objPDUUEReportRRCTransfer_ExtIEs);
void __si_xnap_debug_PDU_UEReportRRCTransfer_ExtIEs( char * key, SI_XNAP_DT_PDU_UEReportRRCTransfer_ExtIEs * objPDUUEReportRRCTransfer_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_UEReportRRCTransfer_ExtIEs( SI_XNAP_DT_PDU_UEReportRRCTransfer_ExtIEs ** objPDUUEReportRRCTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_FastMCGRecoveryRRCTransfer_ExtIEs( SI_XNAP_DT_PDU_FastMCGRecoveryRRCTransfer_ExtIEs * objPDUFastMCGRecoveryRRCTransfer_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_FastMCGRecoveryRRCTransfer_ExtIEs( SI_XNAP_DT_PDU_FastMCGRecoveryRRCTransfer_ExtIEs * objPDUFastMCGRecoveryRRCTransfer_ExtIEs);
void __si_xnap_debug_PDU_FastMCGRecoveryRRCTransfer_ExtIEs( char * key, SI_XNAP_DT_PDU_FastMCGRecoveryRRCTransfer_ExtIEs * objPDUFastMCGRecoveryRRCTransfer_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_FastMCGRecoveryRRCTransfer_ExtIEs( SI_XNAP_DT_PDU_FastMCGRecoveryRRCTransfer_ExtIEs ** objPDUFastMCGRecoveryRRCTransfer_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SDT_SRB_between_NewNode_OldNode_ExtIEs( SI_XNAP_DT_PDU_SDT_SRB_between_NewNode_OldNode_ExtIEs * objPDUSDT_SRB_between_NewNode_OldNode_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SDT_SRB_between_NewNode_OldNode_ExtIEs( SI_XNAP_DT_PDU_SDT_SRB_between_NewNode_OldNode_ExtIEs * objPDUSDT_SRB_between_NewNode_OldNode_ExtIEs);
void __si_xnap_debug_PDU_SDT_SRB_between_NewNode_OldNode_ExtIEs( char * key, SI_XNAP_DT_PDU_SDT_SRB_between_NewNode_OldNode_ExtIEs * objPDUSDT_SRB_between_NewNode_OldNode_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SDT_SRB_between_NewNode_OldNode_ExtIEs( SI_XNAP_DT_PDU_SDT_SRB_between_NewNode_OldNode_ExtIEs ** objPDUSDT_SRB_between_NewNode_OldNode_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoE_Measurement_Results_ExtIEs( SI_XNAP_DT_PDU_QoE_Measurement_Results_ExtIEs * objPDUQoE_Measurement_Results_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoE_Measurement_Results_ExtIEs( SI_XNAP_DT_PDU_QoE_Measurement_Results_ExtIEs * objPDUQoE_Measurement_Results_ExtIEs);
void __si_xnap_debug_PDU_QoE_Measurement_Results_ExtIEs( char * key, SI_XNAP_DT_PDU_QoE_Measurement_Results_ExtIEs * objPDUQoE_Measurement_Results_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoE_Measurement_Results_ExtIEs( SI_XNAP_DT_PDU_QoE_Measurement_Results_ExtIEs ** objPDUQoE_Measurement_Results_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourcesNotify_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourcesNotify_Item_ExtIEs * objPDUPDUSessionResourcesNotify_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourcesNotify_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourcesNotify_Item_ExtIEs * objPDUPDUSessionResourcesNotify_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourcesNotify_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourcesNotify_Item_ExtIEs * objPDUPDUSessionResourcesNotify_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourcesNotify_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourcesNotify_Item_ExtIEs ** objPDUPDUSessionResourcesNotify_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_PDUSessionResourcesActivityNotify_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourcesActivityNotify_Item_ExtIEs * objPDUPDUSessionResourcesActivityNotify_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_PDUSessionResourcesActivityNotify_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourcesActivityNotify_Item_ExtIEs * objPDUPDUSessionResourcesActivityNotify_Item_ExtIEs);
void __si_xnap_debug_PDU_PDUSessionResourcesActivityNotify_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_PDUSessionResourcesActivityNotify_Item_ExtIEs * objPDUPDUSessionResourcesActivityNotify_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_PDUSessionResourcesActivityNotify_Item_ExtIEs( SI_XNAP_DT_PDU_PDUSessionResourcesActivityNotify_Item_ExtIEs ** objPDUPDUSessionResourcesActivityNotify_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_QoSFlowsActivityNotifyItem_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsActivityNotifyItem_ExtIEs * objPDUQoSFlowsActivityNotifyItem_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_QoSFlowsActivityNotifyItem_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsActivityNotifyItem_ExtIEs * objPDUQoSFlowsActivityNotifyItem_ExtIEs);
void __si_xnap_debug_PDU_QoSFlowsActivityNotifyItem_ExtIEs( char * key, SI_XNAP_DT_PDU_QoSFlowsActivityNotifyItem_ExtIEs * objPDUQoSFlowsActivityNotifyItem_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_QoSFlowsActivityNotifyItem_ExtIEs( SI_XNAP_DT_PDU_QoSFlowsActivityNotifyItem_ExtIEs ** objPDUQoSFlowsActivityNotifyItem_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RespondingNodeTypeConfigUpdateAck_ng_eNB_ExtIEs( SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_ng_eNB_ExtIEs * objPDURespondingNodeTypeConfigUpdateAck_ng_eNB_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RespondingNodeTypeConfigUpdateAck_ng_eNB_ExtIEs( SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_ng_eNB_ExtIEs * objPDURespondingNodeTypeConfigUpdateAck_ng_eNB_ExtIEs);
void __si_xnap_debug_PDU_RespondingNodeTypeConfigUpdateAck_ng_eNB_ExtIEs( char * key, SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_ng_eNB_ExtIEs * objPDURespondingNodeTypeConfigUpdateAck_ng_eNB_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RespondingNodeTypeConfigUpdateAck_ng_eNB_ExtIEs( SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_ng_eNB_ExtIEs ** objPDURespondingNodeTypeConfigUpdateAck_ng_eNB_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_RespondingNodeTypeConfigUpdateAck_gNB_ExtIEs( SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_gNB_ExtIEs * objPDURespondingNodeTypeConfigUpdateAck_gNB_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_RespondingNodeTypeConfigUpdateAck_gNB_ExtIEs( SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_gNB_ExtIEs * objPDURespondingNodeTypeConfigUpdateAck_gNB_ExtIEs);
void __si_xnap_debug_PDU_RespondingNodeTypeConfigUpdateAck_gNB_ExtIEs( char * key, SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_gNB_ExtIEs * objPDURespondingNodeTypeConfigUpdateAck_gNB_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_RespondingNodeTypeConfigUpdateAck_gNB_ExtIEs( SI_XNAP_DT_PDU_RespondingNodeTypeConfigUpdateAck_gNB_ExtIEs ** objPDURespondingNodeTypeConfigUpdateAck_gNB_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ResourceCoordRequest_ng_eNB_initiated_ExtIEs( SI_XNAP_DT_PDU_ResourceCoordRequest_ng_eNB_initiated_ExtIEs * objPDUResourceCoordRequest_ng_eNB_initiated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ResourceCoordRequest_ng_eNB_initiated_ExtIEs( SI_XNAP_DT_PDU_ResourceCoordRequest_ng_eNB_initiated_ExtIEs * objPDUResourceCoordRequest_ng_eNB_initiated_ExtIEs);
void __si_xnap_debug_PDU_ResourceCoordRequest_ng_eNB_initiated_ExtIEs( char * key, SI_XNAP_DT_PDU_ResourceCoordRequest_ng_eNB_initiated_ExtIEs * objPDUResourceCoordRequest_ng_eNB_initiated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ResourceCoordRequest_ng_eNB_initiated_ExtIEs( SI_XNAP_DT_PDU_ResourceCoordRequest_ng_eNB_initiated_ExtIEs ** objPDUResourceCoordRequest_ng_eNB_initiated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ResourceCoordRequest_gNB_initiated_ExtIEs( SI_XNAP_DT_PDU_ResourceCoordRequest_gNB_initiated_ExtIEs * objPDUResourceCoordRequest_gNB_initiated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ResourceCoordRequest_gNB_initiated_ExtIEs( SI_XNAP_DT_PDU_ResourceCoordRequest_gNB_initiated_ExtIEs * objPDUResourceCoordRequest_gNB_initiated_ExtIEs);
void __si_xnap_debug_PDU_ResourceCoordRequest_gNB_initiated_ExtIEs( char * key, SI_XNAP_DT_PDU_ResourceCoordRequest_gNB_initiated_ExtIEs * objPDUResourceCoordRequest_gNB_initiated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ResourceCoordRequest_gNB_initiated_ExtIEs( SI_XNAP_DT_PDU_ResourceCoordRequest_gNB_initiated_ExtIEs ** objPDUResourceCoordRequest_gNB_initiated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ResourceCoordResponse_ng_eNB_initiated_ExtIEs( SI_XNAP_DT_PDU_ResourceCoordResponse_ng_eNB_initiated_ExtIEs * objPDUResourceCoordResponse_ng_eNB_initiated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ResourceCoordResponse_ng_eNB_initiated_ExtIEs( SI_XNAP_DT_PDU_ResourceCoordResponse_ng_eNB_initiated_ExtIEs * objPDUResourceCoordResponse_ng_eNB_initiated_ExtIEs);
void __si_xnap_debug_PDU_ResourceCoordResponse_ng_eNB_initiated_ExtIEs( char * key, SI_XNAP_DT_PDU_ResourceCoordResponse_ng_eNB_initiated_ExtIEs * objPDUResourceCoordResponse_ng_eNB_initiated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ResourceCoordResponse_ng_eNB_initiated_ExtIEs( SI_XNAP_DT_PDU_ResourceCoordResponse_ng_eNB_initiated_ExtIEs ** objPDUResourceCoordResponse_ng_eNB_initiated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ResourceCoordResponse_gNB_initiated_ExtIEs( SI_XNAP_DT_PDU_ResourceCoordResponse_gNB_initiated_ExtIEs * objPDUResourceCoordResponse_gNB_initiated_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ResourceCoordResponse_gNB_initiated_ExtIEs( SI_XNAP_DT_PDU_ResourceCoordResponse_gNB_initiated_ExtIEs * objPDUResourceCoordResponse_gNB_initiated_ExtIEs);
void __si_xnap_debug_PDU_ResourceCoordResponse_gNB_initiated_ExtIEs( char * key, SI_XNAP_DT_PDU_ResourceCoordResponse_gNB_initiated_ExtIEs * objPDUResourceCoordResponse_gNB_initiated_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ResourceCoordResponse_gNB_initiated_ExtIEs( SI_XNAP_DT_PDU_ResourceCoordResponse_gNB_initiated_ExtIEs ** objPDUResourceCoordResponse_gNB_initiated_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ToBeActivatedNRCellsAndSSBs_Item_ExtIEs( SI_XNAP_DT_PDU_ToBeActivatedNRCellsAndSSBs_Item_ExtIEs * objPDUToBeActivatedNRCellsAndSSBs_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ToBeActivatedNRCellsAndSSBs_Item_ExtIEs( SI_XNAP_DT_PDU_ToBeActivatedNRCellsAndSSBs_Item_ExtIEs * objPDUToBeActivatedNRCellsAndSSBs_Item_ExtIEs);
void __si_xnap_debug_PDU_ToBeActivatedNRCellsAndSSBs_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_ToBeActivatedNRCellsAndSSBs_Item_ExtIEs * objPDUToBeActivatedNRCellsAndSSBs_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ToBeActivatedNRCellsAndSSBs_Item_ExtIEs( SI_XNAP_DT_PDU_ToBeActivatedNRCellsAndSSBs_Item_ExtIEs ** objPDUToBeActivatedNRCellsAndSSBs_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SSBsToBeActivated_Item_ExtIEs( SI_XNAP_DT_PDU_SSBsToBeActivated_Item_ExtIEs * objPDUSSBsToBeActivated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SSBsToBeActivated_Item_ExtIEs( SI_XNAP_DT_PDU_SSBsToBeActivated_Item_ExtIEs * objPDUSSBsToBeActivated_Item_ExtIEs);
void __si_xnap_debug_PDU_SSBsToBeActivated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SSBsToBeActivated_Item_ExtIEs * objPDUSSBsToBeActivated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SSBsToBeActivated_Item_ExtIEs( SI_XNAP_DT_PDU_SSBsToBeActivated_Item_ExtIEs ** objPDUSSBsToBeActivated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ActivatedNRCellsAndSSBs_Item_ExtIEs( SI_XNAP_DT_PDU_ActivatedNRCellsAndSSBs_Item_ExtIEs * objPDUActivatedNRCellsAndSSBs_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ActivatedNRCellsAndSSBs_Item_ExtIEs( SI_XNAP_DT_PDU_ActivatedNRCellsAndSSBs_Item_ExtIEs * objPDUActivatedNRCellsAndSSBs_Item_ExtIEs);
void __si_xnap_debug_PDU_ActivatedNRCellsAndSSBs_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_ActivatedNRCellsAndSSBs_Item_ExtIEs * objPDUActivatedNRCellsAndSSBs_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ActivatedNRCellsAndSSBs_Item_ExtIEs( SI_XNAP_DT_PDU_ActivatedNRCellsAndSSBs_Item_ExtIEs ** objPDUActivatedNRCellsAndSSBs_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_SSBsActivated_Item_ExtIEs( SI_XNAP_DT_PDU_SSBsActivated_Item_ExtIEs * objPDUSSBsActivated_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_SSBsActivated_Item_ExtIEs( SI_XNAP_DT_PDU_SSBsActivated_Item_ExtIEs * objPDUSSBsActivated_Item_ExtIEs);
void __si_xnap_debug_PDU_SSBsActivated_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_SSBsActivated_Item_ExtIEs * objPDUSSBsActivated_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_SSBsActivated_Item_ExtIEs( SI_XNAP_DT_PDU_SSBsActivated_Item_ExtIEs ** objPDUSSBsActivated_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TrafficToBeAdded_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficToBeAdded_Item_ExtIEs * objPDUTrafficToBeAdded_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TrafficToBeAdded_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficToBeAdded_Item_ExtIEs * objPDUTrafficToBeAdded_Item_ExtIEs);
void __si_xnap_debug_PDU_TrafficToBeAdded_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TrafficToBeAdded_Item_ExtIEs * objPDUTrafficToBeAdded_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TrafficToBeAdded_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficToBeAdded_Item_ExtIEs ** objPDUTrafficToBeAdded_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TrafficToBeModified_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficToBeModified_Item_ExtIEs * objPDUTrafficToBeModified_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TrafficToBeModified_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficToBeModified_Item_ExtIEs * objPDUTrafficToBeModified_Item_ExtIEs);
void __si_xnap_debug_PDU_TrafficToBeModified_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TrafficToBeModified_Item_ExtIEs * objPDUTrafficToBeModified_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TrafficToBeModified_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficToBeModified_Item_ExtIEs ** objPDUTrafficToBeModified_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TrafficAdded_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficAdded_Item_ExtIEs * objPDUTrafficAdded_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TrafficAdded_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficAdded_Item_ExtIEs * objPDUTrafficAdded_Item_ExtIEs);
void __si_xnap_debug_PDU_TrafficAdded_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TrafficAdded_Item_ExtIEs * objPDUTrafficAdded_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TrafficAdded_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficAdded_Item_ExtIEs ** objPDUTrafficAdded_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TrafficModified_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficModified_Item_ExtIEs * objPDUTrafficModified_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TrafficModified_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficModified_Item_ExtIEs * objPDUTrafficModified_Item_ExtIEs);
void __si_xnap_debug_PDU_TrafficModified_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TrafficModified_Item_ExtIEs * objPDUTrafficModified_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TrafficModified_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficModified_Item_ExtIEs ** objPDUTrafficModified_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TrafficNotAdded_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficNotAdded_Item_ExtIEs * objPDUTrafficNotAdded_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TrafficNotAdded_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficNotAdded_Item_ExtIEs * objPDUTrafficNotAdded_Item_ExtIEs);
void __si_xnap_debug_PDU_TrafficNotAdded_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TrafficNotAdded_Item_ExtIEs * objPDUTrafficNotAdded_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TrafficNotAdded_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficNotAdded_Item_ExtIEs ** objPDUTrafficNotAdded_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TrafficNotModified_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficNotModified_Item_ExtIEs * objPDUTrafficNotModified_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TrafficNotModified_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficNotModified_Item_ExtIEs * objPDUTrafficNotModified_Item_ExtIEs);
void __si_xnap_debug_PDU_TrafficNotModified_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TrafficNotModified_Item_ExtIEs * objPDUTrafficNotModified_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TrafficNotModified_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficNotModified_Item_ExtIEs ** objPDUTrafficNotModified_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TrafficReleased_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficReleased_Item_ExtIEs * objPDUTrafficReleased_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TrafficReleased_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficReleased_Item_ExtIEs * objPDUTrafficReleased_Item_ExtIEs);
void __si_xnap_debug_PDU_TrafficReleased_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TrafficReleased_Item_ExtIEs * objPDUTrafficReleased_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TrafficReleased_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficReleased_Item_ExtIEs ** objPDUTrafficReleased_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TrafficRequiredToBeModified_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficRequiredToBeModified_Item_ExtIEs * objPDUTrafficRequiredToBeModified_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TrafficRequiredToBeModified_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficRequiredToBeModified_Item_ExtIEs * objPDUTrafficRequiredToBeModified_Item_ExtIEs);
void __si_xnap_debug_PDU_TrafficRequiredToBeModified_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TrafficRequiredToBeModified_Item_ExtIEs * objPDUTrafficRequiredToBeModified_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TrafficRequiredToBeModified_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficRequiredToBeModified_Item_ExtIEs ** objPDUTrafficRequiredToBeModified_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_IABTNLAddressToBeReleased_Item_ExtIEs( SI_XNAP_DT_PDU_IABTNLAddressToBeReleased_Item_ExtIEs * objPDUIABTNLAddressToBeReleased_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_IABTNLAddressToBeReleased_Item_ExtIEs( SI_XNAP_DT_PDU_IABTNLAddressToBeReleased_Item_ExtIEs * objPDUIABTNLAddressToBeReleased_Item_ExtIEs);
void __si_xnap_debug_PDU_IABTNLAddressToBeReleased_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_IABTNLAddressToBeReleased_Item_ExtIEs * objPDUIABTNLAddressToBeReleased_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_IABTNLAddressToBeReleased_Item_ExtIEs( SI_XNAP_DT_PDU_IABTNLAddressToBeReleased_Item_ExtIEs ** objPDUIABTNLAddressToBeReleased_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_TrafficRequiredModified_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficRequiredModified_Item_ExtIEs * objPDUTrafficRequiredModified_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_TrafficRequiredModified_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficRequiredModified_Item_ExtIEs * objPDUTrafficRequiredModified_Item_ExtIEs);
void __si_xnap_debug_PDU_TrafficRequiredModified_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_TrafficRequiredModified_Item_ExtIEs * objPDUTrafficRequiredModified_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_TrafficRequiredModified_Item_ExtIEs( SI_XNAP_DT_PDU_TrafficRequiredModified_Item_ExtIEs ** objPDUTrafficRequiredModified_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_BoundaryNodeCellsList_Item_ExtIEs( SI_XNAP_DT_PDU_BoundaryNodeCellsList_Item_ExtIEs * objPDUBoundaryNodeCellsList_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_BoundaryNodeCellsList_Item_ExtIEs( SI_XNAP_DT_PDU_BoundaryNodeCellsList_Item_ExtIEs * objPDUBoundaryNodeCellsList_Item_ExtIEs);
void __si_xnap_debug_PDU_BoundaryNodeCellsList_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_BoundaryNodeCellsList_Item_ExtIEs * objPDUBoundaryNodeCellsList_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_BoundaryNodeCellsList_Item_ExtIEs( SI_XNAP_DT_PDU_BoundaryNodeCellsList_Item_ExtIEs ** objPDUBoundaryNodeCellsList_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

//L:8594 NonEP-Decode 
int __si_xnap_Encode_PDU_ParentNodeCellsList_Item_ExtIEs( SI_XNAP_DT_PDU_ParentNodeCellsList_Item_ExtIEs * objPDUParentNodeCellsList_Item_ExtIEs, uint8_t * buffer, int * len, int lvl, SI_ASN_CodingContext * codingContext);
void __si_xnap_memfree_PDU_ParentNodeCellsList_Item_ExtIEs( SI_XNAP_DT_PDU_ParentNodeCellsList_Item_ExtIEs * objPDUParentNodeCellsList_Item_ExtIEs);
void __si_xnap_debug_PDU_ParentNodeCellsList_Item_ExtIEs( char * key, SI_XNAP_DT_PDU_ParentNodeCellsList_Item_ExtIEs * objPDUParentNodeCellsList_Item_ExtIEs, int lvl);
int __si_xnap_Decode_PDU_ParentNodeCellsList_Item_ExtIEs( SI_XNAP_DT_PDU_ParentNodeCellsList_Item_ExtIEs ** objPDUParentNodeCellsList_Item_ExtIEs, int * isSet, int lvl, SI_ASN_CodingContext * context, uint16_t datalen);

// ELEMENTARY-PROCEDURE = [0] handoverPreparation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 0
// ProcedureCodeName = id-handoverPreparation
// Criticality = reject

int __si_xnap_encode_pdu_HandoverRequest( SI_XNAP_DT_PDU_HandoverRequest * objPDUHandoverRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_HandoverRequest( SI_XNAP_DT_PDU_HandoverRequest * objPDUHandoverRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_HandoverRequest( SI_XNAP_DT_PDU_HandoverRequest * objPDUHandoverRequest);

int __si_xnap_memfree_pdu_HandoverRequest( SI_XNAP_DT_PDU_HandoverRequest * objPDUHandoverRequest);



// ELEMENTARY-PROCEDURE = [0] handoverPreparation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 0
// ProcedureCodeName = id-handoverPreparation
// Criticality = reject

int __si_xnap_encode_pdu_HandoverRequestAcknowledge( SI_XNAP_DT_PDU_HandoverRequestAcknowledge * objPDUHandoverRequestAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_HandoverRequestAcknowledge( SI_XNAP_DT_PDU_HandoverRequestAcknowledge * objPDUHandoverRequestAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_HandoverRequestAcknowledge( SI_XNAP_DT_PDU_HandoverRequestAcknowledge * objPDUHandoverRequestAcknowledge);

int __si_xnap_memfree_pdu_HandoverRequestAcknowledge( SI_XNAP_DT_PDU_HandoverRequestAcknowledge * objPDUHandoverRequestAcknowledge);



// ELEMENTARY-PROCEDURE = [0] handoverPreparation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 0
// ProcedureCodeName = id-handoverPreparation
// Criticality = reject

int __si_xnap_encode_pdu_HandoverPreparationFailure( SI_XNAP_DT_PDU_HandoverPreparationFailure * objPDUHandoverPreparationFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_HandoverPreparationFailure( SI_XNAP_DT_PDU_HandoverPreparationFailure * objPDUHandoverPreparationFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_HandoverPreparationFailure( SI_XNAP_DT_PDU_HandoverPreparationFailure * objPDUHandoverPreparationFailure);

int __si_xnap_memfree_pdu_HandoverPreparationFailure( SI_XNAP_DT_PDU_HandoverPreparationFailure * objPDUHandoverPreparationFailure);



// ELEMENTARY-PROCEDURE = [0] sNStatusTransfer	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 1
// ProcedureCodeName = id-sNStatusTransfer
// Criticality = ignore

int __si_xnap_encode_pdu_SNStatusTransfer( SI_XNAP_DT_PDU_SNStatusTransfer * objPDUSNStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNStatusTransfer( SI_XNAP_DT_PDU_SNStatusTransfer * objPDUSNStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNStatusTransfer( SI_XNAP_DT_PDU_SNStatusTransfer * objPDUSNStatusTransfer);

int __si_xnap_memfree_pdu_SNStatusTransfer( SI_XNAP_DT_PDU_SNStatusTransfer * objPDUSNStatusTransfer);



// ELEMENTARY-PROCEDURE = [0] handoverCancel	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 2
// ProcedureCodeName = id-handoverCancel
// Criticality = ignore

int __si_xnap_encode_pdu_HandoverCancel( SI_XNAP_DT_PDU_HandoverCancel * objPDUHandoverCancel, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_HandoverCancel( SI_XNAP_DT_PDU_HandoverCancel * objPDUHandoverCancel, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_HandoverCancel( SI_XNAP_DT_PDU_HandoverCancel * objPDUHandoverCancel);

int __si_xnap_memfree_pdu_HandoverCancel( SI_XNAP_DT_PDU_HandoverCancel * objPDUHandoverCancel);



// ELEMENTARY-PROCEDURE = [0] retrieveUEContext	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 3
// ProcedureCodeName = id-retrieveUEContext
// Criticality = reject

int __si_xnap_encode_pdu_RetrieveUEContextRequest( SI_XNAP_DT_PDU_RetrieveUEContextRequest * objPDURetrieveUEContextRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_RetrieveUEContextRequest( SI_XNAP_DT_PDU_RetrieveUEContextRequest * objPDURetrieveUEContextRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_RetrieveUEContextRequest( SI_XNAP_DT_PDU_RetrieveUEContextRequest * objPDURetrieveUEContextRequest);

int __si_xnap_memfree_pdu_RetrieveUEContextRequest( SI_XNAP_DT_PDU_RetrieveUEContextRequest * objPDURetrieveUEContextRequest);



// ELEMENTARY-PROCEDURE = [0] retrieveUEContext	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 3
// ProcedureCodeName = id-retrieveUEContext
// Criticality = reject

int __si_xnap_encode_pdu_RetrieveUEContextResponse( SI_XNAP_DT_PDU_RetrieveUEContextResponse * objPDURetrieveUEContextResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_RetrieveUEContextResponse( SI_XNAP_DT_PDU_RetrieveUEContextResponse * objPDURetrieveUEContextResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_RetrieveUEContextResponse( SI_XNAP_DT_PDU_RetrieveUEContextResponse * objPDURetrieveUEContextResponse);

int __si_xnap_memfree_pdu_RetrieveUEContextResponse( SI_XNAP_DT_PDU_RetrieveUEContextResponse * objPDURetrieveUEContextResponse);



// ELEMENTARY-PROCEDURE = [0] retrieveUEContext	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 3
// ProcedureCodeName = id-retrieveUEContext
// Criticality = reject

int __si_xnap_encode_pdu_RetrieveUEContextFailure( SI_XNAP_DT_PDU_RetrieveUEContextFailure * objPDURetrieveUEContextFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_RetrieveUEContextFailure( SI_XNAP_DT_PDU_RetrieveUEContextFailure * objPDURetrieveUEContextFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_RetrieveUEContextFailure( SI_XNAP_DT_PDU_RetrieveUEContextFailure * objPDURetrieveUEContextFailure);

int __si_xnap_memfree_pdu_RetrieveUEContextFailure( SI_XNAP_DT_PDU_RetrieveUEContextFailure * objPDURetrieveUEContextFailure);



// ELEMENTARY-PROCEDURE = [0] rANPaging	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 4
// ProcedureCodeName = id-rANPaging
// Criticality = reject

int __si_xnap_encode_pdu_RANPaging( SI_XNAP_DT_PDU_RANPaging * objPDURANPaging, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_RANPaging( SI_XNAP_DT_PDU_RANPaging * objPDURANPaging, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_RANPaging( SI_XNAP_DT_PDU_RANPaging * objPDURANPaging);

int __si_xnap_memfree_pdu_RANPaging( SI_XNAP_DT_PDU_RANPaging * objPDURANPaging);



// ELEMENTARY-PROCEDURE = [0] xnUAddressIndication	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 5
// ProcedureCodeName = id-xnUAddressIndication
// Criticality = reject

int __si_xnap_encode_pdu_XnUAddressIndication( SI_XNAP_DT_PDU_XnUAddressIndication * objPDUXnUAddressIndication, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_XnUAddressIndication( SI_XNAP_DT_PDU_XnUAddressIndication * objPDUXnUAddressIndication, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_XnUAddressIndication( SI_XNAP_DT_PDU_XnUAddressIndication * objPDUXnUAddressIndication);

int __si_xnap_memfree_pdu_XnUAddressIndication( SI_XNAP_DT_PDU_XnUAddressIndication * objPDUXnUAddressIndication);



// ELEMENTARY-PROCEDURE = [0] uEContextRelease	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 6
// ProcedureCodeName = id-uEContextRelease
// Criticality = reject

int __si_xnap_encode_pdu_UEContextRelease( SI_XNAP_DT_PDU_UEContextRelease * objPDUUEContextRelease, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_UEContextRelease( SI_XNAP_DT_PDU_UEContextRelease * objPDUUEContextRelease, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_UEContextRelease( SI_XNAP_DT_PDU_UEContextRelease * objPDUUEContextRelease);

int __si_xnap_memfree_pdu_UEContextRelease( SI_XNAP_DT_PDU_UEContextRelease * objPDUUEContextRelease);



// ELEMENTARY-PROCEDURE = [0] sNGRANnodeAdditionPreparation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 7
// ProcedureCodeName = id-sNGRANnodeAdditionPreparation
// Criticality = reject

int __si_xnap_encode_pdu_SNodeAdditionRequest( SI_XNAP_DT_PDU_SNodeAdditionRequest * objPDUSNodeAdditionRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeAdditionRequest( SI_XNAP_DT_PDU_SNodeAdditionRequest * objPDUSNodeAdditionRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeAdditionRequest( SI_XNAP_DT_PDU_SNodeAdditionRequest * objPDUSNodeAdditionRequest);

int __si_xnap_memfree_pdu_SNodeAdditionRequest( SI_XNAP_DT_PDU_SNodeAdditionRequest * objPDUSNodeAdditionRequest);



// ELEMENTARY-PROCEDURE = [0] sNGRANnodeAdditionPreparation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 7
// ProcedureCodeName = id-sNGRANnodeAdditionPreparation
// Criticality = reject

int __si_xnap_encode_pdu_SNodeAdditionRequestAcknowledge( SI_XNAP_DT_PDU_SNodeAdditionRequestAcknowledge * objPDUSNodeAdditionRequestAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeAdditionRequestAcknowledge( SI_XNAP_DT_PDU_SNodeAdditionRequestAcknowledge * objPDUSNodeAdditionRequestAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeAdditionRequestAcknowledge( SI_XNAP_DT_PDU_SNodeAdditionRequestAcknowledge * objPDUSNodeAdditionRequestAcknowledge);

int __si_xnap_memfree_pdu_SNodeAdditionRequestAcknowledge( SI_XNAP_DT_PDU_SNodeAdditionRequestAcknowledge * objPDUSNodeAdditionRequestAcknowledge);



// ELEMENTARY-PROCEDURE = [0] sNGRANnodeAdditionPreparation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 7
// ProcedureCodeName = id-sNGRANnodeAdditionPreparation
// Criticality = reject

int __si_xnap_encode_pdu_SNodeAdditionRequestReject( SI_XNAP_DT_PDU_SNodeAdditionRequestReject * objPDUSNodeAdditionRequestReject, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeAdditionRequestReject( SI_XNAP_DT_PDU_SNodeAdditionRequestReject * objPDUSNodeAdditionRequestReject, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeAdditionRequestReject( SI_XNAP_DT_PDU_SNodeAdditionRequestReject * objPDUSNodeAdditionRequestReject);

int __si_xnap_memfree_pdu_SNodeAdditionRequestReject( SI_XNAP_DT_PDU_SNodeAdditionRequestReject * objPDUSNodeAdditionRequestReject);



// ELEMENTARY-PROCEDURE = [0] sNGRANnodeReconfigurationCompletion	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 8
// ProcedureCodeName = id-sNGRANnodeReconfigurationCompletion
// Criticality = reject

int __si_xnap_encode_pdu_SNodeReconfigurationComplete( SI_XNAP_DT_PDU_SNodeReconfigurationComplete * objPDUSNodeReconfigurationComplete, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeReconfigurationComplete( SI_XNAP_DT_PDU_SNodeReconfigurationComplete * objPDUSNodeReconfigurationComplete, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeReconfigurationComplete( SI_XNAP_DT_PDU_SNodeReconfigurationComplete * objPDUSNodeReconfigurationComplete);

int __si_xnap_memfree_pdu_SNodeReconfigurationComplete( SI_XNAP_DT_PDU_SNodeReconfigurationComplete * objPDUSNodeReconfigurationComplete);



// ELEMENTARY-PROCEDURE = [0] mNGRANnodeinitiatedSNGRANnodeModificationPreparation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 9
// ProcedureCodeName = id-mNGRANnodeinitiatedSNGRANnodeModificationPreparation
// Criticality = reject

int __si_xnap_encode_pdu_SNodeModificationRequest( SI_XNAP_DT_PDU_SNodeModificationRequest * objPDUSNodeModificationRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeModificationRequest( SI_XNAP_DT_PDU_SNodeModificationRequest * objPDUSNodeModificationRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeModificationRequest( SI_XNAP_DT_PDU_SNodeModificationRequest * objPDUSNodeModificationRequest);

int __si_xnap_memfree_pdu_SNodeModificationRequest( SI_XNAP_DT_PDU_SNodeModificationRequest * objPDUSNodeModificationRequest);



// ELEMENTARY-PROCEDURE = [0] mNGRANnodeinitiatedSNGRANnodeModificationPreparation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 9
// ProcedureCodeName = id-mNGRANnodeinitiatedSNGRANnodeModificationPreparation
// Criticality = reject

int __si_xnap_encode_pdu_SNodeModificationRequestAcknowledge( SI_XNAP_DT_PDU_SNodeModificationRequestAcknowledge * objPDUSNodeModificationRequestAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeModificationRequestAcknowledge( SI_XNAP_DT_PDU_SNodeModificationRequestAcknowledge * objPDUSNodeModificationRequestAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeModificationRequestAcknowledge( SI_XNAP_DT_PDU_SNodeModificationRequestAcknowledge * objPDUSNodeModificationRequestAcknowledge);

int __si_xnap_memfree_pdu_SNodeModificationRequestAcknowledge( SI_XNAP_DT_PDU_SNodeModificationRequestAcknowledge * objPDUSNodeModificationRequestAcknowledge);



// ELEMENTARY-PROCEDURE = [0] mNGRANnodeinitiatedSNGRANnodeModificationPreparation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 9
// ProcedureCodeName = id-mNGRANnodeinitiatedSNGRANnodeModificationPreparation
// Criticality = reject

int __si_xnap_encode_pdu_SNodeModificationRequestReject( SI_XNAP_DT_PDU_SNodeModificationRequestReject * objPDUSNodeModificationRequestReject, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeModificationRequestReject( SI_XNAP_DT_PDU_SNodeModificationRequestReject * objPDUSNodeModificationRequestReject, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeModificationRequestReject( SI_XNAP_DT_PDU_SNodeModificationRequestReject * objPDUSNodeModificationRequestReject);

int __si_xnap_memfree_pdu_SNodeModificationRequestReject( SI_XNAP_DT_PDU_SNodeModificationRequestReject * objPDUSNodeModificationRequestReject);



// ELEMENTARY-PROCEDURE = [0] sNGRANnodeinitiatedSNGRANnodeModificationPreparation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 10
// ProcedureCodeName = id-sNGRANnodeinitiatedSNGRANnodeModificationPreparation
// Criticality = reject

int __si_xnap_encode_pdu_SNodeModificationRequired( SI_XNAP_DT_PDU_SNodeModificationRequired * objPDUSNodeModificationRequired, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeModificationRequired( SI_XNAP_DT_PDU_SNodeModificationRequired * objPDUSNodeModificationRequired, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeModificationRequired( SI_XNAP_DT_PDU_SNodeModificationRequired * objPDUSNodeModificationRequired);

int __si_xnap_memfree_pdu_SNodeModificationRequired( SI_XNAP_DT_PDU_SNodeModificationRequired * objPDUSNodeModificationRequired);



// ELEMENTARY-PROCEDURE = [0] sNGRANnodeinitiatedSNGRANnodeModificationPreparation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 10
// ProcedureCodeName = id-sNGRANnodeinitiatedSNGRANnodeModificationPreparation
// Criticality = reject

int __si_xnap_encode_pdu_SNodeModificationConfirm( SI_XNAP_DT_PDU_SNodeModificationConfirm * objPDUSNodeModificationConfirm, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeModificationConfirm( SI_XNAP_DT_PDU_SNodeModificationConfirm * objPDUSNodeModificationConfirm, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeModificationConfirm( SI_XNAP_DT_PDU_SNodeModificationConfirm * objPDUSNodeModificationConfirm);

int __si_xnap_memfree_pdu_SNodeModificationConfirm( SI_XNAP_DT_PDU_SNodeModificationConfirm * objPDUSNodeModificationConfirm);



// ELEMENTARY-PROCEDURE = [0] sNGRANnodeinitiatedSNGRANnodeModificationPreparation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 10
// ProcedureCodeName = id-sNGRANnodeinitiatedSNGRANnodeModificationPreparation
// Criticality = reject

int __si_xnap_encode_pdu_SNodeModificationRefuse( SI_XNAP_DT_PDU_SNodeModificationRefuse * objPDUSNodeModificationRefuse, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeModificationRefuse( SI_XNAP_DT_PDU_SNodeModificationRefuse * objPDUSNodeModificationRefuse, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeModificationRefuse( SI_XNAP_DT_PDU_SNodeModificationRefuse * objPDUSNodeModificationRefuse);

int __si_xnap_memfree_pdu_SNodeModificationRefuse( SI_XNAP_DT_PDU_SNodeModificationRefuse * objPDUSNodeModificationRefuse);



// ELEMENTARY-PROCEDURE = [0] mNGRANnodeinitiatedSNGRANnodeRelease	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 11
// ProcedureCodeName = id-mNGRANnodeinitiatedSNGRANnodeRelease
// Criticality = reject

int __si_xnap_encode_pdu_SNodeReleaseRequest( SI_XNAP_DT_PDU_SNodeReleaseRequest * objPDUSNodeReleaseRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeReleaseRequest( SI_XNAP_DT_PDU_SNodeReleaseRequest * objPDUSNodeReleaseRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeReleaseRequest( SI_XNAP_DT_PDU_SNodeReleaseRequest * objPDUSNodeReleaseRequest);

int __si_xnap_memfree_pdu_SNodeReleaseRequest( SI_XNAP_DT_PDU_SNodeReleaseRequest * objPDUSNodeReleaseRequest);



// ELEMENTARY-PROCEDURE = [0] mNGRANnodeinitiatedSNGRANnodeRelease	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 11
// ProcedureCodeName = id-mNGRANnodeinitiatedSNGRANnodeRelease
// Criticality = reject

int __si_xnap_encode_pdu_SNodeReleaseRequestAcknowledge( SI_XNAP_DT_PDU_SNodeReleaseRequestAcknowledge * objPDUSNodeReleaseRequestAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeReleaseRequestAcknowledge( SI_XNAP_DT_PDU_SNodeReleaseRequestAcknowledge * objPDUSNodeReleaseRequestAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeReleaseRequestAcknowledge( SI_XNAP_DT_PDU_SNodeReleaseRequestAcknowledge * objPDUSNodeReleaseRequestAcknowledge);

int __si_xnap_memfree_pdu_SNodeReleaseRequestAcknowledge( SI_XNAP_DT_PDU_SNodeReleaseRequestAcknowledge * objPDUSNodeReleaseRequestAcknowledge);



// ELEMENTARY-PROCEDURE = [0] mNGRANnodeinitiatedSNGRANnodeRelease	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 11
// ProcedureCodeName = id-mNGRANnodeinitiatedSNGRANnodeRelease
// Criticality = reject

int __si_xnap_encode_pdu_SNodeReleaseReject( SI_XNAP_DT_PDU_SNodeReleaseReject * objPDUSNodeReleaseReject, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeReleaseReject( SI_XNAP_DT_PDU_SNodeReleaseReject * objPDUSNodeReleaseReject, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeReleaseReject( SI_XNAP_DT_PDU_SNodeReleaseReject * objPDUSNodeReleaseReject);

int __si_xnap_memfree_pdu_SNodeReleaseReject( SI_XNAP_DT_PDU_SNodeReleaseReject * objPDUSNodeReleaseReject);



// ELEMENTARY-PROCEDURE = [0] sNGRANnodeinitiatedSNGRANnodeRelease	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 12
// ProcedureCodeName = id-sNGRANnodeinitiatedSNGRANnodeRelease
// Criticality = reject

int __si_xnap_encode_pdu_SNodeReleaseRequired( SI_XNAP_DT_PDU_SNodeReleaseRequired * objPDUSNodeReleaseRequired, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeReleaseRequired( SI_XNAP_DT_PDU_SNodeReleaseRequired * objPDUSNodeReleaseRequired, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeReleaseRequired( SI_XNAP_DT_PDU_SNodeReleaseRequired * objPDUSNodeReleaseRequired);

int __si_xnap_memfree_pdu_SNodeReleaseRequired( SI_XNAP_DT_PDU_SNodeReleaseRequired * objPDUSNodeReleaseRequired);



// ELEMENTARY-PROCEDURE = [0] sNGRANnodeinitiatedSNGRANnodeRelease	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 12
// ProcedureCodeName = id-sNGRANnodeinitiatedSNGRANnodeRelease
// Criticality = reject

int __si_xnap_encode_pdu_SNodeReleaseConfirm( SI_XNAP_DT_PDU_SNodeReleaseConfirm * objPDUSNodeReleaseConfirm, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeReleaseConfirm( SI_XNAP_DT_PDU_SNodeReleaseConfirm * objPDUSNodeReleaseConfirm, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeReleaseConfirm( SI_XNAP_DT_PDU_SNodeReleaseConfirm * objPDUSNodeReleaseConfirm);

int __si_xnap_memfree_pdu_SNodeReleaseConfirm( SI_XNAP_DT_PDU_SNodeReleaseConfirm * objPDUSNodeReleaseConfirm);



// ELEMENTARY-PROCEDURE = [0] sNGRANnodeCounterCheck	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 13
// ProcedureCodeName = id-sNGRANnodeCounterCheck
// Criticality = reject

int __si_xnap_encode_pdu_SNodeCounterCheckRequest( SI_XNAP_DT_PDU_SNodeCounterCheckRequest * objPDUSNodeCounterCheckRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeCounterCheckRequest( SI_XNAP_DT_PDU_SNodeCounterCheckRequest * objPDUSNodeCounterCheckRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeCounterCheckRequest( SI_XNAP_DT_PDU_SNodeCounterCheckRequest * objPDUSNodeCounterCheckRequest);

int __si_xnap_memfree_pdu_SNodeCounterCheckRequest( SI_XNAP_DT_PDU_SNodeCounterCheckRequest * objPDUSNodeCounterCheckRequest);



// ELEMENTARY-PROCEDURE = [0] sNGRANnodeChange		XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 14
// ProcedureCodeName = id-sNGRANnodeChange
// Criticality = reject

int __si_xnap_encode_pdu_SNodeChangeRequired( SI_XNAP_DT_PDU_SNodeChangeRequired * objPDUSNodeChangeRequired, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeChangeRequired( SI_XNAP_DT_PDU_SNodeChangeRequired * objPDUSNodeChangeRequired, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeChangeRequired( SI_XNAP_DT_PDU_SNodeChangeRequired * objPDUSNodeChangeRequired);

int __si_xnap_memfree_pdu_SNodeChangeRequired( SI_XNAP_DT_PDU_SNodeChangeRequired * objPDUSNodeChangeRequired);



// ELEMENTARY-PROCEDURE = [0] sNGRANnodeChange		XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 14
// ProcedureCodeName = id-sNGRANnodeChange
// Criticality = reject

int __si_xnap_encode_pdu_SNodeChangeConfirm( SI_XNAP_DT_PDU_SNodeChangeConfirm * objPDUSNodeChangeConfirm, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeChangeConfirm( SI_XNAP_DT_PDU_SNodeChangeConfirm * objPDUSNodeChangeConfirm, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeChangeConfirm( SI_XNAP_DT_PDU_SNodeChangeConfirm * objPDUSNodeChangeConfirm);

int __si_xnap_memfree_pdu_SNodeChangeConfirm( SI_XNAP_DT_PDU_SNodeChangeConfirm * objPDUSNodeChangeConfirm);



// ELEMENTARY-PROCEDURE = [0] sNGRANnodeChange		XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 14
// ProcedureCodeName = id-sNGRANnodeChange
// Criticality = reject

int __si_xnap_encode_pdu_SNodeChangeRefuse( SI_XNAP_DT_PDU_SNodeChangeRefuse * objPDUSNodeChangeRefuse, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SNodeChangeRefuse( SI_XNAP_DT_PDU_SNodeChangeRefuse * objPDUSNodeChangeRefuse, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SNodeChangeRefuse( SI_XNAP_DT_PDU_SNodeChangeRefuse * objPDUSNodeChangeRefuse);

int __si_xnap_memfree_pdu_SNodeChangeRefuse( SI_XNAP_DT_PDU_SNodeChangeRefuse * objPDUSNodeChangeRefuse);



// ELEMENTARY-PROCEDURE = [0] rRCTransfer	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 15
// ProcedureCodeName = id-rRCTransfer
// Criticality = reject

int __si_xnap_encode_pdu_RRCTransfer( SI_XNAP_DT_PDU_RRCTransfer * objPDURRCTransfer, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_RRCTransfer( SI_XNAP_DT_PDU_RRCTransfer * objPDURRCTransfer, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_RRCTransfer( SI_XNAP_DT_PDU_RRCTransfer * objPDURRCTransfer);

int __si_xnap_memfree_pdu_RRCTransfer( SI_XNAP_DT_PDU_RRCTransfer * objPDURRCTransfer);



// ELEMENTARY-PROCEDURE = [0] xnRemoval	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 16
// ProcedureCodeName = id-xnRemoval
// Criticality = reject

int __si_xnap_encode_pdu_XnRemovalRequest( SI_XNAP_DT_PDU_XnRemovalRequest * objPDUXnRemovalRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_XnRemovalRequest( SI_XNAP_DT_PDU_XnRemovalRequest * objPDUXnRemovalRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_XnRemovalRequest( SI_XNAP_DT_PDU_XnRemovalRequest * objPDUXnRemovalRequest);

int __si_xnap_memfree_pdu_XnRemovalRequest( SI_XNAP_DT_PDU_XnRemovalRequest * objPDUXnRemovalRequest);



// ELEMENTARY-PROCEDURE = [0] xnRemoval	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 16
// ProcedureCodeName = id-xnRemoval
// Criticality = reject

int __si_xnap_encode_pdu_XnRemovalResponse( SI_XNAP_DT_PDU_XnRemovalResponse * objPDUXnRemovalResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_XnRemovalResponse( SI_XNAP_DT_PDU_XnRemovalResponse * objPDUXnRemovalResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_XnRemovalResponse( SI_XNAP_DT_PDU_XnRemovalResponse * objPDUXnRemovalResponse);

int __si_xnap_memfree_pdu_XnRemovalResponse( SI_XNAP_DT_PDU_XnRemovalResponse * objPDUXnRemovalResponse);



// ELEMENTARY-PROCEDURE = [0] xnRemoval	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 16
// ProcedureCodeName = id-xnRemoval
// Criticality = reject

int __si_xnap_encode_pdu_XnRemovalFailure( SI_XNAP_DT_PDU_XnRemovalFailure * objPDUXnRemovalFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_XnRemovalFailure( SI_XNAP_DT_PDU_XnRemovalFailure * objPDUXnRemovalFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_XnRemovalFailure( SI_XNAP_DT_PDU_XnRemovalFailure * objPDUXnRemovalFailure);

int __si_xnap_memfree_pdu_XnRemovalFailure( SI_XNAP_DT_PDU_XnRemovalFailure * objPDUXnRemovalFailure);



// ELEMENTARY-PROCEDURE = [0] xnSetup	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 17
// ProcedureCodeName = id-xnSetup
// Criticality = reject

int __si_xnap_encode_pdu_XnSetupRequest( SI_XNAP_DT_PDU_XnSetupRequest * objPDUXnSetupRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_XnSetupRequest( SI_XNAP_DT_PDU_XnSetupRequest * objPDUXnSetupRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_XnSetupRequest( SI_XNAP_DT_PDU_XnSetupRequest * objPDUXnSetupRequest);

int __si_xnap_memfree_pdu_XnSetupRequest( SI_XNAP_DT_PDU_XnSetupRequest * objPDUXnSetupRequest);



// ELEMENTARY-PROCEDURE = [0] xnSetup	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 17
// ProcedureCodeName = id-xnSetup
// Criticality = reject

int __si_xnap_encode_pdu_XnSetupResponse( SI_XNAP_DT_PDU_XnSetupResponse * objPDUXnSetupResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_XnSetupResponse( SI_XNAP_DT_PDU_XnSetupResponse * objPDUXnSetupResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_XnSetupResponse( SI_XNAP_DT_PDU_XnSetupResponse * objPDUXnSetupResponse);

int __si_xnap_memfree_pdu_XnSetupResponse( SI_XNAP_DT_PDU_XnSetupResponse * objPDUXnSetupResponse);



// ELEMENTARY-PROCEDURE = [0] xnSetup	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 17
// ProcedureCodeName = id-xnSetup
// Criticality = reject

int __si_xnap_encode_pdu_XnSetupFailure( SI_XNAP_DT_PDU_XnSetupFailure * objPDUXnSetupFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_XnSetupFailure( SI_XNAP_DT_PDU_XnSetupFailure * objPDUXnSetupFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_XnSetupFailure( SI_XNAP_DT_PDU_XnSetupFailure * objPDUXnSetupFailure);

int __si_xnap_memfree_pdu_XnSetupFailure( SI_XNAP_DT_PDU_XnSetupFailure * objPDUXnSetupFailure);



// ELEMENTARY-PROCEDURE = [0] nGRANnodeConfigurationUpdate	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 18
// ProcedureCodeName = id-nGRANnodeConfigurationUpdate
// Criticality = reject

int __si_xnap_encode_pdu_NGRANNodeConfigurationUpdate( SI_XNAP_DT_PDU_NGRANNodeConfigurationUpdate * objPDUNGRANNodeConfigurationUpdate, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_NGRANNodeConfigurationUpdate( SI_XNAP_DT_PDU_NGRANNodeConfigurationUpdate * objPDUNGRANNodeConfigurationUpdate, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_NGRANNodeConfigurationUpdate( SI_XNAP_DT_PDU_NGRANNodeConfigurationUpdate * objPDUNGRANNodeConfigurationUpdate);

int __si_xnap_memfree_pdu_NGRANNodeConfigurationUpdate( SI_XNAP_DT_PDU_NGRANNodeConfigurationUpdate * objPDUNGRANNodeConfigurationUpdate);



// ELEMENTARY-PROCEDURE = [0] nGRANnodeConfigurationUpdate	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 18
// ProcedureCodeName = id-nGRANnodeConfigurationUpdate
// Criticality = reject

int __si_xnap_encode_pdu_NGRANNodeConfigurationUpdateAcknowledge( SI_XNAP_DT_PDU_NGRANNodeConfigurationUpdateAcknowledge * objPDUNGRANNodeConfigurationUpdateAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_NGRANNodeConfigurationUpdateAcknowledge( SI_XNAP_DT_PDU_NGRANNodeConfigurationUpdateAcknowledge * objPDUNGRANNodeConfigurationUpdateAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_NGRANNodeConfigurationUpdateAcknowledge( SI_XNAP_DT_PDU_NGRANNodeConfigurationUpdateAcknowledge * objPDUNGRANNodeConfigurationUpdateAcknowledge);

int __si_xnap_memfree_pdu_NGRANNodeConfigurationUpdateAcknowledge( SI_XNAP_DT_PDU_NGRANNodeConfigurationUpdateAcknowledge * objPDUNGRANNodeConfigurationUpdateAcknowledge);



// ELEMENTARY-PROCEDURE = [0] nGRANnodeConfigurationUpdate	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 18
// ProcedureCodeName = id-nGRANnodeConfigurationUpdate
// Criticality = reject

int __si_xnap_encode_pdu_NGRANNodeConfigurationUpdateFailure( SI_XNAP_DT_PDU_NGRANNodeConfigurationUpdateFailure * objPDUNGRANNodeConfigurationUpdateFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_NGRANNodeConfigurationUpdateFailure( SI_XNAP_DT_PDU_NGRANNodeConfigurationUpdateFailure * objPDUNGRANNodeConfigurationUpdateFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_NGRANNodeConfigurationUpdateFailure( SI_XNAP_DT_PDU_NGRANNodeConfigurationUpdateFailure * objPDUNGRANNodeConfigurationUpdateFailure);

int __si_xnap_memfree_pdu_NGRANNodeConfigurationUpdateFailure( SI_XNAP_DT_PDU_NGRANNodeConfigurationUpdateFailure * objPDUNGRANNodeConfigurationUpdateFailure);



// ELEMENTARY-PROCEDURE = [0] partialUEContextTransfer	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 49
// ProcedureCodeName = id-partialUEContextTransfer
// Criticality = reject

int __si_xnap_encode_pdu_PartialUEContextTransfer( SI_XNAP_DT_PDU_PartialUEContextTransfer * objPDUPartialUEContextTransfer, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_PartialUEContextTransfer( SI_XNAP_DT_PDU_PartialUEContextTransfer * objPDUPartialUEContextTransfer, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_PartialUEContextTransfer( SI_XNAP_DT_PDU_PartialUEContextTransfer * objPDUPartialUEContextTransfer);

int __si_xnap_memfree_pdu_PartialUEContextTransfer( SI_XNAP_DT_PDU_PartialUEContextTransfer * objPDUPartialUEContextTransfer);



// ELEMENTARY-PROCEDURE = [0] partialUEContextTransfer	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 49
// ProcedureCodeName = id-partialUEContextTransfer
// Criticality = reject

int __si_xnap_encode_pdu_PartialUEContextTransferAcknowledge( SI_XNAP_DT_PDU_PartialUEContextTransferAcknowledge * objPDUPartialUEContextTransferAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_PartialUEContextTransferAcknowledge( SI_XNAP_DT_PDU_PartialUEContextTransferAcknowledge * objPDUPartialUEContextTransferAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_PartialUEContextTransferAcknowledge( SI_XNAP_DT_PDU_PartialUEContextTransferAcknowledge * objPDUPartialUEContextTransferAcknowledge);

int __si_xnap_memfree_pdu_PartialUEContextTransferAcknowledge( SI_XNAP_DT_PDU_PartialUEContextTransferAcknowledge * objPDUPartialUEContextTransferAcknowledge);



// ELEMENTARY-PROCEDURE = [0] partialUEContextTransfer	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 49
// ProcedureCodeName = id-partialUEContextTransfer
// Criticality = reject

int __si_xnap_encode_pdu_PartialUEContextTransferFailure( SI_XNAP_DT_PDU_PartialUEContextTransferFailure * objPDUPartialUEContextTransferFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_PartialUEContextTransferFailure( SI_XNAP_DT_PDU_PartialUEContextTransferFailure * objPDUPartialUEContextTransferFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_PartialUEContextTransferFailure( SI_XNAP_DT_PDU_PartialUEContextTransferFailure * objPDUPartialUEContextTransferFailure);

int __si_xnap_memfree_pdu_PartialUEContextTransferFailure( SI_XNAP_DT_PDU_PartialUEContextTransferFailure * objPDUPartialUEContextTransferFailure);



// ELEMENTARY-PROCEDURE = [0] e-UTRA-NR-CellResourceCoordination	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 25
// ProcedureCodeName = id-e-UTRA-NR-CellResourceCoordination
// Criticality = reject

int __si_xnap_encode_pdu_E_UTRA_NR_CellResourceCoordinationRequest( SI_XNAP_DT_PDU_E_UTRA_NR_CellResourceCoordinationRequest * objPDUE_UTRA_NR_CellResourceCoordinationRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_E_UTRA_NR_CellResourceCoordinationRequest( SI_XNAP_DT_PDU_E_UTRA_NR_CellResourceCoordinationRequest * objPDUE_UTRA_NR_CellResourceCoordinationRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_E_UTRA_NR_CellResourceCoordinationRequest( SI_XNAP_DT_PDU_E_UTRA_NR_CellResourceCoordinationRequest * objPDUE_UTRA_NR_CellResourceCoordinationRequest);

int __si_xnap_memfree_pdu_E_UTRA_NR_CellResourceCoordinationRequest( SI_XNAP_DT_PDU_E_UTRA_NR_CellResourceCoordinationRequest * objPDUE_UTRA_NR_CellResourceCoordinationRequest);



// ELEMENTARY-PROCEDURE = [0] e-UTRA-NR-CellResourceCoordination	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 25
// ProcedureCodeName = id-e-UTRA-NR-CellResourceCoordination
// Criticality = reject

int __si_xnap_encode_pdu_E_UTRA_NR_CellResourceCoordinationResponse( SI_XNAP_DT_PDU_E_UTRA_NR_CellResourceCoordinationResponse * objPDUE_UTRA_NR_CellResourceCoordinationResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_E_UTRA_NR_CellResourceCoordinationResponse( SI_XNAP_DT_PDU_E_UTRA_NR_CellResourceCoordinationResponse * objPDUE_UTRA_NR_CellResourceCoordinationResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_E_UTRA_NR_CellResourceCoordinationResponse( SI_XNAP_DT_PDU_E_UTRA_NR_CellResourceCoordinationResponse * objPDUE_UTRA_NR_CellResourceCoordinationResponse);

int __si_xnap_memfree_pdu_E_UTRA_NR_CellResourceCoordinationResponse( SI_XNAP_DT_PDU_E_UTRA_NR_CellResourceCoordinationResponse * objPDUE_UTRA_NR_CellResourceCoordinationResponse);



// ELEMENTARY-PROCEDURE = [0] cellActivation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 19
// ProcedureCodeName = id-cellActivation
// Criticality = reject

int __si_xnap_encode_pdu_CellActivationRequest( SI_XNAP_DT_PDU_CellActivationRequest * objPDUCellActivationRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_CellActivationRequest( SI_XNAP_DT_PDU_CellActivationRequest * objPDUCellActivationRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_CellActivationRequest( SI_XNAP_DT_PDU_CellActivationRequest * objPDUCellActivationRequest);

int __si_xnap_memfree_pdu_CellActivationRequest( SI_XNAP_DT_PDU_CellActivationRequest * objPDUCellActivationRequest);



// ELEMENTARY-PROCEDURE = [0] cellActivation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 19
// ProcedureCodeName = id-cellActivation
// Criticality = reject

int __si_xnap_encode_pdu_CellActivationResponse( SI_XNAP_DT_PDU_CellActivationResponse * objPDUCellActivationResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_CellActivationResponse( SI_XNAP_DT_PDU_CellActivationResponse * objPDUCellActivationResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_CellActivationResponse( SI_XNAP_DT_PDU_CellActivationResponse * objPDUCellActivationResponse);

int __si_xnap_memfree_pdu_CellActivationResponse( SI_XNAP_DT_PDU_CellActivationResponse * objPDUCellActivationResponse);



// ELEMENTARY-PROCEDURE = [0] cellActivation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 19
// ProcedureCodeName = id-cellActivation
// Criticality = reject

int __si_xnap_encode_pdu_CellActivationFailure( SI_XNAP_DT_PDU_CellActivationFailure * objPDUCellActivationFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_CellActivationFailure( SI_XNAP_DT_PDU_CellActivationFailure * objPDUCellActivationFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_CellActivationFailure( SI_XNAP_DT_PDU_CellActivationFailure * objPDUCellActivationFailure);

int __si_xnap_memfree_pdu_CellActivationFailure( SI_XNAP_DT_PDU_CellActivationFailure * objPDUCellActivationFailure);



// ELEMENTARY-PROCEDURE = [0] reset	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 20
// ProcedureCodeName = id-reset
// Criticality = reject

int __si_xnap_encode_pdu_ResetRequest( SI_XNAP_DT_PDU_ResetRequest * objPDUResetRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_ResetRequest( SI_XNAP_DT_PDU_ResetRequest * objPDUResetRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_ResetRequest( SI_XNAP_DT_PDU_ResetRequest * objPDUResetRequest);

int __si_xnap_memfree_pdu_ResetRequest( SI_XNAP_DT_PDU_ResetRequest * objPDUResetRequest);



// ELEMENTARY-PROCEDURE = [0] reset	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 20
// ProcedureCodeName = id-reset
// Criticality = reject

int __si_xnap_encode_pdu_ResetResponse( SI_XNAP_DT_PDU_ResetResponse * objPDUResetResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_ResetResponse( SI_XNAP_DT_PDU_ResetResponse * objPDUResetResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_ResetResponse( SI_XNAP_DT_PDU_ResetResponse * objPDUResetResponse);

int __si_xnap_memfree_pdu_ResetResponse( SI_XNAP_DT_PDU_ResetResponse * objPDUResetResponse);



// ELEMENTARY-PROCEDURE = [0] errorIndication	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 21
// ProcedureCodeName = id-errorIndication
// Criticality = ignore

int __si_xnap_encode_pdu_ErrorIndication( SI_XNAP_DT_PDU_ErrorIndication * objPDUErrorIndication, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_ErrorIndication( SI_XNAP_DT_PDU_ErrorIndication * objPDUErrorIndication, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_ErrorIndication( SI_XNAP_DT_PDU_ErrorIndication * objPDUErrorIndication);

int __si_xnap_memfree_pdu_ErrorIndication( SI_XNAP_DT_PDU_ErrorIndication * objPDUErrorIndication);



// ELEMENTARY-PROCEDURE = [0] notificationControl			XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 23
// ProcedureCodeName = id-notificationControl
// Criticality = ignore

int __si_xnap_encode_pdu_NotificationControlIndication( SI_XNAP_DT_PDU_NotificationControlIndication * objPDUNotificationControlIndication, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_NotificationControlIndication( SI_XNAP_DT_PDU_NotificationControlIndication * objPDUNotificationControlIndication, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_NotificationControlIndication( SI_XNAP_DT_PDU_NotificationControlIndication * objPDUNotificationControlIndication);

int __si_xnap_memfree_pdu_NotificationControlIndication( SI_XNAP_DT_PDU_NotificationControlIndication * objPDUNotificationControlIndication);



// ELEMENTARY-PROCEDURE = [0] activityNotification		XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 24
// ProcedureCodeName = id-activityNotification
// Criticality = ignore

int __si_xnap_encode_pdu_ActivityNotification( SI_XNAP_DT_PDU_ActivityNotification * objPDUActivityNotification, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_ActivityNotification( SI_XNAP_DT_PDU_ActivityNotification * objPDUActivityNotification, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_ActivityNotification( SI_XNAP_DT_PDU_ActivityNotification * objPDUActivityNotification);

int __si_xnap_memfree_pdu_ActivityNotification( SI_XNAP_DT_PDU_ActivityNotification * objPDUActivityNotification);



// ELEMENTARY-PROCEDURE = [0] privateMessage			XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 22
// ProcedureCodeName = id-privateMessage
// Criticality = ignore

int __si_xnap_encode_pdu_PrivateMessage( SI_XNAP_DT_PDU_PrivateMessage * objPDUPrivateMessage, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_PrivateMessage( SI_XNAP_DT_PDU_PrivateMessage * objPDUPrivateMessage, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_PrivateMessage( SI_XNAP_DT_PDU_PrivateMessage * objPDUPrivateMessage);

int __si_xnap_memfree_pdu_PrivateMessage( SI_XNAP_DT_PDU_PrivateMessage * objPDUPrivateMessage);



// ELEMENTARY-PROCEDURE = [0] secondaryRATDataUsageReport	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 26
// ProcedureCodeName = id-secondaryRATDataUsageReport
// Criticality = reject

int __si_xnap_encode_pdu_SecondaryRATDataUsageReport( SI_XNAP_DT_PDU_SecondaryRATDataUsageReport * objPDUSecondaryRATDataUsageReport, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_SecondaryRATDataUsageReport( SI_XNAP_DT_PDU_SecondaryRATDataUsageReport * objPDUSecondaryRATDataUsageReport, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_SecondaryRATDataUsageReport( SI_XNAP_DT_PDU_SecondaryRATDataUsageReport * objPDUSecondaryRATDataUsageReport);

int __si_xnap_memfree_pdu_SecondaryRATDataUsageReport( SI_XNAP_DT_PDU_SecondaryRATDataUsageReport * objPDUSecondaryRATDataUsageReport);



// ELEMENTARY-PROCEDURE = [0] deactivateTrace  L:8620
// ProcedureCode = 27
// ProcedureCodeName = id-deactivateTrace
// Criticality = ignore

int __si_xnap_encode_pdu_DeactivateTrace( SI_XNAP_DT_PDU_DeactivateTrace * objPDUDeactivateTrace, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_DeactivateTrace( SI_XNAP_DT_PDU_DeactivateTrace * objPDUDeactivateTrace, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_DeactivateTrace( SI_XNAP_DT_PDU_DeactivateTrace * objPDUDeactivateTrace);

int __si_xnap_memfree_pdu_DeactivateTrace( SI_XNAP_DT_PDU_DeactivateTrace * objPDUDeactivateTrace);



// ELEMENTARY-PROCEDURE = [0] traceStart  L:8620
// ProcedureCode = 28
// ProcedureCodeName = id-traceStart
// Criticality = ignore

int __si_xnap_encode_pdu_TraceStart( SI_XNAP_DT_PDU_TraceStart * objPDUTraceStart, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_TraceStart( SI_XNAP_DT_PDU_TraceStart * objPDUTraceStart, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_TraceStart( SI_XNAP_DT_PDU_TraceStart * objPDUTraceStart);

int __si_xnap_memfree_pdu_TraceStart( SI_XNAP_DT_PDU_TraceStart * objPDUTraceStart);



// ELEMENTARY-PROCEDURE = [0] handoverSuccess			XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 29
// ProcedureCodeName = id-handoverSuccess
// Criticality = ignore

int __si_xnap_encode_pdu_HandoverSuccess( SI_XNAP_DT_PDU_HandoverSuccess * objPDUHandoverSuccess, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_HandoverSuccess( SI_XNAP_DT_PDU_HandoverSuccess * objPDUHandoverSuccess, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_HandoverSuccess( SI_XNAP_DT_PDU_HandoverSuccess * objPDUHandoverSuccess);

int __si_xnap_memfree_pdu_HandoverSuccess( SI_XNAP_DT_PDU_HandoverSuccess * objPDUHandoverSuccess);



// ELEMENTARY-PROCEDURE = [0] conditionalHandoverCancel	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 30
// ProcedureCodeName = id-conditionalHandoverCancel
// Criticality = ignore

int __si_xnap_encode_pdu_ConditionalHandoverCancel( SI_XNAP_DT_PDU_ConditionalHandoverCancel * objPDUConditionalHandoverCancel, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_ConditionalHandoverCancel( SI_XNAP_DT_PDU_ConditionalHandoverCancel * objPDUConditionalHandoverCancel, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_ConditionalHandoverCancel( SI_XNAP_DT_PDU_ConditionalHandoverCancel * objPDUConditionalHandoverCancel);

int __si_xnap_memfree_pdu_ConditionalHandoverCancel( SI_XNAP_DT_PDU_ConditionalHandoverCancel * objPDUConditionalHandoverCancel);



// ELEMENTARY-PROCEDURE = [0] earlyStatusTransfer		XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 31
// ProcedureCodeName = id-earlyStatusTransfer
// Criticality = ignore

int __si_xnap_encode_pdu_EarlyStatusTransfer( SI_XNAP_DT_PDU_EarlyStatusTransfer * objPDUEarlyStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_EarlyStatusTransfer( SI_XNAP_DT_PDU_EarlyStatusTransfer * objPDUEarlyStatusTransfer, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_EarlyStatusTransfer( SI_XNAP_DT_PDU_EarlyStatusTransfer * objPDUEarlyStatusTransfer);

int __si_xnap_memfree_pdu_EarlyStatusTransfer( SI_XNAP_DT_PDU_EarlyStatusTransfer * objPDUEarlyStatusTransfer);



// ELEMENTARY-PROCEDURE = [0] failureIndication  L:8620
// ProcedureCode = 32
// ProcedureCodeName = id-failureIndication
// Criticality = ignore

int __si_xnap_encode_pdu_FailureIndication( SI_XNAP_DT_PDU_FailureIndication * objPDUFailureIndication, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_FailureIndication( SI_XNAP_DT_PDU_FailureIndication * objPDUFailureIndication, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_FailureIndication( SI_XNAP_DT_PDU_FailureIndication * objPDUFailureIndication);

int __si_xnap_memfree_pdu_FailureIndication( SI_XNAP_DT_PDU_FailureIndication * objPDUFailureIndication);



// ELEMENTARY-PROCEDURE = [0] handoverReport  L:8620
// ProcedureCode = 33
// ProcedureCodeName = id-handoverReport
// Criticality = ignore

int __si_xnap_encode_pdu_HandoverReport( SI_XNAP_DT_PDU_HandoverReport * objPDUHandoverReport, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_HandoverReport( SI_XNAP_DT_PDU_HandoverReport * objPDUHandoverReport, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_HandoverReport( SI_XNAP_DT_PDU_HandoverReport * objPDUHandoverReport);

int __si_xnap_memfree_pdu_HandoverReport( SI_XNAP_DT_PDU_HandoverReport * objPDUHandoverReport);



// ELEMENTARY-PROCEDURE = [0] resourceStatusReportingInitiation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 34
// ProcedureCodeName = id-resourceStatusReportingInitiation
// Criticality = reject

int __si_xnap_encode_pdu_ResourceStatusRequest( SI_XNAP_DT_PDU_ResourceStatusRequest * objPDUResourceStatusRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_ResourceStatusRequest( SI_XNAP_DT_PDU_ResourceStatusRequest * objPDUResourceStatusRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_ResourceStatusRequest( SI_XNAP_DT_PDU_ResourceStatusRequest * objPDUResourceStatusRequest);

int __si_xnap_memfree_pdu_ResourceStatusRequest( SI_XNAP_DT_PDU_ResourceStatusRequest * objPDUResourceStatusRequest);



// ELEMENTARY-PROCEDURE = [0] resourceStatusReportingInitiation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 34
// ProcedureCodeName = id-resourceStatusReportingInitiation
// Criticality = reject

int __si_xnap_encode_pdu_ResourceStatusResponse( SI_XNAP_DT_PDU_ResourceStatusResponse * objPDUResourceStatusResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_ResourceStatusResponse( SI_XNAP_DT_PDU_ResourceStatusResponse * objPDUResourceStatusResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_ResourceStatusResponse( SI_XNAP_DT_PDU_ResourceStatusResponse * objPDUResourceStatusResponse);

int __si_xnap_memfree_pdu_ResourceStatusResponse( SI_XNAP_DT_PDU_ResourceStatusResponse * objPDUResourceStatusResponse);



// ELEMENTARY-PROCEDURE = [0] resourceStatusReportingInitiation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 34
// ProcedureCodeName = id-resourceStatusReportingInitiation
// Criticality = reject

int __si_xnap_encode_pdu_ResourceStatusFailure( SI_XNAP_DT_PDU_ResourceStatusFailure * objPDUResourceStatusFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_ResourceStatusFailure( SI_XNAP_DT_PDU_ResourceStatusFailure * objPDUResourceStatusFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_ResourceStatusFailure( SI_XNAP_DT_PDU_ResourceStatusFailure * objPDUResourceStatusFailure);

int __si_xnap_memfree_pdu_ResourceStatusFailure( SI_XNAP_DT_PDU_ResourceStatusFailure * objPDUResourceStatusFailure);



// ELEMENTARY-PROCEDURE = [0] resourceStatusReporting  L:8620
// ProcedureCode = 35
// ProcedureCodeName = id-resourceStatusReporting
// Criticality = ignore

int __si_xnap_encode_pdu_ResourceStatusUpdate( SI_XNAP_DT_PDU_ResourceStatusUpdate * objPDUResourceStatusUpdate, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_ResourceStatusUpdate( SI_XNAP_DT_PDU_ResourceStatusUpdate * objPDUResourceStatusUpdate, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_ResourceStatusUpdate( SI_XNAP_DT_PDU_ResourceStatusUpdate * objPDUResourceStatusUpdate);

int __si_xnap_memfree_pdu_ResourceStatusUpdate( SI_XNAP_DT_PDU_ResourceStatusUpdate * objPDUResourceStatusUpdate);



// ELEMENTARY-PROCEDURE = [0] mobilitySettingsChange	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 36
// ProcedureCodeName = id-mobilitySettingsChange
// Criticality = reject

int __si_xnap_encode_pdu_MobilityChangeRequest( SI_XNAP_DT_PDU_MobilityChangeRequest * objPDUMobilityChangeRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_MobilityChangeRequest( SI_XNAP_DT_PDU_MobilityChangeRequest * objPDUMobilityChangeRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_MobilityChangeRequest( SI_XNAP_DT_PDU_MobilityChangeRequest * objPDUMobilityChangeRequest);

int __si_xnap_memfree_pdu_MobilityChangeRequest( SI_XNAP_DT_PDU_MobilityChangeRequest * objPDUMobilityChangeRequest);



// ELEMENTARY-PROCEDURE = [0] mobilitySettingsChange	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 36
// ProcedureCodeName = id-mobilitySettingsChange
// Criticality = reject

int __si_xnap_encode_pdu_MobilityChangeAcknowledge( SI_XNAP_DT_PDU_MobilityChangeAcknowledge * objPDUMobilityChangeAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_MobilityChangeAcknowledge( SI_XNAP_DT_PDU_MobilityChangeAcknowledge * objPDUMobilityChangeAcknowledge, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_MobilityChangeAcknowledge( SI_XNAP_DT_PDU_MobilityChangeAcknowledge * objPDUMobilityChangeAcknowledge);

int __si_xnap_memfree_pdu_MobilityChangeAcknowledge( SI_XNAP_DT_PDU_MobilityChangeAcknowledge * objPDUMobilityChangeAcknowledge);



// ELEMENTARY-PROCEDURE = [0] mobilitySettingsChange	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 36
// ProcedureCodeName = id-mobilitySettingsChange
// Criticality = reject

int __si_xnap_encode_pdu_MobilityChangeFailure( SI_XNAP_DT_PDU_MobilityChangeFailure * objPDUMobilityChangeFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_MobilityChangeFailure( SI_XNAP_DT_PDU_MobilityChangeFailure * objPDUMobilityChangeFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_MobilityChangeFailure( SI_XNAP_DT_PDU_MobilityChangeFailure * objPDUMobilityChangeFailure);

int __si_xnap_memfree_pdu_MobilityChangeFailure( SI_XNAP_DT_PDU_MobilityChangeFailure * objPDUMobilityChangeFailure);



// ELEMENTARY-PROCEDURE = [0] accessAndMobilityIndication  L:8620
// ProcedureCode = 37
// ProcedureCodeName = id-accessAndMobilityIndication
// Criticality = ignore

int __si_xnap_encode_pdu_AccessAndMobilityIndication( SI_XNAP_DT_PDU_AccessAndMobilityIndication * objPDUAccessAndMobilityIndication, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_AccessAndMobilityIndication( SI_XNAP_DT_PDU_AccessAndMobilityIndication * objPDUAccessAndMobilityIndication, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_AccessAndMobilityIndication( SI_XNAP_DT_PDU_AccessAndMobilityIndication * objPDUAccessAndMobilityIndication);

int __si_xnap_memfree_pdu_AccessAndMobilityIndication( SI_XNAP_DT_PDU_AccessAndMobilityIndication * objPDUAccessAndMobilityIndication);



// ELEMENTARY-PROCEDURE = [0] cellTrafficTrace  L:8620
// ProcedureCode = 38
// ProcedureCodeName = id-cellTrafficTrace
// Criticality = ignore

int __si_xnap_encode_pdu_CellTrafficTrace( SI_XNAP_DT_PDU_CellTrafficTrace * objPDUCellTrafficTrace, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_CellTrafficTrace( SI_XNAP_DT_PDU_CellTrafficTrace * objPDUCellTrafficTrace, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_CellTrafficTrace( SI_XNAP_DT_PDU_CellTrafficTrace * objPDUCellTrafficTrace);

int __si_xnap_memfree_pdu_CellTrafficTrace( SI_XNAP_DT_PDU_CellTrafficTrace * objPDUCellTrafficTrace);



// ELEMENTARY-PROCEDURE = [0] rANMulticastGroupPaging  L:8620
// ProcedureCode = 39
// ProcedureCodeName = id-RANMulticastGroupPaging
// Criticality = reject

int __si_xnap_encode_pdu_RANMulticastGroupPaging( SI_XNAP_DT_PDU_RANMulticastGroupPaging * objPDURANMulticastGroupPaging, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_RANMulticastGroupPaging( SI_XNAP_DT_PDU_RANMulticastGroupPaging * objPDURANMulticastGroupPaging, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_RANMulticastGroupPaging( SI_XNAP_DT_PDU_RANMulticastGroupPaging * objPDURANMulticastGroupPaging);

int __si_xnap_memfree_pdu_RANMulticastGroupPaging( SI_XNAP_DT_PDU_RANMulticastGroupPaging * objPDURANMulticastGroupPaging);



// ELEMENTARY-PROCEDURE = [0] scgFailureInformationReport  L:8620
// ProcedureCode = 40
// ProcedureCodeName = id-scgFailureInformationReport
// Criticality = ignore

int __si_xnap_encode_pdu_ScgFailureInformationReport( SI_XNAP_DT_PDU_ScgFailureInformationReport * objPDUScgFailureInformationReport, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_ScgFailureInformationReport( SI_XNAP_DT_PDU_ScgFailureInformationReport * objPDUScgFailureInformationReport, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_ScgFailureInformationReport( SI_XNAP_DT_PDU_ScgFailureInformationReport * objPDUScgFailureInformationReport);

int __si_xnap_memfree_pdu_ScgFailureInformationReport( SI_XNAP_DT_PDU_ScgFailureInformationReport * objPDUScgFailureInformationReport);



// ELEMENTARY-PROCEDURE = [0] scgFailureTransfer  L:8620
// ProcedureCode = 42
// ProcedureCodeName = id-scgFailureTransfer
// Criticality = ignore

int __si_xnap_encode_pdu_ScgFailureTransfer( SI_XNAP_DT_PDU_ScgFailureTransfer * objPDUScgFailureTransfer, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_ScgFailureTransfer( SI_XNAP_DT_PDU_ScgFailureTransfer * objPDUScgFailureTransfer, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_ScgFailureTransfer( SI_XNAP_DT_PDU_ScgFailureTransfer * objPDUScgFailureTransfer);

int __si_xnap_memfree_pdu_ScgFailureTransfer( SI_XNAP_DT_PDU_ScgFailureTransfer * objPDUScgFailureTransfer);



// ELEMENTARY-PROCEDURE = [0] f1CTrafficTransfer			XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 43
// ProcedureCodeName = id-f1CTrafficTransfer
// Criticality = reject

int __si_xnap_encode_pdu_F1CTrafficTransfer( SI_XNAP_DT_PDU_F1CTrafficTransfer * objPDUF1CTrafficTransfer, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_F1CTrafficTransfer( SI_XNAP_DT_PDU_F1CTrafficTransfer * objPDUF1CTrafficTransfer, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_F1CTrafficTransfer( SI_XNAP_DT_PDU_F1CTrafficTransfer * objPDUF1CTrafficTransfer);

int __si_xnap_memfree_pdu_F1CTrafficTransfer( SI_XNAP_DT_PDU_F1CTrafficTransfer * objPDUF1CTrafficTransfer);



// ELEMENTARY-PROCEDURE = [0] iABTransportMigrationManagement  L:8620
// ProcedureCode = 44
// ProcedureCodeName = id-iABTransportMigrationManagement
// Criticality = reject

int __si_xnap_encode_pdu_IABTransportMigrationManagementRequest( SI_XNAP_DT_PDU_IABTransportMigrationManagementRequest * objPDUIABTransportMigrationManagementRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_IABTransportMigrationManagementRequest( SI_XNAP_DT_PDU_IABTransportMigrationManagementRequest * objPDUIABTransportMigrationManagementRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_IABTransportMigrationManagementRequest( SI_XNAP_DT_PDU_IABTransportMigrationManagementRequest * objPDUIABTransportMigrationManagementRequest);

int __si_xnap_memfree_pdu_IABTransportMigrationManagementRequest( SI_XNAP_DT_PDU_IABTransportMigrationManagementRequest * objPDUIABTransportMigrationManagementRequest);



// ELEMENTARY-PROCEDURE = [0] iABTransportMigrationManagement  L:8620
// ProcedureCode = 44
// ProcedureCodeName = id-iABTransportMigrationManagement
// Criticality = reject

int __si_xnap_encode_pdu_IABTransportMigrationManagementResponse( SI_XNAP_DT_PDU_IABTransportMigrationManagementResponse * objPDUIABTransportMigrationManagementResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_IABTransportMigrationManagementResponse( SI_XNAP_DT_PDU_IABTransportMigrationManagementResponse * objPDUIABTransportMigrationManagementResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_IABTransportMigrationManagementResponse( SI_XNAP_DT_PDU_IABTransportMigrationManagementResponse * objPDUIABTransportMigrationManagementResponse);

int __si_xnap_memfree_pdu_IABTransportMigrationManagementResponse( SI_XNAP_DT_PDU_IABTransportMigrationManagementResponse * objPDUIABTransportMigrationManagementResponse);



// ELEMENTARY-PROCEDURE = [0] iABTransportMigrationManagement  L:8620
// ProcedureCode = 44
// ProcedureCodeName = id-iABTransportMigrationManagement
// Criticality = reject

int __si_xnap_encode_pdu_IABTransportMigrationManagementReject( SI_XNAP_DT_PDU_IABTransportMigrationManagementReject * objPDUIABTransportMigrationManagementReject, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_IABTransportMigrationManagementReject( SI_XNAP_DT_PDU_IABTransportMigrationManagementReject * objPDUIABTransportMigrationManagementReject, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_IABTransportMigrationManagementReject( SI_XNAP_DT_PDU_IABTransportMigrationManagementReject * objPDUIABTransportMigrationManagementReject);

int __si_xnap_memfree_pdu_IABTransportMigrationManagementReject( SI_XNAP_DT_PDU_IABTransportMigrationManagementReject * objPDUIABTransportMigrationManagementReject);



// ELEMENTARY-PROCEDURE = [0] iABTransportMigrationModification  L:8620
// ProcedureCode = 45
// ProcedureCodeName = id-iABTransportMigrationModification
// Criticality = reject

int __si_xnap_encode_pdu_IABTransportMigrationModificationRequest( SI_XNAP_DT_PDU_IABTransportMigrationModificationRequest * objPDUIABTransportMigrationModificationRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_IABTransportMigrationModificationRequest( SI_XNAP_DT_PDU_IABTransportMigrationModificationRequest * objPDUIABTransportMigrationModificationRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_IABTransportMigrationModificationRequest( SI_XNAP_DT_PDU_IABTransportMigrationModificationRequest * objPDUIABTransportMigrationModificationRequest);

int __si_xnap_memfree_pdu_IABTransportMigrationModificationRequest( SI_XNAP_DT_PDU_IABTransportMigrationModificationRequest * objPDUIABTransportMigrationModificationRequest);



// ELEMENTARY-PROCEDURE = [0] iABTransportMigrationModification  L:8620
// ProcedureCode = 45
// ProcedureCodeName = id-iABTransportMigrationModification
// Criticality = reject

int __si_xnap_encode_pdu_IABTransportMigrationModificationResponse( SI_XNAP_DT_PDU_IABTransportMigrationModificationResponse * objPDUIABTransportMigrationModificationResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_IABTransportMigrationModificationResponse( SI_XNAP_DT_PDU_IABTransportMigrationModificationResponse * objPDUIABTransportMigrationModificationResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_IABTransportMigrationModificationResponse( SI_XNAP_DT_PDU_IABTransportMigrationModificationResponse * objPDUIABTransportMigrationModificationResponse);

int __si_xnap_memfree_pdu_IABTransportMigrationModificationResponse( SI_XNAP_DT_PDU_IABTransportMigrationModificationResponse * objPDUIABTransportMigrationModificationResponse);



// ELEMENTARY-PROCEDURE = [0] iABResourceCoordination  L:8620
// ProcedureCode = 46
// ProcedureCodeName = id-iABResourceCoordination
// Criticality = reject

int __si_xnap_encode_pdu_IABResourceCoordinationRequest( SI_XNAP_DT_PDU_IABResourceCoordinationRequest * objPDUIABResourceCoordinationRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_IABResourceCoordinationRequest( SI_XNAP_DT_PDU_IABResourceCoordinationRequest * objPDUIABResourceCoordinationRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_IABResourceCoordinationRequest( SI_XNAP_DT_PDU_IABResourceCoordinationRequest * objPDUIABResourceCoordinationRequest);

int __si_xnap_memfree_pdu_IABResourceCoordinationRequest( SI_XNAP_DT_PDU_IABResourceCoordinationRequest * objPDUIABResourceCoordinationRequest);



// ELEMENTARY-PROCEDURE = [0] iABResourceCoordination  L:8620
// ProcedureCode = 46
// ProcedureCodeName = id-iABResourceCoordination
// Criticality = reject

int __si_xnap_encode_pdu_IABResourceCoordinationResponse( SI_XNAP_DT_PDU_IABResourceCoordinationResponse * objPDUIABResourceCoordinationResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_IABResourceCoordinationResponse( SI_XNAP_DT_PDU_IABResourceCoordinationResponse * objPDUIABResourceCoordinationResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_IABResourceCoordinationResponse( SI_XNAP_DT_PDU_IABResourceCoordinationResponse * objPDUIABResourceCoordinationResponse);

int __si_xnap_memfree_pdu_IABResourceCoordinationResponse( SI_XNAP_DT_PDU_IABResourceCoordinationResponse * objPDUIABResourceCoordinationResponse);



// ELEMENTARY-PROCEDURE = [0] retrieveUEContextConfirm	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 47
// ProcedureCodeName = id-retrieveUEContextConfirm
// Criticality = reject

int __si_xnap_encode_pdu_RetrieveUEContextConfirm( SI_XNAP_DT_PDU_RetrieveUEContextConfirm * objPDURetrieveUEContextConfirm, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_RetrieveUEContextConfirm( SI_XNAP_DT_PDU_RetrieveUEContextConfirm * objPDURetrieveUEContextConfirm, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_RetrieveUEContextConfirm( SI_XNAP_DT_PDU_RetrieveUEContextConfirm * objPDURetrieveUEContextConfirm);

int __si_xnap_memfree_pdu_RetrieveUEContextConfirm( SI_XNAP_DT_PDU_RetrieveUEContextConfirm * objPDURetrieveUEContextConfirm);



// ELEMENTARY-PROCEDURE = [0] cPCCancel  L:8620
// ProcedureCode = 48
// ProcedureCodeName = id-cPCCancel
// Criticality = ignore

int __si_xnap_encode_pdu_CPCCancel( SI_XNAP_DT_PDU_CPCCancel * objPDUCPCCancel, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_CPCCancel( SI_XNAP_DT_PDU_CPCCancel * objPDUCPCCancel, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_CPCCancel( SI_XNAP_DT_PDU_CPCCancel * objPDUCPCCancel);

int __si_xnap_memfree_pdu_CPCCancel( SI_XNAP_DT_PDU_CPCCancel * objPDUCPCCancel);



// ELEMENTARY-PROCEDURE = [0] rachIndication  L:8620
// ProcedureCode = 50
// ProcedureCodeName = id-rachIndication
// Criticality = ignore

int __si_xnap_encode_pdu_RachIndication( SI_XNAP_DT_PDU_RachIndication * objPDURachIndication, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_RachIndication( SI_XNAP_DT_PDU_RachIndication * objPDURachIndication, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_RachIndication( SI_XNAP_DT_PDU_RachIndication * objPDURachIndication);

int __si_xnap_memfree_pdu_RachIndication( SI_XNAP_DT_PDU_RachIndication * objPDURachIndication);



// ELEMENTARY-PROCEDURE = [0] dataCollectionReportingInitiation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 51
// ProcedureCodeName = id-dataCollectionReportingInitiation
// Criticality = reject

int __si_xnap_encode_pdu_DataCollectionRequest( SI_XNAP_DT_PDU_DataCollectionRequest * objPDUDataCollectionRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_DataCollectionRequest( SI_XNAP_DT_PDU_DataCollectionRequest * objPDUDataCollectionRequest, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_DataCollectionRequest( SI_XNAP_DT_PDU_DataCollectionRequest * objPDUDataCollectionRequest);

int __si_xnap_memfree_pdu_DataCollectionRequest( SI_XNAP_DT_PDU_DataCollectionRequest * objPDUDataCollectionRequest);



// ELEMENTARY-PROCEDURE = [0] dataCollectionReportingInitiation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 51
// ProcedureCodeName = id-dataCollectionReportingInitiation
// Criticality = reject

int __si_xnap_encode_pdu_DataCollectionResponse( SI_XNAP_DT_PDU_DataCollectionResponse * objPDUDataCollectionResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_DataCollectionResponse( SI_XNAP_DT_PDU_DataCollectionResponse * objPDUDataCollectionResponse, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_DataCollectionResponse( SI_XNAP_DT_PDU_DataCollectionResponse * objPDUDataCollectionResponse);

int __si_xnap_memfree_pdu_DataCollectionResponse( SI_XNAP_DT_PDU_DataCollectionResponse * objPDUDataCollectionResponse);



// ELEMENTARY-PROCEDURE = [0] dataCollectionReportingInitiation	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 51
// ProcedureCodeName = id-dataCollectionReportingInitiation
// Criticality = reject

int __si_xnap_encode_pdu_DataCollectionFailure( SI_XNAP_DT_PDU_DataCollectionFailure * objPDUDataCollectionFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_DataCollectionFailure( SI_XNAP_DT_PDU_DataCollectionFailure * objPDUDataCollectionFailure, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_DataCollectionFailure( SI_XNAP_DT_PDU_DataCollectionFailure * objPDUDataCollectionFailure);

int __si_xnap_memfree_pdu_DataCollectionFailure( SI_XNAP_DT_PDU_DataCollectionFailure * objPDUDataCollectionFailure);



// ELEMENTARY-PROCEDURE = [0] dataCollectionReporting	XNAP-ELEMENTARY-PROCEDURE  L:8620
// ProcedureCode = 52
// ProcedureCodeName = id-dataCollectionReporting
// Criticality = ignore

int __si_xnap_encode_pdu_DataCollectionUpdate( SI_XNAP_DT_PDU_DataCollectionUpdate * objPDUDataCollectionUpdate, SI_ASN_CodingContext * codingContext);

int __si_xnap_decode_pdu_DataCollectionUpdate( SI_XNAP_DT_PDU_DataCollectionUpdate * objPDUDataCollectionUpdate, SI_ASN_CodingContext * codingContext);

int __si_xnap_debug_pdu_DataCollectionUpdate( SI_XNAP_DT_PDU_DataCollectionUpdate * objPDUDataCollectionUpdate);

int __si_xnap_memfree_pdu_DataCollectionUpdate( SI_XNAP_DT_PDU_DataCollectionUpdate * objPDUDataCollectionUpdate);


















#pragma pack(pop)
#endif